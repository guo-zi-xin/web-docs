import{_ as t}from"./chunks/CustomLink.HhFLulSs.js";import{_ as o,o as p,c as e,m as a,a as s,J as r,a8 as n}from"./chunks/framework.QttzOlP4.js";const c="/web-docs/assets/0410_filter.vVyUSJW_.png",F="/web-docs/assets/0424.SUWUQ8r5.png",B=JSON.parse('{"title":"过滤器 filter","description":"","frontmatter":{},"headers":[],"relativePath":"frame/angular/chapter04_7.md","filePath":"frame/angular/chapter04_7.md","lastUpdated":1711371965000}'),D={name:"frame/angular/chapter04_7.md"},y=n(`<h1 id="过滤器-filter" tabindex="-1">过滤器 <code>filter</code> <a class="header-anchor" href="#过滤器-filter" aria-label="Permalink to &quot;过滤器 \`filter\`&quot;">​</a></h1><p>过滤器是AngularJS的另一项强大的功能，如果能使用好它，能够帮助我们极大的节省工作量。</p><p>以下是几个应用<code>filter</code>的例子：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">{{</span><span style="color:#F78C6C;"> 1234</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;"> }}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//显示两位小数，结果 1,234.00</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">{{</span><span style="color:#F78C6C;"> 1234.56</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> currency</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">人民币￥</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//转化为货币后输出(保留0位小数，四舍五入)，结果为</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//人民币￥1,234.00</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">{{</span><span style="color:#BABED8;"> list</span><span style="color:#89DDFF;"> |</span><span style="color:#BABED8;"> json</span><span style="color:#89DDFF;"> }}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//将对象转化为json文本输出，结果为</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//[ { &quot;name&quot;: &quot;Harry&quot; }, { &quot;name&quot;: &quot;Tom&quot; }, { &quot;name&quot;: &quot;Jerry&quot; } ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">tr</span><span style="color:#C792EA;"> ng-repeat</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">x in list | orderBy:&#39;name&#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">//对显示的数据列表按照name进行排序</span></span>
<span class="line"><span style="color:#BABED8;">//结果为显示顺序Harry,Jerry,Tom</span></span></code></pre></div>`,4),i=a("code",null,"filter",-1),d=n(`<table><thead><tr><th style="text-align:center;">Filter名称</th><th style="text-align:center;">示例用法</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;">filter</td><td style="text-align:center;">-</td><td>传入自定义的函数作为过滤器</td></tr><tr><td style="text-align:center;">currency</td><td style="text-align:center;">currency / currency:&quot;人民币￥&quot;:0</td><td>转化为货币后输出。可选货币单位和保留小数位数。</td></tr><tr><td style="text-align:center;">number</td><td style="text-align:center;">number / number:2</td><td>将数字转化为文本，自动加逗号。可选设置小数位数。</td></tr><tr><td style="text-align:center;">date</td><td style="text-align:center;">data : format : timezone</td><td>将时间转化到对应的格式和时区</td></tr><tr><td style="text-align:center;">json</td><td style="text-align:center;">json</td><td>将对象转化为Json格式内容输出</td></tr><tr><td style="text-align:center;">lowercase</td><td style="text-align:center;">lowercase</td><td>将文本转化为小写</td></tr><tr><td style="text-align:center;">uppercase</td><td style="text-align:center;">uppercase</td><td>将文本转化为大写</td></tr><tr><td style="text-align:center;">limitTo</td><td style="text-align:center;">limitTo : limit : begin</td><td>截取array从begin位置开始的limit个元素</td></tr><tr><td style="text-align:center;">orderBy</td><td style="text-align:center;">orderBy : expression : reverse</td><td>根据expression的条件对list进行排序，reverse可选，设置为true则反过来排</td></tr></tbody></table><h2 id="多个filter同时应用" tabindex="-1">多个filter同时应用 <a class="header-anchor" href="#多个filter同时应用" aria-label="Permalink to &quot;多个filter同时应用&quot;">​</a></h2><p>AngularJS支持多个filter同时应用，比如以下的例子：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">{{</span><span style="color:#BABED8;"> list</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> orderBy</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> |</span><span style="color:#BABED8;"> json</span><span style="color:#89DDFF;"> }}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//对list的内容进行排序后输出成json文本，结果为</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//[ { &quot;name&quot;: &quot;Harry&quot; }, { &quot;name&quot;: &quot;Jerry&quot; }, { &quot;name&quot;: &quot;Tom&quot; } ]</span></span></code></pre></div><h2 id="创建自己的过滤器" tabindex="-1">创建自己的过滤器 <a class="header-anchor" href="#创建自己的过滤器" aria-label="Permalink to &quot;创建自己的过滤器&quot;">​</a></h2><p>自己创建自定义的过滤器也很简单，我们下面尝试自己制作一个将文字全部翻转过来的过滤器。</p><p>在<code>app.js</code>中增加如下代码：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">//app.js</span></span>
<span class="line"><span style="color:#BABED8;">App</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">reverse</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">text</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#BABED8;"> text</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reverse</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>同时，我们利用最早的Hello World的例子，将我们定义的<code>reverse</code>这个过滤器应用上去，代码如下：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#C792EA;"> ng-controller</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">FirstCtrl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">{{data.message | reverse}}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">input</span><span style="color:#C792EA;"> type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;"> ng-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data.message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>运行效果：</p><img src="`+c+`" alt="图4-10 自定义filter的运行效果"><p>如果您期望界面显示的内容进行一些通用的处理，但是又不希望对原本的数据进行改动，那么可以考虑自己制作过滤器！</p><h2 id="通过filter进行搜索" tabindex="-1">通过<code>filter</code>进行搜索 <a class="header-anchor" href="#通过filter进行搜索" aria-label="Permalink to &quot;通过\`filter\`进行搜索&quot;">​</a></h2><p>AngularJS提供了通过filter的搜索功能。当然，这个搜索功能并不是非常常用，因为搜索工作现在一般在服务端完成。如果数据量非常小（几百行以内），可以考虑使用本功能来筛选结果。</p><p>示例如下(使用上一节的例子)：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#BABED8;">App</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">controller</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">FirstCtrl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">$scope</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    $scope</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">searchText</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    $scope</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">list</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">        {</span></span>
<span class="line"><span style="color:#F07178;">            name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">Harry</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        },</span></span>
<span class="line"><span style="color:#89DDFF;">        {</span></span>
<span class="line"><span style="color:#F07178;">            name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">Tom</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        },</span></span>
<span class="line"><span style="color:#89DDFF;">        {</span></span>
<span class="line"><span style="color:#F07178;">            name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">Jerry</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#F07178;">    ]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#C792EA;"> ng-controller</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">FirstCtrl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">input</span><span style="color:#C792EA;"> type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;"> ng-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">searchText</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">table</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">        &lt;</span><span style="color:#F07178;">tr</span><span style="color:#C792EA;"> ng-repeat</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">x in list | filter:searchText</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">            &lt;</span><span style="color:#F07178;">td</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">{{x.name}}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">td</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">        &lt;/</span><span style="color:#F07178;">tr</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;/</span><span style="color:#F07178;">table</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>如果我们在输入框中输入T，则列表中只会显示包含T的项目。</p><img src="`+F+`" alt="图4-10-1 filter用于搜索"><h3 id="一些值得注意的用法" tabindex="-1">一些值得注意的用法 <a class="header-anchor" href="#一些值得注意的用法" aria-label="Permalink to &quot;一些值得注意的用法&quot;">​</a></h3><table><thead><tr><th>用法</th><th>效果</th></tr></thead><tbody><tr><td><code>searchText = &quot;T&quot;</code></td><td>搜索所有字段</td></tr><tr><td><code>searchText = {name:&quot;T&quot;}</code></td><td>只搜索<code>name</code>字段包含<code>T</code>的项目</td></tr><tr><td><code>searchText = {name:&quot;T&quot;, last:&quot;H&quot;}</code></td><td>搜索<code>name</code>字段包含<code>T</code>且<code>last</code>字段包含<code>H</code>的项目</td></tr></tbody></table><p>对于最后一项，我们可以采取如下输入方法来应用：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#C792EA;"> ng-controller</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">FirstCtrl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">input</span><span style="color:#C792EA;"> type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;"> ng-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">searchText.name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">input</span><span style="color:#C792EA;"> type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;"> ng-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">searchText.last</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">table</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">        &lt;</span><span style="color:#F07178;">tr</span><span style="color:#C792EA;"> ng-repeat</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">x in list | filter:searchText</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">            &lt;</span><span style="color:#F07178;">td</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">{{x.name}}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">td</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">            &lt;</span><span style="color:#F07178;">td</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">{{x.last}}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">td</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">        &lt;/</span><span style="color:#F07178;">tr</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;/</span><span style="color:#F07178;">table</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,24);function u(g,h,q,m,C,E){const l=t;return p(),e("div",null,[y,a("p",null,[s("以上都是AngularJS的常用用法，具体的系统自带的"),i,s("的列表，我们可以从"),r(l,{title:"官方网站",href:"https://docs.angularjs.org/api/ng/filter"}),s("上获取。这里对管网提供的功能进行一个简要列表：")]),d])}const _=o(D,[["render",u]]);export{B as __pageData,_ as default};
