import{_ as s,o as n,c as a,R as l}from"./chunks/framework.AonOEUEq.js";const C=JSON.parse('{"title":"Eslint 的一些配置命令","description":"","frontmatter":{},"headers":[],"relativePath":"native/javascript/eslint常见配置.md","filePath":"native/javascript/eslint常见配置.md","lastUpdated":1700734386000}'),o={name:"native/javascript/eslint常见配置.md"},p=l(`<h1 id="eslint-的一些配置命令" tabindex="-1">Eslint 的一些配置命令 <a class="header-anchor" href="#eslint-的一些配置命令" aria-label="Permalink to &quot;Eslint 的一些配置命令&quot;">​</a></h1><div class="language-JSON"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">browser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">commonjs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">  },</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">ecmaFeatures</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // lambda表达式  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">arrowFunctions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 解构赋值  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">destructuring</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // class  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">classes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // http://es6.ruanyifeng.com/#docs/function#函数参数的默认值  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">defaultParams</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 块级作用域，允许使用let const  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">blockBindings</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 允许使用模块，模块内默认严格模式  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">modules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 允许字面量定义对象时，用表达式做属性名  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // http://es6.ruanyifeng.com/#docs/object#属性名表达式  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">objectLiteralComputedProperties</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 允许对象字面量方法名简写  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /*var o = { </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        method() { </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">          return &quot;Hello!&quot;; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        } </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     }; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     等同于 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     var o = { </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">       method: function() { </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         return &quot;Hello!&quot;; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">       } </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     }; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    */</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">objectLiteralShorthandMethods</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      对象字面量属性名简写 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      var foo = &#39;bar&#39;; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      var baz = {foo}; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      baz // {foo: &quot;bar&quot;} </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // 等同于 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      var baz = {foo: foo}; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    */</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">objectLiteralShorthandProperties</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // http://es6.ruanyifeng.com/#docs/function#rest参数  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">restParams</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // http://es6.ruanyifeng.com/#docs/function#扩展运算符  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">spread</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // http://es6.ruanyifeng.com/#docs/iterator#for---of循环  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">forOf</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // http://es6.ruanyifeng.com/#docs/generator  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">generators</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // http://es6.ruanyifeng.com/#docs/string#模板字符串  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">templateStrings</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">superInFunctions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // http://es6.ruanyifeng.com/#docs/object#对象的扩展运算符  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">experimentalObjectRestSpread</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">  },</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">rules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 定义对象的set存取器属性时，强制定义get  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">accessor-pairs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 指定数组的元素之间要以空格隔开(,后面)， never参数：[ 之前和 ] 之后不能带空格，always参数：[ 之前和 ] 之后必须带空格  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">array-bracket-spacing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">never</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 在块级作用域外访问块内定义的变量是否报错提示  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">block-scoped-var</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // if while function 后面的{必须与if在同一行，java风格。  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">brace-style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">1tbs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#F78C6C;">allowSingleLine</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true</span><span style="color:#89DDFF;"> }],</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 双峰驼命名格式  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">camelcase</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 数组和对象键值对最后一个逗号， never参数：不能带末尾的逗号, always参数：必须带末尾的逗号，  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // always-multiline：多行模式必须带逗号，单行模式不能带逗号  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">comma-dangle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">never</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 控制逗号前后的空格  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">comma-spacing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#F78C6C;">before</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> false,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#F78C6C;">after</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true</span><span style="color:#89DDFF;"> }],</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 控制逗号在行尾出现还是在行首出现  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // http://eslint.org/docs/rules/comma-style  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">comma-style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">last</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 圈复杂度  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">complexity</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">],</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 以方括号取对象属性时，[ 后面和 ] 前面是否需要空格, 可选参数 never, always  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">computed-property-spacing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">never</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 强制方法必须返回值，TypeScript强类型，不配置  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">consistent-return</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 用于指统一在回调函数中指向this的变量名，箭头函数中的this已经可以指向外层调用者，应该没卵用了  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // e.g [0,&quot;that&quot;] 指定只能 var that = this. that不能指向其他任何值，this也不能赋值给that以外的其他值  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">consistent-this</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 强制在子类构造函数中用super()调用父类构造函数，TypeScrip的编译器也会提示  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">constructor-super</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // if else while for do后面的代码块是否需要{ }包围，参数：  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //    multi  只有块中有多行语句时才需要{ }包围  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //    multi-line  只有块中有多行语句时才需要{ }包围, 但是块中的执行语句只有一行时，  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //                   块中的语句只能跟和if语句在同一行。if (foo) foo++; else doSomething();  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //    multi-or-nest 只有块中有多行语句时才需要{ }包围, 如果块中的执行语句只有一行，执行语句可以零另起一行也可以跟在if语句后面  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //    [2, &quot;multi&quot;, &quot;consistent&quot;] 保持前后语句的{ }一致  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //    default: [2, &quot;all&quot;] 全都需要{ }包围  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">curly</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">all</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // switch语句强制default分支，也可添加 // no default 注释取消此次警告  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">default-case</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 强制object.key 中 . 的位置，参数:  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //      property，&#39;.&#39;号应与属性在同一行  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //      object, &#39;.&#39; 号应与对象名在同一行  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">dot-location</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">property</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 强制使用.号取属性  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //    参数： allowKeywords：true 使用保留字做属性名时，只能使用.方式取属性  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //                          false 使用保留字做属性名时, 只能使用[]方式取属性 e.g [2, {&quot;allowKeywords&quot;: false}]  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //           allowPattern:  当属性名匹配提供的正则表达式时，允许使用[]方式取值,否则只能用.号取值 e.g [2, {&quot;allowPattern&quot;: &quot;^[a-z]+(_[a-z]+)+$&quot;}]  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">dot-notation</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">allowKeywords</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true}],</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 文件末尾强制换行  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">eol-last</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 使用 === 替代 ==  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">eqeqeq</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">allow-null</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 方法表达式是否需要命名  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">func-names</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 方法定义风格，参数：  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //    declaration: 强制使用方法声明的方式，function f(){} e.g [2, &quot;declaration&quot;]  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //    expression：强制使用方法表达式的方式，var f = function() {}  e.g [2, &quot;expression&quot;]  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //    allowArrowFunctions: declaration风格中允许箭头函数。 e.g [2, &quot;declaration&quot;, { &quot;allowArrowFunctions&quot;: true }]  </span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">func-style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-alert</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用alert confirm prompt</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-array-constructor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用数组构造器</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-bitwise</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用按位运算符</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-caller</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用arguments.caller或arguments.callee</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-catch-shadow</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止catch子句参数与外部作用域变量同名</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-class-assign</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止给类赋值</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-cond-assign</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止在条件表达式中使用赋值语句</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-console</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用console</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-const-assign</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止修改const声明的变量</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-constant-condition</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止在条件中使用常量表达式 if(true) if(1)</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-continue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用continue</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-control-regex</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止在正则表达式中使用控制字符</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-debugger</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用debugger</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-delete-var</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//不能对var声明的变量使用delete操作符</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-div-regex</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//不能使用看起来像除法的正则表达式/=foo/</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-dupe-keys</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//在创建对象字面量时不允许键重复 {a:1,a:1}</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-dupe-args</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//函数参数不能重复</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-duplicate-case</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//switch中的case标签不能重复</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-else-return</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//如果if语句里面有return,后面不能跟else语句</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-empty</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//块语句中的内容不能为空</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-empty-character-class</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//正则表达式中的[]内容不能为空</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-empty-label</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用空label</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-eq-null</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止对null使用==或!=运算符</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-eval</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用eval</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-ex-assign</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止给catch语句中的异常参数赋值</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-extend-native</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止扩展native对象</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-extra-bind</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止不必要的函数绑定</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-extra-boolean-cast</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止不必要的bool转换</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-extra-parens</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止非必要的括号</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-extra-semi</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止多余的冒号</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-fallthrough</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止switch穿透</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-floating-decimal</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止省略浮点数中的0 .5 3.</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-func-assign</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止重复的函数声明</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-implicit-coercion</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止隐式转换</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-implied-eval</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用隐式eval</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-inline-comments</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止行内备注</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-inner-declarations</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">functions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//禁止在块语句中使用声明（变量或函数）</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-invalid-regexp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止无效的正则表达式</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-invalid-this</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止无效的this，只能用在构造器，类，对象字面量</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-irregular-whitespace</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//不能有不规则的空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-iterator</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用__iterator__ 属性</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-label-var</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//label名不能与var声明的变量名相同</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-labels</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止标签声明</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-lone-blocks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止不必要的嵌套块</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-lonely-if</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止else语句内只有if语句</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-loop-func</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止在循环中使用函数（如果没有引用外部变量不形成闭包就可以）</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-mixed-requires</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> false],</span><span style="color:#676E95;font-style:italic;">//声明时不能混用声明类型</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-mixed-spaces-and-tabs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> false],</span><span style="color:#676E95;font-style:italic;">//禁止混用tab和空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">linebreak-style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">windows</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//换行风格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-multi-spaces</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//不能用多余的空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-multi-str</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//字符串不能用\\换行</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-multiple-empty-lines</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">max</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">}],</span><span style="color:#676E95;font-style:italic;">//空行最多不能超过2行</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-native-reassign</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//不能重写native对象</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-negated-in-lhs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//in 操作符的左边不能有!</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-nested-ternary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用嵌套的三目运算</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-new</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止在使用new构造一个实例后不赋值</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-new-func</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用new Function</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-new-object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用new Object()</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-new-require</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用new require</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-new-wrappers</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用new创建包装实例，new String new Boolean new Number</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-obj-calls</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//不能调用内置的全局对象，比如Math() JSON()</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-octal</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用八进制数字</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-octal-escape</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用八进制转义序列</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-param-reassign</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止给参数重新赋值</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-path-concat</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//node中不能使用__dirname或__filename做路径拼接</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-plusplus</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用++，--</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-process-env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用process.env</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-process-exit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用process.exit()</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-proto</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用__proto__属性</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-redeclare</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止重复声明变量</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-regex-spaces</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止在正则表达式字面量中使用多个空格 /foo bar/</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-restricted-modules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//如果禁用了指定模块，使用就会报错</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-return-assign</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//return 语句中不能有赋值表达式</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-script-url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用javascript:void(0)</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-self-compare</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//不能比较自身</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-sequences</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用逗号运算符</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-shadow</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//外部作用域中的变量不能与它所包含的作用域中的变量或参数同名</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-shadow-restricted-names</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//严格模式中规定的限制标识符不能作为声明时的变量名使用</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-spaced-func</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//函数调用时 函数名与()之间不能有空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-sparse-arrays</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止稀疏数组， [1,,2]</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-sync</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//nodejs 禁止同步方法</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-ternary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止使用三目运算符</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-trailing-spaces</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//一行结束后面不要有空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-this-before-super</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//在调用super()之前不能使用this或super</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-throw-literal</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止抛出字面量错误 throw &quot;error&quot;;</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-undef</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//不能有未定义的变量</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-undef-init</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//变量初始化时不能直接给它赋值为undefined</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-undefined</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//不能使用undefined</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-unexpected-multiline</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//避免多行表达式</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-underscore-dangle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//标识符不能以_开头或结尾</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-unneeded-ternary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止不必要的嵌套 var isYes = answer === 1 ? true : false;</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-unreachable</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//不能有无法执行的代码</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-unused-expressions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止无用的表达式</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-unused-vars</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">vars</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">all</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#F78C6C;">args</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">after-used</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}],</span><span style="color:#676E95;font-style:italic;">//不能有声明后未被使用的变量或参数</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-use-before-define</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//未定义前不能使用</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-useless-call</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止不必要的call和apply</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-void</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁用void操作符</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-var</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁用var，用let和const代替</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-warning-comments</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#F78C6C;">terms</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">todo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">fixme</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">xxx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#F78C6C;">location</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> }],</span><span style="color:#676E95;font-style:italic;">//不能有警告备注</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">no-with</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁用with</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">array-bracket-spacing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">never</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//是否允许非空数组里面有多余的空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">arrow-parens</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//箭头函数用小括号括起来</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">arrow-spacing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//=&gt;的前/后括号</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">accessor-pairs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//在对象中使用getter/setter</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">block-scoped-var</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//块语句中使用var</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">brace-style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">1tbs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//大括号风格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">callback-return</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//避免多次调用回调什么的</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">camelcase</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//强制驼峰法命名</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">comma-dangle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">never</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//对象字面量项尾不能有逗号</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">comma-spacing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//逗号前后的空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">comma-style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">last</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//逗号风格，换行时在行首还是行尾</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">complexity</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 11</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//循环复杂度</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">computed-property-spacing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">never</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//是否允许计算后的键名什么的</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">consistent-return</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//return 后面是否允许省略</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">consistent-this</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">that</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//this别名</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">constructor-super</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//非派生类不能调用super，派生类必须调用super</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">curly</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">all</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//必须使用 if(){} 中的{}</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">default-case</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//switch语句最后必须有default</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">dot-location</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//对象访问符的位置，换行的时候在行首还是行尾</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">dot-notation</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#F78C6C;">allowKeywords</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true</span><span style="color:#89DDFF;"> }],</span><span style="color:#676E95;font-style:italic;">//避免不必要的方括号</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">eol-last</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//文件以单一的换行符结束</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">eqeqeq</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//必须使用全等</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">func-names</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//函数表达式必须有名字</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">func-style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">declaration</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//函数风格，规定只能使用函数声明/函数表达式</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">generator-star-spacing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//生成器函数*的前后空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">guard-for-in</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//for in循环要用if语句过滤</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">handle-callback-err</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//nodejs 处理错误</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">id-length</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//变量名长度</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">indent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//缩进风格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">init-declarations</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//声明时必须赋初值</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">key-spacing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#F78C6C;">beforeColon</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> false,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#F78C6C;">afterColon</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true</span><span style="color:#89DDFF;"> }],</span><span style="color:#676E95;font-style:italic;">//对象字面量中冒号的前后空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">lines-around-comment</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//行前/行后备注</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">max-depth</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//嵌套块深度</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">max-len</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 80</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//字符串最大长度</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">max-nested-callbacks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//回调嵌套深度</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">max-params</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//函数最多只能有3个参数</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">max-statements</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 10</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//函数内最多有几个声明</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">new-cap</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//函数名首行大写必须使用new方式调用，首行小写必须用不带new方式调用</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">new-parens</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//new时必须加小括号</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">newline-after-var</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//变量声明后是否需要空一行</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">object-curly-spacing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">never</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//大括号内是否允许不必要的空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">object-shorthand</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//强制对象字面量缩写语法</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">one-var</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//连续声明</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">operator-assignment</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">always</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//赋值运算符 += -=什么的</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">operator-linebreak</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">after</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//换行时运算符在行尾还是行首</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">padded-blocks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//块语句内行首行尾是否要空行</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">prefer-const</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//首选const</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">prefer-spread</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//首选展开运算</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">prefer-reflect</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//首选Reflect的方法</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">quotes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">single</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//引号类型 \`\` &quot;&quot; &#39;&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">quote-props</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:[</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">always</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//对象字面量中的属性名是否强制双引号</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">radix</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//parseInt必须指定第二个参数</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">id-match</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//命名检测</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">require-yield</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//生成器函数必须有yield</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">semi</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">always</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//语句强制分号结尾</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">semi-spacing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">before</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> false,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#F78C6C;">after</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true}],</span><span style="color:#676E95;font-style:italic;">//分号前后空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">sort-vars</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//变量声明时排序</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">space-after-keywords</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">always</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//关键字后面是否要空一格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">space-before-blocks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">always</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//不以新行开始的块{前面要不要有空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">space-before-function-paren</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">always</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//函数定义时括号前面要不要有空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">space-in-parens</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">never</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//小括号里面要不要有空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">space-infix-ops</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//中缀操作符周围要不要有空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">space-return-throw-case</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//return throw case后面要不要加空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">space-unary-ops</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#F78C6C;">words</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#F78C6C;">nonwords</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> false</span><span style="color:#89DDFF;"> }],</span><span style="color:#676E95;font-style:italic;">//一元运算符的前/后要不要加空格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">spaced-comment</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//注释风格不要有空格什么的</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">strict</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//使用严格模式</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">use-isnan</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//禁止比较时使用NaN，只能用isNaN()</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">valid-jsdoc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//jsdoc规则</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">valid-typeof</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//必须使用合法的typeof的值</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">vars-on-top</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//var必须放在作用域顶部</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">wrap-iife</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">inside</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#676E95;font-style:italic;">//立即执行函数表达式的小括号风格</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">wrap-regex</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//正则表达式字面量用小括号包起来</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">yoda</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">never</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#676E95;font-style:italic;">//禁止尤达条件</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#BABED8;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,2),t=[p];function e(F,c,D,r,y,i){return n(),a("div",null,t)}const q=s(o,[["render",e]]);export{C as __pageData,q as default};
