import{_ as s,o as a,c as n,a8 as l,ag as o}from"./chunks/framework.Qf1t7Yq5.js";const g=JSON.parse('{"title":"Vue 指令","description":"","frontmatter":{},"headers":[],"relativePath":"frame/vue/vue指令.md","filePath":"frame/vue/vue指令.md","lastUpdated":1702017785000}'),p={name:"frame/vue/vue指令.md"},t=l(`<h1 id="vue-指令" tabindex="-1">Vue 指令 <a class="header-anchor" href="#vue-指令" aria-label="Permalink to &quot;Vue 指令&quot;">​</a></h1><h3 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h3><p>vue指令（<code>Directives</code>）是一种特殊的标记，用于在模板中以声明式的方式将某些行为应用到<code>DOM</code>上。指令以 <code>v-</code> 开头，后面跟着指令的名称，例如 <code>v-bind</code>、<code>v-if</code> 等。Vue.js提供了一些内置的指令，同时也允许开发者自定义指令。</p><p>指令attribute的期望值是一个Javascript表达式（除了极少数个例外， 例如<code>v-for</code>、<code>v-on</code>和<code>v-slot</code>。一个指令的任务是在其表达式的值变化时对DOM进行响应式更新， 例如：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;font-style:italic;"> v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">seen</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">Nou you see me</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li><strong>参数<code>Arguments</code></strong></li></ul><p>某些指令有时候需要一个“参数”， 在指令名后通过一个冒号隔开作为标识。例如用<code>v-bind</code>指令来响应式地更新一个HTML的attribute：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">a</span><span style="color:#C792EA;"> v-bind</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 简写 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>这里的<code>href</code>就是一个参数，它告诉<code>v-bind</code>指令将表达式<code>url</code>的值绑定到元素的<code>href</code>attribute上，在简写中，参数前的一切（例如<code>v-bind</code>）都会被忽略为一个<code>:</code>字符。</p><p>另一个例子是<code>v-on</code>指令，它将监听DOM事件：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">a</span><span style="color:#C792EA;"> v-on</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">doSomething</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 简写 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">doSomething</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>这里的参数是要监听的事件名称：<code>click</code>. <code>v-on</code>有一个相应的缩写，即<code>@</code>字符。</p><ul><li><strong>动态参数</strong></li></ul><p>同样在指令参数上也可以使用一个Javascript的表达式，需要包含在一个方括号内：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">a</span><span style="color:#C792EA;"> v-bind</span><span style="color:#89DDFF;">:[</span><span style="color:#C792EA;">attributeName</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 简写 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> :[</span><span style="color:#C792EA;">attributeName</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>这里的<code>attributeName</code> 会作为一个Javascript的表达式被动态执行,计算得到的值会被用作最终的参数。举例来说，如果你的足见实例有一个数据属性<code>attributeName</code>，其值为<code>&quot;href&quot;</code>，那么这个绑定就等价于<code>v-bind:href</code>。</p><p>相似地， 还可以将一个函数绑定到动态事件名称上：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;"> &lt;</span><span style="color:#F07178;">a</span><span style="color:#C792EA;"> v-on</span><span style="color:#89DDFF;">:[</span><span style="color:#C792EA;">eventName</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">doSonething</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> &lt;!-- 简写 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;"> &lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> @[</span><span style="color:#C792EA;">eventName</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">doSomething</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>在此示例中，当<code>eventName</code>的值是<code>“focus”</code>时， <code>v-on:[eventName]</code>就等价于<code>v-on:focus</code>。</p><ul><li><p><em>动态参数的限制</em></p><p>动态参数中的表达式的值应该是一个字符串， 或者<code>null</code>，特殊值<code>null</code>意为显式移除该绑定。其他非字符串的值会触发警告。</p></li><li><p><em>动态参数语法限制</em></p><p>动态参数表达式因为某些自负的缘故有一些语法限制，比如<code>空格</code>与<code>引号</code> 在HTML attribute 名称中都是不合法的， 例如下面的示例：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 这会触发一个编译器警告 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> :[</span><span style="color:#BABED8;">&#39;foo&#39; </span><span style="color:#C792EA;">+</span><span style="color:#C792EA;"> bar]</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>如果需要传入动态的复杂参数， 推荐使用vue的<strong>计算属性</strong>。</p><p>当使用 DOM 内嵌模版（直接写在HTML文件里的模版）时， 需要避免在名称中使用大写字母， 因为浏览器会强制将其转换为小写：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> :[</span><span style="color:#C792EA;">someAttr</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>上面的例子将会在 DOM 的内嵌模版中转换为<code>:[someattr]</code>。 如果组件中拥有“someAttr”属性而非 “someattr”， 这段代码将不会工作。 但文件内的模版不受此限制。</p></li><li><p><strong>修饰符（Modifiers）</strong></p><p>修饰符是以点开头的特殊后缀， 表明指令需要以一些特殊的方式被绑定。 例如<code>.prevent</code>修饰符会告知<code>v-on</code>指令对触发的事件调用 <code>event.preventDefault()</code>:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">submit</span><span style="color:#BABED8;">.</span><span style="color:#C792EA;">prevent</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">onSubmit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li></ul><h3 id="常见的vue指令" tabindex="-1">常见的vue指令 <a class="header-anchor" href="#常见的vue指令" aria-label="Permalink to &quot;常见的vue指令&quot;">​</a></h3><img src="`+o+`" alt="常见vue指令"><h4 id="v-show-v-if" tabindex="-1"><strong><code>v-show</code>/<code>v-if</code></strong> <a class="header-anchor" href="#v-show-v-if" aria-label="Permalink to &quot;**\`v-show\`/\`v-if\`**&quot;">​</a></h4><p><strong><code>v-show</code>与 <code>v-if</code>的区别</strong></p><ul><li><p><code>v-if</code></p><p><code>v-if</code>是‘真实’的条件渲染， 因为他确保了在切换时， 条件区块内的事件监听和子组件都会被销毁与重建。</p><p><code>v-if</code>是<strong>惰性</strong>的， 如果初次渲染时条件值为<strong>false</strong>， 那么它不会做任何事，条件区块只有当条件首次变为true才会被渲染</p><p>是基于表达式的真假性，来条件性地渲染元素或者模版片段。</p><p>当<code>v-if</code>元素被触发， 元素及其所包含的指令/组件都会销毁或重构， 如果初始条件是假， 那么其内部的内容根本不会被渲染。</p></li><li><p><code>v-show</code></p><p><code>v-show</code> 是无论初始条件如何，它都会被渲染， 只有CSS <code>display</code>会被切换。</p><p>是基于表达式的真假性， 来改变元素的可见性。</p><p><code>v-show</code> 通过设置内联样式的<code>display</code>CSS属性来触发工作， 当元素可见时将使用初始的<code>display</code>的值。</p></li></ul><div class="warning custom-block"><p class="custom-block-title">总结</p><p><code>v-if</code>有更高的切换开销，而<code>v-show</code>有更高的初始渲染开销。 因此， 如果需要频繁的切换，则使用<code>v-show</code>较好； 如果在运行时绑定条件很少改变，则<code>v-if</code>更合适。</p></div><h4 id="v-for" tabindex="-1"><strong><code>v-for</code></strong> <a class="header-anchor" href="#v-for" aria-label="Permalink to &quot;**\`v-for\`**&quot;">​</a></h4><p>基于原始数据多次渲染元素或模板块。</p><ul><li><strong>期望绑定值类型:</strong> <code>Array | Object | Number | String | Iterable</code></li></ul><p>指令值必须使用特殊语法<code>alias in expression</code>为正在迭代的元素提供一个别名：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;font-style:italic;"> v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">item </span><span style="color:#89DDFF;">in</span><span style="color:#BABED8;"> items</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">{{item.text}}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>或者 也可以为索引指定别名（如果是对象， 则是键值）:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;font-style:italic;"> v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">(item</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> index) </span><span style="color:#89DDFF;">in</span><span style="color:#BABED8;"> items</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;font-style:italic;"> v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">(value</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> key) </span><span style="color:#89DDFF;">in</span><span style="color:#BABED8;"> object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;font-style:italic;"> v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">(value</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> name</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> index) </span><span style="color:#89DDFF;">in</span><span style="color:#BABED8;"> object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p><code>v-for</code>的默认方式是尝试就地更新元素而不移动他们，要强制其重新排序元素，则需要使用特殊attribute <code>key</code>来提供一个排序提示：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;font-style:italic;"> v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">item </span><span style="color:#89DDFF;">in</span><span style="color:#BABED8;"> items</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">item</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">{{item.text}}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title"><code>v-for</code>与<code>v-if</code>优先级</p><p>当<code>v-for</code>与<code>v-if</code>同时使用时， <code>v-if</code>比 <code>v-for</code>的优先级更高。 并且不推荐在同一元素上使用这两个指令， 因为同时使用时会抛出一个错误：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;font-style:italic;"> v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">user</span><span style="color:#89DDFF;"> in </span><span style="color:#BABED8;">users</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;"> v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">isActive</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">      {{</span><span style="color:#BABED8;"> user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">name </span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;/</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>上述示例中，会抛出一个错误， 因为<code>v-if</code>会先被执行， 而<code>v-if</code>的条件表达式中的<code>user</code>此时不存在。</p><p>这个问题可以通过迭代计算属性来解决：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">script</span><span style="color:#C792EA;"> lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;"> setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#82AAFF;">    onComputed</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">      activeUsers</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">users</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#F07178;">(</span><span style="color:#BABED8;font-style:italic;">user</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">isActive</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">      &lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;font-style:italic;"> v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">user</span><span style="color:#89DDFF;"> in </span><span style="color:#BABED8;">activeUsers</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">        {{</span><span style="color:#BABED8;"> user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">name </span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#89DDFF;">      &lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;/</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>或者使用<code>&lt;template&gt;</code>标签添加<code>v-for</code>来包装<code>&lt;li&gt;</code>元素：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;font-style:italic;"> v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">user </span><span style="color:#89DDFF;">in</span><span style="color:#BABED8;"> users</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">      &lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;font-style:italic;"> v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">isActive</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">        {{</span><span style="color:#BABED8;"> user</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">name </span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#89DDFF;">      &lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;/</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></div><h4 id="v-bind" tabindex="-1"><strong><code>v-bind</code></strong> <a class="header-anchor" href="#v-bind" aria-label="Permalink to &quot;**\`v-bind\`**&quot;">​</a></h4><p>动态地绑定一个或多个attribute， 也可以是组件的prop参数。</p><ul><li><p>修饰符</p><ul><li><code>.camel</code> 将短横线命名的attribute变更为驼峰式命名</li><li><code>.prop</code> 强制绑定为DOM property</li><li><code>.attr</code> 强制绑定为DOM Attribute</li></ul></li><li><p>用途 当用于绑定<code>class</code>或<code>style</code>attribute,<code>v-bind</code>支持额外的值类型， 如数组或者对象。</p><p>在处理绑定时， Vue会默认利用<code>in</code>操作服来检查该元素上是否定义了和绑定了key同名的DOM property。 如果存在同名的 property， 则Vue会将它作为DOM property的赋值， 而不是作为attribute设置。</p><p>当用于组件props绑定时， 所绑定的props必须在子组件中已被正确声明。</p><p>当不带参数使用时， 可以用于绑定一个包含了多个 attribute名称-绑定值 对的对象。</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 绑定 attribute --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">img</span><span style="color:#C792EA;"> v-bind</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">imageSrc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 动态 attribute 名 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">button</span><span style="color:#C792EA;"> v-bind</span><span style="color:#89DDFF;">:[</span><span style="color:#C792EA;">key</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 缩写 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">imageSrc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 缩写形式的动态 attribute 名 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> :[</span><span style="color:#C792EA;">key</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 内联字符串拼接 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&#39;</span><span style="color:#C3E88D;">/path/to/images/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> + </span><span style="color:#BABED8;">fileName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- class 绑定 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;"> red</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> isRed</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">classA</span><span style="color:#89DDFF;">, </span><span style="color:#BABED8;">classB</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">classA</span><span style="color:#89DDFF;">, { </span><span style="color:#F07178;">classB</span><span style="color:#89DDFF;">: </span><span style="color:#BABED8;">isB</span><span style="color:#89DDFF;">, </span><span style="color:#F07178;">classC</span><span style="color:#89DDFF;">: </span><span style="color:#BABED8;">isC</span><span style="color:#89DDFF;"> }]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- style 绑定 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;"> fontSize</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> size</span><span style="color:#89DDFF;"> +</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">px</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">styleObjectA</span><span style="color:#89DDFF;">, </span><span style="color:#BABED8;">styleObjectB</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 绑定对象形式的 attribute --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">div</span><span style="color:#C792EA;"> v-bind</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;"> id</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> someProp</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">other-attr</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#BABED8;">otherProp</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- prop 绑定。“prop” 必须在子组件中已声明。 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">MyComponent</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">prop</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">someThing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 传递子父组件共有的 prop --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">MyComponent</span><span style="color:#C792EA;"> v-bind</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">$props</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- XLink --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">svg</span><span style="color:#89DDFF;">&gt;&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">xlink</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">special</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">svg</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p><code>.prop</code>修饰符也有专门缩写：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">someProperty</span><span style="color:#BABED8;">.</span><span style="color:#C792EA;">prop</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">someObject</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 等同于 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> .</span><span style="color:#C792EA;">someProperty</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">someObject</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>当在 DOM 内模板使用 <code>.camel</code> 修饰符，可以驼峰化<code>v-bind</code> attribute 的名称，例如 SVG <code>viewBox</code> attribute：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">svg</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">view-box</span><span style="color:#BABED8;">.</span><span style="color:#C792EA;">camel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">viewBox</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">svg</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li></ul><h4 id="v-model" tabindex="-1"><strong><code>v-model</code></strong> <a class="header-anchor" href="#v-model" aria-label="Permalink to &quot;**\`v-model\`**&quot;">​</a></h4><p>用于在表单控件或者组件上创建双向数据绑定.</p><ul><li><p>修饰符</p><ul><li><code>.lazy</code> 监听<code>change</code>事件而不是<code>input</code></li><li><code>.number</code>将输入合法字符串转为数字</li><li><code>.trim</code> 移除输入内容两端空格</li></ul><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">input</span><span style="color:#C792EA;"> v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;"> placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">编辑我</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">消息是: </span><span style="color:#89DDFF;">{{</span><span style="color:#BABED8;"> message </span><span style="color:#89DDFF;">}}&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#C792EA;"> lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;"> setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> message </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> ref</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li></ul><h4 id="v-on" tabindex="-1"><strong><code>v-on</code></strong> <a class="header-anchor" href="#v-on" aria-label="Permalink to &quot;**\`v-on\`**&quot;">​</a></h4><p>指令用于监听 DOM 事件。</p><ul><li><p>修饰符</p><ul><li><code>.stop</code> 调用 <code>event.stopPropagation()</code></li><li><code>.prevent</code> 调用 <code>evemt.preventDefault()</code></li><li><code>.capture</code> 在捕获模式中调用事件监听器</li><li><code>.self</code> 只有事件从元素本身发出菜触发处理函数</li><li><code>.{keyAlias}</code> 只在某些案件下触发处理函数</li><li><code>.once</code> 最多触发一次处理函数</li><li><code>.left</code> 只在鼠标左键事件触发处理函数</li><li><code>.right</code> 只在鼠标右键事件触发处理函数</li><li><code>.middle</code> 只在鼠标中键事件触发处理函数</li><li><code>.passive</code> 通过 <code>{passive: true}</code>附加一个DOM事件</li></ul><p>事件类型由参数来指定。表达式可以是一个方法名， 一个内联升明，如果有修饰符可以省略</p><p>当用于普通元素， 只监听原生DOM事件， 当用于自定义元素组件， 则监听子组件出发的自定义事件</p><p>当监听原生DOM事件时， 方法接收原生事件作为唯一参数。如果使用内联声明， 生命可以访问一个特殊的<code>$event</code>变量：<code>v-on:click=&quot;handle(&#39;ok&#39;, $event)&quot;</code>。</p><p><code>v-on</code>还支持绑定不带参数的事件/监听器的对象。 请注意，<strong>当使用对象语法时， 不支持任何修饰符</strong>。</p></li></ul><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 方法处理函数 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">button</span><span style="color:#C792EA;"> v-on</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">doThis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 动态事件 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">button</span><span style="color:#C792EA;"> v-on</span><span style="color:#89DDFF;">:[</span><span style="color:#C792EA;">event</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">doThis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 内联声明 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">button</span><span style="color:#C792EA;"> v-on</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#82AAFF;">doThat</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">, </span><span style="color:#BABED8;">$event</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 缩写 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">doThis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 使用缩写的动态事件 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> @[</span><span style="color:#C792EA;">event</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">doThis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 停止传播 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">stop</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">doThis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 阻止默认事件 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">prevent</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">doThis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 不带表达式地阻止默认事件 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">submit</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">prevent</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 链式调用修饰符 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">.stop.</span><span style="color:#C792EA;">prevent</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">doThis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 按键用于 keyAlias 修饰符--&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">keyup</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">enter</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">onEnter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 点击事件将最多触发一次 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">button</span><span style="color:#C792EA;"> v-on</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">once</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">doThis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 对象语法 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">button</span><span style="color:#C792EA;"> v-on</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;"> mousedown</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> doThis</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> mouseup</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> doThat</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>监听子组件的自定义事件（当子组件的‘my-event’）被触发，处理函数将被调用：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">MyComponent</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">my-event</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">handleThis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &lt;!-- 内联声明 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">MyComponent</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">my-event</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#82AAFF;">handleThis</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">, </span><span style="color:#BABED8;">$event</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,48),e=[t];function c(F,D,r,y,i,d){return a(),n("div",null,e)}const v=s(p,[["render",c]]);export{g as __pageData,v as default};
