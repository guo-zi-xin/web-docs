import{_ as s}from"./chunks/CustomLink.HhFLulSs.js";import{_ as o,o as n,c as p,m as t,J as d,a8 as l,b1 as c,b2 as i,b3 as e}from"./chunks/framework.QttzOlP4.js";const _=JSON.parse('{"title":"SourceMap(源映射) 基本信息","description":"","frontmatter":{},"headers":[],"relativePath":"tools/build/什么是SourceMap.md","filePath":"tools/build/什么是SourceMap.md","lastUpdated":1711372342000}'),r={name:"tools/build/什么是SourceMap.md"},y=l('<h1 id="sourcemap-源映射-基本信息" tabindex="-1">SourceMap(源映射) 基本信息 <a class="header-anchor" href="#sourcemap-源映射-基本信息" aria-label="Permalink to &quot;SourceMap(源映射) 基本信息&quot;">​</a></h1><h3 id="什么是source-map" tabindex="-1">什么是Source Map <a class="header-anchor" href="#什么是source-map" aria-label="Permalink to &quot;什么是Source Map&quot;">​</a></h3><blockquote><p>Source Map 是一个信息文件，里面储存着位置信息。也就是说，转换后代码的每一个位置所对应的转换前的位置。有了它，出错的时候，开发着工具将直接显示原始代码，而不是转换后的代码。</p><p>Source Map 解决了开发代码与实际运行代码不一致时帮助我们debug到原始开发代码的技术。</p></blockquote><ul><li><p><strong>常见的源码转换，主要分为三种情况</strong></p><ul><li>压缩、减少体积</li><li>多个文件合并， 减少HTTP请求数</li><li>其它文件编译成JavasSript</li></ul></li></ul><h3 id="source-map功能" tabindex="-1">Source Map功能 <a class="header-anchor" href="#source-map功能" aria-label="Permalink to &quot;Source Map功能&quot;">​</a></h3><p>js脚本现在变得很复杂，大部份源码需要转换才能放在浏览器中运行， 随着持续开发所带来的代码量增多，实际运行的代码与开发环境的代码不一致，导致进行debug越来越困难， Source Map就是为了解决这个问题才出现的。</p><h3 id="浏览器中如何使用source-map" tabindex="-1">浏览器中如何使用Source Map <a class="header-anchor" href="#浏览器中如何使用source-map" aria-label="Permalink to &quot;浏览器中如何使用Source Map&quot;">​</a></h3><ul><li>怎么在浏览器中使用sourceMap，chrome浏览器中默认是开启了soruce Map功能。如果被关闭可以手动开启，下图所示：</li></ul><img src="'+c+'" alt="浏览器中如何设置Source Map"><h3 id="source-map-关键字" tabindex="-1">Source Map 关键字 <a class="header-anchor" href="#source-map-关键字" aria-label="Permalink to &quot;Source Map 关键字&quot;">​</a></h3><p>对于SourceMap而言，我们最常见的，莫过于在<code>webpack</code>的配置项devTools中进行使用, 差不多有二十来种, 但归根结底 是<code>eval</code>,<code>source-map</code>,<code>cheap</code>,<code>module</code>,<code>inline</code>,这五种关键字的组合</p>',11),u=l('<img src="'+i+`" alt="devtool中sourcemap关键字配置"><table><thead><tr><th style="text-align:left;">关键字</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">source-map</td><td style="text-align:left;">产生.map文件</td></tr><tr><td style="text-align:left;">eval</td><td style="text-align:left;">使用eval包裹模块代码</td></tr><tr><td style="text-align:left;">cheap</td><td style="text-align:left;">不包含<code>列信息</code>也不包含<code>loader</code>的<code>sourcemap</code></td></tr><tr><td style="text-align:left;">module</td><td style="text-align:left;">包含<code>loader</code>的<code>sourcemap</code>（比如 <code>jsx</code> to <code>js</code> ，<code>babel</code>的<code>sourcemap</code>）,否则无法定义源文件</td></tr><tr><td style="text-align:left;">inline</td><td style="text-align:left;">将.map 作为 DataURI 嵌入，不单独生成.map 文件</td></tr></tbody></table><ul><li><p><code>eval</code> (性能最好)</p><ul><li><p>生成文件：使用eval包裹模块代码，然后在末尾添加模块来源 //# sourceURL，依靠sourceURL找到原始代码的位置。</p></li><li><p>错误追踪：文件名、源码行和列位置</p></li><li><p>包含eval关键字的配置项不产生.map文件（eval依靠sourceURL定位原始代码，其它都是.map定位）</p></li></ul></li><li><p><code>source-map</code>（性能最低）</p><ul><li><p>生成文件：产生.map文件</p></li><li><p>错误追踪： 文件名、源码行和列位置</p></li></ul></li><li><p><code>cheap</code> 不包含原始代码的列信息</p><ul><li><p>如果包含cheap关键字，则产生的.map文件不包含列信息。也就是说当你在浏览器中点击该代码的位置，光标只定位到行数，而不包含具体字符位置。</p></li><li><p>也不包含loaders的sourcemap：如果你使用了babel等代码编译工具，定位到的代码将是经过编译的代码位置，而不是原始代码。</p></li></ul></li><li><p><code>module</code> 包含loader的sourcemap（比如jsx to js ，babel的sourcemap）</p></li><li><p><code>inline</code> 将.map经过base64编码作为DataURI嵌入，不单独生成.map文件（这个配置项比较少见）</p></li></ul><h4 id="各个关键字处理示例" tabindex="-1">各个关键字处理示例 <a class="header-anchor" href="#各个关键字处理示例" aria-label="Permalink to &quot;各个关键字处理示例&quot;">​</a></h4><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> b</span></span>
<span class="line"><span style="color:#BABED8;">b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> a</span></span></code></pre></div><ul><li><p>处理结果</p><ul><li><code>eval</code> 处理后输出结果</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#82AAFF;">eval</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">var a = 1,</span><span style="color:#BABED8;">\\n</span><span style="color:#C3E88D;">    b;</span><span style="color:#BABED8;">\\n</span><span style="color:#C3E88D;">b = a;</span><span style="color:#BABED8;">\\n\\n</span><span style="color:#C3E88D;">//////////////////</span><span style="color:#BABED8;">\\n</span><span style="color:#C3E88D;">// WEBPACK FOOTER</span><span style="color:#BABED8;">\\n</span><span style="color:#C3E88D;">// ./src/index.js</span><span style="color:#BABED8;">\\n</span><span style="color:#C3E88D;">// module id = 0</span><span style="color:#BABED8;">\\n</span></span>
<span class="line"><span style="color:#C3E88D;">// module chunks = 0</span><span style="color:#BABED8;">\\n\\n</span><span style="color:#C3E88D;">//# sourceURL=webpack:///./src/index.js?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><table><thead><tr><th style="text-align:left;">关键字</th><th style="text-align:left;">特点</th><th style="text-align:left;">解决问题</th></tr></thead><tbody><tr><td style="text-align:left;">eval</td><td style="text-align:left;">使用<code>eval</code>包裹源代码进行执行</td><td style="text-align:left;">利用字符串可缓存进行提效</td></tr></tbody></table><ul><li><code>source-map</code>处理后输出结果</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">//# sourceMappingURL=bundle.js.map</span></span></code></pre></div><table><thead><tr><th style="text-align:left;">关键字</th><th style="text-align:left;">特点</th></tr></thead><tbody><tr><td style="text-align:left;">source-map</td><td style="text-align:left;">定位最全， 但.map文件最大， 性能最低</td></tr></tbody></table><ul><li><code>Inline-source-map</code> 处理后结果</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">//# sourceMappingURL=data: ...（base64 字符串）</span></span></code></pre></div><table><thead><tr><th style="text-align:left;">关键字</th><th style="text-align:left;">特点</th><th style="text-align:left;">解决问题</th></tr></thead><tbody><tr><td style="text-align:left;">inline</td><td style="text-align:left;">将map通过DataURL嵌入，不再生成.map文件</td><td style="text-align:left;">减少文件数</td></tr></tbody></table><ul><li><code>cheap-source-map</code> 处理后结果</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">//# sourceMappingURL=bundle.js.map</span></span></code></pre></div><table><thead><tr><th style="text-align:left;">关键字</th><th style="text-align:left;">特点</th><th style="text-align:left;">解决问题</th><th style="text-align:left;">存在问题</th></tr></thead><tbody><tr><td style="text-align:left;">cheap</td><td style="text-align:left;">错误信息只会定义行，不会定义列</td><td style="text-align:left;">降低文件精度，换取文件内容的缩小</td><td style="text-align:left;">对于经过Babel转化后的代码而言， 只能定义到转换后的代码的错误，不是很利于定位具体项目中的位置</td></tr></tbody></table><p>针对cheap存在的问题， 引出下面的关键字</p><ul><li><code>cheap-module-source-map</code> 处理后的结果</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">//# sourceMappingURL=bundle.js.map</span></span></code></pre></div><table><thead><tr><th style="text-align:left;">关键字</th><th style="text-align:left;">特点</th><th style="text-align:left;">解决问题</th></tr></thead><tbody><tr><td style="text-align:left;">module</td><td style="text-align:left;">会保留loader处理前后文件信息的映射</td><td style="text-align:left;">解决了通过<code>cheap</code>关键字导致的无法确定loader处理前源代码的问题</td></tr></tbody></table></li><li><h5 id="cheap关键字示例" tabindex="-1"><code>cheap</code>关键字示例 <a class="header-anchor" href="#cheap关键字示例" aria-label="Permalink to &quot;\`cheap\`关键字示例&quot;">​</a></h5><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// # sum页面</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> sum </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> b</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;font-style:italic;"> return</span><span style="color:#BABED8;"> a</span><span style="color:#89DDFF;"> +</span><span style="color:#BABED8;"> b</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">debugger</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#89DDFF;font-style:italic;"> default</span><span style="color:#BABED8;"> sum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// # index页面</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> sum </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">./sum</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(sum)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>对于<code>cheap-source-map</code>而言，此时页面 debugger 展示源码是 es5 的代码，因为已经被 babal 转义了 <img src="`+e+'" alt="cheap-source-map"></p><p>但对于<code>source-map</code>而言， 则会定位到精准代码 <img src="'+e+'" alt="source-map"></p></li></ul><h4 id="常见配置项的对比" tabindex="-1">常见配置项的对比 <a class="header-anchor" href="#常见配置项的对比" aria-label="Permalink to &quot;常见配置项的对比&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">devtool</th><th style="text-align:left;">构建速度</th><th style="text-align:left;">重新构建速度</th><th style="text-align:left;">生产环境</th><th style="text-align:left;">品质(quality)</th></tr></thead><tbody><tr><td style="text-align:left;">(none)</td><td style="text-align:left;">+++[^1]</td><td style="text-align:left;">+++</td><td style="text-align:left;">yes</td><td style="text-align:left;">打包后的代码</td></tr><tr><td style="text-align:left;">eval</td><td style="text-align:left;">+++</td><td style="text-align:left;">+++</td><td style="text-align:left;">no</td><td style="text-align:left;">生成后的代码</td></tr><tr><td style="text-align:left;">cheap-eval-source-map</td><td style="text-align:left;">+[^2]</td><td style="text-align:left;">++[^3]</td><td style="text-align:left;">no</td><td style="text-align:left;">转换后的代码(仅限行)</td></tr><tr><td style="text-align:left;">cheap-module-eval-source-map</td><td style="text-align:left;">o[^4]</td><td style="text-align:left;">++</td><td style="text-align:left;">no</td><td style="text-align:left;">原始源代码(仅限行)</td></tr><tr><td style="text-align:left;">eval-source-map</td><td style="text-align:left;">--[^5]</td><td style="text-align:left;">+</td><td style="text-align:left;">no</td><td style="text-align:left;">原始源代码</td></tr><tr><td style="text-align:left;">cheap-source-map</td><td style="text-align:left;">+</td><td style="text-align:left;">o</td><td style="text-align:left;">yes</td><td style="text-align:left;">转换过后的代码(仅限行)</td></tr><tr><td style="text-align:left;">cheap-module-source-map</td><td style="text-align:left;">o</td><td style="text-align:left;">-[^6]</td><td style="text-align:left;">yes</td><td style="text-align:left;">原始源代码(仅限行)</td></tr><tr><td style="text-align:left;">inline-cheap-source-map</td><td style="text-align:left;">+</td><td style="text-align:left;">o</td><td style="text-align:left;">no</td><td style="text-align:left;">转换后的代码(仅限行)</td></tr><tr><td style="text-align:left;">inline-cheap-module-source-map</td><td style="text-align:left;">o</td><td style="text-align:left;">-</td><td style="text-align:left;">no</td><td style="text-align:left;">原始源代码(仅限行)</td></tr><tr><td style="text-align:left;">source-map</td><td style="text-align:left;">--</td><td style="text-align:left;">--</td><td style="text-align:left;">yes</td><td style="text-align:left;">原始源代码</td></tr><tr><td style="text-align:left;">inline-source-map</td><td style="text-align:left;">--</td><td style="text-align:left;">--</td><td style="text-align:left;">no</td><td style="text-align:left;">原始源代码</td></tr><tr><td style="text-align:left;">hidden-source-map</td><td style="text-align:left;">--</td><td style="text-align:left;">--</td><td style="text-align:left;">yes</td><td style="text-align:left;">原始源代码</td></tr><tr><td style="text-align:left;">nosources-source-map</td><td style="text-align:left;">--</td><td style="text-align:left;">--</td><td style="text-align:left;">yes</td><td style="text-align:left;">无源代码内容</td></tr></tbody></table><p>[^1]: <code>+++ 非常快速</code> [^2]: <code>+ 比较快</code> [^3]: <code>++ 快速</code> [^4]: <code>-- 慢</code> [^5]: <code>o 中等</code> [^6]: <code>- 比较慢</code></p><h4 id="在项目中的使用" tabindex="-1">在项目中的使用 <a class="header-anchor" href="#在项目中的使用" aria-label="Permalink to &quot;在项目中的使用&quot;">​</a></h4><ul><li><p><strong>开发环境</strong></p><ul><li>我们在开发环境对SourceMap的要求是：快(<code>eval</code>), 信息全面(<code>module</code>)</li><li>并且由于代码未压缩，我们并不那么在意代码咧信息(<code>cheap</code>)</li></ul><p>所以<strong>开发环境</strong>比较推荐配置: devtool:<code>cheap-module-eval-source-map</code></p></li><li><p><strong>生产环境</strong></p><ul><li>一般情况下，我们并不希望其它人都可以在浏览器直接看到我们未编译的源码</li><li>所以我们不应该直接提供SourceMap给浏览器。但我们又需要sourceMap来定位我们的错误信息，</li><li>一方面<code>webpack</code>会生成<code>sourcemap</code>文件以提供给错误收集工具， 比如sentry， 另一方面又不会给bundle文件提供注释，以避免浏览器使用，</li></ul><p>所以<strong>生产环境</strong>比较推荐配置: devtool:<code>hidden-source-map</code></p></li></ul>',11);function g(h,f,x,m,b,D){const a=s;return n(),p("div",null,[y,t("ul",null,[t("li",null,[d(a,{title:"webpcak官网的devtool",href:"https://webpack.docschina.org/configuration/devtool/#root"})])]),u])}const B=o(r,[["render",g]]);export{_ as __pageData,B as default};
