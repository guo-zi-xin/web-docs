import{_ as s,o as a,c as e,R as o}from"./chunks/framework.AonOEUEq.js";const y=JSON.parse('{"title":"git 初始化","description":"","frontmatter":{},"headers":[],"relativePath":"tools/git/git-init.md","filePath":"tools/git/git-init.md","lastUpdated":1700734386000}'),l={name:"tools/git/git-init.md"},t=o('<h1 id="git-初始化" tabindex="-1">git 初始化 <a class="header-anchor" href="#git-初始化" aria-label="Permalink to &quot;git 初始化&quot;">​</a></h1><blockquote><p><strong>背景</strong></p></blockquote><p>本地安装了git,同时github也已经申请了账号，想通过git把github上别人的代码clone到本地。</p><h3 id="操作步骤" tabindex="-1">操作步骤 <a class="header-anchor" href="#操作步骤" aria-label="Permalink to &quot;操作步骤&quot;">​</a></h3><p><strong>1.在自己电脑创建本地仓库</strong><strong>第一步，</strong> 打开git bash,找一个存放所有git项目的目录。假设git的目录叫<strong>gitRepo</strong>。</p><p><strong>第二步</strong>，为你要拉取的github项目创建项目文件夹，在gitRepo目录下输入命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#C3E88D;"> firstPro</span></span></code></pre></div><p>然后输入命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#C3E88D;"> firstPro</span></span></code></pre></div><p><strong>2.git初始化设置、仓库的初始化以及绑定SSH秘钥</strong><strong>第一步，</strong> 初始化git仓库。（当前git bash所在目录路径为gitRepo/firstPro）输入命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> init</span></span></code></pre></div><p>此时，会看见本地电脑的目录下会有 <em>==.git==</em> 文件夹。 <strong>第二步，</strong> 在第一次安装git之后需要初始github的配置信息。所以接下来要初始化你的github信息。输入命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --global</span><span style="color:#C3E88D;"> user.name</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">your</span><span style="color:#C3E88D;"> github</span><span style="color:#C3E88D;"> usernam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>然后再输入命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> config</span><span style="color:#C3E88D;"> --global</span><span style="color:#C3E88D;"> user.email</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">your</span><span style="color:#C3E88D;"> github</span><span style="color:#C3E88D;"> emai</span><span style="color:#BABED8;">l</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><blockquote><ul><li>这里说明一下，尖括号里输入的是你的github账号，第二个尖括号输入的是与你github绑定的电子邮箱。</li></ul></blockquote><p><strong>第三步，</strong> 现在需要将你的电脑和github账号通过SSHkey绑定。输入命令： <code>cd ~/.ssh</code> (如果输入命令后无法进入，则说明还没有在本地机器上绑定你自己github账户的公钥，那么就需要下边的ssh-keygen命令进行绑定) 输入命令：（<code>cd ~/.ssh</code>命令如果失效，跳过该命令）</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">ls</span></span></code></pre></div><p>看ssh文件夹下有没有<code>id_rsa</code>、<code>id_rsa.pub</code> 这两个文件，如果没有那么就需要绑定ssh key。因此，需要输入命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">ssh-keygen</span><span style="color:#C3E88D;"> -t</span><span style="color:#C3E88D;"> rsa</span><span style="color:#C3E88D;"> -C</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">your</span><span style="color:#C3E88D;"> github</span><span style="color:#C3E88D;"> usernam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>ssh-keygen -t rsa -C &quot;your github username&quot; 然后一直回车就会提示rsa保存成功。这样在.ssh目录就会生成两个文件，即<code>id_rsa</code>、<code>id_rsa.pub</code>。 第四步，输入命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#C3E88D;"> id_rsa.pub</span></span></code></pre></div><p>然后复制里边的信息，在网页登录github账号，点击个人头像，进入<em>setting</em>,然后选择<code>ssh and GPG key</code>,在页面里添加<code>ssh key</code>。添加成功之后，在git里输入命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">ssh</span><span style="color:#C3E88D;"> git@github.com</span></span></code></pre></div><p>验证是否连接成功。如果提示成功，那么就可以把自己github远程仓库的代码clone到本地了。</p><p><strong>3.fork别人的github项目，然后clone项目到本地</strong> 注意：如果你想clone别人的github项目到本地，那么需要通过github先fork别人的项目到自己的github仓库中。 fork完之后，进入自己的本地的git项目仓库（firsPro）,输入命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> clone</span><span style="color:#C3E88D;"> githubrepository,</span></span></code></pre></div><p>githubrepository输入的是github上fork完项目之后，点击<code>clone or download</code>时，复制的那个ssh的项目地址。 这样就初始化完成， 并且可以自由fork项目了。</p>',28),n=[t];function p(c,i,r,g,d,h){return a(),e("div",null,n)}const b=s(l,[["render",p]]);export{y as __pageData,b as default};
