import{_ as s,o as a,c as n,a8 as l}from"./chunks/framework.Qf1t7Yq5.js";const E=JSON.parse('{"title":"ES6新特性(一)(常用)","description":"","frontmatter":{},"headers":[],"relativePath":"native/javascript/ES6新特性一.md","filePath":"native/javascript/ES6新特性一.md","lastUpdated":1703237887000}'),p={name:"native/javascript/ES6新特性一.md"},o=l(`<h1 id="es6新特性-一-常用" tabindex="-1">ES6新特性(一)(常用) <a class="header-anchor" href="#es6新特性-一-常用" aria-label="Permalink to &quot;ES6新特性(一)(常用)&quot;">​</a></h1><p>ES是ECMAScript的缩写， 也就是JavaScript的标准化规范，ECMAScript是一种由 Ecma 国际组织制定的脚本语言标准，它定义了Javascript的语法、类型、操作符、对象和函数等基本组件 ES6是ECMAScript的第六个版本(2015年发布)，引入了许多新的语言特性和改进，像箭头函数，模版字面量，解构赋值等</p><h3 id="声明方式-let、const" tabindex="-1">声明方式 <code>let</code>、<code>const</code> <a class="header-anchor" href="#声明方式-let、const" aria-label="Permalink to &quot;声明方式 \`let\`、\`const\`&quot;">​</a></h3><h5 id="let" tabindex="-1">let <a class="header-anchor" href="#let" aria-label="Permalink to &quot;let&quot;">​</a></h5><p>let 关键字用于声明一个块级作用域的变量。与 var 关键字的区别在于 let 声明的变量只在其所在的块级作用域中有效，而不会被提升到函数作用域。这意味着在使用 let 声明的变量之前 必须先进行声明, 否则会抛出错误 <code>ReferenceError</code></p><h5 id="const" tabindex="-1">const <a class="header-anchor" href="#const" aria-label="Permalink to &quot;const&quot;">​</a></h5><p>const 关键字是用于声明一个常量，其值在声明后不能再被改变。 const 声明的变量也是块级作用域的，与 let 类似， 但值不可变</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> (</span><span style="color:#FF9CAC;">true</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 10</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //块级作用域</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> y</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 20</span><span style="color:#F07178;">； </span><span style="color:#676E95;font-style:italic;">//常量 块级作用域</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">x</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 10</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">y</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 20</span></span>
<span class="line"><span style="color:#BABED8;">  x</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 15</span><span style="color:#676E95;font-style:italic;"> // 正常运行</span></span>
<span class="line"><span style="color:#BABED8;">  y</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 10</span><span style="color:#676E95;font-style:italic;"> // 报错 Assignment to constant variable</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(x) </span><span style="color:#676E95;font-style:italic;">// 报错 x is not defined</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(y) </span><span style="color:#676E95;font-style:italic;">// 报错 y is not defined</span></span></code></pre></div><h3 id="变量的解构赋值" tabindex="-1">变量的解构赋值 <a class="header-anchor" href="#变量的解构赋值" aria-label="Permalink to &quot;变量的解构赋值&quot;">​</a></h3><h5 id="数组的解构" tabindex="-1">数组的解构 <a class="header-anchor" href="#数组的解构" aria-label="Permalink to &quot;数组的解构&quot;">​</a></h5><p>ES6 允许按照一定的模式，从数组和对象中提取值，对变量进行赋值， 这个过程被称为解构(Destructuring)</p><p><strong>基本用法</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ES6 之前赋值的写法</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> c </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">///////////////</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ES6 可以写成这种形式</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> b</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> c</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">]</span></span></code></pre></div><p>上面这种写法属于“模式匹配”，只要等号两边的数据格式相同，左边的变量就会被赋予对应的值</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">foo</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> [[</span><span style="color:#BABED8;">bar</span><span style="color:#89DDFF;">],</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">bar2</span><span style="color:#89DDFF;">]]]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> [[</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">]]]</span></span>
<span class="line"><span style="color:#BABED8;">foo  </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#BABED8;">bar  </span><span style="color:#676E95;font-style:italic;">// 2</span></span>
<span class="line"><span style="color:#BABED8;">bar2 </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [,</span><span style="color:#89DDFF;"> ,</span><span style="color:#BABED8;"> third</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">bar2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">third </span><span style="color:#676E95;font-style:italic;">// &#39;bar2&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ,</span><span style="color:#BABED8;"> y</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">head</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ...</span><span style="color:#BABED8;">tail</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">head </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#BABED8;">tail </span><span style="color:#676E95;font-style:italic;">// [2, 3, 4]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> y</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ...</span><span style="color:#BABED8;">z</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#676E95;font-style:italic;">// &#39;a&#39;</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#676E95;font-style:italic;">// undefined</span></span>
<span class="line"><span style="color:#BABED8;">z </span><span style="color:#676E95;font-style:italic;">// []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">foo</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> []</span></span>
<span class="line"><span style="color:#BABED8;">foo </span><span style="color:#676E95;font-style:italic;">// undefined</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">bar</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> foo</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">bar </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"><span style="color:#BABED8;">foo </span><span style="color:#676E95;font-style:italic;">// undefined</span></span></code></pre></div><p>还有一种情况是不完全解构， 即等号左边的模式，只匹配一部分等号右边的数组：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> y</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#676E95;font-style:italic;">// 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">a</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">b</span><span style="color:#89DDFF;">],</span><span style="color:#BABED8;"> d</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">a </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#BABED8;">b </span><span style="color:#676E95;font-style:italic;">// 2</span></span>
<span class="line"><span style="color:#BABED8;">d </span><span style="color:#676E95;font-style:italic;">// 4</span></span></code></pre></div><p>如果等号的右边不是数组(或者严格地说 不是可遍历的结构)， 那么将会报错</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 报错</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">foo</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">foo</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">foo</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> NaN</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">foo</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> undefined</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">foo</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> null</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">foo</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {}</span></span></code></pre></div><p>对于数据结构具有 Iterator 接口， 那么都可以采用数组的形式进行解构赋值</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> y</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> z</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> Set</span><span style="color:#BABED8;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">])</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#676E95;font-style:italic;">// &#39;a&#39;</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#676E95;font-style:italic;">// &#39;b&#39;</span></span>
<span class="line"><span style="color:#BABED8;">z </span><span style="color:#676E95;font-style:italic;">// &#39;c&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 这个generator函数是为了生成斐波那契数列</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;"> fibs</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> a</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> b</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  while</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    yield</span><span style="color:#BABED8;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    [</span><span style="color:#BABED8;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> b</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">b</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> a</span><span style="color:#89DDFF;"> +</span><span style="color:#BABED8;"> b</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">first</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> second</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> third</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> fourth</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> fifth</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> sixth</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> fibs</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#BABED8;">sixth </span><span style="color:#676E95;font-style:italic;">// 5</span></span></code></pre></div><p><strong>默认值</strong></p><p>解构赋值允许指定默认值</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">foo </span><span style="color:#89DDFF;">=</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> []</span></span>
<span class="line"><span style="color:#BABED8;">foo </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> y </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">] </span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#676E95;font-style:italic;">// &#39;a&#39;</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#676E95;font-style:italic;">// &#39;b&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> y </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> undefined</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#676E95;font-style:italic;">// &#39;a&#39;</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#676E95;font-style:italic;">// &#39;b&#39;</span></span></code></pre></div><blockquote><p>注意⚠️：ES6内部使用严格相等运算符(<code>===</code>)来判断一个位置是否有值。所以，只有当一个数组成员严格等于<code>undefined</code>，默认值才会生效</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">x </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">undefined</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">x </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">null</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#676E95;font-style:italic;">// null</span></span></code></pre></div><h5 id="对象的解构" tabindex="-1">对象的解构 <a class="header-anchor" href="#对象的解构" aria-label="Permalink to &quot;对象的解构&quot;">​</a></h5><blockquote><p>对象的解构与数组有一个重要的不同，数组的元素是按次序排列的，变量的取值由他们的位置决定； 而对象的属性没有次序，变量必须与属性同名，才能取到正确的值</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> bar</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> foo </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> foo</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">这是foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> bar</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">这是bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">foo </span><span style="color:#676E95;font-style:italic;">// &#39;这是foo&#39;</span></span>
<span class="line"><span style="color:#BABED8;">bar </span><span style="color:#676E95;font-style:italic;">// &#39;这是bar&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 如果解构失败，变量的值等于\b</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> bar2 </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> foo</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">这是foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> bar</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">这是bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">bar2 </span><span style="color:#676E95;font-style:italic;">// undefined</span></span></code></pre></div><p>如果变量名与属性名不一致， 则必须写成下面这样</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> foo</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> baz </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> foo</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">这是foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> bar</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">这是bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">baz </span><span style="color:#676E95;font-style:italic;">// &#39;这是foo&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> first</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> last</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> first</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> last</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> l </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> obj</span></span>
<span class="line"><span style="color:#BABED8;">f </span><span style="color:#676E95;font-style:italic;">// hello</span></span>
<span class="line"><span style="color:#BABED8;">l </span><span style="color:#676E95;font-style:italic;">// world</span></span></code></pre></div><p>与数组一样， 解构也可以用于嵌套结构的对象</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  p</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> y</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> p</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> y </span><span style="color:#89DDFF;">}]</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> obj</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#676E95;font-style:italic;">// &#39;hello&#39;</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#676E95;font-style:italic;">// &#39;world&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 此时的p是模式，不是变量， 如果想要p也作为变量赋值， 可以写成下面这样 </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> p</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> p</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> y </span><span style="color:#89DDFF;">}]</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> obj</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#676E95;font-style:italic;">// &#39;hello&#39;</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#676E95;font-style:italic;">// &#39;world&#39;</span></span>
<span class="line"><span style="color:#BABED8;">p </span><span style="color:#676E95;font-style:italic;">// [&#39;hello&#39;, { y: &#39;world&#39; }]</span></span></code></pre></div><p><strong>嵌套赋值</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {};</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> foo</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> obj</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prop</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> bar</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> arr[</span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">] </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> foo</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 123</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> bar</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;"> }</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">obj </span><span style="color:#676E95;font-style:italic;">// { prop: 123 }</span></span>
<span class="line"><span style="color:#BABED8;">arr </span><span style="color:#676E95;font-style:italic;">// [true]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 如果解构模式是嵌套的对象，而且子对象所在的父属性不存在，那么将会报错</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> foo</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> bar </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> baz</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">baz</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> }</span><span style="color:#676E95;font-style:italic;"> // 报错</span></span></code></pre></div><p>对象的解构赋值可以取到继承的属性</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> obj1 </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {};</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> obj2 </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> foo</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#BABED8;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setPrototypeOf</span><span style="color:#BABED8;">(obj1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> obj2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> foo </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> obj1</span></span>
<span class="line"><span style="color:#BABED8;">foo </span><span style="color:#676E95;font-style:italic;">// &#39;bar&#39;</span></span></code></pre></div><p><strong>默认值</strong></p><p>对象的解构也能指定默认值, 默认值生效的条件是 对象的属性值严格等于<code>undefined</code></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {}</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> y </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#676E95;font-style:italic;">// 5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> y </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {}</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> y </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#BABED8;">y </span><span style="color:#676E95;font-style:italic;">// 5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> message</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> msg </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">Something wen wrong</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {}</span></span>
<span class="line"><span style="color:#BABED8;">msg </span><span style="color:#676E95;font-style:italic;">// &#39;Something wen wrong&#39;</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">注意</p><ol><li><p>如果要将一个已经声明的变量用于解构赋值，需要注意不能把花括号写在行首， 否则会报错</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;"> let</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> // 报错 SyntaxError： syntax error</span></span></code></pre></div><p>因为Javascript会将<code>{ x }</code>理解成一个代码块，从而发生语法错误， 正确写法应该是</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;"> }</span><span style="color:#BABED8;">)</span></span></code></pre></div></li><li><p>解构赋值允许等号左边的模式之中，不放置任何变量名。 因此 可以写出非常古怪的赋值表达式, 但没有实际意义</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#FF9CAC;"> false</span><span style="color:#BABED8;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> [])</span><span style="color:#89DDFF;">;</span></span></code></pre></div></li><li><p>由于数组本质是特殊的对象， 因此可以对数组进行对象属性的解构</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> {</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> first</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> [arr</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;"> 1</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> last </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> arr</span></span>
<span class="line"><span style="color:#BABED8;">first </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#BABED8;">last </span><span style="color:#676E95;font-style:italic;">// 3</span></span></code></pre></div></li></ol></div><h5 id="字符串的解构" tabindex="-1">字符串的解构 <a class="header-anchor" href="#字符串的解构" aria-label="Permalink to &quot;字符串的解构&quot;">​</a></h5><p>字符串也可以解构赋值， 这是因为在解构字符串的时候， 字符串被转化成了一个类数组对象</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> b</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> c</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> d</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> e</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#BABED8;">a </span><span style="color:#676E95;font-style:italic;">// &#39;h&#39;</span></span>
<span class="line"><span style="color:#BABED8;">b </span><span style="color:#676E95;font-style:italic;">// &#39;e&#39;</span></span>
<span class="line"><span style="color:#BABED8;">c </span><span style="color:#676E95;font-style:italic;">// &#39;l&#39;</span></span>
<span class="line"><span style="color:#BABED8;">d </span><span style="color:#676E95;font-style:italic;">// &#39;l&#39;</span></span>
<span class="line"><span style="color:#BABED8;">e </span><span style="color:#676E95;font-style:italic;">// &#39;o&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 类数组都具有length属性， 因此还可以对这个属性进行解构赋值</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> length</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> len </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#BABED8;">len </span><span style="color:#676E95;font-style:italic;">// 5</span></span></code></pre></div><h5 id="数值与布尔值的解构" tabindex="-1">数值与布尔值的解构 <a class="header-anchor" href="#数值与布尔值的解构" aria-label="Permalink to &quot;数值与布尔值的解构&quot;">​</a></h5><p>解构赋值时候， 如果等号右边是数值和布尔值， 则先会转换为对象</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> toString</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> s </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 123</span></span>
<span class="line"><span style="color:#BABED8;">s </span><span style="color:#89DDFF;">===</span><span style="color:#FFCB6B;"> Number</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">toString </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">toString</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> s</span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> =</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"><span style="color:#BABED8;">s </span><span style="color:#89DDFF;">===</span><span style="color:#FFCB6B;"> Boolean</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">toString </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div><h5 id="函数的参数的解构" tabindex="-1">函数的参数的解构 <a class="header-anchor" href="#函数的参数的解构" aria-label="Permalink to &quot;函数的参数的解构&quot;">​</a></h5><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> add</span><span style="color:#89DDFF;"> ([</span><span style="color:#BABED8;font-style:italic;">x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> y</span><span style="color:#89DDFF;">])</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;"> +</span><span style="color:#BABED8;"> y</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">add</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#BABED8;">]) </span><span style="color:#676E95;font-style:italic;">// 3</span></span></code></pre></div><p>上述示例中， 函数 add 的参数表面上是一个数组，但在传入参数的那一刻， 数组参数就被解构成变量 x 和 y 对于函数内部的代码来说， 它们能感受到参数就是 x 和 y</p><p>类似数组的map方法的参数也可以被解构</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#BABED8;">]]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">([</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> b</span><span style="color:#89DDFF;">])</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> b)</span></span>
<span class="line"><span style="color:#BABED8;">result </span><span style="color:#676E95;font-style:italic;">// [1, 3]</span></span></code></pre></div><p><strong>默认值</strong></p><p>函数参数的解构也可以使用默认值</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> move</span><span style="color:#89DDFF;">({</span><span style="color:#BABED8;font-style:italic;">x</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> y</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {})</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> y</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">move</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> y</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 8</span><span style="color:#89DDFF;"> }</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// [3, 8]</span></span>
<span class="line"><span style="color:#82AAFF;">move</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;"> }</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// [3, 0]</span></span>
<span class="line"><span style="color:#82AAFF;">move</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// [0, 0]</span></span>
<span class="line"><span style="color:#82AAFF;">move</span><span style="color:#BABED8;">() </span><span style="color:#676E95;font-style:italic;">// [0, 0]</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">注意，下面的写法会有不一样的结果</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> move</span><span style="color:#89DDFF;">({</span><span style="color:#BABED8;font-style:italic;"> x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> y</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> y</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;"> })</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> y</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">move</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> y</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 8</span><span style="color:#89DDFF;"> }</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// [3, 8]</span></span>
<span class="line"><span style="color:#82AAFF;">move</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;"> }</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// [3, undefined]</span></span>
<span class="line"><span style="color:#82AAFF;">move</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// [undefined, undefined]</span></span>
<span class="line"><span style="color:#82AAFF;">move</span><span style="color:#BABED8;">() </span><span style="color:#676E95;font-style:italic;">// [0, 0]</span></span></code></pre></div></div><h3 id="函数参数默认值" tabindex="-1">函数参数默认值 <a class="header-anchor" href="#函数参数默认值" aria-label="Permalink to &quot;函数参数默认值&quot;">​</a></h3><p>ES6 中， 我们可以在函数参数中设置默认值，这意味着如果调用函数的时候没有为参数提供有效值，它们将会使用默认值， 这对简化函数调用和处理缺少参数时的情况有用</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> greet</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">name</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">hello, </span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">!</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">greet</span><span style="color:#BABED8;">() </span><span style="color:#676E95;font-style:italic;">// &#39;hello, world!&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">greet</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hhh</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// &#39;hello, hhh!&#39;</span></span></code></pre></div><p>参数变量是默认声明的， 所以不能用 <code>let</code>或 <code>const</code>再次声明</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> greet</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">name</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> name</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#676E95;font-style:italic;"> // 报错 error</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> name</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 2</span><span style="color:#676E95;font-style:italic;"> // 报错 error</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><blockquote><p>引申: 使用函数默认值时， 函数不能有同名参数</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 正常运行</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> foo</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;">x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;">y</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 报错 SyntaxError: Duplicate parameter name not allowed in this context</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> foo</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> y</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>另外， 还有一个比较容易忽略的地方是，参数值默认是不穿值的，而是每次重新计算默认值表达式的值，也就是说， 参数默认值是惰性求值的</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 99</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> foo</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">p</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">p</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">foo</span><span style="color:#BABED8;">() </span><span style="color:#676E95;font-style:italic;">// 100 </span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">x </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 100</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#82AAFF;">foo</span><span style="color:#BABED8;">() </span><span style="color:#F78C6C;">101</span></span></code></pre></div><h3 id="箭头函数" tabindex="-1">箭头函数 <a class="header-anchor" href="#箭头函数" aria-label="Permalink to &quot;箭头函数&quot;">​</a></h3><ul><li>箭头函数具有简洁的语法，清晰的上下文，继承外部作用域的arguments等特点， 适合简化代码，避免this指向问题和明确的参数处理， 但不适合构造函数和需要自己this值的场景</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 箭头函数示例</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> add </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> b</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> b</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">add</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//函数表达式示例 </span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> multiply </span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> b</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> a</span><span style="color:#89DDFF;"> *</span><span style="color:#BABED8;"> b</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">multiply</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 6</span></span></code></pre></div><h5 id="使用注意点" tabindex="-1">使用注意点 <a class="header-anchor" href="#使用注意点" aria-label="Permalink to &quot;使用注意点&quot;">​</a></h5><ol><li>箭头函数没有自己的<code>this</code>对象</li><li>不可以当作构造函数，也就是说， 不可以对箭头函数使用<code>new</code>指令， 否则会抛出错误</li><li>不可以使用<code>arguments</code>对象， 该对象在函数体内不存在， 如果要用， 可以用 rest 参数代替</li><li>不可以使用 yield 命令，因此箭头函数不能用作 Generator 函数</li></ol><h5 id="箭头函数与普通函数的区别" tabindex="-1">箭头函数与普通函数的区别 <a class="header-anchor" href="#箭头函数与普通函数的区别" aria-label="Permalink to &quot;箭头函数与普通函数的区别&quot;">​</a></h5><ul><li>箭头函数是匿名函数，不能作为构造函数， 不能使用new</li><li>箭头函数不能绑定 arguments，要用 rest 参数 解决</li><li>箭头函数没有原型属性</li><li>箭头函数的 this 永远是指向其上下文的 this</li><li>箭头函数不能绑定 this， 会捕获其所在的上下文的this的值，最为自己的this的值</li></ul><h3 id="模版字符串" tabindex="-1">模版字符串 <a class="header-anchor" href="#模版字符串" aria-label="Permalink to &quot;模版字符串&quot;">​</a></h3><p>模版字符串是ES6中引入的一种新的字符串语法，它允许字符串中插入变量或者表达式，而不需要使用字符串拼接符号。模版字符串使用反引号 \`\` 包围，并使用 <strong>\${}</strong> 语法来插入变量或者表达式</p><p>在 <strong>\${}</strong> 语法中， 我们可以放置任何有效的Javascript表达式， 这些表达式的值将被插入到字符串中</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">hello, </span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">!</span><span style="color:#89DDFF;">\`</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// &#39;hello, world!&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//插入dom标签</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> parent </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.parent</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> content </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">这是一个div标签</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> templateString </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> \`</span><span style="color:#C3E88D;">&lt;div&gt;</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">content</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">&lt;/div&gt;</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">parent</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">innerHTML </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> templateString</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="扩展操作符" tabindex="-1">扩展操作符 <a class="header-anchor" href="#扩展操作符" aria-label="Permalink to &quot;扩展操作符&quot;">​</a></h3><p>扩展操作符用于展开可迭代对象(数组、字符串等)，好比 rest 参数的逆运算，将其元素逐个展开，以便于在函数调用、数组字面量、对象字面量中使用</p><p>使用扩展操作符时， 需要在展开的可迭代对象前面加上三个点(...)</p><details class="details custom-block"><summary>函数 rest 参数</summary><p>ES6中引入 rest 参数(形式为<code>...变量名</code>)，用于获取函数的多余参数，这样就不需要使用 arguments 对象了。</p><p>rest参数搭配的变量是一个数组， 该变量将对于的参数放入到数组中</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 这个示例的含义是表示一个求和函数，利用rest参数，可以向该函数传入任意数目的参数</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> add</span><span style="color:#89DDFF;"> (...</span><span style="color:#BABED8;font-style:italic;">values</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> sum</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> val</span><span style="color:#89DDFF;"> of</span><span style="color:#BABED8;"> values</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    sum</span><span style="color:#89DDFF;"> +=</span><span style="color:#BABED8;"> val</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> sum</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">add</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// 10</span></span></code></pre></div><ul><li><p>rest 参数代替 arguments 变量</p><p>arguments 对象不是数组， 而是一个类数组的对象，所以为了使用数组的方法， 必须使用 Array.form() 先将其转为数组。</p><p>rest 参数则是一个真正的数组， 可以直接使用数组特有的方法</p></li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// arguments 变量的写法</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> sortNumbers</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">form</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">arguments</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sort</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// rest 参数的写法</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> sortNumbers </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (...</span><span style="color:#BABED8;font-style:italic;">numbers</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> numbers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sort</span><span style="color:#BABED8;">()</span></span></code></pre></div><blockquote><p>‼️ rest参数之后不能再有其他参数(rest 只能是最后一个参数)， 否则会报错</p><p>函数的<code>length</code>属性， 不包括rest参数</p></blockquote></details><h5 id="展开数组" tabindex="-1">展开数组 <a class="header-anchor" href="#展开数组" aria-label="Permalink to &quot;展开数组&quot;">​</a></h5><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr1 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;">arr1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">] </span><span style="color:#676E95;font-style:italic;">// [1, 2, 3, 4, 5]</span></span></code></pre></div><h5 id="传递参数给函数" tabindex="-1">传递参数给函数 <a class="header-anchor" href="#传递参数给函数" aria-label="Permalink to &quot;传递参数给函数&quot;">​</a></h5><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> sum</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> b</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> c</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> a</span><span style="color:#89DDFF;"> +</span><span style="color:#BABED8;"> b</span><span style="color:#89DDFF;"> +</span><span style="color:#BABED8;"> c</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> numbers </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> sum</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;">numbers) </span><span style="color:#676E95;font-style:italic;">// 6</span></span></code></pre></div><h5 id="浅拷贝数组或对象" tabindex="-1">浅拷贝数组或对象 <a class="header-anchor" href="#浅拷贝数组或对象" aria-label="Permalink to &quot;浅拷贝数组或对象&quot;">​</a></h5><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr1 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;">arr1] </span><span style="color:#676E95;font-style:italic;">// [1, 2, 3]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> obj1 </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">Alex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 20</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> obj2 </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {...</span><span style="color:#BABED8;">obj1</span><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;">  // { name: &#39;Alex&#39;, age: 20 }</span></span></code></pre></div><h3 id="对象字面量简化" tabindex="-1">对象字面量简化 <a class="header-anchor" href="#对象字面量简化" aria-label="Permalink to &quot;对象字面量简化&quot;">​</a></h3><p>ES6引入了一种更简洁的方式来定义对象字面量，即ES6对象字面量语法。它提供了一种更方便的方法来定义和初始化对象属性。它是ES6中一个非常方便的特性，可以提高代码的可读性和可维护性。</p><h5 id="属性的简介表示法" tabindex="-1">属性的简介表示法 <a class="header-anchor" href="#属性的简介表示法" aria-label="Permalink to &quot;属性的简介表示法&quot;">​</a></h5><p>ES6中， 可以使用更简洁的语法来定义对象字面量， 还可以直接在对象字面量中定义方法，而不需要使用<code>function</code>关键字</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">Alex</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> age </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 18</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> name</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> age</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> fun</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> this.</span><span style="color:#BABED8;">age</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">}}</span></span></code></pre></div><h5 id="属性名表达式" tabindex="-1">属性名表达式 <a class="header-anchor" href="#属性名表达式" aria-label="Permalink to &quot;属性名表达式&quot;">​</a></h5><p>Javascript中 定义对象的属性， 有两种方法</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 方法一</span></span>
<span class="line"><span style="color:#BABED8;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">foo </span><span style="color:#89DDFF;">=</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 方法二(ES6)</span></span>
<span class="line"><span style="color:#BABED8;">obj[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> +</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">bc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 123</span></span></code></pre></div><p>ES6 允许字面量定义对象时， 用方法二(表达式)作为对抗的属性名，即吧表达式放在方括号内</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> propKey </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">propKey</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> +</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#F07178;">bc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 123</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> lastWorld </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">last world</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> aa </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#F07178;">first world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">lastWorld</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">aa[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">first world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">] </span><span style="color:#676E95;font-style:italic;">// &#39;hello&#39;</span></span>
<span class="line"><span style="color:#BABED8;">aa[lastWorld] </span><span style="color:#676E95;font-style:italic;">// &#39;world&#39;</span></span>
<span class="line"><span style="color:#BABED8;">aa[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">last world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">] </span><span style="color:#676E95;font-style:italic;">// &#39;world&#39;</span></span></code></pre></div><p>表达式还可以用方法名</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">  [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">h</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> +</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">ello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">hi</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hello</span><span style="color:#BABED8;">() </span><span style="color:#676E95;font-style:italic;">// &#39;hi&#39;</span></span></code></pre></div><blockquote><p>注意</p><ol><li>属性名表达式与简洁表示法，不能同时使用，会报错</li><li>属性名表达式如果是一个对象，默认情况下会自动将对象转为字符串<code>[object Object]</code></li></ol></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> foo </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> bar </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> baz </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">foo</span><span style="color:#F07178;">] } </span><span style="color:#676E95;font-style:italic;">// 报错</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">const foos = &#39;bar&#39;</span></span>
<span class="line"><span style="color:#F07178;">const baz = { [</span><span style="color:#BABED8;">foo</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> }</span><span style="color:#676E95;font-style:italic;"> // 正常运行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 属性名表达式为对象</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> keyA </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;"> };</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> keyB </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;"> };</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> myObject </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  [</span><span style="color:#BABED8;">keyA</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">valueA</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  [</span><span style="color:#BABED8;">keyB</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">valueB</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">myObject </span><span style="color:#676E95;font-style:italic;">// Object类型， 返回 { [object Object]: &#39;valueB&#39;}</span></span></code></pre></div><h3 id="类" tabindex="-1">类 <a class="header-anchor" href="#类" aria-label="Permalink to &quot;类&quot;">​</a></h3><p>ES6引入了类（class）的概念，使得面向对象的编程变得更加直观和易于理解。类是一种蓝图或模板，用于创建具有相同属性和方法的对象</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#FFCB6B;"> Book</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  constructor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">title</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> author</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">title</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> title</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    this.</span><span style="color:#BABED8;">author</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> author</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#F07178;">  getSummary</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#89DDFF;"> \`</span><span style="color:#C3E88D;">书名:</span><span style="color:#89DDFF;">\${</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">title</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">, 作者:</span><span style="color:#89DDFF;">\${</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">author</span><span style="color:#89DDFF;">}\`</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建 Book类的实例</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> book1 </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> Book</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">三体</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">刘慈欣</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(book1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getSummary</span><span style="color:#BABED8;">()) </span><span style="color:#676E95;font-style:italic;">// 书名:三体, 作者:刘慈欣</span></span></code></pre></div><h3 id="模块化" tabindex="-1">模块化 <a class="header-anchor" href="#模块化" aria-label="Permalink to &quot;模块化&quot;">​</a></h3><ul><li><p>模块化是一种组织和管理JavaScript代码的方法，它将代码拆分为独立的模块，每个模块都有自己的作用域和功能。这种方法有助于提高代码的可维护性、可重用性和可扩展性。</p></li><li><p>在ES6之前，JavaScript并没有原生的模块化支持。开发人员通常使用一些第三方库或模式来实现模块化，例如CommonJS和AMD。</p></li><li><p>然而，ES6引入了原生的模块化系统，通过import和export关键字来实现。下面是一个示例：</p></li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">  // utils.js</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 导出一个常量</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  export</span><span style="color:#C792EA;"> const</span><span style="color:#BABED8;"> PI </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 3.14</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 导出一个函数</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  export</span><span style="color:#C792EA;"> const</span><span style="color:#BABED8;"> area </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">r</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> PI </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> r </span><span style="color:#89DDFF;">**</span><span style="color:#F78C6C;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // main.js</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 导入常量和函数</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  import</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> PI</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> area</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;font-style:italic;"> from</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">./utils.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(PI</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">area</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//3.14 28.26</span></span></code></pre></div>`,106),e=[o];function t(c,r,y,D,F,i){return a(),n("div",null,e)}const A=s(p,[["render",t]]);export{E as __pageData,A as default};
