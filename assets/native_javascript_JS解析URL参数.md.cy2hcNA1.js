import{_ as s,o as a,c as n,a8 as l}from"./chunks/framework.QttzOlP4.js";const A=JSON.parse('{"title":"JS解析URL参数","description":"","frontmatter":{},"headers":[],"relativePath":"native/javascript/JS解析URL参数.md","filePath":"native/javascript/JS解析URL参数.md","lastUpdated":1700734386000}'),p={name:"native/javascript/JS解析URL参数.md"},o=l(`<h1 id="js解析url参数" tabindex="-1">JS解析URL参数 <a class="header-anchor" href="#js解析url参数" aria-label="Permalink to &quot;JS解析URL参数&quot;">​</a></h1><ul><li>方法一</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">https: //zhidao.baidu.com/question/1768422895052400180.html?fr=iks&amp;word=slice&amp;ie=gbk</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 提取url中的解析字符串</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#82AAFF;"> UrlParamHash</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">url</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> params</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> h</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> &#39;&#39;</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> hash</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;"> 1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&amp;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#BABED8;"> hash</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    h</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> hash</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#BABED8;">    params</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">h</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">]] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> h</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> params</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> params </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> UrlParamHash</span><span style="color:#BABED8;">(url)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 获取其中某一个参数</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> id </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> decodeURI</span><span style="color:#BABED8;">(params[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">unit</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">])</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>方法二</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 解析url字符串参数</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">https: //zhidao.baidu.com/question/1768422895052400180.html?fr=iks&amp;word=slice&amp;ie=gbk</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> location</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">href</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> n1 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> url</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //地址的总长度</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> n2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //取得=号的位置</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> id </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> decodeURI</span><span style="color:#BABED8;">(url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substr</span><span style="color:#BABED8;">(n2 </span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> n1 </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> n2))</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //从=号后面的内容</span></span></code></pre></div><ul><li>方法三</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">//获取url中的参数</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//name-查询的变量名</span></span>
<span class="line"><span style="color:#C792EA;">  function</span><span style="color:#82AAFF;"> getUrlParam</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">name</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> reg</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> RegExp</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(^|&amp;)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> +</span><span style="color:#BABED8;"> name</span><span style="color:#89DDFF;"> +</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">=([^&amp;]*)(&amp;|$)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //构造一个含有目标参数的正则表达式对象</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> r</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> window</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">location</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">search</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substr</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">reg</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //匹配目标参数</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">r</span><span style="color:#89DDFF;"> !=</span><span style="color:#89DDFF;"> null</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  {</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#82AAFF;"> decodeURIComponent</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">r</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#89DDFF;"> null;</span><span style="color:#676E95;font-style:italic;"> //返回参数值</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,7),t=[o];function e(c,r,y,F,D,i){return a(),n("div",null,t)}const E=s(p,[["render",e]]);export{A as __pageData,E as default};
