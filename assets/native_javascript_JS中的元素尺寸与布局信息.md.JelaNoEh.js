import{_ as e,o,c,a8 as d}from"./chunks/framework.QttzOlP4.js";const g=JSON.parse('{"title":"JS中的元素尺寸与布局信息","description":"","frontmatter":{},"headers":[],"relativePath":"native/javascript/JS中的元素尺寸与布局信息.md","filePath":"native/javascript/JS中的元素尺寸与布局信息.md","lastUpdated":1700734386000}'),t={name:"native/javascript/JS中的元素尺寸与布局信息.md"},p=d('<h1 id="js中的元素尺寸与布局信息" tabindex="-1">JS中的元素尺寸与布局信息 <a class="header-anchor" href="#js中的元素尺寸与布局信息" aria-label="Permalink to &quot;JS中的元素尺寸与布局信息&quot;">​</a></h1><ul><li><p><strong><code>Attributes</code></strong></p><p><code>offsetWidth</code>：代表了元素的宽度，包括边框和填充，但不是边距；</p><p><code>offsetHeight</code>：代表了元素的高度，包括边框和填充，但不是边距；</p><p><code>offsetTop</code>：代表了返回元素的上外缘距离最近采用定位父元素内壁的距离，如果父元素中没有采用定位的，则是获取上外边缘距离文档内壁的距离。</p><p><code>offsetLeft</code>：此属性和offsetTop的原理是一样的，只不过方位不同。</p><p><code>scrollTop</code>：设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离;</p><p><code>scrollLeft</code>：设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离；</p><p><code>scrollWidth</code>：返回元素的宽度（包括元素宽度、内边距和溢出尺寸，不包括边框和外边距），无溢出的情况，与<code>clientWidth</code>相同;</p><p><code>scrollHeigh</code>：返回元素的高度（包括元素高度、内边距和溢出尺寸，不包括边框和外边距），无溢出的情况，与clientHeight相同；</p></li><li><p><strong><code>style</code></strong></p><p><code>style.width</code>：返回元素的宽度（包括元素宽度，不包括内边距、边框和外边距）；</p><p><code>style.height</code>：返回元素的高度（包括元素高度，不包括内边距、边框和外边距）；</p><p><code>clientWidth</code>：返回元素的宽度（包括元素宽度、内边距，不包括边框和外边距）；</p><p><code>clientHeight</code>：返回元素的高度（包括元素高度、内边距，不包括边框和外边距）；</p></li><li><p><strong><code>鼠标事件触发</code></strong></p><p><code>clientX</code>：鼠标相对于浏览器（这里说的是浏览器的有效区域）左上角x轴的坐标； 不随滚动条滚动而改变；</p><p><code>clientY</code>： 鼠标相对于浏览器（这里说的是浏览器的有效区域）左上角y轴的坐标； 不随滚动条滚动而改变；</p><p><code>pageX</code>：鼠标相对于浏览器（这里说的是浏览器的有效区域）左上角x轴的坐标； 随滚动条滚动而改变；</p><p><code>pageY</code>：鼠标相对于浏览器（这里说的是浏览器的有效区域）左上角y轴的坐标； 随滚动条滚动而改变；</p><p><code>screenX</code>：鼠标相对于显示器屏幕左上角x轴的坐标；</p><p><code>screenY</code>：鼠标相对于显示器屏幕左上角y轴的坐标；</p><p><code>offsetX</code>：鼠标相对于事件源左上角X轴的坐标;</p><p><code>offsetY</code>：鼠标相对于事件源左上角Y轴的坐标;</p></li><li><p><strong><code>网页部分</code></strong></p><p>网页可见区域宽： <code>document.body.clientWidth</code>;</p><p>网页可见区域高：<code>document.body.clientHeight</code>;</p><p>网页可见区域宽： <code>document.body.offsetWidth</code>(包括边线的宽);</p><p>网页可见区域高： <code>document.body.offsetHeight</code> (包括边线的宽);</p><p>网页正文全文宽： <code>document.body.scrollWidth</code>;</p><p>网页正文全文高：<code>document.body.scrollHeight</code>;</p><p>网页被卷去的高： <code>document.body.scrollTop</code>;</p><p>网页被卷去的左： <code>document.body.scrollLeft</code>;</p><p>网页正文部分上： <code>window.screenTop</code>;</p><p>网页正文部分左： <code>window.screenLeft</code>;</p><p>屏幕分辨率的高： <code>window.screen.height</code>;</p><p>屏幕分辨率的宽： <code>window.screen.width</code>;</p><p>屏幕可用工作区高度： <code>window.screen.availHeight</code>;</p><p>屏幕可用工作区宽度：<code>window.screen.availWidth</code>;</p></li></ul><img src="https://any-cross-1252921383.cos.ap-hongkong.myqcloud.com/test-image/js-size.png" alt="image.png">',3),s=[p];function i(n,a,l,r,_,h){return o(),c("div",null,s)}const m=e(t,[["render",i]]);export{g as __pageData,m as default};
