import{_ as n}from"./chunks/CustomLink.YXjObPrq.js";import{_ as a,o as l,c as p,I as e,R as o,a7 as t,a8 as c}from"./chunks/framework.AonOEUEq.js";const E=JSON.parse('{"title":"Keep-Alive","description":"","frontmatter":{},"headers":[],"relativePath":"frame/vue/keepAlive.md","filePath":"frame/vue/keepAlive.md","lastUpdated":1701934818000}'),F={name:"frame/vue/keepAlive.md"},r=o(`<h1 id="keep-alive" tabindex="-1">Keep-Alive <a class="header-anchor" href="#keep-alive" aria-label="Permalink to &quot;Keep-Alive&quot;">​</a></h1><p><strong>定义</strong> keepAlive是一个内置组件，它的功能是在多个组件间动态切换时缓存被移除的组件实例，即使被包含的组件保留状态，或者避免重新渲染。</p><p><strong>用法</strong><code>keep-alive</code>用法</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 被keep-alive包含的组件会被缓存 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">keep-alive</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;/</span><span style="color:#F07178;">keep-alive</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>被<code>keep-alive</code>包含的组件不会被再次初始化，也就意味着<strong>不会重走生命周期函数</strong></p><p>但有时候希望缓存的组件能够再次进行渲染，针对这个问题， 在<code>Vue</code>中， 被<code>keep-alive</code>包含的组件， 会多出两个生命周期钩子:<code>activated</code>和<code>deactivated</code></p><ul><li><code>activated</code>: 当<code>keep-alive</code>包含的组件再次渲染的时候触发</li><li><code>deactivated</code>: 当<code>keep-alive</code> 包含的组件销毁的时候触发</li></ul><p><strong>参数</strong><code>keep-alive</code>参数类型：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#FFCB6B;"> KeepAliveProps</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 如果指定，则只有与 \`include\` 名称</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 匹配的组件才会被缓存。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#F07178;">  include</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> MatchPattern</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 任何名称与 \`exclude\`</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 匹配的组件都不会被缓存。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#F07178;">  exclude</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> MatchPattern</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 最多可以缓存多少组件实例。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#F07178;">  max</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#FFCB6B;"> MatchPattern</span><span style="color:#89DDFF;"> =</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> RegExp</span><span style="color:#89DDFF;"> |</span><span style="color:#BABED8;"> (</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> RegExp</span><span style="color:#BABED8;">)[]</span></span></code></pre></div><p>keepAlive支持传入三个可选参数， 分别是 <code>include</code>、<code>exclude</code>、<code>max</code></p><p><code>keepAlive</code> 默认会缓存内部的所有组件实例, 但是可以通过 <code>include</code> 和 <code>exclude</code> 来定制该行为</p><ul><li><code>include</code> 支持传入 字符串、数组或者正则表达式， 名称匹配的组件<strong>会被缓存</strong></li></ul><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 字符串 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">keep-alive</span><span style="color:#C792EA;"> include</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Child1,Child2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">component</span><span style="color:#C792EA;"> :is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">componentName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;/</span><span style="color:#F07178;">keep-alive</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 正则 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">keep-alive</span><span style="color:#C792EA;"> :include</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/Child1|Child2/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">component</span><span style="color:#C792EA;"> :is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">componentName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;/</span><span style="color:#F07178;">keep-alive</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 数组 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">keep-alive</span><span style="color:#C792EA;"> :include</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[&#39;Child1&#39;, &#39;Child2&#39;]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">component</span><span style="color:#C792EA;"> :is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">componentName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;/</span><span style="color:#F07178;">keep-alive</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li><code>exclude</code> 支持传入 字符串、数组、或者正则表达式， 名称匹配的组件则<strong>不会被缓存</strong></li></ul><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 字符串 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">keep-alive</span><span style="color:#C792EA;"> exclude</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Child1,Child2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">component</span><span style="color:#C792EA;"> :is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">componentName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;/</span><span style="color:#F07178;">keep-alive</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 正则 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">keep-alive</span><span style="color:#C792EA;"> :exclude</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/Child1|Child2/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">component</span><span style="color:#C792EA;"> :is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">componentName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;/</span><span style="color:#F07178;">keep-alive</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 数组 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">keep-alive</span><span style="color:#C792EA;"> :exclude</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[&#39;Child1&#39;, &#39;Child2&#39;]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">component</span><span style="color:#C792EA;"> :is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">componentName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;/</span><span style="color:#F07178;">keep-alive</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li><code>max</code> 只支持传入数字， 表示最大支持缓存页面个数</li></ul><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">keep-alive</span><span style="color:#C792EA;"> :max</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">component</span><span style="color:#C792EA;"> :is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">componentName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;/</span><span style="color:#F07178;">keep-alive</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p><strong>原理</strong><code>keep-alive</code>组件的实现原理是将被缓存的组件实例存储到一个缓存对象中，当需要重新渲染这个组件时，会从缓存中获取到之前的实例， 并将其重新挂载在DOM上。</p><p>从<code>Vue</code>的渲染看<code>keep-alive</code>的渲染</p><img src="`+t+'" alt="Vue的渲染"><p><code>Vue</code>的渲染是从图中<code>render</code>阶段开始的</p><p>但keep-alive的渲染是在patch阶段(构建组件树(虚拟DOM树)， 并将<code>VNode</code>转换成真正<code>DOM</code>节点的过程）</p><p>首次加载被包裹组件时，<code>vnode.componentInstance</code>的值是<code>undefined</code> 因为<code>keep-alive</code>组件作为父组件，它的render函数会优先于被包裹的组件先执行，后面逻辑不执行；</p><p>再次访问被包裹组件时， <code>vnode.componentInstance</code>的值就是已经缓存的组件的实例，之后会把上一次的DOM插入到父元素中</p><img src="'+c+'" alt="keep-alive组件渲染流程"><h2 id="引用" tabindex="-1">引用 <a class="header-anchor" href="#引用" aria-label="Permalink to &quot;引用&quot;">​</a></h2>',26);function D(y,i,d,u,g,m){const s=n;return l(),p("div",null,[r,e(s,{title:"vue3中keepalive源码",href:"https://github.com/vuejs/core/blob/main/packages/runtime-core/src/components/KeepAlive.ts"})])}const h=a(F,[["render",D]]);export{E as __pageData,h as default};
