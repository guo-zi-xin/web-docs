import{_ as s,o as a,c as n,a8 as o}from"./chunks/framework.Qf1t7Yq5.js";const A=JSON.parse('{"title":"数组常用的方法","description":"","frontmatter":{},"headers":[],"relativePath":"native/javascript/常用的数组的方法.md","filePath":"native/javascript/常用的数组的方法.md","lastUpdated":1709017294000}'),l={name:"native/javascript/常用的数组的方法.md"},p=o(`<h1 id="数组常用的方法" tabindex="-1">数组常用的方法 <a class="header-anchor" href="#数组常用的方法" aria-label="Permalink to &quot;数组常用的方法&quot;">​</a></h1><h3 id="array-prototype-indexof" tabindex="-1"><code>Array.prototype.indexOf()</code> <a class="header-anchor" href="#array-prototype-indexof" aria-label="Permalink to &quot;\`Array.prototype.indexOf()\`&quot;">​</a></h3><p>该方法返回数组中第一次出现给定元素的下标，如果不存在则返回 <code>-1</code>。</p><p>可以传两个参数 第一个参数为需要查找的元素， 第二个是可选参数， 表示开始搜索的索引(从0开始)， 会转换为整数</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 2 满足条件的下标</span></span>
<span class="line"><span style="color:#BABED8;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">6</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// -1 找不到则返回 -1  </span></span>
<span class="line"><span style="color:#BABED8;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">，</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// -1 满足条件的下标, 从下标为3的元素开始查询 没有找到返回-1</span></span></code></pre></div><h3 id="array-prototype-map" tabindex="-1"><code>Array.prototype.map()</code> <a class="header-anchor" href="#array-prototype-map" aria-label="Permalink to &quot;\`Array.prototype.map()\`&quot;">​</a></h3><p>该方法是将数组中的每个元素调用一个提供的函数，结果作为一个新的数组返回，并没有改变原来的数组</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> newArr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">x</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  //arr= [1, 2, 3, 4, 5]   原数组保持不变</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  //newArr = [2, 4, 6, 8, 10] 返回新数组</span></span></code></pre></div><h3 id="array-prototype-foreach" tabindex="-1"><code>Array.prototype.forEach()</code> <a class="header-anchor" href="#array-prototype-foreach" aria-label="Permalink to &quot;\`Array.prototype.forEach()\`&quot;">​</a></h3><p>该方法是将数组中的每个元素执行传进提供的函数，没有返回值，直接改变原数组，注意和map方法区分</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">  num</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">x</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // arr = [2, 4, 6, 8, 10]  数组改变,注意和map区分</span></span></code></pre></div><h3 id="array-prototype-filter" tabindex="-1"><code>Array.prototype.filter()</code> <a class="header-anchor" href="#array-prototype-filter" aria-label="Permalink to &quot;\`Array.prototype.filter()\`&quot;">​</a></h3><p>该方法是将所有元素进行判断，将满足条件的元素生成一个新数组返回</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> isBigEnough </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> value </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F78C6C;"> 3</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> newArr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#BABED8;">(isBigEnough )</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  //newNum = [3, 4, 5] 满足条件的元素返回为一个新的数组</span></span></code></pre></div><h3 id="array-prototype-find" tabindex="-1"><code>Array.prototype.find()</code> <a class="header-anchor" href="#array-prototype-find" aria-label="Permalink to &quot;\`Array.prototype.find()\`&quot;">​</a></h3><p>该方法是将所有元素进行判断，并且返回符合条件的第一个元素的值， 否则返回<code>undefined</code></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> isBigEnough </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> value </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F78C6C;"> 3</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> newArr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">find</span><span style="color:#BABED8;">(isBigEnough) </span><span style="color:#676E95;font-style:italic;">// 3 满足条件的第一个元素</span></span></code></pre></div><h3 id="array-prototype-every" tabindex="-1"><code>Array.prototype.every()</code> <a class="header-anchor" href="#array-prototype-every" aria-label="Permalink to &quot;\`Array.prototype.every()\`&quot;">​</a></h3><p>该方法是将所有元素进行判断，如果所有的元素都符合判断条件，则返回<code>true</code> 否则返回<code>false</code></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> isLessThan4 </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> value </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;"> 4</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> isLessThan6 </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> value </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;"> 6</span></span>
<span class="line"><span style="color:#BABED8;">  arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">every</span><span style="color:#BABED8;">(isLessThan4 ) </span><span style="color:#676E95;font-style:italic;">//false</span></span>
<span class="line"><span style="color:#BABED8;">  arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">every</span><span style="color:#BABED8;">(isLessThan6 ) </span><span style="color:#676E95;font-style:italic;">//true</span></span></code></pre></div><h3 id="array-prototype-some" tabindex="-1"><code>Array.prototype.some()</code> <a class="header-anchor" href="#array-prototype-some" aria-label="Permalink to &quot;\`Array.prototype.some()\`&quot;">​</a></h3><p>该方法将所有元素进行判断， 如果存在至少一个元素符合判断条件，则返回<code>true</code>, 否则返回<code>false</code></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> isLessThan4 </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> value </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;"> 4</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> isLessThan6 </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> value </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F78C6C;"> 6</span></span>
<span class="line"><span style="color:#BABED8;">  arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">some</span><span style="color:#BABED8;">(isLessThan4 ) </span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#BABED8;">  arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">some</span><span style="color:#BABED8;">(isLessThan6) </span><span style="color:#676E95;font-style:italic;">//false</span></span></code></pre></div><h3 id="array-prototype-reduce-与-array-prototype-reduceright" tabindex="-1"><code>Array.prototype.reduce()</code>与 <code>Array.prototype.reduceRight()</code> <a class="header-anchor" href="#array-prototype-reduce-与-array-prototype-reduceright" aria-label="Permalink to &quot;\`Array.prototype.reduce()\`与 \`Array.prototype.reduceRight()\`&quot;">​</a></h3><p>该方法是所有元素调用返回函数， 返回值为最后结果， 传入的类型必须为函数类型</p><p>两者区别是<code>Array.prototype.reduceRight()</code>方法从右向左操作的</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> add </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> b</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> b</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> sum </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reduce</span><span style="color:#BABED8;">(add)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//sum = 15  相当于累加的效果</span></span></code></pre></div><h3 id="array-prototype-pop" tabindex="-1"><code>Array.prototype.pop()</code> <a class="header-anchor" href="#array-prototype-pop" aria-label="Permalink to &quot;\`Array.prototype.pop()\`&quot;">​</a></h3><p>该方法是在数组后面删除最后一个元素，并返回删除的元素，该方法改变了数组的长度</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#BABED8;">()) </span><span style="color:#676E95;font-style:italic;">// 5 表示被删除的元素</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr) </span><span style="color:#676E95;font-style:italic;">// [1,2,3,4]</span></span></code></pre></div><h3 id="array-prototype-push" tabindex="-1"><code>Array.prototype.push()</code> <a class="header-anchor" href="#array-prototype-push" aria-label="Permalink to &quot;\`Array.prototype.push()\`&quot;">​</a></h3><p>该方法是在数组最后一个元素后面添加一个或多个元素， 返回变化后数组长度，并且更改原数组</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 5 新数组的长度</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr) </span><span style="color:#676E95;font-style:italic;">// [1,2,3,4,5]</span></span></code></pre></div><h3 id="array-prototype-shift" tabindex="-1"><code>Array.prototype.shift()</code> <a class="header-anchor" href="#array-prototype-shift" aria-label="Permalink to &quot;\`Array.prototype.shift()\`&quot;">​</a></h3><p>该方法是会删除掉数组的第一项， 返回数组删除的元素， 并且改变原数组</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shift</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shift</span><span style="color:#BABED8;">()) </span><span style="color:#676E95;font-style:italic;">// 1 返回的是删除的那个元素</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr) </span><span style="color:#676E95;font-style:italic;">// [2,3,4,5]</span></span></code></pre></div><h3 id="array-prototype-unshift" tabindex="-1"><code>Array.prototype.unshift()</code> <a class="header-anchor" href="#array-prototype-unshift" aria-label="Permalink to &quot;\`Array.prototype.unshift()\`&quot;">​</a></h3><p>该方法是将一个或者多个元素添加到数组的开头， 返回新数组的长度， 改变原来的数组</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">  arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unshift</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 7</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr) </span><span style="color:#676E95;font-style:italic;">//[6, 7, 2, 3, 4, 5]</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length) </span><span style="color:#676E95;font-style:italic;">//7</span></span></code></pre></div><h3 id="array-isarray" tabindex="-1"><code>Array.isArray()</code> <a class="header-anchor" href="#array-isarray" aria-label="Permalink to &quot;\`Array.isArray()\`&quot;">​</a></h3><p>该方法是判断目标元素是否为数组，返回布尔值， 这是属于数组原型的方法</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#BABED8;">(arr)) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1111</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// false</span></span></code></pre></div><h3 id="array-prototype-concat" tabindex="-1"><code>Array.prototype.concat()</code> <a class="header-anchor" href="#array-prototype-concat" aria-label="Permalink to &quot;\`Array.prototype.concat()\`&quot;">​</a></h3><p>该方法可以讲多个数组拼接成一个数组</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">7</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> newArr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#BABED8;">(arr2)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr) </span><span style="color:#676E95;font-style:italic;">// [1,2,3,4,5,6,7]</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>在<code>ES6</code>中 我们可以使用解构的方式也可以合并两个或者多个数组：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">7</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> newArr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ...</span><span style="color:#BABED8;">arr2]</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr) </span><span style="color:#676E95;font-style:italic;">// [1,2,3,4,5,6,7]</span></span></code></pre></div></div><h3 id="array-prototype-join" tabindex="-1"><code>Array.prototype.join()</code> <a class="header-anchor" href="#array-prototype-join" aria-label="Permalink to &quot;\`Array.prototype.join()\`&quot;">​</a></h3><p>该方法是将数组中的元素拼接成字符串，拼接格式为join函数传入的参数, 不改变原数组， 并且没有参数时默认为逗号<code>,</code>连接</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// &#39;1,2,3,4&#39;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// &#39;1234&#39;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// &#39;1#2#3#4&#39;</span></span></code></pre></div><h3 id="array-prototype-tostring" tabindex="-1"><code>Array.prototype.toString()</code> <a class="header-anchor" href="#array-prototype-tostring" aria-label="Permalink to &quot;\`Array.prototype.toString()\`&quot;">​</a></h3><p>该方法也是将数组转化为字符串，与<code>join</code>方法不同的是， 拼接格式与函数参数无关，都是以逗号<code>,</code>拼接</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#BABED8;">()) </span><span style="color:#676E95;font-style:italic;">// &#39;1,2,3,4&#39;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">//&#39;1,2,3,4&#39;</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">题外话</p><p><code>toString()</code>方法和 <code>String(element)</code> 都是将元素转变为字符串的方法, 但两者又有一些地方有差别：</p><ul><li><p><strong>存在性检查</strong></p><ul><li>在使用<code>toString()</code>方法时， 如果调用方法的元素是<code>null</code>、<code>undefined</code>时， 会返回报错，因为这些类型的数据没有<code>toString()</code>方法；</li><li>而在使用<code>String(element)</code>方法时候， 如果传入的元素是<code>null</code>、<code>undefined</code>、<code>object</code>, 则不会返 回报错 并且返回的结果是字符串的<code>&#39;null&#39;</code>、<code>&#39;undefined&#39;</code>, <code>object</code>返回的是<code>&#39;[object Object]&#39;</code></li></ul></li><li><p><strong>原始值转换</strong></p><ul><li>对于原始值（例如数字、布尔值等基本数据类型），它们有各自的 toString() 方法，可以被直接调用</li><li>使用<code>String(element)</code> 时，会根据规则隐式调用原始值的 <code>toString()</code> 方法</li></ul></li></ul></div><h3 id="array-prototype-slice" tabindex="-1"><code>Array.prototype.slice()</code> <a class="header-anchor" href="#array-prototype-slice" aria-label="Permalink to &quot;\`Array.prototype.slice()\`&quot;">​</a></h3><p>该方法传入一个数字， 表示从传入的数字为要处理的元素的下标， 并把小于这个下标对应的元素的元素都删除掉，如果传入负数，则以最后一项的下标为-1开始计算，并且删除元素 不会改变原数组</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// [3,4,5]</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// [4,5] 元素5对应的下标为 -1 元素4对应的下标为-2 以此类推</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr) </span><span style="color:#676E95;font-style:italic;">// [1,2,3,4,5]</span></span></code></pre></div><h3 id="array-prototype-splice" tabindex="-1"><code>Array.prototype.splice()</code> <a class="header-anchor" href="#array-prototype-splice" aria-label="Permalink to &quot;\`Array.prototype.splice()\`&quot;">​</a></h3><p>该方法通过<strong>移除</strong>或者<strong>替换</strong>已存在的元素和/或添加新元素，并且就地改变一个数组的内容。</p><p>最多只支持三个参数</p><ul><li><p>只传入一个参数 这个参数代表下标， 表示替换掉这个下标元素后面的元素为空，其实也是删除功能、</p></li><li><p>传入两个参数 第一个参数代表下标， 第二个元素代表要删除的数量</p></li><li><p>传入三个参数 第一个参数代表下标， 第二个元素代表要删除的数量， 第三个以及后面的多个参数表示从第一个参数的值的位置开始被插入的元素</p></li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// [2,3,4,5]  表示删除掉下标为1的元素后面的元素,         原数组变更为 [1]</span></span>
<span class="line"><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// [] // 表示从下标为1的元素开始删除，删除0个元素,      原数组变更为[1,2,3,4,5]</span></span>
<span class="line"><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// [2] 表示从下标为1的元素开始删除,删除一个元素,        原数组变更为[1,3,4,5]</span></span>
<span class="line"><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 66</span><span style="color:#BABED8;">)  </span><span style="color:#676E95;font-style:italic;">// [2] 表示从下标为1的元素开始替换 替换一个元素,   原数组变更为[1,66,3,4,5]</span></span></code></pre></div><h3 id="array-prototype-includes" tabindex="-1"><code>Array.prototype.includes()</code> <a class="header-anchor" href="#array-prototype-includes" aria-label="Permalink to &quot;\`Array.prototype.includes()\`&quot;">​</a></h3><p>该方法用来判断一个数组是否包含一个指定的值，如果有则返回<code>true</code>， 否则返回<code>false</code></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">66</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// false</span></span></code></pre></div><h3 id="array-prototype-flat" tabindex="-1"><code>Array.prototype.flat()</code> <a class="header-anchor" href="#array-prototype-flat" aria-label="Permalink to &quot;\`Array.prototype.flat()\`&quot;">​</a></h3><p>方法创建一个新的数组，并根据指定深度递归地将所有子数组元素拼接到新的数组中。</p><p>可以传一个可选参数 指定要提取嵌套数组的结构深度，不传值默认值为 <code>1</code>。</p><p><strong>Infinity</strong> 传入这个参数表示提取嵌套数组的所有的结构深度</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 2 满足条件的下标</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">6</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// -1 找不到则返回 -1  </span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">，</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// -1 满足条件的下标, 从下标为3的元素开始查询 没有找到返回-1</span></span></code></pre></div><h3 id="array-prototype-from" tabindex="-1"><code>Array.prototype.from()</code> <a class="header-anchor" href="#array-prototype-from" aria-label="Permalink to &quot;\`Array.prototype.from()\`&quot;">​</a></h3><p>该方法从<strong>可迭代对象</strong>或<strong>类数组对象</strong>创建一个新的浅拷贝的数组实例。</p><ul><li><p><strong>可迭代对象</strong>: 例如 <code>Map</code>和 <code>Set</code> 对象， 或者对象是不可迭代的</p></li><li><p><strong>类数组对象</strong>: 表示带有<code>length</code>属性和索引元素的对象(函数的<code>arguments</code>参数也是累数组对象)</p></li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">1234</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> setMap </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> Set</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;">])</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> newMap </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> Map</span><span style="color:#BABED8;">([[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">[</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">[</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">6</span><span style="color:#BABED8;">]])</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">form</span><span style="color:#BABED8;">(arr)) </span><span style="color:#676E95;font-style:italic;">// [1,2,3,4,5] </span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">form</span><span style="color:#BABED8;">(str)) </span><span style="color:#676E95;font-style:italic;">// [&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;]</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">form</span><span style="color:#BABED8;">(setMap)) </span><span style="color:#676E95;font-style:italic;">// [1,2,3,4,5] </span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">form</span><span style="color:#BABED8;">(newMap)) </span><span style="color:#676E95;font-style:italic;">// [[1,2], [3,4],[5,6]]</span></span></code></pre></div><p><code>Array.form()</code>还支持传入箭头函数，可以进行函数操作：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 使用箭头函数作为映射函数去操作多个元素</span></span>
<span class="line"><span style="color:#BABED8;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">x</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> x)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [2, 4, 6]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 生成一个数字序列。因为数组在每个位置都使用 \`undefined\` 初始化，下面的 \`v\` 值将是 \`undefined\`</span></span>
<span class="line"><span style="color:#BABED8;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> length</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;"> },</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">v</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> i</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> i)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [0, 1, 2, 3, 4]</span></span></code></pre></div><h4 id="序列生成器-range" tabindex="-1">序列生成器(range) <a class="header-anchor" href="#序列生成器-range" aria-label="Permalink to &quot;序列生成器(range)&quot;">​</a></h4><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 序列生成器函数（通常称为“range”，例如 Clojure、PHP 等）</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> range </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">start</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> stop</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> step</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> length</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> (stop </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> start) </span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;"> step </span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;"> },</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">_</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> i</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> start </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> step)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 生成的数字范围 0..4</span></span>
<span class="line"><span style="color:#82AAFF;">range</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [0, 1, 2, 3, 4]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 生成的数字范围 1..10，步长为 2</span></span>
<span class="line"><span style="color:#82AAFF;">range</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 10</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [1, 3, 5, 7, 9]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 使用 Array.from 生成字母表，并将其序列排序</span></span>
<span class="line"><span style="color:#82AAFF;">range</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">charCodeAt</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">Z</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">charCodeAt</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">x</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  String</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromCharCode</span><span style="color:#BABED8;">(x)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//  &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;]</span></span></code></pre></div><h3 id="array-prototype-flatmap" tabindex="-1"><code>Array.prototype.flatMap()</code> <a class="header-anchor" href="#array-prototype-flatmap" aria-label="Permalink to &quot;\`Array.prototype.flatMap()\`&quot;">​</a></h3><p>该方法对数组中的每个元素应用给定的回调函数，然后将结果展开一级，返回一个新数组。它等价于在调用 <code>map()</code> 方法后再调用深度为 <code>1</code> 的 <code>flat()</code> 方法（<code>arr.map(...args).flat()</code>），但比分别调用这两个方法稍微更高效一些。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">10</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 筛选出奇数项， 并且获取他们各自的平方的数组</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> newArr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flatMap</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> item </span><span style="color:#89DDFF;">%</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;"> !==</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;"> ?</span><span style="color:#BABED8;"> [item </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> item]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [])</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 返回 [1,9,25,49,81]</span></span></code></pre></div>`,80),e=[p];function t(r,c,y,F,D,i){return a(),n("div",null,e)}const C=s(l,[["render",t]]);export{A as __pageData,C as default};
