import{_ as s,o as n,c as a,R as l}from"./chunks/framework.AonOEUEq.js";const A=JSON.parse('{"title":"搜索插入位置","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/搜索插入位置.md","filePath":"algorithm/搜索插入位置.md","lastUpdated":1698662919000}'),p={name:"algorithm/搜索插入位置.md"},o=l(`<h1 id="搜索插入位置" tabindex="-1">搜索插入位置 <a class="header-anchor" href="#搜索插入位置" aria-label="Permalink to &quot;搜索插入位置&quot;">​</a></h1><hr><p><strong>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引</strong><strong>如果目标值不存在于数组中，返回它将会被按顺序插入的位置</strong></p><ul><li>示例1</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> nums </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 6</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> target </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 5</span></span>
<span class="line"><span style="color:#BABED8;">输出 </span><span style="color:#F78C6C;">2</span></span></code></pre></div><ul><li>示例2</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> nums </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;">  [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 6</span><span style="color:#BABED8;">] target </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 2</span></span>
<span class="line"><span style="color:#BABED8;">输出 </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;"> （数组中不包含2， 插入进去排序后下标为1）</span></span></code></pre></div><ul><li>示例3</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> nums </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 6</span><span style="color:#BABED8;">] target </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 7</span></span>
<span class="line"><span style="color:#BABED8;">输出 </span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;"> （数组中不包含2， 插入进去排序后下标为4）</span></span></code></pre></div><p>求解</p><ul><li>先将目标值放在数组中，进行去重和排序， 再进行判断下标</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> searchInsert </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">nums</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> target</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;">):</span><span style="color:#FFCB6B;"> number</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    nums</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">target</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> newNum</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#F07178;">[] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">new</span><span style="color:#82AAFF;"> Set</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">nums</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sort</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> b</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#BABED8;"> a</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> b</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> numIndex</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    for</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> k</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> k</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;"> newNum</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> k</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">newNum</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">k</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">===</span><span style="color:#BABED8;"> target</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        numIndex</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> k</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#BABED8;"> k</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> numIndex</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> target1 </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">  5</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> target2 </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">  2</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> target3 </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">  7</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">searchInsert</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 6</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> target1))</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">searchInsert</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 6</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> target2))</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">searchInsert</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 6</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> target3))</span></span></code></pre></div><ul><li>使用二分法查找</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> searchInsert </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">nums</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> target</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;">):</span><span style="color:#FFCB6B;"> number</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> nums</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> left</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;"> =</span><span style="color:#F78C6C;"> 0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> right</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> ans</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">  number</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    while</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">left</span><span style="color:#89DDFF;"> &lt;=</span><span style="color:#BABED8;"> right</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">        let</span><span style="color:#BABED8;"> mid</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;"> =</span><span style="color:#F07178;"> ((</span><span style="color:#BABED8;">right</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> left</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#F78C6C;"> 1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> left</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">target</span><span style="color:#89DDFF;"> &lt;=</span><span style="color:#BABED8;"> nums</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">mid</span><span style="color:#F07178;">]) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">            ans</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> mid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">            right</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> mid</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">            left</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> mid</span><span style="color:#89DDFF;"> +</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> ans</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,14),e=[o];function t(c,r,F,y,D,B){return n(),a("div",null,e)}const C=s(p,[["render",t]]);export{A as __pageData,C as default};
