import{_ as s,o as a,c as n,a8 as l}from"./chunks/framework.QttzOlP4.js";const g=JSON.parse('{"title":"git pull 与 git fetch区别","description":"","frontmatter":{},"headers":[],"relativePath":"tools/git/git-pull与git-fetch区别.md","filePath":"tools/git/git-pull与git-fetch区别.md","lastUpdated":1701688734000}'),p={name:"tools/git/git-pull与git-fetch区别.md"},e=l(`<h1 id="git-pull-与-git-fetch区别" tabindex="-1">git pull 与 git fetch区别 <a class="header-anchor" href="#git-pull-与-git-fetch区别" aria-label="Permalink to &quot;git pull 与 git fetch区别&quot;">​</a></h1><h3 id="_1、简单概括" tabindex="-1">1、简单概括 <a class="header-anchor" href="#_1、简单概括" aria-label="Permalink to &quot;1、简单概括&quot;">​</a></h3><p>先用一张图来理一下<code>git fetch</code>和<code>git pull</code>的概念：</p><img src="https://any-cross-1252921383.cos.ap-hongkong.myqcloud.com/test-image/git-pull-git-fetch.jpg" alt="image"><p>可以简单的概括为：</p><p><code>git fetch</code>是将远程主机的最新内容拉到本地，用户在检查了以后决定是否合并到工作本机分支中。</p><p>而<code>git pull</code> 则是将远程主机的最新内容拉下来后直接合并，即：<code>git pull = git fetch + git merge</code>，这样可能会产生冲突，需要手动解决。</p><p>下面我们来详细了解一下<code>git fetch</code> 和<code>git pull</code> 的用法。</p><h3 id="_2、分支的概念" tabindex="-1">2、分支的概念 <a class="header-anchor" href="#_2、分支的概念" aria-label="Permalink to &quot;2、分支的概念&quot;">​</a></h3><p>在介绍两种方法之前，我们需要先了解一下分支的概念： 分支是用来标记特定代码的提交，每一个分支通过SHA1sum值来标识，所以对分支的操作是轻量级的，你改变的仅仅是SHA1sum值。</p><p>如下图所示，当前有2个分支，A,C,E属于master分支，而A,B，D,F属于dev分支。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#BABED8;">A</span><span style="color:#89DDFF;">----</span><span style="color:#BABED8;">C</span><span style="color:#89DDFF;">----</span><span style="color:#BABED8;">E（master）</span></span>
<span class="line"><span style="color:#BABED8;"> \\</span></span>
<span class="line"><span style="color:#BABED8;">  B</span><span style="color:#89DDFF;">---</span><span style="color:#BABED8;">D</span><span style="color:#89DDFF;">---</span><span style="color:#82AAFF;">F</span><span style="color:#BABED8;">(dev)</span></span></code></pre></div><p>它们的head指针分别指向E和F，对上述做如下操作：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> checkout</span><span style="color:#C3E88D;"> master</span><span style="color:#C3E88D;">  //选择or切换到master分支</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> merge</span><span style="color:#C3E88D;"> dev</span><span style="color:#C3E88D;">        //将dev分支合并到当前分支</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">master</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">中</span></span></code></pre></div><p>合并完成后：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#BABED8;">A</span><span style="color:#89DDFF;">---</span><span style="color:#BABED8;">C</span><span style="color:#89DDFF;">---</span><span style="color:#BABED8;">E</span><span style="color:#89DDFF;">---</span><span style="color:#82AAFF;">G</span><span style="color:#BABED8;">(master)</span></span>
<span class="line"><span style="color:#BABED8;"> \\         </span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#BABED8;">  B</span><span style="color:#89DDFF;">---</span><span style="color:#BABED8;">D</span><span style="color:#89DDFF;">---</span><span style="color:#BABED8;">F（dev）</span></span></code></pre></div><p>现在ABCDEFG属于master，G是一次合并后的结果，是将E和Ｆ的代码合并后的结果，可能会出现冲突。而ABDF依然属于dev分支。可以继续在dev的分支上进行开发:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#BABED8;">A</span><span style="color:#89DDFF;">---</span><span style="color:#BABED8;">C</span><span style="color:#89DDFF;">---</span><span style="color:#BABED8;">E</span><span style="color:#89DDFF;">---</span><span style="color:#BABED8;">G</span><span style="color:#89DDFF;">---</span><span style="color:#82AAFF;">H</span><span style="color:#BABED8;">(master)</span></span>
<span class="line"><span style="color:#BABED8;"> \\         </span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#BABED8;">  B</span><span style="color:#89DDFF;">---</span><span style="color:#BABED8;">D</span><span style="color:#89DDFF;">---</span><span style="color:#BABED8;">F</span><span style="color:#89DDFF;">---</span><span style="color:#BABED8;">I（dev）</span></span></code></pre></div><p>分支（branch）的基本操作：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> branch</span><span style="color:#C3E88D;"> //查看本地所有分支</span><span style="color:#BABED8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> branch</span><span style="color:#C3E88D;"> -r</span><span style="color:#C3E88D;"> //查看远程所有分支</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> branch</span><span style="color:#C3E88D;"> -a</span><span style="color:#C3E88D;"> //查看本地和远程的所有分支</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> branch</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">branchnam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;"> //新建分支</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> branch</span><span style="color:#C3E88D;"> -d</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">branchnam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;"> //删除本地分支</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> branch</span><span style="color:#C3E88D;"> -d</span><span style="color:#C3E88D;"> -r</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">branchnam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;"> //删除远程分支，删除后还需推送到服务器</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> push</span><span style="color:#C3E88D;"> origin:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">branchnam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">  //删除后推送至服务器</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> branch</span><span style="color:#C3E88D;"> -m</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">oldbranc</span><span style="color:#BABED8;">h</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">newbranc</span><span style="color:#BABED8;">h</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;"> //重命名本地分支</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">/**</span></span>
<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#BABED8;">重命名远程分支：</span></span>
<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#BABED8;">1、删除远程待修改分支</span></span>
<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#BABED8;">2、push本地新分支到远程服务器</span></span>
<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#BABED8;">/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">//git中一些选项解释:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">-d</span></span>
<span class="line"><span style="color:#FFCB6B;">--delete：删除</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">-D</span></span>
<span class="line"><span style="color:#FFCB6B;">--delete</span><span style="color:#C3E88D;"> --force的快捷键</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">-f</span></span>
<span class="line"><span style="color:#FFCB6B;">--force：强制</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">-m</span></span>
<span class="line"><span style="color:#FFCB6B;">--move：移动或重命名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">-M</span></span>
<span class="line"><span style="color:#FFCB6B;">--move</span><span style="color:#C3E88D;"> --force的快捷键</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">-r</span></span>
<span class="line"><span style="color:#FFCB6B;">--remote：远程</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">-a</span></span>
<span class="line"><span style="color:#FFCB6B;">--all：所有</span></span></code></pre></div><h3 id="_3、git-fetch-用法" tabindex="-1">3、git fetch 用法 <a class="header-anchor" href="#_3、git-fetch-用法" aria-label="Permalink to &quot;3、git fetch 用法&quot;">​</a></h3><p>git fetch 命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> fetch</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">远程主机</span><span style="color:#BABED8;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;"> //这个命令将某个远程主机的更新全部取回本地</span></span></code></pre></div><p>如果只想取回特定分支的更新，可以指定分支名：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> fetch</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">远程主机</span><span style="color:#BABED8;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">分支</span><span style="color:#BABED8;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;"> //注意之间有空格</span></span></code></pre></div><p>最常见的命令如取回<code>origin</code> 主机的<code>master</code> 分支：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> fetch</span><span style="color:#C3E88D;"> origin</span><span style="color:#C3E88D;"> master</span></span></code></pre></div><p>取回更新后，会返回一个<code>FETCH_HEAD</code> ，指的是某个branch在服务器上的最新状态，我们可以在本地通过它查看刚取回的更新信息：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> log</span><span style="color:#C3E88D;"> -p</span><span style="color:#C3E88D;"> FETCH_HEAD</span></span></code></pre></div><p>如图： <img src="https://any-cross-1252921383.cos.ap-hongkong.myqcloud.com/test-image/git-bash-here.png" alt="image"></p><p>可以看到返回的信息包括更新的文件名，更新的作者和时间，以及更新的代码（19行红色[删除]和绿色[新增]部分）。</p><p>我们可以通过这些信息来判断是否产生冲突，以确定是否将更新merge到当前分支。</p><h3 id="_4、git-pull-用法" tabindex="-1">4、git pull 用法 <a class="header-anchor" href="#_4、git-pull-用法" aria-label="Permalink to &quot;4、git pull 用法&quot;">​</a></h3><p>前面提到，<code>git pull</code> 的过程可以理解为：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> fetch</span><span style="color:#C3E88D;"> origin</span><span style="color:#C3E88D;"> master</span><span style="color:#C3E88D;"> //从远程主机的master分支拉取最新内容</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> merge</span><span style="color:#C3E88D;"> FETCH_HEAD</span><span style="color:#C3E88D;">    //将拉取下来的最新内容合并到当前所在的分支中</span></span></code></pre></div><p>即将远程主机的某个分支的更新取回，并与本地指定的分支合并，完整格式可表示为：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> pull</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">远程主机</span><span style="color:#BABED8;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">远程分支</span><span style="color:#BABED8;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">本地分支</span><span style="color:#BABED8;">名</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>如果远程分支是与当前分支合并，则冒号后面的部分可以省略：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> pull</span><span style="color:#C3E88D;"> origin</span><span style="color:#C3E88D;"> next</span></span></code></pre></div>`,39),o=[e];function t(c,r,i,y,D,F){return a(),n("div",null,o)}const d=s(p,[["render",t]]);export{g as __pageData,d as default};
