const e={map:'[{"一些整理的算法":["0.0"],"n数之和":["1.0"],"三数之和":["2.0"],"两数之和":["3.0"],"删除有序数组中的重复项":["4.0"],"合并两个有序数组":["5.0"],"寻找数组中最长驼峰":["6.0"],"搜索插入位置":["7.0"],"移除元素":["8.0"],"计数器":["9.0"],"数组中心下标索引":["10.0"],"首位不重复字符索引":["11.0"],"环境的准备":["12.0"],"webstorm":["12.1"],"chrome":["12.2"],"node":["12.3","110.0"],"其它工具":["12.4"],"其它工具和库":["12.5"],"项目的创建和配置":["13.0"],"创建基本的文件结构":["13.1"],"public":["13.2"],"配置并初始化bower":["13.3"],"打开命令行工具":["13.4"],"初始化bower":["13.5"],"bowerrc":["13.6"],"配置完成":["13.7"],"angularjs的第一步":["14.0"],"在项目中安装angularjs的基本库":["14.1"],"建立":["14.2"],"引入angularjs的库文件":["14.3"],"第一个程序hello":["14.4"],"运行hello":["14.5"],"学习angularjs的规划":["15.0"],"基本表达式":["16.0"],"引入":["17.0","17.1"],"其它属性":["17.2"],"模板":["17.3"],"angularjs初始化":["18.0"],"创建一个独立的javascript文件":["18.1"],"angularjs的作用域":["18.2"],"引入文件的顺序":["18.3"],"控制器":["19.0"],"ng":["19.1","21.1","24.1","24.5","31.1"],"javascript部分":["19.2"],"html中调用":["19.4"],"为什么要额外封装一层":["19.5"],"数据绑定data":["20.0"],"功能的绑定":["20.1"],"更多地方的绑定":["20.2"],"条件判断":["21.0"],"冒号中的表达式":["21.2"],"重复语句":["22.0"],"index":["22.1"],"过滤器":["23.0"],"多个filter同时应用":["23.1"],"创建自己的过滤器":["23.2"],"通过":["23.3","30.4"],"一些值得注意的用法":["23.4"],"样式选择器":["24.0"],"动态化的样式输入":["24.2"],"结合两种模式的应用示例":["24.3"],"css动画效果应用":["24.4"],"下拉列表选项":["25.0"],"增加未选中的选项":["25.1"],"按组排列":["25.2"],"禁用某些选项":["25.3"],"将对象作为参数传入":["25.4"],"本章总结":["26.0","35.0"],"深入学习angularjs":["27.0"],"directive在系统中的使用":["27.1"],"学习directive的路程":["27.2"],"制作一个自定义的directive":["28.0"],"代码分析":["28.1"],"template":["28.2"],"用替换而不是插入的方式应用directive":["28.3"],"restrict":["28.4"],"directive的命名和使用规则":["29.0"],"命名规则":["29.1"],"使用规则":["29.2"],"为什么会有这种差异":["29.3"],"怎么实现的":["29.4"],"连接符":["29.5"],"为什么要先去除":["29.6"],"让directive支持传入数据":["30.0"],"directive的":["30.1"],"scope":["30.2"],"在一个":["30.3"],"在directive中修改控制器中的数据":["30.5"],"以只读的方式传入数据":["30.6"],"在directive中进行函数回调":["30.7"],"使用":["31.0","64.7","64.8","93.13"],"使用函数获取templateurl":["31.2"],"让directive动起来":["32.0"],"element":["32.1","32.2"],"在angularjs中使用jquery":["32.3"],"实际体验":["32.4"],"在":["32.5"],"把directive变为一个容器":["33.0"],"directive之间互相通讯":["34.0"],"angular1":["36.0"],"学习angularjs":["37.0"],"learning":["37.1"],"本书地址":["37.2"],"章节目录":["37.3"],"本书的读者":["37.4"],"我应用angularjs的方法":["37.5"],"这样做的好处":["37.6"],"为什么选择angularjs":["37.7"],"我选择angularjs的历程":["37.8"],"为什么写这本书":["37.9"],"另":["37.10"],"版权声明":["37.11"],"summary":["38.0"],"框架相关":["39.0","63.0"],"react":["40.0","41.1","41.2","41.4","41.7","41.10","41.11","41.12","43.0","45.1","64.10","64.18","64.19"],"react一些相关":["41.0"],"react生命周期":["41.3"],"react的严格模式":["41.5"],"严格模式优点":["41.6"],"jsx与js的区别":["41.8"],"react中必须要使用":["41.9"],"受控组件":["41.13"],"ssr相关":["42.0"],"对于ssr的理解":["42.1"],"ssr的局限":["42.2"],"父组件调用子组件":["43.1"],"虚拟dom与diff算法":["44.0"],"结构对比":["44.1"],"流程对比":["44.2"],"什么是虚拟dom":["44.3","64.2"],"虚拟dom的优势":["44.4"],"虚拟dom可以提高效率":["44.5"],"超强的兼容性":["44.6"],"高阶函数hoc":["45.0"],"usestate":["45.2","68.28"],"vue":["46.0","49.0","52.0","53.0","64.3","65.0","65.10","65.13","65.14","65.15","65.17","65.21","65.25","65.32","65.36","65.42","65.48","65.53","65.55","69.5"],"keep":["47.0"],"引用":["47.1","48.6","95.3","100.5","105.8","116.13"],"nexttick":["48.0"],"异步任务队列":["48.1"],"vue2":["48.2","50.1"],"nexttick源码":["48.3"],"vue3":["48.4","48.5","50.4","65.56"],"定义":["49.1","91.1","115.1","120.1","123.1","126.1","127.1"],"常见的vue指令":["49.2"],"v":["49.3","49.4","49.5","49.6","49.7","65.7","65.8","65.9","68.11"],"vue生命周期":["50.0"],"具体分析":["50.2"],"题外话":["50.3"],"具体功能":["50.5"],"watch":["51.0","51.1"],"watch参数":["51.2"],"第一个参数":["51.3","51.8"],"第二个参数":["51.4","51.9"],"第三个参数":["51.5"],"watcheffect":["51.6"],"watcheffect参数":["51.7"],"停止监听":["51.10"],"watch和":["51.11"],"区别":["51.12","104.5","108.5"],"访问":["51.13"],"小技巧":["51.14"],"关闭监听器":["51.15"],"异步数据加载":["51.16"],"单向绑定":["52.1"],"双向绑定":["52.2"],"双向绑定原理":["52.3"],"viewmodel":["52.4"],"实现":["52.5"],"代码实现":["52.6","79.1"],"编译":["52.7"],"依赖收集":["52.8"],"来源":["52.9","97.8","108.7"],"首页加载白屏的原因":["53.1"],"spa":["53.2","53.3"],"解决方案":["53.4"],"主要记录了工作中遇到的问题":["54.0"],"import":["55.3"],"typescript中":["56.2"],"typescript中的":["56.3"],"小程序相关":["59.0"],"小程序的优势":["59.1"],"小程序的页面构成":["59.2"],"小程序的生命周期":["59.3"],"小程序如何请求数据":["59.4"],"如何提高小程序的首屏加载时间":["59.5"],"请简述你经常使用的小程序的组件":["59.6"],"wxss":["59.7"],"小程序如何实现响应式":["59.8"],"怎么优化小程序":["59.9"],"小程序如何显示用户头像与用户名":["59.10"],"请谈谈小程序的双向绑定和":["59.11"],"小程序中传参是怎么传的":["59.12"],"和":["59.13"],"说一下微信小程序的适配问题":["59.14"],"小程序页面间有哪些传递数据的方法":["59.15"],"你是怎么封装微信小程序的数据请求的":["59.16"],"小程序跳转页面的方式":["59.17"],"微信小程序如何跳转到其它小程序":["59.18"],"小程序加载过慢的解决方式":["59.19"],"前端基础":["60.0"],"javascript":["61.0","61.2","61.27","61.37","61.38","70.6"],"javascript的语言特性":["61.1"],"ajax使用":["61.3"],"ajax请求返回的状态码":["61.4"],"闭包":["61.5"],"闭包的定义":["61.6"],"为什么要用":["61.7"],"闭包的特性":["61.8"],"事件委托":["61.9"],"事件委托优点":["61.10"],"事件源":["61.11"],"事件冒泡":["61.12"],"本地存储与cookie的区别":["61.13"],"es6新特性":["61.14","83.0","84.0"],"数组的方法":["61.15"],"json":["61.16","68.53"],"面向对象":["61.17"],"普通函数与构造函数区别":["61.18"],"原型与原型链":["61.19","100.0"],"promise":["61.20","69.1"],"async函数":["61.21"],"get":["61.22","61.23","84.4"],"事件流":["61.24"],"事件流定义":["61.25"],"改变this指针的指向函数":["61.26"],"拖拽功能的实现":["61.28"],"javascript的垃圾回收机制":["61.29"],"必要性":["61.30"],"常见的垃圾回收方式":["61.31"],"javascript监听对象属性的改变":["61.32"],"手动实现一个":["61.33"],"怎么控制一次加载一张图片":["61.34"],"方法1":["61.35"],"方法2":["61.36"],"跨域问题":["61.39"],"为什么会出现跨域":["61.40"],"同源策略":["61.41"],"减少页面加载时间":["61.42"],"this":["61.43"],"数组去重":["61.44","93.12"],"深拷贝与浅拷贝":["61.45"],"for循环与map循环有什么区别":["61.46"],"类的继承":["61.47","106.0"],"同步与异步的区别":["61.48"],"重绘和回流":["61.49"],"http":["61.50"],"如何对网站的文件和资源进行优化":["61.51"],"预加载与懒加载的区别":["61.52"],"防抖与节流":["61.53","108.0"],"xss":["61.54","97.3","97.7"],"html":["62.0"],"常用的图片的格式有哪些":["62.1"],"jpeg":["62.2"],"png":["62.3"],"gif":["62.4"],"css的盒模型":["62.5"],"标准盒模型":["62.6"],"ie盒模型":["62.7"],"视频":["62.8"],"视频标签":["62.9"],"音频标签":["62.10"],"html5新增的内容":["62.11"],"新增的语义化标签":["62.12"],"css3新增特性":["62.13"],"border":["62.14"],"background":["62.15"],"gradient":["62.16"],"word":["62.17"],"transform":["62.18"],"transition":["62.19"],"animation":["62.20"],"清除浮动":["62.21"],"定位属性":["62.22"],"元素居中":["62.23"],"水平居中":["62.24"],"垂直居中":["62.25"],"水平垂直居中":["62.26"],"三栏布局方式两边固定":["62.27"],"浏览器显示小于12px的文字":["62.28"],"css选择器":["62.29"],"种类":["62.30"],"优先级":["62.31"],"可继承属性":["62.32"],"图片加载缓慢问题":["62.33"],"行内元素":["62.34"],"margin与padding使用场景":["62.35"],"flex":["62.36"],"标签的禁用":["62.37"],"px":["62.38"],"媒体查询":["62.39"],"网页的三层结构":["62.40"],"doctype":["62.41"],"html5":["62.42","70.4"],"浏览器性能优化":["62.43"],"加载阶段的优化":["62.44"],"交互阶段的优化":["62.45"],"回流和重绘":["62.46"],"浏览器缓存机制":["62.47"],"浏览器输入网址到页面渲染的全过程":["62.48"],"如何画一条0":["62.49"],"关于":["62.50"],"双边距重叠":["62.51"],"react相关":["64.0"],"常用的react":["64.1","68.27"],"受控组件和非受控组件的区别":["64.4"],"基于类的":["64.5"],"组件的生命周期方法是什么":["64.6"],"如何跟踪功能组件的卸载":["64.9"],"什么是state管理器":["64.11"],"在哪些状态下可以使用本地状态":["64.12"],"redux":["64.13","64.15"],"什么是":["64.14"],"简述":["64.16"],"axios":["64.17"],"diff":["64.20"],"为什么虚拟":["64.21"],"何为高阶组件":["64.22"],"vue的核心":["65.1"],"核心思想":["65.2"],"vue中的单项数据流":["65.3"],"vue中常用的修饰符":["65.4"],"计算属性":["65.11"],"vue中跳转路由的方式":["65.12"],"基本原理":["65.16"],"hash":["65.18"],"history":["65.19"],"两者区别":["65.20"],"路由参数":["65.22"],"查询参数":["65.23"],"何时使用":["65.24"],"插值":["65.26"],"绑定属性":["65.27"],"动态类绑定":["65.28"],"动态样式绑定":["65.29"],"表单输入绑定":["65.30"],"事件绑定":["65.31"],"全局路由钩子":["65.33"],"路由独享守卫":["65.34"],"组件内守卫":["65.35"],"组成":["65.37"],"setup标签版本":["65.38"],"子组件传递给父组件参数":["65.39"],"setup函数":["65.40"],"setup标签":["65.41"],"默认内容":["65.43"],"具名插槽":["65.44"],"动态插槽":["65.45"],"作用域插槽":["65.46"],"具名作用域插槽":["65.47"],"类型":["65.49"],"详细信息":["65.50"],"示例":["65.51","127.3"],"计算属性与watch的区别":["65.52"],"vue中":["65.54"],"vuex":["65.57"],"面试相关问题":["66.0"],"关于vue组件通信":["68.1"],"props":["68.3"],"emit":["68.5"],"ref":["68.7"],"provide":["68.9"],"mitt":["68.13"],"pinia":["68.15"],"react中遇到过什么坑":["68.16"],"不正确地使用状态更新":["68.17"],"使用索引作为":["68.18"],"忘记绑定事件处理程序":["68.19"],"忘记在条件渲染中处理":["68.20"],"在渲染函数中定义函数":["68.21"],"ssr中node的配置消耗的qps":["68.22"],"react的生命周期":["68.23"],"挂载阶段":["68.24"],"更新阶段":["68.25"],"卸载阶段":["68.26"],"useeffect":["68.29"],"usecontext":["68.30"],"useref":["68.31"],"usecallback":["68.32"],"usememo":["68.33"],"usereducer":["68.34"],"uselayouteffect":["68.35"],"什么是虚拟滚动":["68.36"],"lighthouse主要使用什么性能指标":["68.37"],"主要检测指标":["68.38"],"评分说明":["68.39"],"三种使用方式":["68.40"],"跨页面通信使用什么方式呢":["68.41"],"url":["68.42"],"local":["68.43"],"session":["68.44"],"cookies":["68.45"],"postmessage":["68.46"],"websocket":["68.47"],"跨域的方法":["68.48"],"jsonp":["68.49"],"cors":["68.50"],"代理服务器":["68.51"],"使用跨域资源共享":["68.52"],"通过iframe标签跨页面通信遇到过什么问题":["68.54"],"有了解过mono":["68.55"],"usememo可以在其它地方调用么":["68.56"],"项目中做了哪些性能优化":["68.57"],"构建工具有什么性能优化":["68.58"],"基本数据类型":["68.59","99.1"],"在项目中有自己实现过hook吗":["68.60"],"继承方式":["69.2"],"项目中遇到哪些难点":["69.3"],"封装一个tree组件":["69.4"],"防抖函数":["69.6"],"实现一个event类":["69.7"],"适配多端":["69.8"],"taro如何实现多端适配的":["69.9"],"小程序双线程有了解过吗":["69.10"],"模块化":["69.11","83.23"],"esmodule":["69.12"],"项目中遇到过什么难点":["70.1"],"拖拽的功能实现主要使用的什么api":["70.2"],"drag":["70.3"],"css":["70.5","72.0","73.0","102.6"],"typescript常用的类型工具":["70.7"],"vuex和pinia的区别":["70.8"],"option":["70.9"],"页面从url到渲染完成发生了什么":["71.1"],"什么是强缓存":["71.2"],"dns解析的是什么":["71.3"],"性能优化":["71.4","102.5"],"react常用的hook":["71.5"],"useeffect的副作用指的是什么":["71.6"],"重绘和重排":["71.7"],"防抖和节流":["71.8"],"dns是去哪里获取ip呢":["71.9"],"cookie和":["71.10"],"假如上线遇到一个bug":["71.11"],"css一些加载样式":["74.0"],"动画效果一":["74.1"],"动画效果二":["74.2"],"动画效果三":["74.3"],"动画效果四":["74.4"],"动画效果五":["74.5"],"动画效果六":["74.6"],"动画效果七":["74.7"],"动画效果八":["74.8"],"动画样式九":["74.9"],"动画效果十":["74.10"],"动画效果11":["74.11"],"动画效果12":["74.12"],"动画效果13":["74.13"],"动画效果14":["74.14"],"动画效果15":["74.15"],"css权重规则":["75.0"],"css背景动画":["76.0"],"方块跳动动画":["77.0"],"一些原生css样式与概念":["78.0"],"炫目动画":["79.0"],"js中call":["80.0"],"总结":["80.1","105.7","106.9"],"cookie":["81.0"],"从document":["81.1"],"写入document":["81.2"],"path":["81.3"],"domain":["81.4"],"expires":["81.5"],"secure":["81.6"],"es6":["82.0","82.36"],"字符串类型的扩展":["82.1"],"模版字符串":["82.2","83.14"],"模版标签函数":["82.3"],"string":["82.4","82.5","82.6","82.7","82.8","82.9","82.10"],"数组类型的扩展":["82.11"],"扩展运算符":["82.12"],"array":["82.13","82.14","82.15","82.16","82.17","82.18","91.0","93.0","103.1","103.2","103.3","103.4","103.5","103.6","103.7","103.8","103.9","103.10","103.11","103.12","103.13","103.14","103.15","103.16","103.17","103.18","103.19","103.20","103.21","103.23"],"对象类型的扩展":["82.19"],"属性的简洁表示法":["82.20"],"属性名表达式":["82.21","83.21"],"object":["82.22","82.23","82.24","82.25","99.3"],"正则的扩展":["82.26"],"regexp构造函数的扩展":["82.27"],"flags属性":["82.28"],"u修饰符":["82.29"],"y修饰符":["82.30"],"regexp":["82.31"],"正则方法调用变更":["82.32"],"函数类型的扩展":["82.33"],"基本用法":["82.34","114.1"],"运算符的扩展":["82.35"],"声明方式":["83.1"],"let":["83.2"],"const":["83.3"],"变量的解构赋值":["83.4"],"数组的解构":["83.5"],"对象的解构":["83.6"],"字符串的解构":["83.7"],"数值与布尔值的解构":["83.8"],"函数的参数的解构":["83.9"],"函数参数默认值":["83.10"],"箭头函数":["83.11"],"使用注意点":["83.12"],"箭头函数与普通函数的区别":["83.13"],"扩展操作符":["83.15"],"展开数组":["83.16"],"传递参数给函数":["83.17"],"浅拷贝数组或对象":["83.18"],"对象字面量简化":["83.19"],"属性的简介表示法":["83.20"],"类":["83.22"],"proxy":["84.1","84.2","84.3"],"set":["84.5","84.17","84.18"],"apply":["84.6"],"reflect":["84.7"],"常用方法":["84.8"],"利用":["84.9"],"symbol":["84.10"],"map":["84.11","84.12"],"方法":["84.13"],"weekmap":["84.14"],"应用":["84.15","123.2"],"weakmap":["84.16"],"weakset":["84.19","84.21"],"weakset应用":["84.20"],"迭代器":["84.22","84.23"],"迭代器功能":["84.24"],"遍历过程":["84.25"],"原生具备":["84.26"],"迭代器对象方法":["84.27"],"使用场合":["84.28"],"for":["84.29"],"生成器":["84.30"],"特征":["84.31"],"eslint":["85.0"],"一些javascript基础知识与方法":["86.0"],"js下载文件":["87.0"],"js中的元素尺寸与布局信息":["88.0"],"js模块化":["89.0"],"js解析url参数":["90.0"],"简单实现":["91.2"],"momentjs":["92.0"],"一":["92.1"],"二":["92.4"],"三":["92.5"],"功能":["93.1"],"参数值":["93.2"],"回调函数":["93.3"],"initialvalue":["93.4"],"使用场景":["93.5","127.2"],"一维数组求和":["93.6"],"累加对象数组里的值":["93.7"],"展平嵌套数组":["93.8"],"统计对象中值出现的次数":["93.9"],"按属性对对象进行分组":["93.10"],"使用扩展运算符和":["93.11"],"按顺序运行promise":["93.14"],"在稀疏数组中使用reduce":["93.15"],"非数组对象上调用reduce":["93.16"],"功能性函数管道":["93.17"],"settimeout与setinterval区别":["94.0"],"settimeout":["94.1"],"setinterval":["94.2"],"精度问题":["94.3"],"取消调度":["94.4"],"利用settimeout实现一个setinterval":["94.5"],"requestanimationframe":["94.6"],"对比":["94.7"],"tcp的三次握手与四次挥手":["95.0"],"tcp三次握手":["95.1"],"tcp四次挥手":["95.2"],"tcp":["96.0"],"xss攻击与":["97.0"],"xss攻击":["97.1"],"常见注入方法":["97.2"],"防范方法":["97.4"],"csrf攻击":["97.5"],"防御方法":["97.6"],"关于this指向":["98.0"],"this指向的规律":["98.1"],"全局环境中的":["98.2"],"上下文对象中调用的":["98.3"],"通过bind":["98.4"],"构造函数和this":["98.5"],"箭头函数中的this":["98.6"],"this优先级":["98.7"],"前端数据类型":["99.0"],"复杂数据类型":["99.2"],"判断数据类型的方式":["99.4"],"前置知识":["100.1"],"prototype":["100.2"],"proto":["100.3"],"constructor":["100.4"],"变量的提升":["101.0"],"回流与重绘":["102.0"],"回流":["102.1"],"重绘":["102.2"],"render树":["102.3"],"何时触发回流和重绘":["102.4"],"js":["102.7"],"数组常用的方法":["103.0"],"序列生成器":["103.22"],"浅拷贝与深拷贝":["104.0"],"数据类型存储":["104.1"],"浅拷贝":["104.2"],"手动实现":["104.3"],"深拷贝":["104.4"],"小结":["104.6"],"文章来源":["104.7","106.10"],"浏览器缓存":["105.0"],"优点":["105.1","106.1"],"浏览器缓存过程":["105.2"],"强缓存":["105.3"],"强缓存规则":["105.4"],"协商缓存":["105.5"],"协商缓存规则":["105.6"],"实现方式":["106.2"],"原型链继承":["106.3"],"构造函数继承":["106.4"],"组合继承":["106.5"],"原型式继承":["106.6"],"寄生式继承":["106.7"],"寄生组合式继承":["106.8"],"获取当前页面url信息":["107.0"],"节流":["108.1"],"节流实现方式":["108.2"],"防抖":["108.3"],"防抖实现方式":["108.4"],"应用场景":["108.6"],"node基础与拓展":["109.0"],"node特点":["110.1"],"typescript":["111.0","112.0"],"omit":["112.1"],"pick":["112.2"],"partial":["112.3"],"required":["112.4"],"readonly":["112.5"],"record":["112.6"],"exclude":["112.7"],"extract":["112.8"],"nonnullable":["112.9"],"returntype":["112.10"],"parameters":["112.11"],"constructorparameters":["112.12"],"thisparametertype":["112.13"],"instancetype":["112.14"],"awaited":["112.15"],"omitthisparameter":["112.16"],"thistype":["112.17"],"推荐文档":["113.0"],"枚举":["114.0"],"手动赋值":["114.2"],"常数项和计算所得项":["114.3"],"常数枚举":["114.4"],"外部枚举":["114.5"],"ts":["115.0"],"typescript中的高级类型":["116.0"],"交叉类型":["116.1"],"联合类型":["116.2"],"类型守卫":["116.3"],"typeof":["116.4"],"instanceof":["116.5"],"自定义类型守卫":["116.6"],"in":["116.7"],"类型别名":["116.8"],"泛型式类型别名":["116.9"],"接口与类型别名":["116.10"],"元组类型":["116.11"],"infer":["116.12"],"一些微信小程序相关问题":["117.0"],"微信小程序":["118.0"],"数据结构":["119.0"],"链表":["120.0"],"特点":["120.2"],"链表节点":["120.3"],"链表实现":["120.4"],"分类":["120.5"],"双向链表实现":["120.6"],"参考资料":["120.7"],"构建":["121.0"],"webpack5":["122.0"],"ast":["123.0"],"整体流程":["123.3"],"编译原理":["123.4"],"sourcemap":["124.0"],"什么是source":["124.1"],"source":["124.2","124.4"],"浏览器中如何使用source":["124.3"],"各个关键字处理示例":["124.5"],"cheap":["124.7"],"常见配置项的对比":["124.8"],"在项目中的使用":["124.9"],"一些css相关的工具":["125.0"],"unocss":["126.0"],"git":["127.0","128.0","129.0","130.0","130.1","131.0","132.0","132.1","133.0"],"操作步骤":["128.1","131.2"],"场景一":["130.2"],"场景二":["130.3"],"rebase":["131.1"],"常用的":["132.2"],"num":["132.9"],"删除分支":["133.1"],"同步到git仓库上":["133.2"],"git常用操作":["134.0"],"工作流程":["134.1"],"一些git常用操作与命令":["135.0"],"图片工具":["136.0"],"本地图片压缩工具":["137.0"]},{"0":["2.0","10.0","14.1","37.11","65.51","65.56","68.3","68.5","68.7","68.9","68.11","68.13","74.15","85.0","92.7","115.3","120.4","120.6"],"1":["2.0","7.0","8.0","11.0","14.1","15.0","37.0","37.1","37.4","37.6","37.7","42.2","52.5","61.18","61.42","61.44","61.51","62.12","62.21","62.24","62.25","62.26","62.27","62.28","62.33","68.38","82.12","82.14","83.5","83.9","83.12","84.25","92.2","92.6","92.7","92.9","95.2","98.1","98.7","100.1","103.1","103.14","104.4","105.2","105.4","110.1","114.1","115.2","116.10","120.6","124.5","124.8","127.3","128.1","129.1","130.2","132.3"],"2":["2.0","3.0","7.0","23.0","37.10","61.18","61.42","62.12","62.25","81.2","82.12","82.14","83.5","83.9","84.25","85.0","92.3","92.6","92.7","93.17","107.0","114.2","115.3","127.3","128.1","129.2","132.4"],"3":["6.0","7.0","61.18","82.12","83.5","83.9","84.25","92.6","92.8","114.2","115.4","129.3","130.2","132.5"],"4":["6.0","37.11","59.2","82.12","84.25","92.6","92.9","115.5","129.4","132.6"],"5":["6.0","7.0","14.1","82.12","92.10","101.0","132.7"],"6":["7.0","92.11","132.8"],"7":["3.0","6.0","92.12"],"8":["6.0","41.3","92.13","132.10"],"9":["92.14"],"10":["92.13","92.15"],"11":["3.0","92.7"],"12":["55.1"],"14":["6.0"],"15":["3.0"],"18":["107.0"],"21":["93.10"],"23":["55.1","55.2","56.1","57.1","57.2","57.3","57.4"],"24":["70.0"],"50":["62.26"],"100":["61.4","68.39"],"123":["83.21"],"200":["84.5"],"1234":["23.0"],"2019":["92.7"],"2024":["68.0","69.0"],"8080":["107.0"],"231204":["55.0"],"231211":["56.0"],"231218":["57.0"],"240326":["71.0"],"algorithm":["0.0"],"请用算法实现":["1.0"],"从给定的无需":["1.0"],"不重复的数组a中":["1.0"],"取出n个数":["1.0"],"给你一个包含":["2.0"],"n":["2.0","5.0","9.0"],"个整数的数组":["2.0"],"nums":["2.0","3.0","4.0","7.0","8.0","10.0"],"判断":["2.0"],"中是否存在三个元素":["2.0"],"a":["2.0","83.5","83.21","84.28","87.0","98.7","101.0","104.4","112.5","120.6","124.5","129.2","130.2","130.3"],"b":["2.0","83.5","84.28","104.4","120.6","124.5","129.2","130.3"],"c":["2.0","37.11","83.5","84.28","104.4","129.2"],"使得":["2.0"],"请你找出所有满足条件且不重复的三元组":["2.0"],"注意":["2.0","25.3"],"答案中不可以包含重复的三元组":["2.0"],"示例":["2.0","3.0","6.0","11.0","84.4","116.2"],"javascript":["2.0","3.0","6.0","7.0","20.1","23.0","28.0","28.1","30.6","30.7","32.0","32.5","43.1","51.10","52.6","52.7","61.3","61.33","61.35","61.36","64.5","65.18","65.51","68.60","81.1","82.3","82.12","82.14","82.21","82.30","82.34","82.36","83.5","83.6","83.9","83.10","83.16","83.17","83.18","83.21","84.1","84.4","84.5","84.6","84.9","84.10","84.28","86.0","87.0","89.0","90.0","91.2","92.4","92.6","92.7","92.9","92.11","92.12","92.13","92.14","92.15","99.0","99.3","100.4","101.0","103.14","103.16","103.22","104.3","104.4","104.5","106.1","106.3","106.4","106.5","106.6","106.7","106.8","108.2","110.0","118.0","120.4","120.6","124.5","124.7"],"给定数组":["2.0"],"给定一个整数数组":["3.0"],"和一个目标值":["3.0"],"target":["3.0","7.0","82.23","84.1","84.2","84.4","84.8"],"请你在该数组中找出和为目标值的那":["3.0"],"两个":["3.0"],"整数":["3.0"],"并返回它们的数组下标":["3.0"],"你可以假设每种输入只会对应一个答案":["3.0"],"但是":["3.0","19.5","25.0","30.0","30.7"],"你不能重复利用这个数组中同样的元素":["3.0"],"给定":["3.0"],"给你一个":["4.0"],"非严格递增排列":["4.0"],"的数组":["4.0"],"请你":["4.0"],"原地":["4.0","8.0"],"删除重复出现的元素":["4.0"],"使每个元素":["4.0"],"只出现一次":["4.0"],"返回删除后数组的新长度":["4.0"],"元素的":["4.0"],"相对顺序":["4.0"],"应该保持":["4.0"],"一致":["4.0"],"然后返回":["4.0"],"中唯一元素的个数":["4.0"],"考虑":["4.0"],"的唯一元素的数量为":["4.0"],"给你两个有序整数数组":["5.0"],"nums1":["5.0"],"和":["5.0","28.0","30.7","34.0","41.1","45.2","49.1","50.4","50.5","51.0","51.12","55.3","61.3","62.32","62.50","64.5","64.17","64.18","65.16","65.52","68.7","68.9","69.12","70.9","84.6","84.7","84.9","93.12","96.0","97.7","100.1","103.21","105.4","105.6","114.3","120.6","123.4","131.2"],"nums2":["5.0"],"请你将":["5.0"],"合并到":["5.0","131.2"],"中":["5.0","47.0","50.4","50.5","61.27","68.56","83.10","99.3","112.1","112.8","131.2"],"使":["5.0","43.1"],"num1":["5.0"],"成为一个有序数组":["5.0"],"说明":["5.0","68.38","92.8"],"初始化":["5.0","50.2","128.0"],"需要合并的元素数量分别为":["5.0"],"m":["5.0","92.8","130.2","130.3"],"你可以假设":["5.0"],"有足够的空间":["5.0"],"空间大小大于或等于":["5.0"],"给定一个纯数字数组":["6.0"],"原地生成一个最长驼峰子数组":["6.0"],"元素大小从中间向两侧递减":["6.0"],"原数组":["6.0"],"const":["6.0","43.1","48.3","48.5","65.51","74.10","74.13","74.15","82.3","82.14","83.16","83.18","85.0","91.2","93.6","93.8","93.9","93.10","93.12","93.17","94.5","98.3","98.5","98.7","103.14","103.22","104.3","104.4","104.5","107.0","108.2","114.4","115.3","115.4","120.4","124.7"],"arr":["6.0","82.14","93.6","93.8","93.14","103.14","104.5"],"给定一个排序数组和一个目标值":["7.0"],"在数组中找到目标值":["7.0"],"并返回其索引":["7.0"],"如果目标值不存在于数组中":["7.0"],"返回它将会被按顺序插入的位置":["7.0"],"示例1":["7.0"],"var":["7.0","30.7","61.7","61.35","61.36","61.37","61.38","84.4","84.6","85.0","87.0","101.0","124.5"],"输出":["7.0","107.0"],"示例2":["7.0"],"给你一个数组":["8.0"],"和一个值":["8.0"],"val":["8.0"],"你需要":["8.0"],"移除所有数值等于":["8.0"],"的元素":["8.0"],"并返回移除后数组的新长度":["8.0"],"不要使用额外的数组空间":["8.0"],"你必须仅使用":["8.0"],"o":["8.0","85.0","110.1","120.2"],"额外空间并":["8.0"],"给定一个整型参数":["9.0"],"请你编写并返回一个":["9.0"],"counter":["9.0"],"函数":["9.0","32.0","61.33","65.51","99.3","106.4"],"这个":["9.0"],"给你一个整数数组":["10.0"],"请计算数组的":["10.0"],"中心下标":["10.0"],"数组":["10.0","83.15"],"是数组的一个下标":["10.0"],"其左侧所有元素相加的和等于右侧所有元素相加的和":["10.0"],"如果中心下标位于数组最左端":["10.0"],"那么左侧数之和视为":["10.0"],"因为在下标的左侧不存在元素":["10.0"],"这一点对于中心下标位于数组最右端同样适用":["10.0"],"如果数组有多个中心下标":["10.0"],"应该返回":["10.0"],"最靠近左边":["10.0"],"的那一个":["10.0"],"如果数组不存在中心下标":["10.0"],"给定一个字符串":["11.0"],"找到它的第一个不重复的字符":["11.0"],"并返回它的索引":["11.0"],"如果不存在":["11.0"],"则返回":["11.0"],"开发web网站":["12.0"],"使用合适的工具和环境会极大的提升开发的效率":["12.0"],"本章将讲述如何准备用于angularjs项目开发的环境":["12.0"],"本书将会使用如下工具和库":["12.0"],"在过去的开发中":["12.1"],"webstorm一直是我对编辑器的首选":["12.1"],"webstorm是商业化的产品":["12.1"],"如果长期使用":["12.1"],"需要花钱购买":["12.1"],"chrome浏览器的开发者工具可以极大的方便开发时的调试工作":["12.2"],"目前国内大量浏览器也是基于chrome的开源内核开发":["12.2"],"在通用性上也有保证":["12.2"],"js":["12.3","18.1","23.2","28.0","48.3","74.10","74.13","74.15","110.0"],"在安装好node":["12.4"],"js后":["12.4"],"可以通过node":["12.4"],"js的npm命令安装最新版本的npm":["12.4"],"cnpm":["12.4"],"bower":["12.4","13.5","14.1"],"如果已经存在":["12.4"],"自动安装最新版本":["12.4"],"使用命令如下":["12.4"],"windows上打开cmd":["12.4"],"os":["12.4"],"x上打开terminal":["12.4"],"bash":["12.4","13.5","14.1","127.3","128.1"],"windows":["12.4"],"npm":["12.4"],"install":["12.4","14.1"],"g":["12.4","87.0","104.4"],"其它的工具和库":["12.5"],"使用webstorm可以直接创建angularjs项目":["13.0"],"且会自动帮助你配置好项目并自动下载angularjs等库":["13.0"],"首先建立一个":["13.1"],"public":["13.1","13.6","14.2","18.1"],"目录":["13.1"],"目录设置的意义":["13.2"],"从字面意思即可理解":["13.2"],"bower的配置可以通过手动创建文件或者命令行的方法来进行":["13.3"],"webstorm内置了命令行工具":["13.4"],"在命令行下运行":["13.5"],"init":["13.5","104.5","130.3"],"你将会看到如下的若干选项":["13.5"],"并会自动的在项目的根目录生成一个":["13.5"],"json":["13.5","68.49","85.0"],"注":["13.5"],"以下的汉字部分都是额外加入的注释":["13.5"],"运行命令":["13.5"],"第一次运行的时候会弹出":["13.5"],"是否愿意提交匿名的统计信息":["13.5"],"随意选择":["13.5"],"may":["13.5"],"anonymously":["13.5"],"report":["13.5"],"usage":["13.5"],"配置文件":["13.6"],"由于我们建立了":["13.6"],"至此":["13.7"],"在前面的章节":["14.0"],"angularjs官网提供了通过bower安装的命令行":["14.1"],"我们需要做的":["14.1"],"就是在webstorm的命令行工具中":["14.1"],"运行如下命令":["14.1"],"angular":["14.1"],"rc":["14.1"],"save":["14.1"],"结果如下所示":["14.1"],"index":["14.2","14.5","28.0","44.3"],"html":["14.2","14.5","18.2","20.2","24.5","28.0","31.1","44.3","53.3","53.4","60.0","61.24","65.8","74.1","74.2","74.3","74.4","74.5","74.6","74.7","74.8","74.9","74.10","74.11","74.12","74.13","74.14","74.15","90.0","97.2","107.0"],"文件":["14.2","24.1","62.48"],"在":["14.2","18.1","21.0","23.2","47.0","50.4","50.5","65.46","68.56","84.10","97.2","99.3","115.1","120.2"],"目录下建立":["14.2"],"引入angularjs库文件很简单":["14.3"],"一行html语言加入html的head部分即可":["14.3"],"world":["14.4","14.5","83.10","101.0"],"是时候来测试下我们是否成功的引入了angularjs了":["14.4"],"我们在":["14.4"],"body":["14.4","18.2"],"右键选择":["14.5"],"我们已经完成了基本的准备工作":["15.0"],"从本章开始":["15.0","27.0"],"我们将专注于学习和应用angularjs":["15.0"],"作为一个功能完整的框架":["15.0"],"angularjs提供了一套开发理念和方法":["15.0"],"我们只需要掌握这套理念和方法即可明确如何实现我们需要的功能":["15.0"],"根据我个人的认知":["15.0"],"我设计了如下的学习路线图":["15.0"],"第四章":["15.0"],"基本语法":["15.0"],"在第三章的结尾":["16.0"],"我们制作了一个基本的hello":["16.0"],"world应用":["16.0"],"在其中":["16.0"],"我们使用了如下的语法":["16.0"],"ng":["17.0","17.1","17.2","17.3","18.0","18.2","19.0","19.2","19.4","20.0","21.0","22.0","22.1","24.0","24.2","25.0","25.2","25.3","25.4","30.1","30.3","30.4"],"include":["17.0","17.1"],"当html代码过于复杂":["17.1"],"或者期望建立单页应用":["17.1"],"single":["17.1","53.2"],"page":["17.1","53.2","107.0"],"application":["17.1","53.2"],"spa":["17.1"],"时":["17.1"],"template":["17.3","30.5","31.0","31.1","33.0","47.0","48.2","65.37","65.38","65.41","65.46","65.47","68.11","69.5","74.9","74.10","74.11","74.12","74.13","74.14","74.15","79.1"],"用于将多个html片段存放于一个html文件中":["17.3"],"app":["18.0","18.1","18.2","20.1","23.2","28.0","28.1","30.6","32.0","32.5"],"并在html中引用":["18.1"],"目录中新建一个":["18.1"],"标签可以放置在":["18.2"],"标签或者":["18.2"],"标签上":["18.2"],"也可以放置在html页面的任何一个标签上":["18.2"],"这里":["18.2"],"引入javascript文件的顺序是有差异的":["18.3"],"controller":["19.0","19.1","19.2","20.0","20.1","30.1","34.0"],"是使用angularjs的核心功能之一":["19.0"],"在前一节我们已经了解了作用域的概念":["19.0"],"则是真正应用作用域来制作功能的核心部分":["19.0"],"应用":["19.0"],"我们先分析":["19.2"],"的javascript编码部分":["19.2"],"funtion":["19.3"],"封装的函数":["19.3"],"会被绑定到":["19.3"],"firstctrl":["19.3","20.1"],"上":["19.3","49.1"],"这个概念相对容易理解":["19.3"],"我们需要注意的":["19.3"],"在angularjs中":["19.5"],"最简单传入数据的方法其实可以更简单":["19.5"],"不推荐这样做":["19.5"],"binding":["20.0","65.27","65.28","65.29","65.31"],"上一节我们介绍了如何将":["20.0"],"的数据显示在html当中":["20.0"],"但是我们如何在页面中修改这些数据呢":["20.0"],"这一步操作也很简单":["20.0"],"我们先直接看看代码吧":["20.0"],"界面操作里面还有一个重要的功能":["20.1"],"就是界面上按钮的与控制器中的函数进行绑定":["20.1"],"这个也很容易实现":["20.1"],"除了用于显示信息外":["20.2"],"数据绑定还可用于其它地方":["20.2"],"比如":["20.2","84.2","84.7","110.1"],"下面的例子用于根据输入来调整样式":["20.2"],"doctype":["20.2"],"if":["21.0","21.1","49.1","49.3","61.38","84.4","84.5","85.0","104.3","105.6","120.6"],"show":["21.0","21.1","49.3"],"hide":["21.0"],"本节我们将学习的是如何通过变量来控制html是否显示":["21.0"],"这三个语句具体的用法如下":["21.0"],"scope":["21.0","30.1","34.0"],"data":["21.0","21.2","29.6","52.6","52.8","87.0"],"与":["21.1","49.3","56.2","59.7","61.54","64.3","65.54","82.22","83.3","94.3","103.8","103.16"],"例子中使用了":["21.2"],"flag":["21.2"],"repeat":["22.0","25.0","30.4","82.6"],"本节将讲述如何使用":["22.0"],"对一个列表的数据进行遍历并显示出来":["22.0"],"首先":["22.0","24.1"],"在实际的使用场景中":["22.1"],"如果我们使用一个表格来管理信息":["22.1"],"那么可能表格的每一行都会有一些对应的操作功能":["22.1"],"如编辑":["22.1"],"删除":["22.1"],"等":["22.1","49.1","50.5","84.29","103.22","120.4","123.2"],"那么":["22.1","100.4"],"我们如何在":["22.1"],"filter":["23.0","23.3","93.13","103.4"],"过滤器是angularjs的另一项强大的功能":["23.0"],"如果能使用好它":["23.0"],"能够帮助我们极大的节省工作量":["23.0"],"以下是几个应用":["23.0"],"的例子":["23.0"],"number":["23.0","49.4","61.37","84.5","93.8","93.10","112.5","115.3","116.1","120.6"],"显示两位小数":["23.0"],"angularjs支持多个filter同时应用":["23.1"],"比如以下的例子":["23.1"],"自己创建自定义的过滤器也很简单":["23.2"],"我们下面尝试自己制作一个将文字全部翻转过来的过滤器":["23.2"],"中增加如下代码":["23.2"],"进行搜索":["23.3"],"angularjs提供了通过filter的搜索功能":["23.3"],"当然":["23.3"],"这个搜索功能并不是非常常用":["23.3"],"因为搜索工作现在一般在服务端完成":["23.3"],"如果数据量非常小":["23.3"],"用法":["23.4","47.0","129.3","129.4"],"效果":["23.4"],"searchtext":["23.4"],"t":["23.4","48.5","65.49","112.1","112.2","112.3","112.4","112.5","112.6","112.7","112.8","112.9","112.10","112.11","112.12","112.13","112.14","112.15","112.16","112.17","115.4","116.9","116.12"],"搜索所有字段":["23.4"],"name":["23.4","48.2","65.44","81.1","83.10","84.4","93.10","93.11","98.3","104.5","106.5","106.6","116.1"],"class":["24.1","24.4","24.5","49.5","52.6","52.7","65.28","74.1","74.2","74.3","74.4","74.5","74.6","74.7","74.8","74.9","74.10","74.11","74.12","74.13","74.14","74.15","83.22","84.9","85.0","116.5","120.4","120.6"],"通过":["24.1","32.3","61.33","64.3","68.54"],"我们可以对界面元素的css样式进行控制":["24.1"],"下面":["24.1","30.3","32.0"],"让我们通过示例来看看功能如何实现":["24.1"],"此示例来源于官网的":["24.1"],"ngclass介绍界面":["24.1"],"我进行了一些加工":["24.1"],"我们先创建一个":["24.1"],"style":["24.1","24.4","24.5","49.5","65.29","68.3","68.5","68.7","68.9","68.11","68.13","74.3","74.9","74.10","74.11","74.12","74.13","74.15"],"css":["24.1","24.4","62.0","74.2","74.4","74.5","74.7","75.0","78.0","125.0"],"删除线":["24.1"],"strike":["24.1"],"text":["24.1","37.11","49.4","65.7"],"decoration":["24.1"],"line":["24.1"],"through":["24.1"],"在上方的示例中":["24.2"],"我们是针对提前设定好的样式进行是否生效的判断":["24.2"],"除了这种使用方式":["24.2"],"class还支持直接传入字符串的方式进行样式调整":["24.2"],"这两种模式也可以结合使用":["24.3"],"示例如下":["24.3"],"我们先在":["24.4"],"中加入css的动画效果代码":["24.4"],"base":["24.4","130.3"],"transition":["24.4"],"all":["24.4"],"提供的功能比":["24.5"],"要少一些":["24.5"],"只支持样式的传入":["24.5"],"我们可以使用以下两种模式":["24.5"],"span":["24.5"],"background":["24.5"],"options":["25.0","25.2","25.3","25.4"],"在学习了":["25.0"],"过后":["25.0"],"我们其实已经可以用循环的方式实现下拉列表的选项":["25.0"],"angularjs提供了":["25.0"],"的方法":["25.0"],"让我们能够更轻松的完成这项工作":["25.0"],"官网提供了一个详尽的示例进行演示":["25.0"],"点击打开后滑动到页面最下部进行效果测试":["25.0"],"本节中的内容":["25.0"],"是将官网的内容进行梳理后进行的讲解":["25.0"],"在很多时候":["25.1"],"我们期望能有一个没选中的选项":["25.1"],"我们可以通过手动的方式添加这个选项":["25.1"],"group":["25.2"],"by":["25.2"],"也支持按组排列数据":["25.2"],"使用":["25.2","25.4","30.6","61.44","61.47","65.19","65.28","65.29","65.31","68.40","68.60","92.5","116.4","116.5"],"disable":["25.3"],"when":["25.3"],"还可以通过":["25.3"],"语法来设置选项是否可选":["25.3"],"同样的":["25.3"],"我们需要在列表中先新增字段":["25.3"],"以下第一列数据并未加上":["25.3"],"在上面的例子中":["25.4"],"我们传入的是一个列表":["25.4"],"array":["25.4","49.4","61.37","85.0","91.1","91.2","93.1","93.12","93.14","115.2"],"也支持以对象":["25.4"],"object":["25.4","49.4","61.32","61.37","65.56","82.13","84.7","85.0","99.1","106.6","106.8","112.14"],"的方式传入数据":["25.4"],"在本章中":["26.0"],"directive":["27.0","28.1","32.0","32.5"],"在前一章中":["27.0"],"我们学习了angularjs的基本用法":["27.0"],"我们将学习":["27.0"],"其实":["27.1"],"本章我们将从最基本的自定义directive开始":["27.2"],"下面我们将制作我们的第一个自定义directive":["28.0"],"让我们对":["28.0"],"进行一些修改":["28.0"],"以下这段代码用于声明一个directive":["28.1"],"people":["28.1"],"function":["28.1","32.0","32.5","48.5","61.33","61.37","61.38","61.47","65.49","68.60","82.34","83.9","83.10","83.17","84.31","85.0","91.2","98.2","98.3","98.5","98.7","106.3","106.5","106.8","120.6"],"return":["28.1","32.0","32.5","48.5","83.9","84.1","85.0","98.3","115.3","120.6"],"如果在配置directive时":["28.3"],"加入":["28.3"],"replace":["28.3","65.16","87.0"],"true":["28.3","83.21","85.0","114.2"],"是告诉angularjs":["28.4"],"这个directive应该如何使用":["28.4"],"在前一节中":["29.0"],"我们创建了一个名为":["29.0"],"angularjs要求directive的命名使用":["29.1"],"在html代码中":["29.2"],"使用的是连接符的形式":["29.2"],"下面我们对比看看命名和使用的对应字符串":["29.2"],"命名和用法不同的核心原因":["29.3"],"angularjs在解析html时":["29.4"],"会将名称取出":["29.4"],"如":["29.4","50.5","93.12","102.5","116.1","120.4"],"在前面的讲解中":["29.5"],"我们讲解示例时":["29.5"],"使用的连接符全部都为减号":["29.5"],"x":["29.6","36.0","83.9","93.17","101.0","112.5","112.12"],"部分":["29.6"],"在第一节中":["30.0"],"我们使用的directive":["30.0"],"可以直接获取并显示控制器中的数据":["30.0"],"人的名称和性别":["30.0"],"如果我们有多个人的信息需要显示怎么处理":["30.0"],"这个问题其实非常常见":["30.0"],"因为directive通常是将需要在界面中重复使用的部分抽象出来":["30.0"],"便于一次修改":["30.0"],"多处地方生效":["30.0"],"如博客的评论的列表显示":["30.0"],"在之前学习控制器":["30.1"],"的使用过程中":["30.1"],"我们使用了":["30.1"],"功能":["30.1","62.14","62.18","62.20","62.30","64.6","65.4","84.2","84.13","84.18"],"用于提供对接html和javascript对应模块的功能":["30.1"],"中的配置":["30.2"],"可以看到":["30.2"],"在上方的javasciprt文件中":["30.2"],"ontroller":["30.3"],"中放入多个相同的directive":["30.3"],"和directive一起显示数据":["30.4"],"知道了如何传入数据":["30.4"],"那么我们就可以将directive的使用和":["30.4"],"以上我们看到的示例只是将数据显示了出来":["30.5"],"如果我们期望在directive中修改这些数据如何处理呢":["30.5"],"其实很简单":["30.5"],"将":["30.5","84.7"],"中原先显示的数据的部分":["30.5"],"替换为":["30.5","31.0"],"除了以等号":["30.6"],"直接传入对象之外":["30.6"],"directive也支持直接传入文本":["30.6"],"符号":["30.6","30.7"],"上面我们介绍了等号":["30.7"],"符号的使用方法":["30.7"],"它们分别对应传入对象和文本":["30.7"],"如果我们期望传入一个回调函数呢":["30.7"],"这样我们就可以实现如封装一个按钮为一个directive":["30.7"],"然后让它在点击后实现我们期望的功能的效果":["30.7"],"这就需要使用到":["30.7"],"下面我们来看看实际的例子":["30.7"],"这个例子比较复杂":["30.7"],"请仔细分析研读":["30.7"],"templateurl":["31.0"],"获取模板":["31.0"],"有些时候":["31.0"],"directive中的模板":["31.0"],"会变得很大":["31.0"],"如果仍然放置在定义中":["31.0"],"那么可能会造成阅读和修改不方便的情况":["31.0"],"针对这种情况":["31.0"],"我们可以将":["31.0"],"除了直接将html部件存储为独立的文件":["31.1"],"我们也可以直接使用angularjs提供的ng":["31.1"],"template功能":["31.1"],"这点在第四章中也有提到":["31.1"],"这里是一个新的示例":["31.1"],"帮助您对比物理文件和":["31.1"],"文件的优先级":["31.1"],"例如":["31.1","49.1","81.2","97.4","103.21","103.22","115.4","116.10"],"templateurl的特性与我们在第四章学习的ng":["31.2"],"include类似":["31.2"],"link":["32.0"],"在前面几节中":["32.0"],"我们都是在学习如何配置directive":["32.0"],"我们将开始学习directive最灵活的部分":["32.0"],"函数的基本使用方法如下":["32.0"],"formdirective":["32.0","32.5"],"restrict":["32.0"],"从":["32.1","84.7","100.3"],"与jquery的关系":["32.2"],"在directive中":["32.2"],"我们不免需要对页面元素进行操作":["32.2"],"为了提供这项功能":["32.2"],"angularjs几乎原版搬运了jquery操作元素的功能":["32.2"],"它们称之为":["32.2"],"安装和使用jquery共有两步":["32.3"],"element":["32.4","32.5"],"的功能":["32.4"],"我们在引入jquery后":["32.4"],"可以通过如下代码查看效果":["32.4"],"这里需要注意的是":["32.4"],"使用jqlite的方法和以下代码中使用的方法是不一样的":["32.4"],"上绑定鼠标移入移出时的变化效果":["32.5"],"transclude":["33.0"],"在前面我们使用到的directive":["33.0"],"都会将包含有directive的元素整体替换为":["33.0"],"中的内容":["33.0"],"这样":["33.0","120.2"],"就让directive的用途缩减为只能封装最低级别的元素":["33.0"],"但是我们使用的":["33.0"],"本节是directive的高级使用方法之一":["34.0"],"通过赋予directive之间互相通讯的功能":["34.0"],"我们可以将部件的抽象化提升到一个更高的层次":["34.0"],"本节将通过官方网站中一个较复杂的例子来讲解具体的使用方法":["34.0"],"通过directive的配置":["34.0"],"将html中的代码自动抽取为一个tab列表":["34.0"],"点击tab列表中的标题":["34.0"],"则可自动的显示tab中包含的内容":["34.0"],"在javascript代码中":["34.0"],"我们声明了2个directive":["34.0"],"gqtabcontainer":["34.0"],"gqtabcontent":["34.0"],"中加入了":["34.0"],"这项配置":["34.0"],"并封装了":["34.0"],"panes":["34.0"],"用于存储数据":["34.0"],"select":["34.0"],"用于接收界面点击事件":["34.0"],"以及一个":["34.0"],"addpane":["34.0"],"方法用于接收":["34.0"],"本章讲述的内容是angularjs的核心内容之一":["35.0"],"angularjs":["37.1"],"本书使用gitbook和github托管":["37.2"],"简介":["37.3","38.0","110.0","131.1"],"环境的准备":["37.3","38.0"],"项目的创建和配置":["37.3","38.0"],"angularjs的第一步":["37.3","38.0"],"学习和使用angularjs":["37.3","38.0"],"基本表达式":["37.3","38.0"],"本书会介绍如何应用angularjs":["37.4"],"但是本书不会涉及到javascript语法以及html和css的布局模式":["37.4"],"因此":["37.4","81.4"],"本书对读者有一定的前置技术要求":["37.4"],"在进行前端开发的工作之前":["37.5"],"我担任过几年的移动互联网产品经理":["37.5"],"这样实现后":["37.6"],"我认为主要有以下几个方面的好处":["37.6"],"以下内容部分读者可能会感到有些偏激":["37.8"],"但是这是对我":["37.8"],"一个拥有一些其它编程经验的前端入门者":["37.8"],"的心路记录":["37.8"],"2015年初":["37.8"],"在准备通过完全的web方式实现一个b":["37.8"],"s模式的企业服务网站之后":["37.8"],"我开始进行技术方面的准备":["37.8"],"在此之前":["37.8"],"我只有android客户端和php服务端的工作经验":["37.8"],"另外":["37.8"],"我对web的基本开发技能使用过一些":["37.8"],"由于业务需要":["37.9"],"我准备重新制作网站的v2版本":["37.9"],"在这个版本中":["37.9"],"为什么没有选择angular":["37.10"],"其实在重构时":["37.10"],"我优先的选择是angular":["37.10"],"typescript":["37.10","48.3","48.5","56.2","56.3","65.49","74.10","74.13","74.15","91.1","93.6","93.7","93.8","93.9","93.10","93.11","93.14","93.17","94.5","98.2","98.3","98.5","98.6","98.7","107.0","112.5","112.7","112.10","112.11","112.12","112.14","112.16","112.17","114.1","114.2","114.4","114.5","115.3","115.4","116.4","116.5","116.9","116.11","116.12"],"license":["37.11"],"署名":["37.11"],"非商业性使用":["37.11"],"国际":["37.11"],"版权所有":["37.11"],"相关":["40.0","46.0","61.0"],"vue的区别":["41.1"],"设计思想":["41.2"],"组件化":["41.2"],"每个组件都符合开放":["41.2"],"在16":["41.3"],"hooks版本之前":["41.3"],"react的生命周期分为组件挂载阶段":["41.3"],"hooks与":["41.4"],"react的严格模式是在组件外层设置":["41.5"],"react":["41.5","43.1","44.1","64.3","64.5","68.18","68.23","68.56","68.60","89.0"],"scrictmode":["41.5"],"标签":["41.5"],"识别不安全的生命周期":["41.6"],"关于使用过时字符串":["41.6"],"中页面重新加载怎么保留数据":["41.7"],"这个问题就涉及到了":["41.7"],"数据持久化":["41.7"],"jsx":["41.8","45.1"],"jsx吗":["41.9"],"处理错误边界":["41.10"],"error":["41.10","112.17"],"boundaries":["41.10"],"错误边界是一种react组件":["41.10"],"它能够不过并处理子组件中任何位置出现javascript的错误":["41.10"],"并渲染备用ui":["41.10"],"而不是使整个组件数崩溃":["41.10"],"组件为什么要大写":["41.11"],"fragment":["41.12"],"react中组件是不允许返回多个节点的":["41.12"],"非受控组件":["41.13"],"对seo友好":["42.1"],"爬虫获取到的是已经异步执行完成后得到的有数据的html":["42.1"],"组件间的通信":["43.0"],"组件调":["43.1"],"组件":["43.1"],"法":["43.1"],"useimperativehandle":["43.1"],"调":["43.1"],"import":["43.1","45.1","64.4","68.60","89.0"],"useref":["43.1"],"usestate":["43.1","45.1","64.1","64.4","64.7","68.60"],"from":["43.1","64.4","65.35","68.60","82.13","89.0","93.12","103.21"],"虚拟dom相当于是在js和":["44.0"],"传统web应用":["44.2"],"虚拟dom是一个对象":["44.3"],"这个对象是由真实的dom转化而来":["44.3"],"div":["44.3","48.2","49.4","65.41","68.3","68.5","68.7","68.9","68.11","68.13","74.1","74.2","74.3","74.4","74.5","74.6","74.7","74.8","74.9","74.10","74.11","74.12","74.13","74.14","74.15"],"classname":["44.3"],"开发时不必关注dom":["44.5"],"只关注业务逻辑":["44.5"],"具有浏览器的兼容和跨平台的兼容":["44.6"],"high":["45.0"],"order":["45.0"],"component":["45.0","47.0","65.35"],"在react中":["45.0"],"高阶组件":["45.0"],"hook中常见的高阶函数":["45.1"],"高阶函数":["45.1"],"是react中最基础的hook":["45.1"],"用于在函数组件中添加状态":["45.1"],"它返回一个数组":["45.1"],"包含当前状态":["45.1"],"和更新状态的函数":["45.1"],"这个更新函数可以接收一个新的状态值":["45.1"],"也可以接收一个函数来更新状态":["45.1"],"useref的区别":["45.2"],"两者最大的区别是":["45.2"],"用于管理状态":["45.2"],"alive":["47.0"],"定义":["47.0","65.2","94.0"],"keepalive是一个内置组件":["47.0"],"它的功能是在多个组件间动态切换时缓存被移除的组件实例":["47.0"],"即使被包含的组件保留状态":["47.0"],"或者避免重新渲染":["47.0"],"vue":["47.0","48.2","49.1","49.4","50.2","52.5","52.6","59.11","59.13","65.37","65.38","65.41","65.46","68.11","74.9","74.10","74.11","74.12","74.13","74.14","74.15","79.1","89.0"],"被keep":["47.0"],"alive包含的组件会被缓存":["47.0"],"被":["47.0"],"包含的组件不会被再次初始化":["47.0"],"也就意味着":["47.0"],"不会重走生命周期函数":["47.0"],"但有时候希望缓存的组件能够再次进行渲染":["47.0"],"针对这个问题":["47.0"],"vue3中keepalive源码":["47.1"],"是一个用于在下次":["48.0"],"dom":["48.0","49.1","49.7","64.3","64.21"],"更新循环结束之后执行回调函数的方法":["48.0"],"其内部原理涉及到":["48.0"],"浏览器中":["48.1"],"每个宏任务结束后都会检查微任务队列":["48.1"],"如果有任务则依次执行":["48.1"],"当所有微任务执行完成后":["48.1"],"才会执行下一个宏任务":["48.1"],"因此可以通过将任务作为微任务添加到微任务队列中":["48.1"],"来确保任务在所有宏任务执行完毕后立即执行":["48.1"],"info":["48.1","81.1","93.12"],"javascript的事件运行机制":["48.1"],"进程与线程":["48.1"],"进程":["48.1"],"看下面一个例子":["48.2"],"比如当dom内容改变后":["48.2"],"我们需要获取的最新高度":["48.2"],"vue2中nexttick源码":["48.3"],"路径":["48.3"],"src":["48.3","48.5","62.9","62.10"],"core":["48.3","48.5"],"util":["48.3"],"next":["48.3","65.35","84.25","84.27"],"tick":["48.3"],"这段源码分为两个部分":["48.3"],"一是判断当前环境能使用的最合适的":["48.3"],"api":["48.3","50.5","62.42","68.46","70.3","70.9"],"并保存异步函数":["48.3"],"二是调用异步函数执行回调队列":["48.3"],"环境判断":["48.3"],"主要是判断用哪个宏任务或微任务":["48.3"],"因为宏任务耗费的时间是大于微任务的":["48.3"],"所以先使用微任务":["48.3"],"判断顺序如下":["48.3"],"promise":["48.3","48.5","65.55","93.14","112.15"],"mutationobserver":["48.3"],"setimmediate":["48.3"],"settimeout":["48.3","94.3","94.4"],"export":["48.3","48.5","55.3","120.6"],"let":["48.3","48.5","61.37","83.1","83.3","83.5","83.6","84.1","84.4","84.5","84.28","90.0","104.3","106.6","106.7","115.3","124.5"],"isusingmicrotask":["48.3"],"false":["48.3"],"是否启用微任务开关":["48.3"],"callbacks":["48.3"],"回调队列":["48.3"],"pending":["48.3"],"异步控制开关":["48.3"],"标记是否在执行回调函数":["48.3"],"该方法负责执行队列中的全部回调":["48.3"],"vue3的例子如下":["48.4"],"nexttick源码":["48.5"],"源码地址":["48.5"],"packages":["48.5"],"runtime":["48.5"],"sheduler":["48.5"],"ts":["48.5"],"resolvedpromise":["48.5"],"any":["48.5","56.2","115.3"],"ressolve":["48.5"],"currentflushpromise":["48.5"],"void":["48.5","94.5","98.2","112.11"],"null":["48.5","68.20","99.1","99.4","112.9","120.4"],"nexttick":["48.5"],"this":["48.5","64.5","80.0","83.12","84.6","84.9","93.16","98.2","98.3","98.4","98.5","98.6","98.7","106.5","112.13","112.16","112.17","120.4","120.6"],"fn":["48.5","98.3"],"p":["48.5"],"resolvepromise":["48.5"],"then":["48.5","112.15"],"bind":["48.5","49.1","49.5","61.33","80.0","98.7"],"可以看出nexttick接受一个函数为参数":["48.5"],"同时会创建一个微任务":["48.5"],"在页面调用":["48.5"],"一次弄懂":["48.6"],"指令":["49.0"],"vue指令":["49.1"],"directives":["49.1"],"是一种特殊的标记":["49.1"],"用于在模板中以声明式的方式将某些行为应用到":["49.1"],"指令以":["49.1"],"v":["49.1","65.10","65.31","65.37","65.45","65.47","74.9","74.10","74.11","74.12","74.13","74.14","74.15"],"开头":["49.1"],"后面跟着指令的名称":["49.1"],"js提供了一些内置的指令":["49.1"],"同时也允许开发者自定义指令":["49.1"],"指令attribute的期望值是一个javascript表达式":["49.1"],"除了极少数个例外":["49.1"],"for":["49.1","49.4","61.37","64.18","65.10","74.9","74.10","74.11","74.12","74.13","74.14","74.15","85.0","104.3","115.3"],"on":["49.1","49.7","65.9"],"常见vue指令":["49.2"],"的区别":["49.3"],"基于原始数据多次渲染元素或模板块":["49.4"],"期望绑定值类型":["49.4"],"string":["49.4","61.37","74.15","85.0","93.9","93.10","93.11","98.3","107.0","112.10","112.11","115.4","116.1","120.6"],"iterable":["49.4"],"指令值必须使用特殊语法":["49.4"],"alias":["49.4"],"in":["49.4","61.37","65.35","74.9","74.10","74.11","74.12","74.13","74.14","74.15","104.3"],"expression":["49.4"],"为正在迭代的元素提供一个别名":["49.4"],"item":["49.4","74.9","74.10","74.11","74.12","74.13","74.14","74.15","93.10","93.11"],"items":["49.4"],"动态地绑定一个或多个attribute":["49.5"],"也可以是组件的prop参数":["49.5"],"修饰符":["49.5","49.6","49.7","65.4","82.30"],"camel":["49.5"],"将短横线命名的attribute变更为驼峰式命名":["49.5"],"prop":["49.5","65.3","84.5"],"强制绑定为dom":["49.5"],"property":["49.5"],"attr":["49.5"],"attribute":["49.5"],"用途":["49.5"],"当用于绑定":["49.5"],"或":["49.5","68.20","84.2","103.21","120.2"],"支持额外的值类型":["49.5"],"如数组或者对象":["49.5"],"model":["49.6","65.2","68.11"],"用于在表单控件或者组件上创建双向数据绑定":["49.6"],"指令用于监听":["49.7"],"事件":["49.7"],"stop":["49.7"],"调用":["49.7","106.4"],"event":["49.7","50.2","61.11","65.31"],"stoppropagation":["49.7"],"prevent":["49.7"],"evemt":["49.7"],"preventdefault":["49.7"],"capture":["49.7"],"在捕获模式中调用事件监听器":["49.7"],"self":["49.7"],"只有事件从元素本身发出菜触发处理函数":["49.7"],"keyalias":["49.7"],"只在某些案件下触发处理函数":["49.7"],"once":["49.7"],"vue2":["50.0"],"的生命周期与":["50.0"],"vue3":["50.0"],"的声明是有所区别的":["50.0"],"的生命周期主要是":["50.0"],"生命周期钩子":["50.1"],"描述":["50.1"],"beforecreate":["50.1","50.2"],"created":["50.2","50.3","50.4"],"实例":["50.2"],"进行数据观测":["50.2"],"完成数据观测":["50.2"],"属性和方法的运算":["50.2"],"watch":["50.2","51.12","65.48","65.49","65.50","65.51","65.52"],"事件回调的配置":["50.2"],"可调用":["50.2"],"methods":["50.2"],"数据请求在created和mouted的区别":["50.3"],"是在组件实例一旦创建完成的时候立刻调用":["50.3"],"除了":["50.4","99.4"],"setup":["50.4","50.5"],"替代了":["50.4"],"函数是一个全新的组件选项":["50.5"],"它是":["50.5"],"composition":["50.5","70.9"],"的核心":["50.5"],"用于初始化组件实例":["50.5"],"接收两个参数":["50.5"],"props":["50.5","64.3","64.10","64.19","65.46","68.25"],"context":["50.5","65.40"],"其中":["50.5","105.4","105.6"],"是父组件传递给当前组件实例的属性":["50.5"],"而":["50.5"],"属性则包含了一些":["50.5"],"helper":["50.5"],"的方法和组件选项":["50.5"],"attrs":["50.5"],"slots":["50.5"],"emit":["50.5","65.40"],"我们可以使用vue3提供多个工具函数来定义响应式数据":["50.5"],"监听生命周期钩子":["50.5"],"侦听一个或多个响应式数据源":["51.1"],"watch有三个参数":["51.2"],"侦听器的源":["51.3"],"发生变化时要调用的回调函数":["51.4"],"这个回调函数接收三个参数":["51.4"],"watch属性值":["51.5"],"第三个参数是可选的":["51.5"],"是一个对象":["51.5"],"immediate":["51.5"],"在侦听器创建时立即触发回调":["51.5"],"第一次调用时的旧值是":["51.5"],"undefined":["51.5","83.6","112.9"],"deep":["51.5"],"立即运行一个函数":["51.6"],"watcheffect有两个参数":["51.7"],"当监听的值发生变化时":["51.8"],"会自动再次执行以下回调函数":["51.8"],"第二个参数是一个可选的对象":["51.9"],"支持":["51.9"],"watcheffect":["51.11","51.12"],"vue更新之后的dom":["51.13"],"在vue2":["51.13"],"x中使用nexttick":["51.13"],"在vue3中":["51.13","68.7","68.13"],"手动停止一个侦听器":["51.15"],"请调用":["51.15"],"如果需要等待一些异步数据":["51.16"],"双向绑定原理":["52.0"],"单向绑定非常简单":["52.1"],"就是把":["52.1"],"双向绑定就是在单向绑定的基础上":["52.2"],"通过修改视图":["52.2"],"双向数据绑定由三部分组成":["52.3"],"数据层":["52.3"],"viewmodel的主要职责":["52.4"],"以":["52.5"],"为例":["52.5"],"先看看双向绑定的流程":["52.5"],"new":["52.5","61.18","61.35","61.36","84.1","84.4","84.5","84.9","84.28","98.5","98.7","112.12","112.14","130.3"],"先来一个构造函数":["52.6"],"执行初始化":["52.6"],"对":["52.6","98.7"],"执行响应化处理":["52.6"],"constructor":["52.6","52.7","64.6","68.24","84.9","120.4","120.6"],"compile":["52.7"],"对每个元素节点的指令进行扫描跟解析":["52.7"],"根据指令模版替换数据":["52.7"],"以及绑定相应的更新函数":["52.7"],"compile结构":["52.7"],"el":["52.7"],"vm":["52.7"],"视图中会用到":["52.8"],"中某":["52.8"],"key":["52.8","68.18","68.60","74.9","74.10","74.11","74.12","74.13","74.15","104.3","115.3"],"这称为依赖":["52.8"],"同一个":["52.8"],"可能会出现多次":["52.8"],"每次都需要收集出来用一个":["52.8"],"watcher":["52.8"],"来维护它们":["52.8"],"此过程称为依赖收集":["52.8"],"多个":["52.8"],"需要一个":["52.8"],"dep":["52.8"],"来管理":["52.8"],"需要更新时由":["52.8"],"统一通知":["52.8"],"实现思路":["52.8"],"vue双向绑定":["52.9"],"首页白屏问题以及解决方案":["53.0"],"在谈论首页白屏问题之前":["53.1"],"加载过程":["53.3"],"首先是":["53.3"],"也就是":["53.3"],"fp":["53.3"],"阶段":["53.3"],"全称":["53.3"],"first":["53.3"],"paint":["53.3"],"翻译为":["53.3"],"首次绘制":["53.3"],"是时间线上的第一个时间点":["53.3"],"它代表浏览器第一次向屏幕传输像素的时间":["53.3"],"预渲染":["53.4"],"预渲染就是":["53.4"],"webpack":["53.4","123.2","124.4"],"打包的时候渲染":["53.4"],"通过无头浏览器":["53.4"],"无头浏览器":["53.4"],"打包的时候":["53.4"],"可以把index":["53.4"],"html的内容放入浏览器":["53.4"],"但是浏览器是空白的":["53.4"],"然后当进入页面时直接加载这个index":["53.4"],"但没有ajax请求":["53.4"],"获取到预渲染的页面html内容":["53.4"],"然后再放入index":["53.4"],"积累的知识点":["54.0"],"06":["55.1"],"设计一个函数让两个数字相加":["55.1"],"但不得使用":["55.1"],"或者其它运算符":["55.1"],"require":["55.3","92.4","104.4"],"区别":["55.3","62.38","64.3","65.54"],"来源不同":["55.3"],"来源于ecm":["55.3"],"es6":["55.3","61.37","82.18","82.20","82.34","83.5","83.10","83.21","84.10","85.0"],"exports":["55.3"],"来源于":["55.3"],"commonjs":["55.3","85.0"],"加载时机不同":["55.3"],"unknown":["56.2"],"类型表示没有任何限制":["56.2"],"该类型的变量可以赋予任意类型的值":["56.2"],"一旦设置为":["56.2"],"类型":["56.2","56.3","62.32","99.1","112.9","116.1"],"实际上会关闭这个变量的类型检查":["56.2"],"即使有明显的类型错误":["56.2"],"只要句法正确":["56.2"],"都不会报错":["56.2"],"never":["56.3","85.0","116.1"],"为了保持与":["56.3"],"集合论":["56.3"],"的对应关系":["56.3"],"以及类型运算的完整性":["56.3"],"还引入了":["56.3"],"空类型":["56.3"],"运行在客户端浏览器上":["61.1"],"不用预编译":["61.1"],"直接解析执行代码":["61.1"],"中的基本数据类型":["61.2"],"ajax":["61.3","64.17"],"asynchronous":["61.3"],"and":["61.3"],"xml":["61.3","64.5"],"是一种使用":["61.3"],"进行异步通信的技术":["61.3"],"它可以在不刷新整个页面的情况下":["61.3"],"通过向服务器发送请求并获取响应数据":["61.3"],"实现动态更新页面内容":["61.3"],"常用":["61.4","61.14","61.15","83.0"],"状态码":["61.4"],"含义":["61.4"],"表示客户端应该继续发送请求":["61.4"],"闭包可以简单理解成":["61.6"],"匿名自执行函数":["61.7"],"我们知道所有的变量":["61.7"],"如果不架上":["61.7"],"闭包的写法一般是函数嵌套函数":["61.8"],"可以访问函数外部的变量":["61.8"],"闭包可以访问定义它的函数的参数和局部变量":["61.8"],"甚至可以访问全局变量":["61.8"],"保存变量的状态":["61.8"],"当函数执行完毕后":["61.8"],"闭包仍然可以访问它所引用的变量":["61.8"],"并且这些变量的值不会被回收":["61.8"],"事件委托就是利用时间冒泡":["61.9"],"提高整体运行性能":["61.10"],"假如现在有有00个li标签":["61.10"],"那个li事件都有相同的点击事件":["61.10"],"如果使用循环遍历去触发每个li元素上的事件":["61.10"],"这将会不断与dom节点进行交互":["61.10"],"当一个元素接收到事件的时候":["61.12"],"本地存储":["61.13"],"local":["61.13"],"storage":["61.13","68.43","68.44"],"和cookie都是用于在浏览器端存储数据的两种不同的机制":["61.13"],"主要有以下区别":["61.13"],"存储容量":["61.13"],"cookie的存储容量通常比较小":["61.13"],"新增":["61.16"],"删除键值对":["61.16"],"新增键值对":["61.16"],"面向对象是一种思想":["61.17"],"是基于面向过程而言的":["61.17"],"就是说面向对象是将功能等通过对象来实现":["61.17"],"构造函数也是一个普通函数":["61.18"],"创建方式和普通函数一样":["61.18"],"但是构造函数习惯首字母大写":["61.18"],"调用方式不一样":["61.18"],"普通函数直接调用":["61.18"],"构造函数要用关键字":["61.18"],"来调用":["61.18"],"链接":["61.20"],"async函数其实是":["61.21"],"generatior函数和promise的语法糖":["61.21"],"async就是将generator函数的":["61.21"],"请求传参长度误区":["61.22"],"误区":["61.22"],"我们经常说":["61.22"],"请求参数的大小存在限制":["61.22"],"而post请求的参数大小是无限制的":["61.22"],"请求和":["61.23"],"post":["61.23"],"事件流描述的是从页面中接收事件的顺序":["61.25"],"dom二级事件流包括几个阶段":["61.25"],"call":["61.26","61.33","80.0","80.1","84.6","98.4","98.7","106.4"],"首先是三个事件":["61.28"],"mousedown":["61.28"],"mousemove":["61.28"],"mouseup":["61.28"],"由于字符串":["61.30"],"对象和数组没有固定大小":["61.30"],"所以当它们大小已知时":["61.30"],"才能够对它们进行动态的存储分配":["61.30"],"javascript程序每次创建字符串":["61.30"],"标记清除":["61.31"],"这是最常见的垃圾回收的方式":["61.31"],"当变量进入环境时":["61.31"],"就标记这个变量为":["61.31"],"进入环境":["61.31"],"从逻辑上来讲":["61.31"],"永远不能释放进入环境的变量所占用的内存":["61.31"],"只要执行流程进入相应的环境":["61.31"],"就可以用到它们":["61.31"],"当离开环境时":["61.31"],"就标记离开环境":["61.31"],"在es5中":["61.32"],"我们可以通过":["61.32"],"defineproperty":["61.32","65.56","84.7"],"原理":["61.33","62.36"],"apply":["61.33","80.0","84.8","98.4","98.7"],"或者":["61.33","89.0","103.18"],"方法来实现":["61.33"],"prototype":["61.33","82.4","82.5","82.7","82.8","82.9","82.10","82.13","82.14","82.15","82.16","82.17","82.18","82.31","93.1","100.3","103.1","103.2","103.3","103.4","103.5","103.6","103.7","103.8","103.9","103.10","103.11","103.12","103.14","103.15","103.16","103.17","103.18","103.19","103.20","103.21","103.23","106.8"],"加载完后再加载下一张":["61.34"],"obj":["61.35","61.36","61.37","82.21","82.24","82.25","83.21","84.1","84.5","104.3"],"image":["61.36"],"对象的深度克隆":["61.37"],"通过递归可以简单实现对象的深度克隆":["61.37"],"但是这种方法不管是":["61.37"],"还是":["61.37"],"es5":["61.37"],"实现":["61.37"],"都有同样的缺陷":["61.37"],"就是只能实现特定的":["61.37"],"的深度复制":["61.37"],"比如数组和函数":["61.37"],"不能实现包装对象":["61.37"],"boolean":["61.37","120.6"],"以及":["61.37"],"date":["61.37"],"对象":["61.37","99.3","103.21"],"regexp":["61.37"],"对象的复制":["61.37"],"深度克隆":["61.37"],"deepclone":["61.37"],"newobj":["61.37","104.3"],"instanceof":["61.37"],"i":["61.37"],"全排列":["61.38"],"全排列是一种对给定字符串中的字符进行重新排列的操作":["61.38"],"生成所有可能的排列组合":["61.38"],"permutate":["61.38"],"str":["61.38","115.4"],"result":["61.38"],"length":["61.38","87.0","115.3","120.4"],"在前后端分离的模式下":["61.40"],"前后端的域名是不一致的":["61.40"],"是由":["61.41"],"优化压缩图片":["61.42"],"图片格式的选择":["61.42"],"gif":["61.42"],"提供颜色较少":["61.42"],"指向":["61.43","80.0","98.4"],"indexof":["61.44","103.1"],"手写深拷贝":["61.45"],"深拷贝":["61.45"],"指针赋值":["61.45"],"for循环":["61.46"],"创建类有三种方法":["61.47"],"阻塞与非阻塞区别":["61.48"],"同步":["61.48"],"阻塞的":["61.48"],"重绘与回流":["61.49"],"https":["61.50","90.0","107.0","130.2"],"http叫做超文本传输协议":["61.50"],"是互联网应用最广泛的一种网络协议":["61.50"],"文件合并":["61.51"],"目的是减少":["61.51"],"预加载是指在页面加载完成之前":["61.52"],"常用的图片格式有":["62.1"],"盒模型是一个盛放内容的容器":["62.5"],"它由四部分组成":["62.5"],"元素的具体内容":["62.5"],"content":["62.5"],"标准盒模型":["62.7"],"css3中引入了":["62.7"],"音频标签的使用":["62.8"],"video":["62.9"],"audio":["62.10"],"source":["62.10","65.49","124.1"],"语义化标签":["62.11"],"优点":["62.12"],"提升可访问性":["62.12"],"利于":["62.12"],"seo优化":["62.12"],"边框":["62.14"],"属性名称":["62.14","62.15","62.17","62.18","62.19","62.20"],"radios":["62.14"],"背景":["62.15"],"渐变":["62.16"],"文本效果":["62.17"],"转换":["62.18"],"应用于":["62.18"],"过渡":["62.19"],"动画":["62.20"],"float":["62.21"],"当设置浮动属性时":["62.21"],"并且父元素没有设置高度时":["62.21"],"父元素会出现高度塌陷问题":["62.21"],"给父元素单独定义高度":["62.21"],"这个方法简单快速":["62.21"],"代码量少":["62.21"],"position":["62.22"],"reactive":["62.22","65.51"],"相对定位":["62.22"],"子父元素宽度固定":["62.24"],"设置子元素和父元素的行高一样":["62.25"],"子元素设置为行内块":["62.25"],"再加":["62.25"],"vertical":["62.25"],"子元素相对于父元素绝对定位":["62.26"],"子元素top":["62.26"],"left设置":["62.26"],"子元素的margin":["62.26"],"left和margin":["62.26"],"中间自适应":["62.27"],"margin":["62.27","62.35","68.3","68.5","68.7","68.9","68.11","68.13","74.4"],"负值法":["62.27"],"选择器":["62.30","62.31"],"后代选择器":["62.30"],"元素选择器":["62.30"],"类名选择器":["62.30"],"id选择器":["62.30"],"权重":["62.31"],"属性":["62.32","62.36","62.42","70.5","84.5","100.2","100.3","100.4"],"所有元素":["62.32"],"visibility":["62.32"],"cursor":["62.32"],"块级元素":["62.32","62.34"],"图片懒加载":["62.33"],"相邻的行内元素会排列在同一行":["62.34"],"不会独占一行":["62.34"],"通过给父盒子添加":["62.36"],"添加disable属性":["62.37"],"rem":["62.38"],"em":["62.38"],"绝对长度单位":["62.38"],"媒体查询扩展了":["62.39"],"结构":["62.40"],"作用":["62.41"],"drag":["62.42","70.4"],"如何让页面能够更快地显示和响应":["62.43"],"这里分为三个阶段":["62.43"],"加载阶段能做的主要优化":["62.44"],"减少关键资源个数":["62.44"],"例如把css和js改为内联形式":["62.44"],"关键资源比如原来有3个就减少到1个了":["62.44"],"其实就是说":["62.45"],"优化渲染进程中渲染帧的速度":["62.45"],"浏览器缓存":["62.47"],"用户输入url":["62.48"],"用户在输入url时候":["62.48"],"浏览器会根据url的协议":["62.48"],"在这段内容上加伤协议合成合法的url":["62.48"],"按下回车后":["62.48"],"导航栏显示加载状态":["62.48"],"当用户输入的是关键字的时候":["62.48"],"浏览器会讲输入内容作为搜索条件":["62.48"],"使用用户的默认设置的搜索引擎来进行搜索":["62.48"],"网络进程处理":["62.48"],"网络进程接收到url请求后会先检查本地缓存":["62.48"],"如果有缓存文件":["62.48"],"则先走缓存":["62.48"],"没有则进行网络请求":["62.48"],"开始":["62.48"],"dns解析":["62.48"],"dns解析的详细过程":["62.48"],"dns翻译过来就是域名系统":["62.48"],"是互联网上作为域名和ip地址相互映射的一个分布式数据库":["62.48"],"因为浏览器不能直接通过域名找到对应服务器的ip地址":["62.48"],"所以需要进行dns解析":["62.48"],"查找到对应ip进行访问":["62.48"],"用户在浏览器中输入域名":["62.48"],"操作系统会先检查浏览器的缓存和本地的":["62.48"],"host":["62.48","107.0"],"是否有这个网址记录":["62.48"],"有的话就从记录里找到对应ip地址":["62.48"],"5px的线":["62.49"],"采用":["62.49"],"meta":["62.49","84.1"],"viewport":["62.49"],"js动画和css3动画的差异":["62.50"],"渲染县城分为":["62.50"],"main":["62.50"],"thread":["62.50"],"compositor":["62.50"],"外边距折叠":["62.51"],"hook":["64.1","68.27","68.60"],"用于管理功能组件中的状态":["64.1","68.28"],"useeffect":["64.1","64.8","64.9","68.60"],"用于在功能组件中执行副作用":["64.1","68.29"],"虚拟dom是react中的一个概念":["64.2"],"其中创建了实际dom":["64.2"],"相同点":["64.3","108.5"],"都支持服务器渲染":["64.3"],"都有虚拟":["64.3"],"组件化开发":["64.3"],"参数进行父子组件数据的传递":["64.3"],"都实现":["64.3"],"受控组件的与非受控组件之间的区别在于它们如何管理和更新其状态":["64.4"],"受控组件是状态通过react控制的组件":["64.4"],"组件接收其当前值并通过props来更新它":["64.4"],"当值更改时":["64.4"],"它还会触发回调函数":["64.4"],"这意味着组件不存储自己的内部状态":["64.4"],"相反":["64.4"],"父组件管理该值并将其向下传递到受控组件":["64.4"],"tsx":["64.4"],"组件和函数式组件有什么区别":["64.5"],"基于类的组件和函数组件之间的主要区别在于它们的定义方式以及它们的使用方法":["64.5"],"component基于类的组件被定义为es6类并扩展该类":["64.5"],"它们使用render该方法返回定义组件输出的jsx":["64.5"],"类组件可以通过":["64.5"],"state":["64.5","65.51","68.17"],"生命周期方法是一种挂接到组件生命周期不通阶段的方法":["64.6"],"允许你在特定时间执行特定的代码":["64.6"],"生命周期":["64.6","65.14"],"有什么特点":["64.7","64.8"],"useeffect钩子允许在功能组件中执行副作用":["64.8"],"突变":["64.8"],"通常":["64.9"],"创建需要在组件离开屏幕之前清理或重置的资源":["64.9"],"例如订阅或计时器标识符":["64.9"],"中的道具":["64.10"],"是什么":["64.10","64.13"],"曾与哪些库相连":["64.11"],"状态管理器是帮助管理应用程序状态的工具或库":["64.11"],"何时应该使用全局状态":["64.12"],"的":["64.13","65.40","99.0","104.4","110.0","116.1"],"reducer":["64.13"],"它需要哪些参数":["64.13"],"action":["64.14"],"如何更改redux的状态":["64.14"],"实现了哪种模式":["64.15"],"flux":["64.16"],"思想":["64.16"],"fetch":["64.17","129.3"],"ajax区别":["64.17"],"这三者都是用于发起网络请求的工具或技术":["64.17"],"但它们有一些区别":["64.17"],"hooks":["64.18"],"为什么不能放在if":["64.18"],"里":["64.18"],"组件之间的数据传递":["64.19"],"算法":["64.20"],"diff算法是一种用于比较两个数据结构":["64.20"],"通常是树或数组":["64.20"],"之间的差异的算法":["64.20"],"higher":["64.22"],"vue是一套构建用户界面的渐进式":["65.1"],"数据驱动":["65.2"],"视图内容随着数据的改变而改变":["65.2"],"组件话":["65.2"],"可以增加代码复用性":["65.2"],"可维护性":["65.2"],"可测试性":["65.2"],"提高了开发效率":["65.2"],"方便重复使用":["65.2"],"体现了高内聚低耦合":["65.2"],"details":["65.2"],"mvvm模型":["65.2"],"mvvm":["65.2"],"view":["65.2"],"viewmodel":["65.2"],"是一种前端设计模式":["65.2"],"它将应用程序分为三个部分":["65.2"],"父级":["65.3"],"lazy":["65.4"],"改变后触发":["65.4"],"光标离开":["65.4"],"input":["65.4","65.30","65.37","93.14"],"输入框的时候值才会改变":["65.4"],"模版插值":["65.6"],"循环中":["65.10"],"computed":["65.11","65.52"],"计算属性是用来声明式地描述一个值依赖了其它的值":["65.11"],"vue中路由跳转的方式有两种":["65.12"],"分别是":["65.12","65.15"],"声明式":["65.12"],"跨域解决方案":["65.13"],"路由的实现":["65.15"],"vue路由有三种模式":["65.15"],"userouter":["65.16"],"中的":["65.16","116.1"],"push":["65.16","103.10","130.2"],"是手动调用内部路径切换方法":["65.16"],"transitionto":["65.16"],"路由模式":["65.17"],"模式是用":["65.18"],"createwebhashhistory":["65.18"],"创建的":["65.18"],"history就是":["65.19"],"html5模式":["65.19"],"createwebhistory":["65.19"],"创建":["65.19"],"html5":["65.19"],"history模式优势":["65.20"],"pushstate":["65.20"],"路由传参的两种方式":["65.21"],"params":["65.22","65.24"],"路由参数通常用于标识性的信息":["65.22"],"如资源id":["65.22"],"query":["65.23"],"查询参数适合用于传递非标识性信息":["65.23"],"如筛选条件":["65.23"],"标识性信息":["65.24"],"数据绑定的几种方式":["65.25"],"interpolation":["65.26"],"attributes":["65.27","88.0"],"dynamic":["65.28","65.29"],"form":["65.30"],"的路由钩子函数":["65.32"],"global":["65.33"],"before":["65.33"],"guards":["65.33","65.35"],"beforeeach":["65.33"],"per":["65.34"],"beforerouteenter":["65.35"],"to":["65.35","107.0","127.3","130.2","130.3"],"在路由进入的时候":["65.35"],"但是在组件渲染之前被调用":["65.35"],"beforerouteupdate":["65.35"],"在当前路由改变":["65.35"],"中如何自定义指令":["65.36"],"一个自定义指令是由一个包含类似组件生命周期钩子的对象来定义":["65.37"],"钩子函数会接收到指令所绑定元素作为其参数":["65.37"],"focus":["65.37"],"setup标签版本传递数据的方法还是跟函数版本一致":["65.38"],"只是写法上有所不同":["65.38"],"父组件":["65.38"],"子组件传参版本":["65.40","65.41"],"子组件传值":["65.40"],"setup函数中":["65.40"],"子组件":["65.41","65.46"],"插槽":["65.42"],"slot":["65.42","65.44","65.46"],"简单来说就是子组件中的提供给父组件使用的一个":["65.42"],"坑位":["65.42"],"用":["65.42"],"在父组件中没有提供任何":["65.43"],"插槽内容":["65.43","65.46"],"的时候":["65.43"],"很多时候一个插槽满足不了需求":["65.44"],"需要多个插槽":["65.44"],"于是就有了具名插槽":["65.44"],"比如带有":["65.44"],"属性的插槽":["65.44"],"test":["65.44"],"动态插槽就是插槽名变成了变量的形式":["65.45"],"我们可以随时修改这个变量从而展示不同的效果":["65.45"],"它的写法是":["65.45"],"插槽也可以像组件传递":["65.46"],"那样":["65.46"],"标签绑定属性从而传递给父组件中的":["65.46"],"具名作用域插槽接收参数的方式是通过":["65.47"],"的标签的指令":["65.47"],"侦听单个来源":["65.49"],"watchsource":["65.49"],"callback":["65.49","91.2","94.5"],"默认是懒侦听的":["65.50"],"即仅在侦听起源发生变化时才执行回调函数":["65.50"],"第一个参数是侦听器的源":["65.50"],"侦听一个":["65.51"],"getter":["65.51"],"count":["65.51"],"value":["65.51","81.1","84.5","115.3","116.9","120.4"],"prevalue":["65.51"],"都是":["65.52"],"首屏加载慢的原因":["65.53"],"route":["65.54"],"router":["65.54"],"依然表示路由相关的概念":["65.54"],"但它们功能不尽相同":["65.54"],"路由":["65.54"],"表示应用程序中的一个路由":["65.54"],"路由懒加载":["65.55"],"按需加载路由":["65.55"],"我们可以使用":["65.55"],"defineasynccomponent":["65.55"],"函数来定义异步组件":["65.55"],"该函数接收一个返回值为":["65.55"],"的函数":["65.55","116.6"],"是如何变得更快的":["65.56"],"底层":["65.56"],"源码":["65.56"],"vue3在性能上进行了一系列的优化和改进":["65.56"],"主要通过以下几个方面实现了更好的性能":["65.56"],"proxy":["65.56","84.4","84.5","84.9"],"取代了":["65.56"],"是一个专门为vue":["65.57"],"js应用程序开发的状态管理模式":["65.57"],"通过创建一个集中的数据存储":["65.57"],"方便程序中的所有组件进行访问":["65.57"],"是vue的状态管理工具":["65.57"],"面试相关":["66.0"],"常用的组件通信方式有以下几种":["68.1"],"color":["68.3","68.5","68.7","68.9","68.11","68.13"],"89ddff":["68.3","68.5","68.7","68.9","68.11","68.13"],"10px":["68.3","68.5","68.7","68.9","68.11","68.13"],"父组件将数据传给子组件":["68.3"],"子组件通过props属性接收父组件传递的数据":["68.3"],"子组件通过":["68.5"],"emit方法触发一个自定义事件":["68.5"],"并传递给需要的参数":["68.5"],"defineexpose":["68.7"],"inject":["68.9"],"provide是在父组件中定义的方法":["68.9"],"用于提供数据给子组件":["68.9"],"它接受两个参数":["68.9"],"第一个参数是一个字符串或者一个symbol类型的键":["68.9"],"用于识别提供的数据":["68.9"],"model可以同事支持多个数据双向绑定":["68.11"],"子组件child":["68.11"],"id":["68.11","74.9","74.10","74.11","74.12","74.13","74.15","107.0"],"child":["68.11","106.8"],"button":["68.11"],"click":["68.11"],"changeparentmsg":["68.11"],"可以使用第三方库mitt来实现组件之间的通信":["68.13"],"mitt是一个简单且强大的事件总线库":["68.13"],"类似于vue2中的":["68.13"],"eventbus":["68.13"],"它提供了一种方便的方式来在不同组件中传递事件和数据":["68.13"],"直接修改状态":["68.17"],"而不使用":["68.17"],"在渲染列表时":["68.18"],"将索引作为":["68.18"],"在类组件中":["68.19"],"如果没有将事件处理程序绑定到实例上":["68.19"],"可能会导致":["68.19"],"在渲染函数中定义新的函数":["68.21"],"可能会导致组件重新渲染时创建新的函数实例":["68.21"],"影响性能":["68.21"],"ssr之前接触并不深刻":["68.22"],"在旧版的":["68.23"],"mounting":["68.24"],"构造函数":["68.24","120.6"],"在组件被创建时调用":["68.24"],"updating":["68.25"],"static":["68.25","120.6"],"getderivedstatefromprops":["68.25"],"unmounting":["68.26"],"componentwillunmount":["68.26"],"在组件即将被销毁并从":["68.26"],"用于访问功能组件中react":["68.30"],"用于创建对跨渲染保留的元素或值的可变引用":["68.31"],"缓存回调函数":["68.32"],"用于缓存计算值":["68.33"],"用于使用reducer函数的管理状态":["68.34"],"类似于":["68.35"],"虚拟滚动列表通过只渲染可视区域的列表项":["68.36"],"当用户滚动时":["68.36"],"lighthouse主要是用来做性能检测的工具":["68.37"],"指标":["68.38"],"性能指标":["68.38"],"performance":["68.38"],"可访问性":["68.38"],"经过检测":["68.39"],"lighthouse":["68.39"],"会对上述五个维度给出一个的评估得分":["68.39"],"分值范围0":["68.39"],"跨页面通信是指在web开发中":["68.41"],"参数传递":["68.42"],"通过设置cookie":["68.45"],"websocket是一种在客户端和服务器之间进行全双工通信的协议":["68.47"],"跨域是指在浏览器中":["68.48"],"with":["68.49"],"cross":["68.50","97.1","97.5"],"origin":["68.50","130.2"],"resource":["68.50"],"通过在同源服务器上设置代理服务器来转发请求":["68.51"],"cors":["68.52"],"web":["68.53"],"token":["68.53"],"同源策略限制":["68.54"],"同源策略会限制在":["68.54"],"iframe":["68.54"],"中加载的页面与父页面之间的通信":["68.54"],"除非它们具有相同的协议":["68.54"],"域名和端口":["68.54"],"这意味着如果":["68.54"],"内嵌的页面与父页面不是同源的话":["68.54"],"就无法直接进行跨页面通信":["68.54"],"安全性问题":["68.54"],"如果不小心":["68.54"],"进行跨页面通信可能会引入安全漏洞":["68.54"],"例如跨站脚本攻击":["68.54"],"repo开发方式吗":["68.55"],"mono":["68.55"],"repo":["68.55"],"是指将一个项目的所有代码都存储在一个单独的代码仓库":["68.55"],"repository":["68.55"],"usememo":["68.56"],"前端数据类型":["68.59"],"举个例子说明":["68.60"],"自定义":["68.60"],"使用本地存储管理数据":["68.60"],"uselocalstorage":["68.60"],"initialvalue":["68.60","93.11"],"allsettled":["69.1"],"包括":["69.7"],"自适应布局":["69.8"],"events":["70.3"],"编程":["70.6"],"typescript常用类型工具":["70.7"],"什么是协商缓存":["71.2"],"实现一个防抖函数":["71.8"],"storage区别":["71.10"],"在命中缓存之前发生":["71.11"],"拉斯维加斯场馆3d数字动画":["72.0"],"box":["73.0"],"spinner":["74.1"],"rect1":["74.1"],"rect2":["74.1"],"rect3":["74.1"],"turnovercss":["74.2"],"turn":["74.2"],"over":["74.2"],"width":["74.2","74.4"],"60px":["74.2","74.15"],"scalecss":["74.3"],"scale":["74.3","74.6"],"double":["74.3","93.17"],"bounce1":["74.3","74.6"],"cuberotation":["74.4"],"cube":["74.4"],"roate":["74.4"],"cube1":["74.4"],"cube2":["74.4"],"100px":["74.4"],"auto":["74.4"],"dotroate":["74.5"],"dot":["74.5"],"rotate":["74.5","74.7"],"dot1":["74.5"],"dot2":["74.5"],"scaleloading":["74.6"],"loading":["74.6","74.9","74.10","74.11","74.12","74.13","74.14","74.15"],"bounce2":["74.6"],"bounce3":["74.6"],"gradientrotate":["74.7"],"gradient":["74.7"],"circleloading":["74.8"],"circle":["74.8","74.9","74.10","74.11","74.12","74.13","74.15"],"container":["74.8","116.9"],"container1":["74.8"],"circle1":["74.8"],"circle2":["74.8"],"circle3":["74.8"],"circle4":["74.8"],"container2":["74.8"],"diverge":["74.9"],"center":["74.9","74.10","74.11","74.12","74.13","74.14","74.15"],"animation":["74.9","74.10","74.11","74.12","74.13","74.15"],"animationlist":["74.9","74.10","74.11","74.12","74.13","74.14","74.15"],"big":["74.9"],"rotationcontraction":["74.10"],"calss":["74.10"],"旋转收缩":["74.11"],"contraction":["74.11"],"动态位置":["74.12"],"moving":["74.12"],"ricerotate":["74.13"],"musicdance":["74.14"],"trianglebloom":["74.15"],"bottom":["74.15"],"left":["74.15","114.1","114.2","114.4","116.9"],"80px":["74.15"],"translatex":["74.15"],"translatey":["74.15"],"30px":["74.15"],"rotatedeg1":["74.15"],"0deg":["74.15"],"rotatedeg2":["74.15"],"180deg":["74.15"],"40px":["74.15"],"优先级":["75.0"],"浏览器通过优先级来判断哪些属性值与一个元素最为相关":["75.0"],"从而在该元素上应用这些属性值":["75.0"],"优先级是基于不同种类选择器组成的匹配规则":["75.0"],"权重优先级作用":["75.0"],"在同一个元素使用不同的方式":["75.0"],"声明了相同的一条或多条":["75.0"],"规则":["75.0"],"浏览器会通过权重来判断哪一种方式的声明":["75.0"],"与这个元素最为相关":["75.0"],"从而在该元素上应用这个声明方式声明的所有":["75.0"],"优先级就是分配给指定的":["75.0"],"声明的一个权重":["75.0"],"它由":["75.0"],"实际效果":["76.0","77.0"],"backgrounddemo":["76.0"],"代码块":["76.0"],"dazzlingcss":["79.0"],"的区分":["80.0"],"在原生js中会有三个很常见的函数":["80.0"],"它们的作用就是改变当前函数的":["80.0"],"指针":["80.0"],"但是细微来说它们还是有不同的":["80.0"],"改变函数的指向的同时":["80.0"],"立即进行调用":["80.0"],"则是在函数进行调用之前":["80.0"],"就强行给变了":["80.0"],"的指向":["80.0"],"进行前":["80.0"],"它的效果是返回一个函数":["80.0"],"只是给变了":["80.0"],"document":["81.0","81.1","81.2","87.0"],"是直接存储在浏览器的一小串数据":["81.0"],"它们是":["81.0"],"http":["81.0","85.0"],"cookie中读取":["81.1"],"你的浏览器是否存储了本网站的任何cookie":["81.1"],"让我们来看看":["81.1"],"在javascript":["81.1"],"我们使用谷歌分析来统计":["81.1"],"所以应该存一些cookie":["81.1"],"console":["81.1","82.12","84.1","98.2","98.3","98.5","98.7","101.0"],"log":["81.1","82.12","84.1","98.2","98.3","98.5","98.7","101.0","114.2","127.3","130.3","131.2"],"cookie":["81.1","81.2","81.5"],"的值是由":["81.1"],"我们可以写入":["81.2"],"但这不是一个数据属性":["81.2"],"它是一个":["81.2"],"访问器":["81.2"],"对其的赋值操作会被特殊处理":["81.2"],"对于":["81.2","116.7"],"的写入操作只会更新其中提到的cookie":["81.2"],"而不会涉及其它cookie":["81.2"],"mypath":["81.3"],"url路径前缀必须是绝对路径":["81.3"],"site":["81.4","97.1","97.5"],"com":["81.4","85.0","90.0","107.0","130.2"],"domain控制了可访问cookie的域":["81.4"],"但是在实际中":["81.4"],"有一些限制":["81.4"],"我们无法设置任何域":["81.4"],"无法从另一个二级域访问cookie":["81.4"],"other":["81.4"],"永远不会收到在":["81.4"],"max":["81.5"],"age":["81.5","84.5","93.10","107.0"],"默认情况下":["81.5"],"如果一个cookie没有设置这两个参数中的任何一个":["81.5"],"那么在关闭浏览器后":["81.5"],"它就会消失":["81.5"],"此类cookie被称为":["81.5"],"session":["81.5"],"为了让cookie在关闭浏览器后仍然存在":["81.5"],"cookiey应该只能被通过https传输":["81.6"],"数据类型的扩展":["82.0"],"使用反引号":["82.2"],"包裹的字符串":["82.2"],"支持多行文本和嵌入表达式":["82.2"],"允许定义自定义的字符串处理函数":["82.3"],"以处理模版字符串":["82.3"],"includes":["82.4","103.19"],"startwith":["82.5"],"endwith":["82.5"],"propotype":["82.6"],"fromcodepoint":["82.7"],"raw":["82.8"],"用于获取一个模版字符串的原始字符串形式":["82.8"],"忽略其中的转义字符":["82.8"],"codepointat":["82.9"],"用于返回指定位置的字符的码点":["82.9"],"normalize":["82.10"],"扩展运算符类似":["82.12"],"rest":["82.12","83.15"],"参数的逆运算":["82.12","83.15"],"将一个数组转为用逗号分隔的参数序列":["82.12"],"该方法用于将两类对象转为真正的数组":["82.13"],"类似数组的对象":["82.13"],"like":["82.13"],"和可遍历":["82.13"],"of":["82.14","84.29"],"根据传入的参数创建一个新数组":["82.14"],"find":["82.15","103.5","120.4"],"findindex":["82.15"],"fill":["82.16"],"使用固定值填充一个数组中从起始索引":["82.16"],"默认为":["82.16"],"copywithin":["82.17"],"用于将数组中的一部分元素复制到指定位置":["82.17"],"keys":["82.18"],"values":["82.18"],"entries":["82.18"],"提供三个新的方法":["82.18"],"允许在大括号里面":["82.20"],"直接写入变量和函数":["82.20"],"作为对象的属性和方法":["82.20"],"定义对象的属性":["82.21","83.21"],"有两种方法":["82.21","83.21"],"方法一":["82.21","83.21","90.0"],"is":["82.22","84.5","116.6"],"value1":["82.22"],"value2":["82.22"],"用于比较两个值是否相同":["82.22"],"assign":["82.23"],"sources":["82.23"],"将一个或多个源对象的属性复制到目标对象中":["82.23"],"getprototypeof":["82.24"],"setprototypeof":["82.25"],"在es6之前":["82.27","83.23"],"regexp构造函数不允许使用第二个参数添加修饰符":["82.27"],"用于返回正则表达式的修饰符":["82.28"],"用于处理大于":["82.29"],"uffff":["82.29"],"也称为":["82.30"],"粘连":["82.30"],"用于指定只从目标字符串的当前位置开始匹配":["82.30"],"sticky":["82.31"],"字符串对象的":["82.32"],"之前":["82.34"],"不能直接为函数的参数指定默认值":["82.34"],"只能采用变通的方法":["82.34"],"func":["82.34","130.3"],"新增了一个指数运算符":["82.36"],"一":["83.0"],"关键字是用于声明一个常量":["83.3"],"其值在声明后不能再被改变":["83.3"],"声明的变量也是块级作用域的":["83.3"],"允许按照一定的模式":["83.5"],"从数组和对象中提取值":["83.5"],"对变量进行赋值":["83.5"],"这个过程被称为解构":["83.5"],"destructuring":["83.5","85.0"],"基本用法":["83.5","115.4"],"之前赋值的写法":["83.5"],"可以写成这种形式":["83.5"],"上面这种写法属于":["83.5"],"模式匹配":["83.5"],"对象的解构与数组有一个重要的不同":["83.6"],"数组的元素是按次序排列的":["83.6"],"变量的取值由它们的位置决定":["83.6"],"而对象的属性没有次序":["83.6"],"变量必须与属性同名":["83.6"],"才能取到正确的值":["83.6"],"bar":["83.6","85.0","98.5"],"foo":["83.6","83.21","84.2","85.0","98.5","98.7"],"这是foo":["83.6"],"这是bar":["83.6"],"如果解构失败":["83.6"],"变量的值等于":["83.6"],"bar2":["83.6"],"如果变量名与属性名不一致":["83.6"],"则必须写成下面这样":["83.6"],"字符串也可以解构赋值":["83.7"],"这是因为在解构字符串的时候":["83.7"],"字符串被转化成了一个类数组对象":["83.7"],"解构赋值时候":["83.8"],"如果等号右边是数值和布尔值":["83.8"],"add":["83.9","84.9","84.18","84.28","130.2","130.3"],"y":["83.9","112.5"],"上述示例中":["83.9","115.3"],"我们可以在函数参数中设置默认值":["83.10"],"这意味着如果调用函数的时候没有为参数提供有效值":["83.10"],"它们将会使用默认值":["83.10"],"这对简化函数调用和处理缺少参数时的情况有用":["83.10"],"greet":["83.10"],"箭头函数具有简洁的语法":["83.11"],"清晰的上下文":["83.11"],"继承外部作用域的arguments等特点":["83.11"],"适合简化代码":["83.11"],"箭头函数没有自己的":["83.12"],"箭头函数是匿名函数":["83.13"],"不能作为构造函数":["83.13"],"模版字符串是es6中引入的一种新的字符串语法":["83.14"],"它允许字符串中插入变量或者表达式":["83.14"],"而不需要使用字符串拼接符号":["83.14"],"模版字符串使用反引号":["83.14"],"扩展操作符用于展开可迭代对象":["83.15"],"字符串等":["83.15"],"好比":["83.15"],"将其元素逐个展开":["83.15"],"以便于在函数调用":["83.15"],"数组字面量":["83.15"],"对象字面量中使用":["83.15"],"使用扩展操作符时":["83.15"],"arr1":["83.18"],"es6引入了一种更简洁的方式来定义对象字面量":["83.19"],"es6中":["83.20"],"可以使用更简洁的语法来定义对象字面量":["83.20"],"还可以直接在对象字面量中定义方法":["83.20"],"javascript中":["83.21"],"方法二":["83.21"],"bc":["83.21"],"es6引入了类":["83.22"],"的概念":["83.22"],"使得面向对象的编程变得更加直观和易于理解":["83.22"],"类是一种蓝图或模板":["83.22"],"模块化是一种组织和管理javascript代码的方法":["83.23"],"它将代码拆分为独立的模块":["83.23"],"每个模块都有自己的作用域和功能":["83.23"],"这种方法有助于提高代码的可维护性":["83.23"],"可重用性和可扩展性":["83.23"],"二":["84.0"],"用于修改某些操作的默认行为":["84.1"],"等同于在语言层面做出修改":["84.1"],"所以属于一种":["84.1"],"元编程":["84.1"],"programming":["84.1"],"即对编程语言进行编程":["84.1"],"proxy可以理解成":["84.1"],"在目标对象之前架设一层拦截":["84.1"],"外界对该对象进行访问":["84.1"],"都必须先通过这层拦截":["84.1"],"因此提供了一种机制":["84.1"],"可以对外界的访问进行过滤和改写":["84.1"],"proxy这个词的原意是代理":["84.1"],"用在这里表示由它":["84.1"],"来代理某些操作":["84.1"],"可以翻译为":["84.1"],"代理器":["84.1"],"get":["84.1","84.2","84.13"],"propkey":["84.1","84.2","84.4"],"receiver":["84.1","84.2"],"getting":["84.1"],"reflect":["84.1","84.8","84.9"],"set":["84.1","84.2","84.9","84.13","84.28","84.29","92.7","93.12","103.21"],"handler":["84.2","84.6"],"支持的拦截操作":["84.2"],"操作":["84.2","84.6"],"返回值":["84.2"],"拦截对象属性的读取":["84.2"],"实例的方法":["84.3"],"方法用于拦截某个属性的读取操作":["84.4"],"可以接收三个函数":["84.4"],"依次为目标对象":["84.4","84.5"],"属性名和proxy实例本身":["84.4"],"严格地说":["84.4"],"是操作行为所针对的对象":["84.4"],"其中最后一个参数可选":["84.4","84.5"],"person":["84.4","84.5"],"张三":["84.4","93.9"],"方法用来拦截某个属性的赋值操作":["84.5"],"可以接受四个参数":["84.5"],"属性名":["84.5"],"属性值和":["84.5"],"实例本身":["84.5"],"嘉定":["84.5"],"对象有一个":["84.5"],"该属性应该是一个不大于":["84.5"],"的整数":["84.5"],"那么可以使用":["84.5"],"保证":["84.5"],"的属性值符合要求":["84.5"],"validator":["84.5"],"isinteger":["84.5"],"throw":["84.5"],"typeerror":["84.5"],"the":["84.5"],"not":["84.5"],"an":["84.5"],"integer":["84.5"],"方法拦截函数的调用":["84.6"],"方法可以接受三个参数":["84.6"],"分别是目标对象":["84.6"],"目标对象的上下文对象":["84.6"],"目标对象的参数数组":["84.6"],"是es6":["84.7"],"中操作对象而提供的新api":["84.7"],"是为了解决在es6之前使用对象的操作存在一些不一致和不直观的地方":["84.7"],"有时会抛出错误的问题":["84.7"],"基本特点":["84.7"],"对象的一些明显属于语言内部的方法":["84.7"],"放到":["84.7"],"对象上":["84.7"],"现阶段":["84.7"],"某些方法同时在":["84.7"],"对象上部署":["84.7"],"未来的新方法将只部署在":["84.7"],"也就是说":["84.7","84.25"],"对象上可以拿到语言内部的方法":["84.7"],"修改某些":["84.7"],"方法的返回结果":["84.7"],"让其不会抛出错误":["84.7"],"thisarg":["84.8"],"实现一个观察者模式":["84.9"],"创建一个观察者对象":["84.9"],"observer":["84.9"],"listeners":["84.9"],"添加观察者":["84.9"],"subscribe":["84.9"],"listener":["84.9"],"移除观察者":["84.9"],"unsubscribe":["84.9"],"之前对象属性名都是字符串":["84.10"],"这容易造成属性名的冲突":["84.10"],"引入了一种新的原始数据类型":["84.10"],"表示独一无二的值":["84.10"],"它属于":["84.10"],"weakmap":["84.11","84.14"],"map是一种键值对的集合":["84.12"],"返回键值对":["84.13"],"添加键值对":["84.13"],"返回实例":["84.13","84.18"],"存储":["84.15"],"方法":["84.16","84.18","84.21","84.25","84.28","106.8"],"添加值":["84.18"],"delete":["84.18","120.4"],"储存dom节点":["84.20"],"iterator":["84.22","84.23","84.26","84.28","85.0"],"为各种数据结构提供一个统一的":["84.24"],"创建一个指针对象":["84.25"],"指向当前数据结构的起始位置":["84.25"],"遍历器对象本质上":["84.25"],"就是一个":["84.25"],"指针对象":["84.25"],"第一次调用指针对象的":["84.25"],"可以将指针指向数据结构的第一个成员":["84.25"],"第二次调用指针对象的":["84.25"],"指针就指向数据结构的第二个成员":["84.25"],"不断调用指针对象的":["84.25"],"直到它只想数据结构的结束位置":["84.25"],"下一步操作":["84.27"],"解构赋值":["84.28","85.0"],"对数组和":["84.28"],"结构进行解构赋值时":["84.28"],"会默认使用":["84.28"],"symbol":["84.28"],"循环":["84.29"],"循环用于遍历可迭代对象":["84.29"],"例如数组":["84.29"],"字符串":["84.29"],"map":["84.29","91.1","91.2","93.13","103.2","103.21","124.1","124.3","124.4"],"它会迭代对象的每个元素并执行指定的代码块":["84.29"],"循环遍历数组":["84.29"],"generator":["84.30","85.0"],"gererator":["84.30"],"关键字与函数名之间有一个星号":["84.31"],"函数体内部使用":["84.31"],"yield":["84.31"],"表达式":["84.31"],"定义不同的内部状态":["84.31"],"的一些配置命令":["85.0"],"env":["85.0"],"browser":["85.0"],"node":["85.0","92.2","109.0"],"ecmafeatures":["85.0"],"lambda表达式":["85.0"],"arrowfunctions":["85.0"],"classes":["85.0"],"ruanyifeng":["85.0"],"docs":["85.0"],"函数参数的默认值":["85.0"],"defaultparams":["85.0"],"块级作用域":["85.0"],"允许使用let":["85.0"],"blockbindings":["85.0"],"允许使用模块":["85.0"],"模块内默认严格模式":["85.0"],"modules":["85.0"],"允许字面量定义对象时":["85.0"],"用表达式做属性名":["85.0"],"属性名表达式":["85.0"],"objectliteralcomputedproperties":["85.0"],"允许对象字面量方法名简写":["85.0"],"method":["85.0"],"hello":["85.0","101.0","130.3"],"等同于":["85.0"],"objectliteralshorthandmethods":["85.0"],"对象字面量属性名简写":["85.0"],"baz":["85.0"],"objectliteralshorthandproperties":["85.0"],"rest参数":["85.0"],"restparams":["85.0"],"扩展运算符":["85.0"],"spread":["85.0"],"of循环":["85.0"],"forof":["85.0"],"generators":["85.0"],"模板字符串":["85.0"],"templatestrings":["85.0"],"superinfunctions":["85.0"],"对象的扩展运算符":["85.0"],"experimentalobjectrestspread":["85.0"],"rules":["85.0"],"定义对象的set存取器属性时":["85.0"],"强制定义get":["85.0"],"accessor":["85.0"],"pairs":["85.0"],"指定数组的元素之间要以空格隔开":["85.0"],"后面":["85.0"],"never参数":["85.0"],"之前和":["85.0"],"之后不能带空格":["85.0"],"always参数":["85.0"],"之后必须带空格":["85.0"],"bracket":["85.0"],"spacing":["85.0"],"在块级作用域外访问块内定义的变量是否报错提示":["85.0"],"block":["85.0"],"scoped":["85.0"],"while":["85.0"],"后面的":["85.0"],"必须与if在同一行":["85.0"],"a标签直接下载":["87.0"],"alink":["87.0"],"createelement":["87.0"],"download":["87.0"],"split":["87.0"],"offsetwidth":["88.0"],"代表了元素的宽度":["88.0"],"包括边框和填充":["88.0"],"但不是边距":["88.0"],"offsetheight":["88.0"],"代表了元素的高度":["88.0"],"offsettop":["88.0"],"代表了返回元素的上外缘距离最近采用定位父元素内壁的距离":["88.0"],"如果父元素中没有采用定位的":["88.0"],"则是获取上外边缘距离文档内壁的距离":["88.0"],"offsetleft":["88.0"],"此属性和offsettop的原理是一样的":["88.0"],"只不过方位不同":["88.0"],"scrolltop":["88.0"],"设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离":["88.0"],"javascript的":["89.0"],"esm":["89.0"],"amd":["89.0"],"umd":["89.0"],"cjs":["89.0"],"esm代表es模块":["89.0"],"是javascript提出的实现一个标准模块的系统方案":["89.0"],"类似":["89.0"],"url":["90.0","107.0"],"zhidao":["90.0"],"baidu":["90.0"],"question":["90.0"],"1768422895052400180":["90.0"],"fr":["90.0"],"iks":["90.0"],"word":["90.0"],"slice":["90.0","103.17"],"ie":["90.0"],"gbk":["90.0"],"map与array":["91.0"],"方法创建一个新数组":["91.1"],"这个新数组由原数组中的每个元素都调用一次提供的函数后的返回值组成":["91.1"],"语法":["91.1"],"mymap":["91.2"],"moment":["92.0","92.6","92.7","92.11","92.13","92.14","92.15"],"引入moment":["92.1"],"js方式引入":["92.2"],"设定moment区域为中国":["92.4"],"获取时间":["92.6"],"获取当前时间":["92.6"],"获取今天0时0分0秒":["92.6"],"startof":["92.6"],"day":["92.6"],"获取本周第一天":["92.6"],"周日":["92.6"],"0时0分0秒":["92.6"],"week":["92.6"],"获取本周周一0时0分0秒":["92.6"],"设置时间":["92.7"],"设置年份":["92.7"],"year":["92.7"],"设置月份":["92.7"],"month":["92.7"],"january":["92.7"],"december":["92.7"],"格式化时间":["92.8"],"格式代码":["92.8"],"返回值例子":["92.8"],"数字表示的月份":["92.8"],"没有前导零":["92.8"],"1到12":["92.8"],"mm":["92.8","92.15"],"有前导零":["92.8"],"01到12":["92.8"],"mmm":["92.8"],"三个字母缩写表示的月份":["92.8"],"jan到dec":["92.8"],"mmmm":["92.8"],"月份":["92.8"],"完整的文本格式":["92.8"],"january到december":["92.8"],"q":["92.8"],"比较时间":["92.9"],"获取两个日期之间的时间":["92.9"],"日期格式化输出实例":["92.11"],"format":["92.11","92.14","92.15"],"相对时间":["92.12"],"输出实例":["92.12"],"日历时间输出实例":["92.13"],"subtract":["92.13"],"多语言支持输出实例":["92.14"],"其它输出实例":["92.15"],"yyyy":["92.15"],"dd":["92.15"],"格式化显示当前时间":["92.15"],"reduce":["93.0","93.7","93.13","93.15","93.16","103.8"],"reduce方法主要接收两个参数":["93.2"],"回调函数是数组中每个元素执行的函数":["93.3"],"其返回值将作为下一次调用回调函数时的":["93.3"],"accumulator":["93.3","93.4"],"参数":["93.3","112.6","112.14","112.16"],"对于最后一次调用":["93.3"],"第一次调用回调函数初始化":["93.4"],"的值":["93.4"],"方法不仅可以求纯数字数组的和":["93.7"],"针对对象数组里的值也可以求和":["93.7"],"names":["93.9"],"陈大":["93.9"],"李二":["93.9"],"朱四":["93.9"],"王五":["93.9"],"type":["93.10","93.11","112.7","112.10","112.11","112.12","112.14","116.3","116.6","116.9","116.12"],"objarr":["93.10"],"alice":["93.10"],"连接包含在对象数组中的数组":["93.11"],"books":["93.11"],"备注":["93.12"],"可以使用":["93.12","115.2","127.2"],"来实现同样的效果":["93.12"],"来替代":["93.13"],"filer":["93.13"],"链接一系列":["93.14"],"处理程序":["93.14"],"param":["93.14","120.6"],"一个":["93.14"],"处理程序列表":["93.14"],"每个处理程序接收前一个处理程序解决的结果并返回另一个":["93.14"],"开始调用":["93.14"],"会跳过稀疏数组中缺失的元素":["93.15"],"但不会跳过":["93.15"],"方法读取":["93.16"],"组合使用的构建块":["93.17"],"全局的":["94.1"],"方法设置一个定时器":["94.1"],"一旦定时器到期":["94.1"],"方法重复调用一个函数或执行一个代码片段":["94.2"],"在每次调用之间具有固定的时间间隔":["94.2"],"尽管":["94.3"],"setintervalfunctional":["94.5"],"window":["94.6","107.0"],"告诉浏览器":["94.6"],"你希望执行一个动画":["94.6"],"并且要求浏览器在下次重绘之前调用指定的回调函数更新动画":["94.6"],"该方法需要传入一个回调函数作为参数":["94.6"],"该回调函数会在浏览器下一次重绘之前执行":["94.6"],"requestanimationframe":["94.7"],"这里我们将发出方成为客户端":["95.1"],"接收方成为服务端":["95.1"],"tcp建立连接主要分为三部分":["95.1"],"可简单描述为":["95.1"],"客户端向服务端发起tcp请求":["95.1"],"服务端响应客户端":["95.1"],"同意建立tcp连接":["95.1"],"客户端向服务端最后确认tcp连接建立":["95.1"],"术语":["95.1"],"在数据传输完毕之后会进行tcp四次握手即是tcp连接关闭":["95.2"],"tcp需要进行四次挥手的原因在于tcp连接是双全工":["95.2"],"即双方通信":["95.2"],"每个方向都需要进行单独关闭":["95.2"],"四次挥手详细过程":["95.2"],"最开始的一次挥手":["95.2"],"客户端发起":["95.2"],"fin":["95.2"],"包":["95.2"],"客户端进入":["95.2"],"wait":["95.2"],"internet通信":["95.3"],"ip":["96.0"],"四":["96.0"],"五层":["96.0"],"osi七层模型区别":["96.0"],"网络层次可划分为":["96.0"],"四层因特网协议栈":["96.0"],"csrf攻击":["97.0"],"中内嵌的文本中":["97.2"],"恶意内容以":["97.2"],"script":["97.2"],"攻击分类":["97.3"],"根据攻击的来源":["97.3"],"xss攻击可以分为存储行":["97.3"],"httponly":["97.4"],"在cookie中设置httponly属性之后":["97.4"],"js脚本将无法获取到cookie信息":["97.4"],"输入过滤":["97.4"],"一般是用于对于输入格式的检查":["97.4"],"邮箱":["97.4"],"电话号码":["97.4"],"request":["97.5"],"验证码":["97.6"],"强制用户必须与应用进行交互":["97.6"],"csrf":["97.7"],"xss攻击和csrf攻击":["97.8"],"在函数体中":["98.1"],"非显式或隐式地简单调用函数时":["98.1"],"在严格模式下":["98.1"],"函数内的":["98.1"],"正常模式下":["98.2"],"this指向的是":["98.2"],"全局window对象":["98.2"],"func1":["98.2"],"interface":["98.3","112.5","112.17","115.4","116.1"],"student":["98.3"],"lucas":["98.3","98.5"],"改变this指向":["98.4"],"它们都是用来改变相关函数的":["98.4"],"但这个":["98.4"],"instance":["98.5"],"箭头函数的":["98.6"],"指向的是由其所属函数或者全局作用域决定的":["98.6"],"我们常常把通过":["98.7"],"进行绑定的情况称为显示绑定":["98.7"],"根据调用关系确定":["98.7"],"指向的情况称为隐式绑定":["98.7"],"显示绑定的优先级会比隐式绑定的优先级高":["98.7"],"obj1":["98.7","104.4","104.5"],"obj2":["98.7"],"是一种有着":["99.0"],"动态类型":["99.0"],"动态语言":["99.0"],"typeof返回值":["99.1"],"对象包装器":["99.1"],"不适用":["99.1"],"在计算机科学中":["99.3","123.1"],"是指内存中的可以被标识符引用的一块区域":["99.3"],"对象是唯一可变的值":["99.3"],"事实上":["99.3"],"也是具有额外可调用能力的对象":["99.3"],"typeof":["99.4"],"操作符":["99.4","116.7"],"运算符返回一个字符串":["99.4"],"表示操作数的类型":["99.4"],"所有原始类型都可以使用":["99.4"],"运算符进行测试":["99.4"],"javascript中对象分为":["100.1"],"函数对象":["100.1"],"普通对象":["100.1"],"每个对象都有":["100.1"],"proto":["100.1"],"是函数独有的属性":["100.2"],"从图中可以看到它从一个对象指向另一个对象":["100.2"],"属性是对象独有的":["100.3"],"包括函数":["100.3"],"从图中我们可以看到":["100.3"],"属性是从一个对象指向另一个对象":["100.3"],"即从一个对象指向该对象的原型对象":["100.3"],"也可以理解为父对象":["100.3"],"显然它的含义就是告诉我们一个对象原型对象是谁":["100.3"],"中我们可以知道":["100.3"],"parent":["100.3","106.4","106.5","106.6","106.7","106.8"],"上添加的属性方法叫做原型属性和原型方法":["100.3"],"是对象才有的属性":["100.4"],"从图中看到它是从一个对象指向一个函数的":["100.4"],"指向的函数就是该对象的构造函数":["100.4"],"每个对象都有构造函数":["100.4"],"就好比上面的":["100.4"],"p1":["100.4"],"就是一个对象":["100.4"],"的构造函数是谁呢":["100.4"],"javascript原型":["100.5"],"关于变量的提升":["101.0"],"先看下面一个例子":["101.0"],"此时打印出来的是5":["101.0"],"你以为打印的是undefined":["101.0"],"错":["101.0"],"打印的是":["101.0"],"再来看一个例子":["101.0"],"现在你以为它会报错":["101.0"],"不存在的":["101.0"],"reflow":["102.1","102.4"],"repaint":["102.2","102.4"],"当render":["102.2"],"树中的一些元素需要更新属性":["102.2"],"而这些属性只是影响元素的外观":["102.2"],"风格":["102.2"],"而不会影响布局的":["102.2"],"比如background":["102.2"],"的节点叫做":["102.3"],"渲染器":["102.3"],"repaint重绘":["102.4"],"回流":["102.4"],"必定引起":["102.4"],"重绘":["102.4"],"尽量避免改变布局属性":["102.5"],"减少选择器的复杂性":["102.6"],"我们也知道回流的花销也不小":["102.7"],"该方法返回数组中第一次出现给定元素的下标":["103.1"],"如果不存在则返回":["103.1"],"该方法是将数组中的每个元素调用一个提供的函数":["103.2"],"结果作为一个新的数组返回":["103.2"],"foreach":["103.3"],"该方法是将数组中的每个元素执行传进提供的函数":["103.3"],"该方法是将所有元素进行判断":["103.4","103.5","103.6"],"every":["103.6"],"如果所有的元素都符合判断条件":["103.6"],"some":["103.7"],"该方法将所有元素进行判断":["103.7"],"如果存在至少一个元素符合判断条件":["103.7"],"pop":["103.9"],"该方法是在数组后面删除最后一个元素":["103.9"],"该方法是在数组最后一个元素后面添加一个或多个元素":["103.10"],"shift":["103.11"],"该方法是会删除掉数组的第一项":["103.11"],"unshift":["103.12"],"该方法是将一个或者多个元素添加到数组的开头":["103.12"],"返回新数组的长度":["103.12"],"isarray":["103.13"],"该方法是判断目标元素是否为数组":["103.13"],"返回布尔值":["103.13"],"concat":["103.14"],"该方法可以讲多个数组拼接成一个数组":["103.14"],"join":["103.15","103.16"],"该方法是将数组中的元素拼接成字符串":["103.15"],"拼接格式为join函数传入的参数":["103.15"],"tostring":["103.16"],"该方法也是将数组转化为字符串":["103.16"],"方法不同的是":["103.16"],"拼接格式与函数参数无关":["103.16"],"都是以逗号":["103.16"],"拼接":["103.16"],"该方法传入一个数字":["103.17"],"表示从传入的数字为要处理的元素的下标":["103.17"],"并把小于这个下标对应的元素的元素都删除掉":["103.17"],"splice":["103.18"],"该方法通过":["103.18"],"移除":["103.18","120.2"],"替换":["103.18"],"已存在的元素和":["103.18"],"或添加新元素":["103.18"],"并且就地改变一个数组的内容":["103.18"],"该方法用来判断一个数组是否包含一个指定的值":["103.19"],"flat":["103.20"],"方法创建一个新的数组":["103.20"],"并根据指定深度递归地将所有子数组元素拼接到新的数组中":["103.20"],"可以传一个可选参数":["103.20"],"该方法从":["103.21"],"可迭代对象":["103.21"],"类数组对象":["103.21"],"创建一个新的浅拷贝的数组实例":["103.21"],"或者对象是不可迭代的":["103.21"],"表示带有":["103.21"],"range":["103.22"],"序列生成器函数":["103.22"],"通常称为":["103.22"],"clojure":["103.22"],"php":["103.22"],"start":["103.22"],"flatmap":["103.23"],"该方法对数组中的每个元素应用给定的回调函数":["103.23"],"然后将结果展开一级":["103.23"],"返回一个新数组":["103.23"],"它等价于在调用":["103.23"],"javascript是有两大数据类型":["104.1"],"shallowclone":["104.3"],"hasownproperty":["104.3"],"深拷贝开辟一个新的栈":["104.4"],"两个对象属性完全相同":["104.4"],"但是对应两个不同的地址":["104.4"],"修改一个对象的属性":["104.4"],"不会改变另一个对象的属性":["104.4"],"常见的深拷贝方式":["104.4"],"lodash":["104.4"],"clonedeep":["104.4"],"f":["104.4"],"浅拷贝和深拷贝都创建出一个新的对象":["104.5"],"但在复制对象属性的时候":["104.5"],"行为就不一样":["104.5"],"浅拷贝只复制属性指向某个对象的指针":["104.5"],"而不复制对象本身":["104.5"],"新旧对象还是共享同一块内存":["104.5"],"修改对象属性会影响原对象":["104.5"],"浅拷贝":["104.5"],"前提为拷贝类型为引用类型的情况下":["104.6"],"面试官":["104.7"],"当用户打开网站并进行交互时":["105.0"],"网站所需的所有资源":["105.0"],"离线操作":["105.1"],"缓存流程":["105.2"],"缓存命中机制流程":["105.2"],"发送请求":["105.2"],"根据请求头的":["105.2"],"强制缓存就是向浏览器缓存查找该请求结果":["105.3"],"并根据该结果的缓存规则来决定是否使用该缓存结果的过程":["105.3"],"当浏览器向服务器发送请求时":["105.4"],"服务器会将缓存规则放入http响应报文的http头中和请求结果一起返回给浏览器":["105.4"],"控制强制缓存的字段分别是":["105.4"],"expires":["105.4","105.7"],"cache":["105.4"],"control":["105.4"],"的优先级":["105.4"],"比":["105.4"],"优先级高":["105.4"],"是http":["105.4"],"0控制网页缓存的字段":["105.4"],"其值为服务器返回该请求结果缓存的到期时间":["105.4"],"即再次发起该请求时":["105.4"],"协商缓存是强缓存失效后":["105.5"],"协商缓存的标识也是在响应报文的http头中和请求结果一起返回给浏览器的":["105.6"],"控制协商缓存的分别有":["105.6"],"last":["105.6"],"modified":["105.6"],"since":["105.6"],"etag":["105.6"],"none":["105.6","124.8"],"match":["105.6"],"强制缓存优先于协商缓存进行":["105.7"],"若强制缓存":["105.7"],"彻底理解浏览器的缓存机制":["105.8"],"继承":["106.0"],"继承可以使得子类有父类别的各种属性和方法":["106.1"],"而不需要再次编写相同的代码":["106.1"],"在子类别继承父类别的同时":["106.1"],"可以重新定义某些属性":["106.1"],"并重写某些方法":["106.1"],"即覆盖父类别的原有属性和方法":["106.1"],"使其获得与父类别不同的功能":["106.1"],"虽然":["106.1"],"不是真正的面相对象语言":["106.1"],"但天生的灵活性":["106.1"],"使应用场景更丰富":["106.1"],"关于继承":["106.1"],"原型链继承":["106.2"],"原型链继承是比较常见的继承方式之一":["106.3"],"其中涉及构造函数":["106.3"],"原型和实例":["106.3"],"三者之间存在着一定的关系":["106.3"],"即每一个构造函数都有一个原型对象":["106.3"],"原型对象又包含一个指向构造函数的指针":["106.3"],"而实例则包含一个原型对象的指针":["106.3"],"借助":["106.4"],"前面两种继承方式":["106.5"],"各有优缺点":["106.5"],"组合继承则是将前面两种继承方式结合继承起来":["106.5"],"这里主要借助":["106.6"],"create":["106.6","106.8"],"方法实现普通对象的继承":["106.6"],"friends":["106.6"],"寄生式继承在上面的继承基础上进行了优化":["106.7"],"利用这个浅拷贝的能力再进行增强":["106.7"],"添加一些方法":["106.7"],"借助解决普通对象的继承问题的":["106.8"],"在前面几种继承方式的优缺点基础上进行改造":["106.8"],"这也是所有继承方式里面相对最优的继承方式":["106.8"],"clone":["106.8"],"这里改用":["106.8"],"就可以减少组合继承中多进行一次构造的过程":["106.8"],"类的继承":["106.9"],"javascript如何实现继承":["106.10"],"假设当前页完整地址是":["107.0"],"www":["107.0"],"example":["107.0"],"path":["107.0"],"获取当前窗口的url":["107.0"],"location":["107.0"],"href":["107.0"],"获取当前窗口的主机名":["107.0"],"端口":["107.0"],"防抖与节流本质上是优化高频率代码的一种手段":["108.0"],"如浏览器的":["108.0"],"throttle":["108.1"],"声明一个变量当标志位":["108.2"],"记录当前代码是否在执行":["108.2"],"如果正在执行":["108.2"],"取消这次方法的执行":["108.2"],"直接":["108.2"],"retun":["108.2"],"如果有空闲":["108.2"],"正常触发方法执行":["108.2"],"时间戳写法":["108.2"],"事件会立即执行":["108.2"],"停止触发后没有办法再次执行":["108.2"],"throttledate":["108.2"],"debounce":["108.3"],"需要一个延时定时器来辅助实现":["108.4"],"延迟执行需要执行的代码":["108.4"],"如果方法多次触发":["108.4"],"把上次记录的延迟执行代码用":["108.4"],"cleartimeout":["108.4"],"清除掉":["108.4"],"重新开始计时":["108.4"],"如果计时完毕":["108.4"],"没有方法来访问触发":["108.4"],"则执行代码":["108.4"],"都可以通过":["108.5"],"防抖":["108.6"],"搜索框搜索输入":["108.6"],"防抖与节流":["108.7"],"是一个基于":["110.0"],"chrome":["110.0"],"v8":["110.0"],"引擎":["110.0"],"运行环境":["110.0"],"非阻塞i":["110.1"],"在单线程当中":["110.1"],"当一段代码运行需要很长时间的时候":["110.1"],"一个没有终止的递归或者一个没有结束条件的循环":["110.1"],"后面的代码处于等待状态":["110.1"],"在浏览器端的表现也就是常常说的浏览器假死":["110.1"],"而在":["110.1"],"基础文档与类型体操":["111.0"],"常用类型工具":["112.0"],"k":["112.1","112.2","112.6"],"用来从对象类型":["112.1"],"删除指定属性":["112.1"],"返回一个新的对象类型":["112.2"],"第一个参数":["112.2"],"是一个对象类型":["112.2"],"第二个参数":["112.2"],"返回一个新类型":["112.3","112.4","112.5"],"将参数类型":["112.4","112.5"],"的所有属性变为必选属性":["112.4"],"它与":["112.4"],"的所有属性变为只读属性":["112.5"],"返回一个对象类型":["112.6"],"作为键名":["112.6"],"u":["112.7","112.8","115.4"],"用来从联合类型":["112.7","112.8","112.9"],"里面":["112.7"],"删除某些类型":["112.7"],"组成一个新的类型返回":["112.7"],"提取指定类型":["112.8"],"组成一个新类型返回":["112.8"],"中删除":["112.9"],"类型和":["112.9"],"提取函数类型":["112.10"],"的返回值类型":["112.10","112.15"],"作为一个新类型返回":["112.10"],"t1":["112.10","112.11","112.12"],"t2":["112.10","112.11"],"从函数类型里面提取参数类型":["112.11"],"组成一个元组返回":["112.11"],"s":["112.11"],"提取构造方法":["112.12"],"的参数类型":["112.12"],"组成一个元祖类型返回":["112.12"],"提取函数类型中的":["112.13"],"提取构造函数的返回值的类型":["112.14"],"即实例类型":["112.14"],"是一个构造函数":["112.14"],"等同于构造函数的":["112.14"],"returntype":["112.14"],"用来取出":["112.15"],"适合用在描述":["112.15"],"方法和":["112.15"],"await":["112.15"],"从函数类型中移除":["112.16"],"不返回类型":["112.17"],"只用来跟其他类型组成交叉类型":["112.17"],"用来提示typescript其他类型的":["112.17"],"的类型":["112.17","115.3"],"helperthisvalue":["112.17"],"logerror":["112.17"],"typescript入门教程":["113.0"],"enums":["114.0"],"enum":["114.1","114.2","114.4","114.5"],"direction":["114.1","114.2"],"up":["114.1","114.2","114.4","114.5"],"down":["114.1","114.2","114.4"],"right":["114.1","114.2","114.4"],"在这个例子中":["114.1"],"我们定义了一个名为":["114.1"],"的枚举":["114.1"],"它有四个成员":["114.1"],"枚举是可以手动赋值的":["114.2"],"并且未手动赋值的枚举值会随着上一项的赋值递增":["114.2"],"conssole":["114.2"],"枚举的项有两种类型":["114.3"],"常数项":["114.3"],"计算所得项":["114.3"],"上述示例都是为常数项的枚举值":["114.3"],"我们也可以向枚举中添加计算的方式来设置":["114.3"],"常数枚举是使用":["114.4"],"定义的枚举类型":["114.4","114.5"],"directions":["114.4","114.5"],"外部枚举是使用":["114.5"],"declare":["114.5"],"泛型":["115.0"],"数组泛型":["115.2"],"generic":["115.2"],"我们在指定一个数组的类型时":["115.2"],"函数泛型":["115.3"],"函数泛型允许我们编写可以适用多种类型的函数":["115.3"],"提高代码的灵活性和可复用性":["115.3"],"简单的例子":["115.3"],"我们可以实现一个函数":["115.3"],"createarray":["115.3"],"它可以创建一个指定长度的数组":["115.3"],"并且将每一项填充一个默认值":["115.3"],"results":["115.3"],"由于不确定填充值":["115.3"],"使用了":["115.3"],"类型来指定类型":["115.3"],"并且返回值也是":["115.3"],"类型的数组":["115.3"],"接口泛型":["115.4"],"接口泛型允许我们创建可适用于不同类型的接口定义":["115.4"],"iresponse":["115.4"],"num":["115.4"],"newname":["115.4"],"类泛型":["115.5"],"与接口类型相似":["115.5"],"泛型也可以用于类的类型定义中":["115.5"],"typescript高级类型":["116.0"],"intersection":["116.1"],"types":["116.1","116.2"],"交叉类型是将多个类型合并为同一个类型":["116.1"],"这让我们可以把现有的类型叠加到一起成为一种类型":["116.1"],"它包含了所需的所有类型的特性":["116.1"],"wave":["116.1"],"不适用于基本类型":["116.1"],"warning":["116.1"],"关于交叉类型产生":["116.1"],"交叉类型在使用的时候有时候会产生一个新的类型":["116.1"],"一般产生这种情况是两个":["116.1"],"使用交叉类型进行处理":["116.1"],"它们当中都有一个":["116.1"],"的同名属性":["116.1"],"但两个类型不同":["116.1"],"interface1":["116.1"],"是":["116.1","124.4"],"interface2":["116.1"],"属性是":["116.1"],"但没有一个属性的类型即是":["116.1"],"类型又是":["116.1"],"union":["116.2"],"联合类型与交叉类型很有关联":["116.2"],"但是使用上完全不同":["116.2"],"联合类型会产生一个包含所有类型的选择集的类型":["116.2"],"表示一个值的类型是定义的联合类型中的其中一种":["116.2"],"当一个变量希望传入某种类型时":["116.2"],"可以考虑使用联合类型":["116.2"],"当一个值是联合类型对象时":["116.2"],"我们只能访问这个联合类型中的所有类型中的共同成员":["116.2"],"定义常量":["116.2"],"类型守卫":["116.4","116.5"],"操作符检查变量类型":["116.4"],"操作符检查对象是否属于某个类":["116.5"],"通过定义一个返回":["116.6"],"类型谓词":["116.6"],"来自定义一个类型守卫":["116.6"],"的形式是":["116.6"],"paramtername":["116.6"],"操作符可以作为类型细化表达式来使用":["116.7"],"顾名思义":["116.8"],"就是给一个类型起一个新名字":["116.8"],"但是不会新创建一个类型":["116.8"],"同接口一样":["116.9"],"类型别名可以是泛型":["116.9"],"我们可以添加参数类型并且在别名声明的右侧传入":["116.9"],"在类型别名属性中引用自身":["116.9"],"tree":["116.9"],"类型别名虽然可以和接口一样声明":["116.10"],"但是它们并不同":["116.10"],"接口创建了一个新的名字":["116.10"],"可以在其它任何地方使用":["116.10"],"但类型别名并不创建新名字":["116.10"],"错误信息就不会使用别名":["116.10"],"tuple":["116.11"],"用于表示固定长度和固定类型排列的数组":["116.11"],"在元组中":["116.11"],"每个位置上的元素都有一个确定的类型":["116.11"],"关键字":["116.12","124.4"],"表示在":["116.12"],"extends":["116.12"],"条件语句中待推断的类型变量":["116.12"],"它是从泛型里面进行推断":["116.12"],"paramtype":["116.12"],"深入理解typescript":["116.13"],"人脸识别":["118.0"],"wx":["118.0"],"startfacialrecognitionverify":["118.0"],"由于人脸核验功能涉及到用户的敏感":["118.0"],"隐私信息":["118.0"],"因此调用此接口的业务方":["118.0"],"需要满足一定的条件":["118.0"],"申请小程序的人脸识别api":["118.0"],"开通小程序后台的接口权限入口后":["118.0"],"开发者可以登录mp":["118.0"],"weixin":["118.0"],"qq":["118.0"],"com小程序账号":["118.0"],"在设置":["118.0"],"接口能力中":["118.0"],"开通接口能力":["118.0"],"微信开发者工具开发文档":["118.0"],"活体检测":["118.0"],"是否支持人脸识别":["118.0"],"checkissupportfacialrecognition":["118.0"],"计算机科学中":["120.1"],"链表":["120.1","120.2","120.4","120.5"],"添加":["120.2"],"元素的时候不需要移动其它元素":["120.2"],"的时间复杂度就为":["120.2"],"表示链表中的一个元素":["120.3"],"提供了一系列方法来操作链表":["120.4"],"开头插入节点":["120.4"],"preappend":["120.4"],"末尾插入节点":["120.4"],"append":["120.4"],"在指定位置插入节点":["120.4"],"insert":["120.4"],"删除节点":["120.4"],"查找节点":["120.4"],"以下是实现代码":["120.4"],"linkedlist":["120.4"],"head":["120.4","130.3"],"tail":["120.4"],"在链表尾部添加新节点":["120.4"],"分为三种":["120.5"],"单向链表":["120.5"],"双向链表":["120.5"],"comparator":["120.6"],"比较器":["120.6"],"default":["120.6"],"comparefunction":["120.6"],"可以是自定义的比较函数":["120.6"],"该函数可以比较自定义的对象":["120.6"],"compare":["120.6"],"defaultcomparefunction":["120.6"],"默认比较函数":["120.6"],"假设":["120.6"],"是字符串或者数字":["120.6"],"returns":["120.6"],"检查两个变量是否相等":["120.6"],"equal":["120.6"],"检查变量":["120.6"],"是否小于":["120.6"],"lessthan":["120.6"],"编程时光":["120.7"],"build":["121.0"],"主要升级点":["122.0"],"持久缓存":["122.0"],"persistent":["122.0"],"caching":["122.0"],"引入了":["122.0"],"更好的持久缓存机制":["122.0"],"利用了更稳定的hashedmoduleldsplugin和":["122.0"],"abstract":["123.0","123.1"],"抽象语法树":["123.1","123.2"],"ast":["123.2"],"在代码语法的检查":["123.2"],"代码风格的检查":["123.2"],"代码的格式化":["123.2"],"代码的高亮":["123.2"],"代码错误提示":["123.2"],"代码自动补全等等场景均有广泛的应用":["123.2"],"打包编译":["123.2"],"rollup":["123.2"],"babel":["123.2"],"代码风格检查":["123.2"],"jslint":["123.2"],"jshint":["123.2"],"prettier":["123.2"],"错误提示与高亮":["123.2"],"ide":["123.2"],"的错误提示":["123.2"],"格式化":["123.2"],"高亮":["123.2"],"自动补全等":["123.2"],"代码混淆压缩":["123.2"],"uglifyjs2":["123.2"],"一个完整的编译过程可以分为三个步骤":["123.3"],"parsing":["123.3"],"首先来看下浏览器的编译原理如下":["123.4"],"可以看出来浏览器对js的编译和解释都需要源代码通过":["123.4"],"词法分析":["123.4"],"语法分析":["123.4"],"源映射":["124.0"],"map功能":["124.2"],"对于sourcemap而言":["124.4"],"我们最常见的":["124.4"],"莫过于在":["124.4"],"的配置项devtools中进行使用":["124.4"],"差不多有二十来种":["124.4"],"但归根结底":["124.4"],"eval":["124.4","124.5","124.8","124.9"],"处理结果":["124.5"],"处理后输出结果":["124.5"],"关键字示例":["124.7"],"sum页面":["124.7"],"sum":["124.7"],"devtool":["124.8"],"构建速度":["124.8"],"重新构建速度":["124.8"],"生产环境":["124.8"],"品质":["124.8"],"quality":["124.8"],"yes":["124.8"],"打包后的代码":["124.8"],"no":["124.8"],"生成后的代码":["124.8"],"开发环境":["124.9"],"我们在开发环境对sourcemap的要求是":["124.9"],"快":["124.9"],"unocss":["126.1"],"官方定义":["126.1"],"cherry":["127.0","127.1"],"pick":["127.1"],"翻译为筛选":["127.1"],"是git版本控制系统中很重要的一个命令":["127.1"],"它允许你将任意分支上的某个或者某些特定提交":["127.1"],"commit":["127.1","127.3","130.2","130.3","131.2"],"hash":["127.1","127.3"],"标识":["127.1"],"跨分支移植补丁":["127.2"],"假设在开发分支上修复了一个bug":["127.2"],"但尚未准备好合并整个分支":["127.2"],"这时":["127.2"],"假设是master分支某个提交应用到develop分支上":["127.3"],"确保已经切换到了想要应用补丁的目标分支":["127.3"],"git":["127.3","129.1","129.3","129.4","130.2","130.3","131.2","132.2","132.3","132.4","132.5","132.6","132.7","132.8","132.10","135.0"],"checkout":["127.3","130.3"],"develop":["127.3"],"switched":["127.3","130.3"],"branch":["127.3","130.3"],"获取想要一只的提交哈希":["127.3"],"这可以通过查看历史提交记录找到":["127.3"],"通过在命令行中使用":["127.3"],"历史提交信息":["127.3"],"或者简要查看历史提交信息":["127.3"],"oneline":["127.3","130.3"],"找出包含所需补丁的提交":["127.3"],"graph":["127.3","130.3"],"查询提交信息":["127.3"],"查询的结果示例":["127.3"],"在自己电脑创建本地仓库":["128.1"],"第一步":["128.1"],"打开git":["128.1"],"找一个存放所有git项目的目录":["128.1"],"假设git的目录叫gitrepo":["128.1"],"第二步":["128.1"],"为你要拉取的github项目创建项目文件夹":["128.1"],"在gitrepo目录下输入命令":["128.1"],"shell":["128.1","130.2","130.3","133.1","133.2"],"mkdir":["128.1"],"firstpro":["128.1"],"然后输入命令":["128.1"],"cd":["128.1"],"git初始化设置":["128.1"],"仓库的初始化以及绑定ssh秘钥":["128.1"],"pull":["129.0","129.4"],"简单概括":["129.1"],"先用一张图来理一下":["129.1"],"分支的概念":["129.2"],"在介绍两种方法之前":["129.2"],"我们需要先了解一下分支的概念":["129.2"],"分支是用来标记特定代码的提交":["129.2"],"每一个分支通过sha1sum值来标识":["129.2"],"所以对分支的操作是轻量级的":["129.2"],"你改变的仅仅是sha1sum值":["129.2"],"如下图所示":["129.2"],"当前有2个分支":["129.2"],"e属于master分支":["129.2"],"而a":["129.2"],"d":["129.2"],"f属于dev分支":["129.2"],"rebase":["130.0","131.0"],"rebase能够将分叉的分支重新合并":["130.1"],"本地与远端同一分支提交历史不一致":["130.2"],"方式一":["130.2"],"多个人在同一个分支上协作时":["130.2"],"出现冲突是很正常的":["130.2"],"比如现在有一个项目由我和a一同开发":["130.2"],"我在修复了一个bug以后准备提交":["130.2"],"howiedeimac":["130.2","130.3"],"ganlin":["130.2"],"howie":["130.2","130.3"],"models":["130.2"],"paper":["130.2"],"go":["130.2","130.3"],"fix":["130.2"],"bug":["130.2"],"master":["130.2","130.3"],"8b76654":["130.2"],"file":["130.2"],"changed":["130.2"],"insertions":["130.2"],"deletions":["130.2"],"现在准备推送到远端":["130.2"],"gitee":["130.2"],"greenhn":["130.2"],"rejected":["130.2"],"不同分支之间的合并":["130.3"],"由于老板突发奇想":["130.3"],"要求开发一个新的功能":["130.3"],"先创建一个分支用于开发新功能":["130.3"],"feature":["130.3"],"接下来修改newfunc":["130.3"],"增加新的功能":["130.3"],"并且保存提交":["130.3"],"vim":["130.3"],"newfunc":["130.3"],"现在查看一下提交":["130.3"],"4f58ab8":["130.3"],"94c134b":["130.3"],"现在新功能开发完毕":["130.3"],"需要将它合并的主分支中":["130.3"],"先尝试通过merge合并":["130.3"],"首先切换到master分支":["130.3"],"假设我们做了一下三个commit":["131.2"],"想把前两个提交也就是":["131.2"],"7131a52":["131.2"],"0d11e74":["131.2"],"a2406db":["131.2"],"合并成一个提交":["131.2"],"log信息":["131.2"],"tip":["131.2"],"如果使用":["131.2"],"stash":["132.0","132.1","132.4","132.8","132.10"],"丢弃stash":["132.9"],"clear":["132.10"],"删除分支同步到git仓库":["133.0"],"git工作流程":["134.1"],"imagecompression":["137.0"]},{"0":["3.0","5.0","11.0","23.0","24.4","43.1","45.1","48.3","56.2","61.38","64.5","74.4","74.6","74.9","74.13","82.16","84.25","91.2","93.6","93.8","118.0","123.2"],"1":["3.0","5.0","6.0","9.0","10.0","23.0","37.10","41.1","43.1","52.8","55.1","61.33","61.37","61.38","62.31","65.13","68.3","74.2","74.4","74.12","81.0","81.6","83.16","83.18","84.1","84.29","87.0","90.0","92.15","93.6","93.8","97.3","103.16","103.20","103.21","103.22","103.23","104.5","106.3","106.5","106.8","120.2"],"2":["5.0","6.0","8.0","15.0","37.4","52.8","55.1","61.37","61.44","61.51","62.21","62.26","74.5","82.36","83.12","83.18","84.1","84.29","93.6","93.8","95.2","98.7","100.1","103.14","103.16","103.21","104.4","104.5","106.3","106.5","106.8","118.0","124.8"],"3":["5.0","8.0","10.0","15.0","37.4","52.8","56.2","61.37","61.42","62.12","62.25","62.26","82.14","83.18","84.29","92.7","93.17","103.14","103.16","103.21","104.4","104.5","106.3","106.5","106.8","124.8","127.3"],"4":["2.0","7.0","15.0","61.18","82.36","84.29","92.7","93.17","103.14","103.16","103.21","104.5","114.2"],"5":["5.0","10.0","61.18","92.6","103.14","103.21"],"6":["5.0","10.0","92.6","92.13","103.14"],"7":["7.0","10.0","92.6","103.14","130.3"],"9":["3.0","6.0","85.0"],"10":["6.0"],"11":["115.4"],"12":["6.0","55.2","56.1","57.1","57.2","57.3","57.4"],"13":["6.0"],"15":["92.7"],"18":["65.46","104.3"],"19":["81.5"],"20":["93.10"],"22":["115.4"],"24":["92.14"],"50":["74.10"],"56":["23.0"],"100":["74.10","84.5"],"111":["123.2"],"234":["23.0"],"250":["24.4"],"300":["84.5"],"450":["24.4"],"460":["24.4"],"500":["108.2"],"1234":["103.21"],"2016":["37.11"],"2019":["92.14"],"2038":["81.5"],"6265":["81.0"],"231208":["55.0"],"231215":["56.0"],"231222":["57.0"],"20111031":["92.12"],"使其相加和为m":["1.0"],"并给出算法的时间":["1.0"],"空间复杂度":["1.0"],"如":["1.0","61.42","70.6"],"javascript":["1.0","4.0","5.0","8.0","10.0","11.0","16.0","18.1","19.0","19.2","19.5","21.0","22.0","23.1","23.2","23.3","24.2","25.0","25.2","25.3","25.4","30.2","30.3","30.5","31.0","31.2","32.4","34.0","51.8","51.16","53.4","55.1","61.16","61.24","61.32","64.14","65.19","65.54","80.0","81.2","81.4","82.2","82.4","82.5","82.7","82.8","82.9","82.13","82.15","82.17","82.20","82.23","82.28","82.29","83.3","83.7","83.8","83.11","83.22","84.7","84.25","84.29","84.31","97.2","100.3","103.2","103.4","103.9","103.10","103.11","103.12","103.13","103.15","103.17","103.20","103.21","108.4","114.2","123.2","129.2"],"满足要求的三元组集合为":["2.0"],"夹逼原则":["2.0"],"也称为双指针夹逼法":["2.0"],"是一种常用的算法思想":["2.0"],"主要用于解决某些数组或有序列表中的查找":["2.0"],"求解等问题":["2.0"],"该原则基于两个指针在数组或列表中相向而行":["2.0"],"并通过调整指针的位置来逼近目标值或满足特定条件":["2.0"],"在夹逼原则中":["2.0"],"通常需要先对数组或列表进行排序":["2.0"],"以便使用双指针从两端开始向中间移动":["2.0"],"具体步骤如下":["2.0"],"对数组或列表进行排序":["2.0"],"确保元素的顺序满足问题的要求":["2.0"],"初始化两个指针":["2.0"],"因为":["3.0","68.17"],"所以返回":["3.0"],"遍历两次求和":["3.0"],"过滤出符合条件的下标拼接成数组":["3.0"],"typescript":["3.0","41.10","47.0","74.9","74.11","74.12","74.14","93.12","93.15","112.1","112.2","112.3","112.4","112.6","112.8","112.9","112.13","112.15","114.0","114.3","115.1","115.5","116.1","116.2","116.6"],"const":["3.0","4.0","5.0","8.0","45.1","51.10","64.4","68.60","74.9","74.11","74.12","74.14","82.2","82.5","82.8","82.9","82.12","82.17","82.20","82.23","82.28","82.30","83.1","83.7","83.11","84.25","89.0","90.0","93.7","93.11","98.6","103.2","103.4","103.9","103.10","103.11","103.12","103.13","103.15","103.16","103.21","108.4","116.1","116.2","116.4","120.6","123.2"],"getaddindex":["3.0"],"number":["3.0","45.1","65.4","93.6","93.7","93.9","93.11","94.5","112.1","112.2","112.4","112.6","112.9","112.10","112.11","112.12","112.13","112.16","115.2","115.4","116.2","116.4","116.11"],"k":["4.0"],"你需要做以下事情确保你的题解可以被通过":["4.0"],"更改数组":["4.0"],"使":["4.0"],"的前":["4.0"],"个元素包含唯一元素":["4.0"],"并按照它们最初在":["4.0"],"中出现的顺序排列":["4.0"],"的其余元素与":["4.0"],"的大小不重要":["4.0"],"返回":["4.0","10.0","84.27","99.4"],"示例1":["4.0","8.0","10.0"],"来保存":["5.0"],"中的元素":["5.0"],"示例":["5.0","84.6","112.14","116.1","123.2"],"输入":["5.0","55.1"],"输出":["5.0","8.0","10.0","11.0","55.1","98.5"],"输出数组":["6.0"],"result":["6.0","91.2","130.3"],"数组中不包含2":["7.0"],"插入进去排序后下标为1":["7.0"],"示例3":["7.0"],"修改输入数组":["8.0"],"元素的顺序可以改变":["8.0"],"你不需要考虑数组中超出新长度后面的元素":["8.0"],"并且nums数组变更为":["8.0"],"函数最初返回":["9.0"],"每次调用它时会返回前一个值加":["9.0"],"的值":["9.0"],"var":["10.0","18.1","19.2","28.0","31.0","34.0","61.33","80.0","98.7","114.2"],"解释":["10.0"],"中心下标是3":["10.0"],"左侧数之和":["10.0"],"sum":["10.0","83.17"],"let":["11.0","61.16","83.8","83.21","84.25","84.29","91.2","92.9","94.5","108.2","108.4","112.17","114.4","114.5","116.11"],"str1":["11.0"],"leetcode":["11.0"],"webstorm":["12.0"],"前端开发":["12.0"],"chrome":["12.0","68.40"],"google":["12.0"],"chrome浏览器":["12.0"],"目前已经支持支付宝购买":["12.1"],"价格的话":["12.1"],"如果你是一名专职的前端工作人员":["12.1"],"可以自行购买或者要求公司购买":["12.1"],"个人购买的费用是第一年":["12.1"],"另外":["12.2","45.2"],"chrome上有支持webstorm的插件":["12.2"],"jetbrains":["12.2"],"ide":["12.2"],"js在本书中主要的使用用途是运行bower工具":["12.3"],"用以安装angularjs极其相关的库文件":["12.3"],"registry":["12.4"],"https":["12.4","37.6","81.6"],"taobao":["12.4"],"org":["12.4","85.0"],"我们将不再需要从网站上下载安装":["12.5"],"但是我们这里将创建一个新的空项目":["13.0"],"empty":["13.0"],"project":["13.0"],"并在":["13.1"],"目录中建立":["13.1"],"目录是用来存放供外部用户访问的内容的根目录":["13.2"],"非":["13.2"],"我推荐使用命令行的方式来进行创建":["13.3"],"调用系统的命令行功能":["13.4"],"statistics":["13.5"],"to":["13.5","65.33"],"improve":["13.5"],"the":["13.5","130.2","130.3"],"tool":["13.5"],"over":["13.5","75.0"],"time":["13.5"],"yes":["13.5"],"项目名称":["13.5"],"name":["13.5","25.2","25.3","28.1","30.6","62.20","62.49","68.11","80.0","82.2","84.7","106.3","106.4","106.7","106.8","112.17","116.9"],"learning":["13.5"],"angularjs":["13.5"],"项目说明":["13.5"],"description":["13.5"],"主文件":["13.5"],"main":["13.5"],"file":["13.5"],"项目的类型":["13.5"],"what":["13.5"],"types":["13.5"],"of":["13.5","130.3"],"modules":["13.5","65.57"],"目录":["13.6"],"并且项目的根目录与网站根目录不同":["13.6"],"因此":["13.6","37.9"],"我们需要新建一个额外的":["13.6"],"我们对":["13.7"],"我们已经创建好了项目":["14.0"],"cached":["14.1"],"git":["14.1","127.1","127.2","128.1","129.2","131.1","133.1","133.2"],"github":["14.1"],"com":["14.1","61.36"],"右键public目录":["14.2"],"new":["14.2","93.12","120.4"],"html":["14.3","17.1","17.3","20.0","24.3","25.1","30.0","62.40","62.49","97.4","105.0"],"注":["14.3","100.0"],"这里引入的angular":["14.3"],"元素中加入一个ng":["14.4"],"app":["14.4","15.0","19.0","19.2","20.0","20.2","21.0","23.3","24.2","25.0","30.5","30.7","31.0","31.1","32.4","33.0","34.0","37.3","38.0","53.3","64.4","64.5"],"然后加入一行代码":["14.4"],"hello":["14.4","16.0","20.1","21.0","83.6","83.10","84.31","112.17"],"然后选择":["14.5"],"run":["14.5"],"然后你就可以在新打开的浏览器中看到运行的效果":["14.5"],"基本表达式":["15.0"],"angularjs初始化":["15.0","37.3","38.0"],"ng":["15.0","20.2","25.1","30.0","33.0","37.3","38.0"],"控制器":["15.0","37.3","38.0"],"controller":["15.0","19.4","23.3","24.2","33.0","37.3","38.0"],"数据绑定":["15.0","37.3"],"h1":["16.0","32.5"],"world":["16.0","82.34","83.6"],"和模板":["17.0"],"template":["17.0","28.1","28.3","32.5","48.4","49.5","65.40","65.42","68.5","76.0"],"需要将部分html打包成独立的文件":["17.1"],"这时候":["17.1"],"我们在引入这个独立html文件时":["17.1"],"可以使用":["17.1"],"功能":["17.1","62.9","62.15","62.17","62.19","62.36","62.42","65.52","84.16","84.21"],"使用方法如下":["17.1"],"直接传入一个网页的地址":["17.1"],"include":["17.2","47.0"],"并且可以根据需求分别调用其中的某一个片段":["17.3"],"的用法如下":["17.3"],"本节我们将学习基本的":["18.0"],"文件":["18.1"],"并填入如下代码":["18.1"],"angular":["18.1","18.3","28.0","30.7","31.0","32.2","34.0"],"module":["18.1","28.0","30.7","31.0","34.0","124.4","124.5","124.8","124.9"],"我们就需要注意angularjs对于":["18.2"],"作用域":["18.2"],"的定义":["18.2"],"我们先通过如下的例子来看看作用域的具体表现":["18.2"],"doctype":["18.2","20.0","30.0","31.1"],"lang":["18.2","20.0","20.2","30.0","31.1"],"如果我们将上面代码的":["18.3"],"和应用":["19.0"],"类似":["19.0","83.3"],"下面我们来尝试创建一个控制器吧":["19.0"],"还是在app":["19.0"],"js中":["19.0"],"我们创建一个控制器":["19.0"],"代码如下":["19.0"],"js":["19.0","21.0","48.0","53.3","55.3","60.0","65.12","68.13","74.9","74.11","74.12","74.14","92.0","92.1","124.5"],"详解":["19.1"],"原有的ng":["19.2"],"app声明部分":["19.2"],"是我们在":["19.3"],"function":["19.3","20.1","23.2","28.0","30.5","30.6","30.7","34.0","48.3","80.0","81.1","83.20","84.6","87.0","89.0","90.0","93.14","94.1","94.2","100.1","106.4","106.6","108.2","108.4","112.13","112.16","112.17","115.3","118.0"],"中传入的":["19.3"],"参数":["19.3","47.0","49.1","65.54","83.15","85.0","91.1"],"scope":["19.3","19.5","20.1","22.0","25.0","25.2","25.3","25.4","30.6","30.7","32.0"],"与一般的函数声明时的参数不同":["19.3"],"此处的参数是":["19.3"],"不可随意命名":["19.3"],"中的数据":["19.4"],"最简单的做法":["19.5"],"zh":["20.0","20.2","30.0","31.1"],"data":["20.1","24.5","28.1","84.9","118.0"],"message":["20.1","21.0"],"在":["20.1","22.1","48.0","61.3","64.13","65.37","83.14","102.2"],"scope上绑定一个函数":["20.1"],"中添加":["21.0"],"flag":["21.0"],"变量":["21.0"],"设置默认值为":["21.0"],"true":["21.0","34.0","49.7","82.21","83.3","84.5","100.3","103.6","103.7","103.19"],"hide":["21.1"],"的区别":["21.1","97.7"],"虽然效果看起来类似":["21.1"],"但":["21.1"],"直接作为判断依据":["21.2"],"但是以上三个标签都支持传入表达式":["21.2"],"比如以下的表达式都可以作为冒号中的表达方式":["21.2"],"我们准备如下的数据":["22.0"],"这是一个包括三个":["22.0"],"object":["22.0","93.14","99.4","100.1","104.3","112.12"],"的":["22.0","30.1","52.8","81.2","93.16","103.23"],"array":["22.0","29.4","61.33","84.25","84.26","103.22","115.3"],"repeat":["22.1"],"中知道是哪一行被点击了呢":["22.1"],"angularjs提供了":["22.1"],"这个字段让我们实现这个功能":["22.1"],"下面":["22.1"],"我们来看看使用":["22.1"],"的例子":["22.1"],"结果":["23.0"],"00":["23.0"],"currency":["23.0"],"人民币":["23.0"],"转化为货币后输出":["23.0"],"保留0位小数":["23.0"],"四舍五入":["23.0"],"结果为":["23.0"],"list":["23.1","29.4","62.32","132.4"],"filter":["23.2"],"reverse":["23.2","120.6"],"几百行以内":["23.3"],"可以考虑使用本功能来筛选结果":["23.3"],"示例如下":["23.3"],"使用上一节的例子":["23.3"],"firstctrl":["23.3","24.1","24.2","30.3","30.4"],"只搜索":["23.4"],"字段包含":["23.4"],"的项目":["23.4"],"last":["23.4","83.6","85.0"],"class":["24.0","64.5","65.37","65.38","65.40","65.41","79.1","106.1","115.5"],"粗体":["24.1"],"bold":["24.1"],"font":["24.1"],"weight":["24.1"],"红色":["24.1"],"red":["24.1","68.39","114.3"],"color":["24.1","24.5","68.39","74.2","74.4","74.7","74.10","102.2","106.1","114.3"],"错误":["24.1"],"has":["24.1","84.2","84.13","84.18"],"error":["24.1","112.14","130.2"],"background":["24.1","74.2","74.4","74.7","74.10"],"yellow":["24.1"],"橙色":["24.1"],"orange":["24.1"],"修改":["24.1"],"比如如下示例":["24.2"],"p":["24.3","28.1","32.5","49.1","68.11","116.12","132.6"],"cubic":["24.4"],"bezier":["24.4"],"colorinput":["24.5"],"示例文本":["24.5"],"colorinput为":["24.5"],"scope中的对象":["24.5"],"传入文本即可":["24.5"],"styletext":["24.5"],"提供了很多功能用来梳理或筛选下拉列表的选项":["25.0"],"我们将分别学习它们":["25.0"],"首先":["25.0","25.2","68.13"],"让我们学习下如何使用":["25.0"],"这里":["25.0"],"我们期望实现的是":["25.0"],"使用下拉列表":["25.0"],"让页面上的一个方块的颜色对应变化":["25.0"],"我们首先配置一个颜色的列表":["25.0"],"并且在":["25.0"],"中存储一个用于保存选中状态的变量":["25.0"],"将它的默认值设置为颜色列表的第一个":["25.0"],"select":["25.1"],"语法":["25.2","94.1","94.2","94.6"],"下面我们看看例子":["25.2"],"我们在列表中增加类型字段":["25.2"],"colors":["25.2","25.3"],"黑色":["25.2"],"disabled":["25.3"],"属性":["25.3","62.9","62.10","93.16","99.3","100.1"],"这是为了表明如果没有这项数据":["25.3"],"默认的":["25.3"],"的操作":["25.3","84.2"],"可以选择":["25.3"],"一般是为了简化配置":["25.4"],"比如我们采取如下的配置":["25.4"],"countries":["25.4"],"cn":["25.4"],"中国china":["25.4"],"us":["25.4"],"我们学习了angularjs的基本用法":["26.0"],"掌握了这些用法":["26.0"],"深入":["27.0"],"一些的部分":["27.0"],"本章将介绍angularjs的directive":["27.0"],"有若干angularjs的中文译文将directive翻译为":["27.0"],"指令":["27.0"],"directive作为angularjs的基本特性":["27.1"],"我们已经在前面大量的学习和使用了它":["27.1"],"逐渐深入的学习directive的特性和高级使用方法":["27.2"],"由于directive的特性主要针对展示界面的操作":["27.2"],"directive":["28.0","30.5","30.6","30.7","31.0","34.0"],"people":["28.0","29.0","29.2","29.4","30.5","30.6"],"return":["28.0","30.6","30.7","34.0","61.37","64.4","68.60","82.12","84.4","84.5","84.6","93.10","93.14","104.3","106.5","106.6","108.2","108.4","112.16","124.7"],"restrict":["28.0","28.1","28.3","30.6","30.7","32.5","34.0"],"e":["28.1","34.0","84.7","85.0","129.2"],"姓名":["28.1"],"相对比较容易理解":["28.2"],"在运行网页时":["28.2"],"与":["28.3","65.7","82.14","83.2","88.0","129.0"],"和":["28.3","44.1","47.0","50.2","51.9","61.24","61.47","65.12","80.1","82.13","82.18","83.9","84.22","84.25","93.13","94.4","102.3","105.7","114.1","115.4","129.1"],"同级别":["28.3"],"下面这个表格":["28.4"],"总结了restrict可能有的值":["28.4"],"具体的每种应用方案":["28.4"],"我们将在下一节详解":["28.4"],"的directive":["29.0"],"驼峰式":["29.1"],"命名":["29.2"],"使用":["29.2","50.5","61.3","65.27","65.30","68.3","68.11","84.10"],"是":["29.3","49.3","56.2","62.41","112.2"],"但实际上":["29.5"],"angularjs支持的连接符有":["29.5"],"符号":["29.5"],"存在的原因是需要符合html5标准":["29.6"],"如果你使用html5验证器来验证我们之前的代码":["29.6"],"你可能会看到如下结果":["29.6"],"如果我们按照现在的代码结构":["30.0"],"详见第一节":["30.0"],"期望放置不同的人的信息":["30.0"],"只能采取重复多个控制器的方式":["30.0"],"可能的代码如下":["30.0"],"而directive在默认情况下":["30.1"],"是没有自动绑定一个":["30.1"],"也就是说":["30.1","83.12","101.0"],"在默认情况下":["30.1","81.4"],"directive无法在javascript中接收传入的数据":["30.1"],"因为缺少一个存储信息的载体":["30.1"],"形成我们期望的效果":["30.1"],"但是":["30.1","37.8","37.10","84.14"],"我们对scope的定义使用了如下结构":["30.2"],"我们在":["30.3"],"中增加几个人的数据":["30.3"],"并将它们通过directive显示出来":["30.3"],"结合起来":["30.4"],"实现列表显示数据的效果":["30.4"],"我们先将":["30.4"],"的数据变化为一个":["30.4"],"input":["30.5"],"即可":["30.5"],"a":["30.6","30.7","32.0","32.5","49.1","55.1","62.30","62.34","82.21","83.7","83.17","112.1","112.2","112.4","112.6","112.7","112.8","112.10","112.11","112.14","112.15","124.7"],"formdirective":["30.7","31.0"],"这里使用":["30.7"],"符号来接受传入的函数":["30.7"],"btnclick":["30.7"],"通过引入外部文件的形式来调用布局":["31.0"],"例如":["31.0","31.2","52.8","61.37","68.54","81.4","115.2"],"head":["31.1"],"meta":["31.1"],"charset":["31.1"],"utf":["31.1"],"也支持通过函数来获取最终的url地址":["31.2"],"b":["32.0","55.1","83.7","83.17","112.7","112.8","112.10","112.11","112.14","124.7"],"c":["32.0","43.1","82.8","112.7","112.8"],"element":["32.0","84.29"],"attrs":["32.0"],"console":["32.0","80.0","82.3","82.14","82.30","82.34","83.10","93.15","100.4","103.16","104.4","116.5","123.2"],"log":["32.0","80.0","82.3","82.14","82.34","83.10","100.4","103.16","104.4","116.5","123.2"],"json":["32.0","61.45","104.4","123.2"],"jquery":["32.2"],"lite":["32.2"],"jqlite":["32.2"],"angularjs通过jqlite的调用方法":["32.2"],"bower":["32.3"],"安装jquery":["32.3"],"bash":["32.3"],"因为jqlite不支持通过标签方式获取子元素":["32.4"],"如果您有兴趣学习jqlite的使用方法":["32.4"],"并且拥有一定的英文阅读能力":["32.4"],"可以在这里查看官方文档":["32.4"],"标题":["32.5"],"这里是段落文字":["32.5"],"等":["33.0"],"也同样都是directive":["33.0"],"而我们可以在这些元素中":["33.0"],"直接填入html代码":["33.0"],"的调用":["34.0"],"require":["34.0"],"获取的对象作为第四个参数传入":["34.0"],"link":["34.0","62.30"],"函数":["34.0","83.9","83.15","100.4"],"transclude":["34.0"],"注意这里为tabcontainer增加了一个controller":["34.0"],"并引入了":["34.0"],"并且对于之前前端开发经验不足的读者可能会造成一些学习上的困难":["35.0"],"相关知识点":["36.0"],"x":["37.0","37.1","37.7","61.37","82.12","82.34","83.3","83.5","84.28","93.7","112.1","112.2","112.4","112.11","116.7","116.11"],"本书是我在学习和应用angularjs":["37.1"],"gitbook地址":["37.2"],"您需要知道和理解html和css布局的方法":["37.4"],"您需要知道javascript的基本语法":["37.4"],"推荐":["37.4"],"您知道一些node":["37.4"],"设计了几款应用":["37.5"],"参与了一小部分的开发工作":["37.5"],"数据通过api":["37.6"],"获取":["37.6"],"对于选择angularjs":["37.7"],"掌握了html":["37.8"],"css的一些应用技巧":["37.8"],"javascript的语法和基本特性方面也通过node":["37.8"],"js在工作中的应用熟悉了":["37.8"],"在网站前端技术准备过程中":["37.8"],"我发现我对dom的操作一窍不通":["37.8"],"即使是购买了若干本入门的书籍":["37.8"],"通过阅读书籍":["37.8"],"我知道了如何通过document":["37.8"],"getelementbyid":["37.8"],"xxx":["37.8"],"或者jquery的":["37.8"],"会有很多新的功能需求":["37.9"],"功能扩大非常多":["37.9"],"因为它引入了很多新的特性":["37.10"],"比如应用了最新的es标准":["37.10"],"大量优化了angular工作的效率等等":["37.10"],"下面3个原因导致了我放弃了angular":["37.10"],"2作为新版本网站的技术选择":["37.10"],"harry":["37.11","93.11"],"andtoo":["37.11"],"net":["37.11","123.2"],"本作品采用知识共享":["37.11"],"vue是双向绑定":["41.1"],"react是单向数据流":["41.1"],"封闭原则":["41.2"],"封闭是针对渲染工作流来说":["41.2"],"指的是组件内部的状态都由自身维护":["41.2"],"只处理内部渲染逻辑":["41.2"],"组件更新阶段":["41.3"],"组件卸载阶段":["41.3"],"挂载":["41.3"],"constructor":["41.3","83.22","85.0","106.1"],"可以设置到根节点组件外层":["41.5"],"这样可以全局生效":["41.5"],"react的严格模式检查仅在开发模式下运行":["41.5"],"它们并不会影响生产构建":["41.5"],"ref":["41.6","50.5","65.51","130.2"],"api":["41.6"],"主要有以下几种实现方式":["41.7"],"redux":["41.7","64.3"],"将页面数据储存在redux中":["41.7"],"是react的语法糖":["41.8"],"它允许在html中写js并且不能被浏览器识别":["41.8"],"react中不强制使用jsx":["41.9"],"当不想在构建环境中配置有关jsx编译时候":["41.9"],"错误边界在生产环境中非常有用":["41.10"],"可以防止程序因错误而崩溃":["41.10"],"同事还可以帮助开发者定位到错误":["41.10"],"import":["41.10","65.18","65.19","65.55"],"usestate":["41.10","64.6"],"useeffect":["41.10","68.35"],"因为jsx语法无法被浏览器所识别":["41.11"],"要想解决这个问题就需要套一层div标签":["41.12"],"但是这样会多增加一个节点":["41.12"],"受控组件就是组组件的改变受控于数据的变化":["41.13"],"数据变了页面也就变了":["41.13"],"所有模板":["42.1"],"图片资源都存储在服务器端":["42.1"],"服务端压力大":["42.2"],"正常是通过客户端去渲染":["42.2"],"childrencomponent":["43.1"],"props":["43.1","68.1"],"any":["43.1","116.12"],"count":["43.1","45.1","84.1"],"setcount":["43.1","45.1"],"childrenref":["43.1"],"handleclick":["43.1"],"handledelete":["43.1"],"真实的dom之间加了一个缓存":["44.0"],"createelement":["44.1"],"数据的变化会实时地更新到用户界面中":["44.2"],"我是我的胃来食":["44.3"],"ul":["44.3"],"li":["44.3"],"react":["44.3","64.4"],"性能提升":["44.5"],"牢记浏览器在处理dom时很慢":["44.5"],"处理js时很快":["44.5"],"react基于虚拟dom实现了一套自己的事件机制":["44.6"],"hoc":["45.0"],"是一个接收组件作为参数并返回一个新组件的函数":["45.0"],"换句话说":["45.0"],"它是一种组件的":["45.0"],"转换器":["45.0"],"from":["45.1","65.18","65.33","103.22"],"counter":["45.1"],"increment":["45.1"],"useref用于操作dom元素":["45.2"],"usestate返回的是当前状态":["45.2"],"和一个更新状态的函数":["45.2"],"而":["45.2","65.20","84.7","120.2"],"useref":["45.2","64.1"],"包含的组件":["47.0"],"会多出两个生命周期钩子":["47.0"],"activated":["47.0"],"deactivated":["47.0"],"当":["47.0"],"包含的组件再次渲染的时候触发":["47.0"],"包含的组件销毁的时候触发":["47.0"],"参数类型":["47.0"],"interface":["47.0","112.1","112.2","112.3","112.4","116.6","116.9","116.10"],"keepaliveprops":["47.0"],"如果指定":["47.0"],"则只有与":["47.0"],"名称":["47.0"],"匹配的组件才会被缓存":["47.0"],"vue":["48.0","48.4","49.5","65.18","65.28","65.29","65.40","65.43","65.47","68.3","68.5","76.0"],"的异步更新队列以及浏览器的事件循环机制":["48.0"],"vue2":["48.0","48.6","65.52","65.56"],"process":["48.1"],"资源分配最小单位":["48.1"],"进程是应用的执行实例":["48.1"],"是操作系统进行资源分配和调度的一个独立单位":["48.1"],"如果把计算机cpu必做一个工厂的话":["48.1"],"那么进程就相当于工厂中的车间":["48.1"],"代表cpu所能处理的单个任务":["48.1"],"线程":["48.1"],"thread":["48.1"],"线程是进程内部的一个执行单元":["48.1"],"是被系统独立调度和分派的基本单位":["48.1"],"系统创建好进程后":["48.1"],"在watcher放到队列中后":["48.2"],"然后调用":["48.2"],"nexttick":["48.2"],"响应式派发更新的源码在这一块是这样的":["48.2"],"地址":["48.2"],"src":["48.2","61.35","61.36","124.5","127.3"],"core":["48.2"],"flushcallbacks":["48.3"],"重置异步开关":["48.3"],"防止nexttick里有nexttick出现的问题":["48.3"],"所以执行之前就先备份并清空回调队列":["48.3"],"copies":["48.3"],"slice":["48.3","61.33","61.38"],"length":["48.3","48.5","82.16","93.16","103.21","103.22"],"执行任务队列":["48.3"],"for":["48.3","90.0","91.2"],"i":["48.3","62.34","84.6","91.2","103.22","131.2"],"copiesi":["48.3"],"timefunc":["48.3"],"用来保存调用异步任务方法":["48.3"],"判断当前环境是否支持原生":["48.3"],"if":["48.3","48.5","52.7","83.3","84.7","108.2","118.0","120.4"],"typeof":["48.3","61.37"],"undefined":["48.3","68.19","68.20","84.4","93.15","98.1","98.2","99.1","101.0","103.5"],"isnative":["48.3"],"保存一个异步任务":["48.3"],"的时候":["48.5","102.2"],"会执行该函数":["48.5"],"把我们的参数":["48.5"],"赋值给p":["48.5"],"在队列的任务完成后":["48.5"],"fn就执行了":["48.5"],"由于加了几个维护队列的方法":["48.5"],"所以执行顺序是这样的":["48.5"],"queuejob":["48.5"],"queueflush":["48.5"],"flushjobs":["48.5"],"nexttick参数的":["48.5"],"这个方法负责维护主任务队列":["48.5"],"接受一个函数做为参数":["48.5"],"为":["48.5","62.20"],"待入队":["48.5"],"任务":["48.5"],"会将参数":["48.5"],"push":["48.5","82.12"],"到":["48.5"],"queue":["48.5"],"队列中":["48.5"],"有唯一性判断":["48.5"],"会在当前宏任务之行结束后":["48.5"],"清空队列":["48.5"],"schedulerjob":["48.5"],"job":["48.5"],"主任务队列为空":["48.5"],"或者":["48.5","49.4"],"有正在执行的任务并且没有在主任务队列中":["48.5"],"不能和当前正在执行任务以及后面带执行任务相同":["48.5"],"includes":["48.5"],"isflushing":["48.5"],"allowrecurse":["48.5"],"slot":["49.1","65.45","65.47"],"一个指令的任务是在其表达式的值变化时对dom进行响应式更新":["49.1"],"seen":["49.1"],"nou":["49.1"],"you":["49.1","130.2"],"see":["49.1"],"me":["49.1"],"arguments":["49.1","61.33","84.6","103.21"],"某些指令有时候需要一个":["49.1"],"在指令名后通过一个冒号隔开作为标识":["49.1"],"例如用":["49.1"],"指令来响应式地更新一个html的attribute":["49.1"],"href":["49.1","87.0"],"url":["49.1","87.0"],"真实":["49.3"],"的条件渲染":["49.3"],"因为它确保了在切换时":["49.3"],"条件区块内的事件监听和子组件都会被销毁与重建":["49.3"],"也可以为索引指定别名":["49.4"],"如果是对象":["49.4"],"则是键值":["49.4"],"index":["49.4","120.4","124.5"],"value":["49.4","64.4","64.5","68.60","84.1","84.2","84.25","84.27","116.4"],"key":["49.4","65.10","74.14","85.0"],"在处理绑定时":["49.5"],"vue会默认利用":["49.5"],"in":["49.5","84.2","84.4","130.3"],"操作服来检查该元素上是否定义了和绑定了key同名的dom":["49.5"],"如果存在同名的":["49.5"],"则vue会将它作为dom":["49.5"],"property的赋值":["49.5"],"而不是作为attribute设置":["49.5"],"当用于组件props绑定时":["49.5"],"所绑定的props必须在子组件中已被正确声明":["49.5"],"当不带参数使用时":["49.5"],"可以用于绑定一个包含了多个":["49.5"],"attribute名称":["49.5"],"绑定值":["49.5"],"对的对象":["49.5"],"绑定":["49.5"],"img":["49.5"],"lazy":["49.6"],"监听":["49.6","51.8"],"change":["49.6"],"最多触发一次处理函数":["49.7"],"left":["49.7","61.38","74.4","74.10","74.12","74.13","102.5","114.5"],"只在鼠标左键事件触发处理函数":["49.7"],"right":["49.7","74.10","114.5","116.9"],"只在鼠标右键事件触发处理函数":["49.7"],"middle":["49.7","62.25"],"只在鼠标中键事件触发处理函数":["49.7"],"passive":["49.7"],"通过":["49.7","62.25","65.37","65.54","106.9"],"附加一个dom事件":["49.7"],"事件类型由参数来指定":["49.7"],"表达式可以是一个方法名":["49.7"],"一个内联升明":["49.7"],"如果有修饰符可以省略":["49.7"],"当用于普通元素":["49.7"],"只监听原生dom事件":["49.7"],"当用于自定义元素组件":["49.7"],"则监听子组件出发的自定义事件":["49.7"],"当监听原生dom事件时":["49.7"],"beforecreate":["50.0","50.4"],"created":["50.0"],"beforemount":["50.0","50.1","50.2","50.4"],"mounted":["50.0","50.3","50.4"],"beforeupdate":["50.0"],"updated":["50.0"],"beforedestroy":["50.0"],"组件实例被创建之初":["50.1"],"createed":["50.1"],"组件实例已被完全创建":["50.1"],"中的方法":["50.2"],"访问和修改data数据触发响应式渲染":["50.2"],"dom":["50.2","50.3","62.44","65.31","68.26","84.15"],"可通过":["50.2"],"computed":["50.2","50.5","85.0"],"完成数据计算":["50.2"],"此时":["50.2","80.0","101.0","128.1"],"vm":["50.2"],"el":["50.2"],"并没有被创建":["50.2"],"这时候页面":["50.3"],"节点并未生成":["50.3"],"之外":["50.4"],"函数被替换成了":["50.4"],"onbeforemount":["50.4"],"onmounted":["50.4","50.5"],"处理计算属性":["50.5"],"声明事件处理函数等":["50.5"],"这些函数包括":["50.5"],"reactive":["50.5"],"用于创建响应式对象":["50.5"],"用于创建一个单一的响应式值":["50.5"],"用于创建计算属性":["50.5"],"watch":["50.5","51.13","51.15"],"用于监听响应式数据的变化":["50.5"],"onupdate":["50.5"],"onunmounted":["50.5"],"用于监听生命周期钩子":["50.5"],"torefs":["50.5"],"用于将响应式对象转换为普通对象":["50.5"],"inject":["50.5"],"provide":["50.5"],"用于跨层级组件传递数据":["50.5"],"getcurrentinstance":["50.5"],"用于访问当前组件实例":["50.5"],"函数的优点是可以讲相似的逻辑组织在一起":["50.5"],"便于代码的维护和重用":["50.5"],"此外":["50.5"],"watcheffect的区别":["51.0"],"并在数据源变化时调用所给的回调函数":["51.1"],"侦听器的源":["51.2"],"一个函数":["51.3","65.50"],"新值":["51.4"],"旧值":["51.4"],"以及一个用于注册副作用清理的回调函数":["51.4"],"如果源是对象":["51.5"],"强制深度遍历":["51.5"],"以便在深层级变更时触发回调":["51.5"],"flush":["51.5","51.9","51.13"],"调整回调函数的刷新时机":["51.5"],"ontrack":["51.5","51.9"],"ontrigger":["51.5"],"调试侦听器的依赖":["51.5"],"同时响应式的追踪其依赖":["51.6"],"第一个参数是数据发生变化时执行的回调函数":["51.7"],"watcheffect":["51.8","51.13"],"stop":["51.10","65.4","103.22"],"都能响应式地执行有副作用的回调":["51.12"],"它们之间的最要区别是追踪响应式依赖的方式":["51.12"],"指明":["51.13"],"或":["51.15","81.5"],"你可以使用条件式地侦听逻辑":["51.16"],"model":["52.1","52.2","52.3"],"绑定到":["52.1"],"view":["52.2"],"应用的数据以及业务逻辑":["52.3"],"数据变化后更新视图":["52.4"],"视图变化后更新数据":["52.4"],"首先执行初始化":["52.5"],"对data执行响应化处理":["52.5"],"这个过程发生在监听器":["52.5"],"observer":["52.5"],"中":["52.5","61.3","68.23","85.0","97.2","101.0","110.1","115.1"],"options":["52.6","65.49"],"this":["52.6","52.7","61.47","68.19","85.0","98.1","106.3","106.4","106.6","106.8","118.0","130.2"],"document":["52.7","53.4","82.12"],"queryselector":["52.7"],"获取dom":["52.7"],"definereactive":["52.8"],"时为每一个":["52.8"],"创建一个":["52.8"],"实例":["52.8"],"初始化视图时读取某个":["52.8"],"name1":["52.8","104.3"],"watcher1":["52.8"],"由于触发":["52.8"],"getter":["52.8"],"方法":["52.8","61.44","82.15","103.23"],"便将":["52.8"],"添加到":["52.8"],"先了解一下spa":["53.1"],"翻译过来就是单页面应用":["53.2"],"是一种网络应用程序或者网站的模型":["53.2"],"它通过动态重写当前页面来与用户交互":["53.2"],"这种方法避免了页面之前切换打断用户体验":["53.2"],"也就是页面在屏幕上首次发生视觉变化的时间":["53.3"],"注意":["53.3","102.4","132.10"],"fp不包含默认背景绘制":["53.3"],"但包含非默认的背景绘制":["53.3"],"div":["53.3","64.4","65.37","65.38","65.40","65.46","68.39","76.0","79.1","82.12"],"id":["53.3","68.5","74.14","116.1","116.2","124.5"],"页面在导航后首次呈现出不同于导航前内容的时间点":["53.3"],"有一个东西回来渲染在页面上了":["53.3"],"之后是静态资源":["53.3"],"css":["53.3","59.7","61.42","74.1","74.3","74.6","74.8","74.10","74.11"],"再到cdn":["53.4"],"直接请求html":["53.4"],"相当于把fmp提前到了fp":["53.4"],"其实更像另外一种骨架屏":["53.4"],"少了ajax请求":["53.4"],"但是由于我们这么做智能添加死数据":["53.4"],"而不能把":["53.4"],"ajax":["53.4"],"请求的数据渲染到页面上":["53.4"],"如何解决呢":["53.4"],"我们可以在app":["53.4"],"vue中":["53.4","65.36"],"直接在script中给对应标签添加数据即可":["53.4"],"工程师应该怎样学习":["54.0"],"编译时加载":["55.3"],"运行时加载":["55.3"],"输出不同":["55.3"],"输出的是值的引用":["55.3"],"引擎对脚本静态分析的时候":["55.3"],"遇到模块加载命令":["55.3"],"就会生成一个只读引用":["55.3"],"等到脚本真正执行时":["55.3"],"再根据这个只读引用":["55.3"],"类型由于跳过了类型检查":["56.2"],"它可以随意赋值":["56.2"],"所以可能会带来变量的污染":["56.2"],"引入的类型":["56.2"],"它代表了一个未知的类型":["56.2"],"类型要求进行类型检查和类型断言":["56.2"],"以便在使用前确定其实际类型":["56.2"],"类型不能够直接使用":["56.2"],"的概念":["56.3","129.1"],"即该类型为空":["56.3"],"不包含任何值":["56.3"],"使用场景":["56.3"],"主要是在一些类型运算中":["56.3"],"保证类型的完整性":["56.3"],"例如在一个联合类型中":["56.3"],"通过类型守卫进行类型范围缩小后":["56.3"],"剩余的情况就是":["56.3"],"个文件":["59.2"],"的异同":["59.11"],"类比介绍":["59.13"],"弱类型语言":["61.1"],"比较灵活":["61.1"],"与操作系统无关":["61.1"],"前端数据类型":["61.2"],"一个完整的ajax请求包括以下步骤":["61.3"],"创建":["61.3"],"xmlhttprequest":["61.3"],"对象":["61.3","64.14","65.35","65.54","65.55","83.12"],"对象来发起":["61.3"],"请求":["61.3","61.50","61.51"],"可以通过":["61.3","65.54"],"是临时响应":["61.4"],"用于通知客户端":["61.4"],"部分的请求服务器已经接受":["61.4"],"但是客户端继续发送请求剩余部分":["61.4"],"如果请求已经完成":["61.4"],"就忽略这个响应":["61.4"],"定义在一个函数内部的函数":["61.6"],"其中一个内部函数在包含它们的外部函数之外被调用时":["61.6"],"关键字":["61.7","61.47","83.20"],"则默认的会添加到全局对象的属性上去":["61.7"],"这样的临时变量加入全局对象有很多坏处":["61.7"],"比如":["61.7","61.48","65.43"],"可以作为参数传递":["61.8"],"闭包可以作为参数传递给其它函数":["61.8"],"也可以被其它函数返回":["61.8"],"优点":["61.8"],"变量长期驻扎在内存中":["61.8"],"避免全局变量的污染":["61.8"],"存在私有成员":["61.8"],"缺点":["61.8"],"只制定一个时间处理程序":["61.9"],"访问dom次数越多":["61.10"],"引起浏览器回流和重绘的次数也就越多":["61.10"],"就会延长整个页面的交互时间":["61.10"],"如果委托给父级ul标签":["61.10"],"我们与dom的交互只需要交互一次":["61.10"],"这样就大大减少dom的交互次数":["61.10"],"对象提供了一个属性叫":["61.11"],"target":["61.11","84.6","84.7"],"会把接收到事件传递给自己的父级":["61.12"],"这种传递分为三个阶段":["61.12"],"每个cookie的大小限制为4kb":["61.13"],"因为每个http请求都会携带cookie":["61.13"],"如果过多的cookie数据":["61.13"],"会影响请求性能":["61.13"],"本地存储的容量相对较大":["61.13"],"通常可达到5mb":["61.13"],"这使得本地存储更适合大量数据的本地保存":["61.13"],"常用的数组的方法":["61.15"],"jsonstr":["61.16"],"将功能封装到对象之中":["61.17"],"让对象去实现具体的细节":["61.17"],"这种思想是将数据作为第一位":["61.17"],"这是对数据一种优化":["61.17"],"调用时":["61.18"],"构造函数内部会创建一个新对象":["61.18"],"就是实例":["61.18"],"普通函数不会创建新对象":["61.18"],"构造函数内部的this指向实例":["61.18"],"普通函数内部的this指向调用函数的对象":["61.18"],"如果没有调用":["61.18"],"默认为window":["61.18"],"构造函数默认的返回值就是创建的对象":["61.18"],"es6新特性二":["61.20"],"换为":["61.21"],"async":["61.21"],"将":["61.21","81.1"],"yield":["61.21"],"实际上http协议从未规定":["61.22"],"post":["61.22"],"的请求长度是多少":["61.22"],"对":["61.22"],"请求在缓存方面的区别":["61.23"],"事件捕获阶段":["61.25"],"处于目标阶段":["61.25"],"事件冒泡阶段":["61.25"],"apply":["61.26","80.1","132.7"],"clientheight":["61.27"],"当鼠标点击按下的时候":["61.28"],"需要一个tag来标记此时已经按下了":["61.28"],"可以执行":["61.28"],"数组或者对象时":["61.30"],"解释器都必须分配内存来存储那个实体":["61.30"],"只要像这样动态分配了内存":["61.30"],"最终都要释放这些内存以便它们能够被再用":["61.30"],"否则":["61.30"],"垃圾回收器在运行时会给存储在内存中的变量都加上标记":["61.31"],"所有都加":["61.31"],"然后去掉环境变量中的变量":["61.31"],"以及被环境变量中的变量所引用的变量":["61.31"],"条件行去除标记":["61.31"],"删除所有被标记的变量":["61.31"],"删除的变量无法在":["61.31"],"环境变量中被访问":["61.31"],"所以会被删除":["61.31"],"最后垃圾回收器完成了内存的清除工作":["61.31"],"并回收它们所占用的内存":["61.31"],"计数引用":["61.31"],"来实现已有属性的监听":["61.32"],"user":["61.32","81.2"],"obj":["61.33","80.0","83.6","84.7","98.5"],"arg":["61.33","112.11","116.12"],"context":["61.33","108.4"],"image":["61.35"],"http":["61.35","61.36","61.51"],"www":["61.36"],"phpernote":["61.36"],"这种方法可以实现一般对象和数组对象的克隆":["61.37"],"arr":["61.37","82.12","84.29","93.10","93.12","103.2","103.4","103.12","103.16","103.21"],"newarr":["61.37"],"y":["61.37","82.12","82.30","82.34","83.5","84.28","112.1","112.2","112.4","112.10","112.12"],"取字符串的第一个字符作为左侧字符":["61.38"],"rest":["61.38","84.28"],"此时就会发生跨域访问问题":["61.40"],"在请求过程中我们想要发送":["61.40"],"接收数据一般都是":["61.40"],"netscape":["61.41"],"提出的一个著名的安全策略":["61.41"],"可以用在一些对颜色要求不高的地方":["61.42"],"优化css":["61.42"],"压缩合并":["61.42"],"在javascript中":["61.43","94.0"],"this通常指向的是我们正在执行的函数本身":["61.43"],"lastindexof":["61.44"],"es6的":["61.44"],"并且内容拷贝":["61.45"],"parse":["61.45"],"遍历对象自身和继承可枚举的属性":["61.46"],"原型方法":["61.47"],"异步":["61.48"],"非阻塞":["61.48"],"信息是明文传输":["61.50"],"基于":["61.50"],"文件压缩":["61.51"],"提前讲所需资源下载":["61.52"],"csrf":["61.54"],"浏览器":["62.0"],"jpeg":["62.1"],"是一种有损压缩格式":["62.2"],"适合存储照片和复杂的图像":["62.2"],"是一种无损压缩格式":["62.3"],"适合存储图标":["62.3"],"是一种支持动画和简单图形的格式":["62.4"],"同时也支持透明度":["62.4"],"内边距":["62.5"],"padding":["62.5","68.49"],"边框":["62.5"],"border":["62.5"],"box":["62.7","65.37","65.38","65.41"],"sizing":["62.7"],"属性名称":["62.9","62.16"],"type":["62.10","93.7","112.1","112.2","112.5","112.6","112.8","112.9","112.15","116.1","116.2","123.2"],"表单类型":["62.11"],"结构清晰":["62.12"],"利于维护":["62.12"],"种类":["62.12"],"标签名":["62.12"],"标签作用":["62.12"],"添加圆角":["62.14"],"shadow":["62.14"],"边框添加阴影":["62.14"],"水平位移":["62.14"],"垂直位移":["62.14"],"size":["62.15"],"break":["62.17"],"2d3d":["62.18"],"可以将元素旋转":["62.18"],"缩放":["62.18"],"移动":["62.18"],"但不利于响应式布局":["62.21"],"父级定义":["62.21"],"overflow":["62.21"],"hidden":["62.21"],"zoom":["62.21"],"两个属性":["62.21"],"其中":["62.21","84.25","116.7","131.2"],"不脱离文档流":["62.22"],"相对于自身定位":["62.22"],"absolute":["62.22","74.4","74.10"],"子元素设置margin":["62.24"],"auto":["62.24","62.26","74.1","74.2","74.5","74.6","74.7","74.8","127.3","130.3"],"align":["62.25","62.32","74.1","74.5","74.6"],"已知父元素高度":["62.25"],"子元素相对定位":["62.25"],"transform":["62.25"],"top减去各自宽高的一半":["62.26"],"子元素上下左右全为0":["62.26"],"然后设置子元素margin":["62.26"],"左右两栏均左浮动":["62.27"],"左右两栏采用负的margin值":["62.27"],"中间栏被宽度为100":["62.27"],"的浮动元素包起来":["62.27"],"可以添加谷歌私有属性webkit":["62.28"],"text":["62.28","62.32","65.38","74.1","74.5","74.6"],"通配符选择器":["62.30"],"空格":["62.30"],"相邻兄弟选择器":["62.30"],"通用选择器":["62.30"],"visited":["62.30"],"元素选择器":["62.31"],"indent":["62.32"],"列表元素":["62.32"],"style":["62.32","68.39","74.14","85.0"],"在图片未可视区域加一个滚动条事件":["62.33"],"判断图片位置与浏览器顶端和页面的距离":["62.33"],"设置宽高无效":["62.34"],"span":["62.34"],"br":["62.34"],"外边距":["62.35"],"自身边框到另一个边框之间的距离":["62.35"],"来控制子盒子的位置和排列方式":["62.36"],"属性名":["62.36"],"像素":["62.38"],"是相对于显示器屏幕分辨率来说的":["62.38"],"相对长度单位":["62.38"],"相对于当前对象内文本的字体尺寸":["62.38"],"media":["62.39"],"html5":["62.41"],"中的文档声明":["62.41"],"dragstart":["62.42","70.3"],"事件主体是被拖放元素":["62.42"],"加载阶段":["62.43"],"发出请求到网页渲染完成的这段过程":["62.43"],"变成非关键资源":["62.44"],"如果js代码没有":["62.44"],"操作":["62.44"],"帧的速度决定了交互的流畅性":["62.45"],"大部分情况下":["62.45"],"生成一个新的帧":["62.45"],"完成域名解析":["62.48"],"没有的话接着使用":["62.48"],"tcp":["62.48"],"ip":["62.48"],"参数设置的":["62.48"],"dns":["62.48"],"服务器进行查询":["62.48"],"如果查询的域名包含在本地配置区域资源中":["62.48"],"则返回解析结果":["62.48"],"没有的话再接着检查本地":["62.48"],"服务器是否缓存有该网址的记录":["62.48"],"有的话返回解析结果":["62.48"],"如果还没有":["62.48"],"本地":["62.48"],"服务器会发送查询豹纹到根":["62.48"],"服务器":["62.48"],"在根":["62.48"],"服务器收到报文之后会返回顶级域":["62.48"],"服务器地址":["62.48"],"然后本地":["62.48"],"的方式":["62.49"],"如果css动画只改变":["62.50"],"transfoem":["62.50"],"opacity":["62.50"],"这时整个css动画得以在":["62.50"],"多个相邻":["62.51"],"兄弟或者父子关系":["62.51"],"例如获取数据或订阅事件":["64.1","68.29"],"usecontext":["64.1"],"用于访问功能组件中react":["64.1"],"上下文的值":["64.1","68.30"],"文档对象模型":["64.2"],"的轻量级虚拟表示":["64.2"],"它是一种用于优化web应用程序性能的编程技术":["64.2"],"webcomponent":["64.3"],"规范":["64.3"],"都是数据驱动视图":["64.3"],"都有状态管理":["64.3"],"有":["64.3"],"vuex":["64.3"],"都有支持":["64.3"],"native的方案":["64.3"],"fc":["64.4"],"setvalue":["64.4","68.60"],"string":["64.4","74.9","74.10","74.11","74.12","74.13","74.14","93.12","112.9","112.12","112.15","112.17","116.2","116.4","116.11"],"setstate":["64.5","68.17"],"访问组件生命周期方法和状态管理":["64.5"],"jsx":["64.5","68.21"],"extends":["64.5"],"component":["64.5"],"这是创建组件时调用的第一个方法":["64.6"],"它用于初始化状态和绑定事件处理程序":["64.6"],"在功能组件中":["64.6"],"可以将钩子":["64.6"],"用于类似的目的":["64.6"],"返回一个状态值和一个用于更新它的函数":["64.7"],"订阅":["64.8"],"计时器":["64.8"],"日志记录和其它副作用不允许在称为react":["64.8"],"渲染阶段的功能组件的主体内出现":["64.8"],"这可能会导致用户界面出现令人困惑的错误和不一致":["64.8"],"为此":["64.9"],"传递给useeffect":["64.9"],"的函数可以返回一个清理函数":["64.9"],"清理功能能在从用户界面中删除组件之前运行":["64.9"],"是从父级传递给组件的数据":["64.10"],"props是固定的":["64.10"],"不能被更改":["64.10"],"它提供了一个集中式存储或容器":["64.11"],"用于存储和管理可由应用程序中的不同组件访问和更新的数据":["64.11"],"如果本地状态仅在一个组件中使用":["64.12"],"reducer是一个纯函数":["64.13"],"它将状态和动作作为参数":["64.13"],"内部":["64.13"],"action是一个简单的":["64.14"],"redux实现了":["64.15"],"是一种用于数据处理的编程模型":["64.16"],"asyncchronous":["64.17"],"javascrip":["64.17"],"and":["64.17","70.4","130.3"],"xml":["64.17"],"是一种使用":["64.17"],"hooks是":["64.18"],"react16":["64.18"],"8版本新增的特性它可以让函数组件既有类组件的状态和生命周期管理能力":["64.18"],"再使用":["64.18"],"最常见的一种方式是通过":["64.19"],"将数据从父组件传递到子组件":["64.19"],"在前端开发中":["64.20"],"diff算法通常用于虚拟dom的比较和更新":["64.20"],"以提高页面性能和响应速度":["64.20"],"在react和其它虚拟dom中":["64.20"],"diff算法的主要目标是在进行ui更新时":["64.20"],"会提高性能":["64.21"],"order":["64.22"],"自底向上增量开发的":["65.1"],"模型":["65.2"],"视图":["65.2"],"和视图模型":["65.2"],"这种设计模式有助于实现前端应用程序的解耦和可维护性":["65.2"],"基本概念":["65.2"],"模型是应用程序的数据部分":["65.2"],"包含了应用程序的数据和业务逻辑":["65.2"],"模型通常通过ajax请求与后端交互":["65.2"],"以获取或更新数据":["65.2"],"视图是用户界面的一部分":["65.2"],"负则呈现模型数据":["65.2"],"视图通常是用":["65.2"],"的更新都会向下流动到子组件中":["65.3"],"每次父组件发生更新":["65.3"],"将输出字符串转化为":["65.4"],"类型":["65.4","115.2"],"trim":["65.4"],"自动过滤用户输入的首尾空格":["65.4"],"事件修饰符":["65.4"],"将数据解析成纯文本":["65.6"],"指令操作网页元素的恶纯文本内容":["65.7"],"是否可以绑定多个方法":["65.9"],"的作用":["65.10"],"设置的":["65.10"],"当它依赖的这个值发生改变时":["65.11"],"就更新":["65.11"],"编程式":["65.12"],"用":["65.12"],"vue生命周期":["65.14"],"hash":["65.15","65.17","90.0","127.2"],"history":["65.15","65.16"],"abstract":["65.15"],"go":["65.16"],"back":["65.16"],"forward":["65.16"],"方法实际调用的是":["65.16"],"window":["65.16","68.54"],"createrouter":["65.18","65.19"],"router":["65.18"],"模式":["65.19"],"推荐使用这个模式":["65.19"],"设置的新url可以与当前url同源的url":["65.20"],"params":["65.21","90.0"],"用户id等":["65.22"],"它们直接包含在路由的路径中":["65.22"],"这些参数作为路径的一部分":["65.22"],"提供了对特定资源的访问":["65.22"],"搜索关键字":["65.23"],"分页信息等":["65.23"],"它们不包含在路由的路径中":["65.23"],"而是作为键值对附加到url后面":["65.23"],"当需要传递标识性信息":["65.24"],"如用户id":["65.24"],"帖子id等":["65.24"],"插值是最基本的数据绑定方式之一":["65.26"],"v":["65.27","65.28","65.29","65.44","84.2"],"bind":["65.28","65.29","98.4"],"可以根据条件动态绑定类名":["65.28"],"可以根据条件动态绑定样式":["65.29"],"binding":["65.30"],"on":["65.31","69.7","130.3"],"可以将":["65.31"],"事件绑定到":["65.31"],"路由守卫有哪些":["65.32"],"next":["65.33","116.9","120.4"],"在路由改变前触发":["65.33"],"常用于全局的身份验证检查等":["65.33"],"route":["65.34","65.35"],"但是该组件被复用时调用":["65.35"],"beforerouteleave":["65.35"],"导航离开该组件的对应路由时调用":["65.35"],"接收三个参数":["65.35"],"表示要进入的目标路由":["65.35"],"除了内置的一些列指令":["65.36"],"使用组件":["65.37"],"assembly":["65.38"],"用于传递事件给父组件":["65.40"],"第一个参数要为传递的参数名":["65.40"],"第二个参数为传递的值":["65.40"],"button":["65.41"],"click":["65.41","87.0"],"transferparents":["65.41"],"表示":["65.42"],"父组件可以在这个坑位中填充任何模版代码":["65.42"],"然后子组件中":["65.42"],"就会被替换成这些内容":["65.42"],"我们是可以为子组件的插槽指定默认内容的":["65.43"],"子组件":["65.43","68.3","68.5"],"没有提供":["65.44"],"的插槽":["65.44"],"就被隐式地命名为":["65.44"],"default":["65.44","85.0","89.0"],"在父组件中":["65.44"],"我们可以使用添加了":["65.44"],"变量名":["65.45","83.15"],"或者缩写为":["65.45"],"personname":["65.46"],"malou":["65.46"],"age":["65.46","68.11","93.11","104.3"],"父组件":["65.46","65.47"],"的值获取的":["65.47"],"watchcallback":["65.49"],"watchoptions":["65.49"],"stophandle":["65.49"],"侦听多个值":["65.49"],"sources":["65.49"],"这个源来自以下几种":["65.50"],"返回一个值":["65.50"],"一个ref":["65.50"],"一个响应式对象":["65.50"],"侦听一个ref":["65.51"],"侦听多个来源时":["65.51"],"回调函数接收两个数组":["65.51"],"分别对应来源数组中的新值和旧值":["65.51"],"vue3中用于监听数据变化的属性":["65.52"],"是计算属性":["65.52"],"怎么解决的":["65.53"],"它包含有关当前路由状态的信息":["65.54"],"例如路径":["65.54"],"查询等":["65.54"],"在vue3中":["65.54"],"对象可以访问当前路由的信息":["65.54"],"useroute":["65.54"],"函数来获取当前的":["65.54"],"用于加载组件":["65.55"],"在引入组件时候":["65.55"],"我们可以通过":["65.55"],"动态导入组件":["65.55"],"这将返回一个":["65.55"],"表示组件的异步加载":["65.55"],"引入了":["65.56"],"对象来代替":["65.56"],"中使用的":["65.56"],"相对于":["65.56"],"defineproperty具有更强大和灵活的功能":["65.56"],"它能够监控对象的所有属性":["65.56"],"vuex有五个属性":["65.57"],"state":["65.57","68.24","68.25"],"getters":["65.57"],"mutations":["65.57"],"actions":["65.57"],"数据源存放地":["65.57"],"03":["68.0","69.0","70.0"],"emit":["68.1"],"child":["68.3","68.5"],"上段代码中":["68.3"],"defineprops":["68.3"],"函数来定义props的类型和默认值":["68.3"],"父组件通过在子组件上监听对应的时间":["68.5"],"并指定触发事件时的回调函数":["68.5"],"ref函数除了可以用于定义一个响应式的变量或引用之外":["68.7"],"还可以获取dom组件实例":["68.7"],"第二个参数是要提供的数据本身":["68.9"],"这个数据可以是响应式的对象":["68.9"],"响应式的ref":["68.9"],"reactive对象":["68.9"],"函数等":["68.9"],"父组件中使用provide提供数据后":["68.9"],"所有的子组件都可以通过inject来访问这些数据":["68.9"],"inject时在子组件中使用的方法":["68.9"],"勇于接受父组件提供的数据":["68.9"],"更新父组件中的name和age":["68.11"],"父组件parent":["68.11"],"parent":["68.11","100.4","106.3"],"父组件name":["68.11"],"父组件age":["68.11"],"安装":["68.13","92.2"],"shell":["68.13","92.2","129.2","129.3","129.4","131.2"],"npm":["68.13","92.2"],"install":["68.13"],"or":["68.13","85.0"],"yarn":["68.13"],"pnpm":["68.13"],"是一个为":["68.15"],"vue3":["68.15"],"方法会导致不可预测的结果":["68.17"],"元素的":["68.18"],"值可能会导致性能问题和不稳定的":["68.18"],"ui":["68.18"],"关键字在事件处理程序中指向":["68.19"],"如果在条件渲染中返回":["68.20"],"应该将这些函数提升到组件外部或使用":["68.21"],"usecallback":["68.21"],"hook":["68.21","68.56"],"暂时留个坑":["68.22"],"组件生命周期包括三个阶段":["68.23"],"挂载阶段":["68.23"],"用于初始化状态":["68.24"],"或绑定事件处理方法":["68.24"],"static":["68.24"],"见上文":["68.25"],"shouldcomponentupdate":["68.25"],"nextprops":["68.25"],"nextstate":["68.25"],"中移除之前调用":["68.26"],"通常用于清理定时器":["68.26"],"取消订阅等收尾工作":["68.26"],"和功能":["68.27"],"避免在每次渲染时都创建新的回调函数实例":["68.32"],"当回调函数作为prop传递给子组件时":["68.32"],"类似于":["68.33"],"类似于redux的工作方式":["68.34"],"动态计算可视区域的起始索引":["68.36"],"然后只渲染这部分列表项":["68.36"],"避免了一次加载大量数据从而实现平滑的滚动和效果":["68.36"],"主要用于分析网络应用和网页":["68.37"],"accessibility":["68.38"],"监测页面的可访问性与优化建议":["68.38"],"最佳实践":["68.38"],"best":["68.38"],"practice":["68.38"],"页面是否符合最佳实践":["68.38"],"主要分为三个档次":["68.39"],"分别用红黄绿三种颜色代表":["68.39"],"不同页面之间进行数据或消息传递的过程":["68.41"],"可以通过url参数在不同页面之间传递数据":["68.42"],"html5的local":["68.43"],"类似于local":["68.44"],"在不同页面之间传递数据":["68.45"],"虽然websocket通常用于实时通信":["68.47"],"但也可以用于不同页面之间的通信":["68.47"],"当一个网页向不同域名":["68.48"],"sharing":["68.50"],"是一种由":["68.50"],"从而绕过浏览器的跨域限制":["68.51"],"的服务器端代理":["68.52"],"jwt":["68.53"],"可以在请求头中使用":["68.53"],"xss":["68.54"],"如果在":["68.54"],"中加载的页面可以受到恶意代码的控制":["68.54"],"那么恶意代码可能会利用此":["68.54"],"来获取父页面的敏感信息或执行恶意操作":["68.54"],"通信机制限制":["68.54"],"进行跨页面通信通常会依赖于一些基于浏览器的通信机制":["68.54"],"postmessage":["68.54"],"这些机制可能会有一些限制":["68.54"],"如不能直接传递复杂的对象":["68.54"],"需要在两个页面中都添加相应的监听器等":["68.54"],"中的开发方式":["68.55"],"这种开发方式与将不同功能或模块拆分到单独的仓库中":["68.55"],"multi":["68.55","85.0"],"相对应":["68.55"],"是一个自定义":["68.56"],"用于在渲染过程中对值进行记忆":["68.56"],"memoization":["68.56"],"来声明状态变量":["68.60"],"初始化状态变量时":["68.60"],"从本地存储中获取对应键的值":["68.60"],"storedvalue":["68.60"],"localstorage":["68.60"],"getitem":["68.60"],"如果本地存储中有对应键的值":["68.60"],"则返回该值":["68.60"],"否则返回初始值":["68.60"],"为什么分开写了":["69.5"],"commonjs区别":["69.12"],"当拖动操作开始时触发":["70.3"],"drop":["70.4"],"cursor":["70.5"],"通过事件监听器监听拖拽相关事件":["70.6"],"区别":["70.9"],"在逻辑组织和逻辑复用方面":["70.9"],"我们应该去执行什么操作让它获取到最新更新呢":["71.11"],"实际效果":["72.0"],"shdow":["73.0"],"rect4":["74.1"],"rect5":["74.1"],"margin":["74.1","74.2","74.3","74.5","74.6","74.7","74.8"],"50px":["74.1","74.2","74.10","74.15"],"width":["74.1","74.3","74.5","74.6","74.7","74.8","74.10","102.5"],"height":["74.1","74.2","74.3","74.4","74.5","74.7","74.8","74.10","74.11","102.5"],"60px":["74.1","74.3","74.12"],"center":["74.1","74.5","74.6"],"465efb":["74.2","74.4","74.10"],"webkit":["74.2","74.4","74.5"],"animation":["74.2","74.4","74.5","74.14"],"rotateplane":["74.2"],"2s":["74.2","74.9","74.12","74.13"],"infinite":["74.2","74.5"],"ease":["74.2"],"bounce2":["74.3"],"position":["74.3","74.4","74.5","74.8","74.10"],"relative":["74.3","74.4","74.5","74.10"],"100px":["74.3","74.5","74.6","74.7","74.8"],"32px":["74.4"],"30px":["74.4"],"top":["74.4","74.10","74.13"],"cubemove":["74.4"],"90px":["74.5","74.10"],"0s":["74.5","74.12","74.13"],"150px":["74.6"],"40px":["74.7","74.12"],"container3":["74.8"],"20px":["74.8","74.11","74.12","74.15"],"delay":["74.9","74.12","74.13","94.2","94.5","108.2"],"translatex":["74.9","74.11"],"65px":["74.9","74.13"],"translatey":["74.9","74.11"],"3s":["74.9","74.13"],"0px":["74.9","74.13","74.15"],"4s":["74.9","74.12"],"5s":["74.9"],"translatefx":["74.10"],"translatesx":["74.10"],"180px":["74.10"],"float":["74.10"],"300px":["74.10","74.11"],"8s":["74.12"],"6s":["74.12"],"19px":["74.13"],"1s":["74.13"],"111px":["74.13"],"130px":["74.13"],"circle":["74.14"],"70px":["74.15"],"匹配的选择器中的":["75.0"],"每一种选择器类型的":["75.0"],"数值":["75.0"],"决定":["75.0"],"而当优先级与多个":["75.0"],"声明中任意一个声明的优先级相等的时候":["75.0"],"中最后的那个声明将会被应用到元素上":["75.0"],"当同一个元素有多个声明的时候":["75.0"],"优先级才会有意义":["75.0"],"因为每一个直接作用于元素的":["75.0"],"规则总是会接管":["75.0"],"覆盖":["75.0"],"take":["75.0"],"该元素从祖先元素继承而来的规则":["75.0"],"选择器类型":["75.0"],"选择器类型有很多种":["75.0"],"blockbounce":["77.0"],"举个栗子":["80.0"],"张三":["80.0"],"fn":["80.0","108.2"],"这里能打印是因为这里的指向是指向这个obj对象的":["80.0"],"再看一个例子":["80.0"],"协议的一部分":["81.0"],"由":["81.0"],"rfc":["81.0"],"规范定义":["81.0"],"组成":["81.1"],"以":["81.1"],"分隔":["81.1"],"每一个都是独立的cookie":["81.1"],"为了找到一个特定的cookie":["81.1"],"我们可以以":["81.1"],"分开":["81.1"],"然后找到对应名字":["81.1"],"我们可以使用正则表达式或者函数数组来实现":["81.1"],"正则表达式":["81.1"],"parsecookies":["81.1"],"此调用设置了一个名为":["81.2"],"并且值为":["81.2"],"john":["81.2"],"的cookie":["81.2"],"只会更新名称为":["81.2"],"alert":["81.2"],"它使得该路径下的页面可以访问该cookie":["81.3"],"默认为当前路径":["81.3"],"如果一个cookie带有":["81.3"],"设置的cookie":["81.4"],"这是一项安全限制":["81.4"],"为了允许我们将敏感数据存储在应该仅在一个站点上可用的cookie中":["81.4"],"默认情况下":["81.4"],"cookie只有在设置的域下才能被访问到":["81.4"],"请注意":["81.4"],"cookie也不会共享给子域":["81.4"],"forum":["81.4"],"我们可以设置":["81.5"],"选项中的一个":["81.5"],"tue":["81.5"],"jan":["81.5"],"customtag":["82.3"],"strings":["82.3"],"values":["82.3"],"判断字符串是否包含指定字符":["82.4"],"返回布尔值":["82.4","82.5","84.13","84.18"],"判断字符串是否以指定的字符开始":["82.5"],"结束":["82.5"],"将字符串指定次数":["82.6"],"返回新的字符串":["82.6"],"根据给定的码点创建一个字符串":["82.7"],"它可以将一个或者多个码点转换为相应的字符":["82.7"],"path":["82.8"],"str":["82.9","103.21"],"用于将字符串的":["82.10"],"unicode":["82.10","82.31"],"queryselectorall":["82.12"],"代表标签下的所有元素":["82.12"],"该运算符主要用于函数调用":["82.12"],"可以扩展函数参数":["82.12"],"items":["82.12"],"add":["82.12"],"numbers":["82.12","95.1"],"iterable":["82.13"],"的对象":["82.13"],"包括":["82.13","105.0"],"es6":["82.13"],"新增的数据结构":["82.13"],"set":["82.13","84.11"],"map":["82.13","103.23","124.8"],"details":["82.14","83.15"],"返回数组中满足条件的第一个元素":["82.15"],"返回数组中满足条件的第一个元素的索引":["82.15"],"到终止索引":["82.16"],"覆盖原有的元素":["82.17"],"用于遍历数组":["82.18"],"它们都返回一个遍历器对象":["82.18"],"可以用for":["82.18"],"of循环进行遍历":["82.18"],"唯一的区别是":["82.18"],"是对键名的遍历":["82.18"],"这样的书写更加简洁":["82.20"],"foo":["82.20","82.21","83.5","89.0","98.6"],"bar":["82.20","83.5","89.0"],"方法二":["82.21"],"bc":["82.21"],"操作符的行为类似":["82.22"],"但有两个区别":["82.22"],"一是object":["82.22"],"nan":["82.22"],"它返回目标对象":["82.23"],"如果多个源对象具有相同的属性":["82.23"],"则后面的对象的属性将覆盖前面的对象的属性":["82.23"],"用于获取对象的原型":["82.24"],"它返回指定对象的原型":["82.24"],"prototype":["82.25","100.1","106.5"],"用于设置对象的原型":["82.25"],"它将指定对象的原型设置为另一个对象或null":["82.25"],"在es6中":["82.27"],"如果regexp构造函数第一个参数是一个正则对象":["82.27"],"的unicode字符":["82.29"],"regex":["82.30"],"abc":["82.30"],"match":["82.32"],"es是ecmascript的缩写":["83.0"],"也就是javascript的标准化规范":["83.0"],"关键字用于声明一个块级作用域的变量":["83.2"],"但值不可变":["83.3"],"只要等号两边的数据格式相同":["83.5"],"左边的变量就会被赋予对应的值":["83.5"],"bar2":["83.5"],"third":["83.5"],"baz":["83.6"],"first":["83.6","84.28","116.1","130.2"],"f":["83.6","129.2"],"l":["83.6","92.14"],"与数组一样":["83.6"],"解构也可以用于嵌套结构的对象":["83.6"],"则先会转换为对象":["83.8"],"的参数表面上是一个数组":["83.9"],"但在传入参数的那一刻":["83.9"],"数组参数就被解构成变量":["83.9"],"对于函数内部的代码来说":["83.9"],"它们能感受到参数就是":["83.9"],"类似数组的map方法的参数也可以被解构":["83.9"],"hhh":["83.10"],"参数变量是默认声明的":["83.10"],"避免this指向问题和明确的参数处理":["83.11"],"但不适合构造函数和需要自己this值的场景":["83.11"],"箭头函数示例":["83.11"],"不可以当作构造函数":["83.12"],"不能使用new":["83.13"],"箭头函数不能绑定":["83.13"],"包围":["83.14","85.0"],"并使用":["83.14"],"语法来插入变量或者表达式":["83.14"],"语法中":["83.14"],"需要在展开的可迭代对象前面加上三个点":["83.15"],"es6中引入":["83.15"],"形式为":["83.15"],"用于获取函数的多余参数":["83.15"],"这样就不需要使用":["83.15"],"arr1":["83.16"],"即es6对象字面量语法":["83.19"],"而不需要使用":["83.20"],"允许字面量定义对象时":["83.21"],"用方法二":["83.21"],"表达式":["83.21","116.7"],"作为对抗的属性名":["83.21"],"即吧表达式放在方括号内":["83.21"],"propkey":["83.21"],"用于创建具有相同属性和方法的对象":["83.22"],"book":["83.22"],"javascript并没有原生的模块化支持":["83.23"],"开发人员通常使用一些第三方库或模式来实现模块化":["83.23"],"例如commonjs和amd":["83.23"],"然而":["83.23"],"es6引入了原生的模块化系统":["83.23"],"通过import和export关键字来实现":["83.23"],"常用":["84.0","84.3"],"setting":["84.1"],"上面代码对一个空对象假设了一层拦截":["84.1"],"重定义了属性的读取":["84.1"],"和设置":["84.1"],"行为":["84.1"],"运行结果为":["84.1"],"上面代码说明":["84.1"],"proxy实际上重载":["84.1"],"overload":["84.1"],"了点运算符":["84.1"],"即用自己的定义覆盖了语言的原始定义":["84.1"],"拦截对象属性的设置":["84.2"],"boolean":["84.2","99.1","116.2"],"拦截":["84.2"],"else":["84.4","85.0","120.4"],"throw":["84.4"],"referenceerror":["84.4"],"prop":["84.4","93.10"],"does":["84.4"],"not":["84.4","130.2"],"exist":["84.4"],"上面代码标识":["84.4"],"如果访问目标对象不存在的属性":["84.4"],"会抛出一个错误":["84.4","84.7"],"如果没有这个拦截函数":["84.4"],"访问不存在的属性":["84.4"],"只会返回":["84.4"],"方法可以被继承":["84.4"],"rangeerror":["84.5"],"seems":["84.5"],"invalid":["84.5"],"对满足条件的":["84.5"],"属性以及其它属性":["84.5"],"直接保存":["84.5"],"young":["84.5"],"报错":["84.5"],"ctx":["84.6"],"args":["84.6","84.8","108.2"],"reflect":["84.6"],"变得合理":["84.7"],"desc":["84.7"],"在无法定义属性时":["84.7"],"则会返回":["84.7"],"false":["84.7","85.0","103.6","103.7","103.19","104.4"],"老写法":["84.7"],"try":["84.7"],"property":["84.7","85.0"],"attributes":["84.7"],"success":["84.7","118.0"],"catch":["84.7"],"failure":["84.7"],"新写法":["84.7"],"调用一个函数":["84.8"],"并传入指定的参数":["84.8"],"construct":["84.8"],"delete":["84.9","84.13"],"通知观察者":["84.9"],"notify":["84.9"],"foreach":["84.9"],"创建一个被观察的对象":["84.9"],"observable":["84.9"],"语言的原生数据类型之一":["84.10"],"是一种独一无二且不可修改的数据类型":["84.10"],"可以用作对象属性的唯一标识符":["84.10"],"它被设计用于创建对象属性的私有成员或者用作常量":["84.10"],"函数可以创建一个":["84.10"],"每次调用":["84.10"],"hash结构":["84.12"],"删除键值对":["84.13"],"检查键值对":["84.13"],"clear":["84.13","84.18"],"清除所有成员":["84.13","84.18"],"也是一种键值对的集合":["84.14"],"是一种不重复值的集合":["84.17"],"删除值":["84.18"],"检查值":["84.18"],"keys":["84.18"],"是一种弱引用集合":["84.19"],"它只能存储对象类型的值":["84.19"],"dom节点被移除时自动释放此成员键":["84.20"],"简便的访问接口":["84.24"],"使得数据结构成员能够按照某种次序排列":["84.24"],"每一次调用":["84.25"],"都会返回数据结构的当前成员的信息":["84.25"],"具体来说":["84.25"],"就是返回一个包含":["84.25"],"done":["84.25"],"两个属性的对象":["84.25"],"属性是当前成员的值":["84.25"],"属性是一个布尔值":["84.25"],"表示是否遍历结束":["84.25"],"makeiterator":["84.25"],"nextindex":["84.25"],"接口的数据结构":["84.26"],"forst":["84.28"],"扩展运算符":["84.28"],"也会调用默认的":["84.28"],"函数在语法上":["84.30"],"可以把它理解成一个状态及":["84.30"],"handlegenerator":["84.31"],"java风格":["85.0"],"brace":["85.0"],"1tbs":["85.0"],"allowsingleline":["85.0"],"双峰驼命名格式":["85.0"],"camelcase":["85.0"],"数组和对象键值对最后一个逗号":["85.0"],"不能带末尾的逗号":["85.0"],"必须带末尾的逗号":["85.0"],"always":["85.0"],"multiline":["85.0"],"多行模式必须带逗号":["85.0"],"单行模式不能带逗号":["85.0"],"comma":["85.0"],"dangle":["85.0"],"控制逗号前后的空格":["85.0"],"before":["85.0"],"after":["85.0"],"控制逗号在行尾出现还是在行首出现":["85.0"],"圈复杂度":["85.0"],"complexity":["85.0"],"以方括号取对象属性时":["85.0"],"后面和":["85.0"],"前面是否需要空格":["85.0"],"可选参数":["85.0"],"强制方法必须返回值":["85.0"],"typescript强类型":["85.0"],"不配置":["85.0"],"consistent":["85.0"],"用于指统一在回调函数中指向this的变量名":["85.0"],"箭头函数中的this已经可以指向外层调用者":["85.0"],"应该没卵用了":["85.0"],"g":["85.0","118.0"],"that":["85.0","130.2"],"指定只能":["85.0"],"that不能指向其它任何值":["85.0"],"this也不能赋值给that以外的其它值":["85.0"],"强制在子类构造函数中用super":["85.0"],"调用父类构造函数":["85.0"],"typescrip的编译器也会提示":["85.0"],"super":["85.0"],"do后面的代码块是否需要":["85.0"],"只有块中有多行语句时才需要":["85.0"],"line":["85.0"],"但是块中的执行语句只有一行时":["85.0"],"块中的语句只能跟和if语句在同一行":["85.0"],"dosomething":["85.0"],"nest":["85.0"],"如果块中的执行语句只有一行":["85.0"],"执行语句可以零另起一行也可以跟在if语句后面":["85.0"],"保持前后语句的":["85.0"],"一致":["85.0"],"all":["85.0"],"全都需要":["85.0"],"curly":["85.0"],"switch语句强制default分支":["85.0"],"也可添加":["85.0"],"no":["85.0"],"注释取消此次警告":["85.0"],"case":["85.0"],"强制object":["85.0"],"的位置":["85.0"],"号应与属性在同一行":["85.0"],"号应与对象名在同一行":["85.0"],"dot":["85.0"],"location":["85.0"],"强制使用":["85.0"],"号取属性":["85.0"],"allowkeywords":["85.0"],"使用保留字做属性名时":["85.0"],"只能使用":["85.0"],"方式取属性":["85.0"],"allowpattern":["85.0"],"文件跨域后下载":["87.0"],"a标签直接打开文件":["87.0"],"获取页面文件名":["87.0"],"param":["87.0"],"文件url":["87.0"],"downloadurlfile":["87.0"],"scrollleft":["88.0"],"设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离":["88.0"],"scrollwidth":["88.0"],"返回元素的宽度":["88.0"],"包括元素宽度":["88.0"],"内边距和溢出尺寸":["88.0"],"不包括边框和外边距":["88.0"],"无溢出的情况":["88.0"],"clientwidth":["88.0"],"相同":["88.0"],"scrollheigh":["88.0"],"返回元素的高度":["88.0"],"包括元素高度":["88.0"],"与clientheight相同":["88.0"],"mylib":["89.0"],"export":["89.0"],"your":["89.0","130.3"],"funciton":["89.0"],"function1":["89.0"],"function2":["89.0"],"在很多现代浏览器可以使用":["89.0"],"它兼具两方面的优点":["89.0"],"提取url中的解析字符串":["90.0"],"urlparamhash":["90.0"],"h":["90.0","92.11"],"indexof":["90.0"],"split":["90.0"],"foreach的区别":["91.0"],"callbackfn":["91.1"],"thisarg":["91.1"],"为数组中的每个元素执行的函数":["91.1"],"是一个轻量级的javascript时间库":["92.0"],"浏览器方式引入":["92.3"],"方式":["92.4"],"moment":["92.4","92.9","92.12"],"isoweek":["92.6"],"获取当前月第一天0时0分0秒":["92.6"],"month":["92.6","92.15"],"获取今天23时59分59秒":["92.6"],"endof":["92.6"],"获取本周最后一天":["92.6"],"周六":["92.6"],"23时59分59秒":["92.6"],"设置某个月中的某一天":["92.7"],"date":["92.7","92.9","108.2","130.3"],"设置某个星期中的某一天":["92.7"],"weekday":["92.7"],"设置日期为本周第一天":["92.7"],"周日":["92.7"],"isoweekday":["92.7"],"设置日期为本周周一":["92.7"],"季度":["92.8"],"1到4":["92.8"],"d":["92.8"],"月份中的第几天":["92.8"],"1到31":["92.8"],"dd":["92.8"],"01到31":["92.8"],"星期中的第几天":["92.8"],"数字表示":["92.8"],"0到6":["92.8"],"0表示周日":["92.8"],"6表示周六":["92.8"],"ddd":["92.8"],"三个字母表示星期中的第几天":["92.8"],"sun到sat":["92.8"],"dddd":["92.8"],"星期几":["92.8"],"完整的星期文本":["92.8"],"start":["92.9","123.2"],"subtract":["92.9","92.15"],"weeks":["92.9"],"转化为javascript原生date对象":["92.10"],"mmmm":["92.11"],"do":["92.11","130.2"],"yyyy":["92.11"],"mm":["92.11"],"ss":["92.11"],"yyyymmdd":["92.12"],"fromnow":["92.12"],"days":["92.13"],"calendar":["92.13"],"2019年5月14日":["92.13"],"05":["92.14"],"上一个月的1号":["92.15"],"01":["92.15"],"还是上一个月1号":["92.15"],"方法的使用场景":["93.0"],"reduce":["93.1","93.9","93.10","93.14"],"方法泛用性很强":["93.1"],"这个方法功能主要是对数组中每个元素执":["93.1"],"一个是执行操作的回调函数":["93.2"],"返回值将作为reducd方法的返回值":["93.3"],"这个回调函数支持传入四个参数":["93.3"],"上一次调用":["93.3"],"回调函数的结果":["93.3"],"如果指定了":["93.4"],"则回调函数从数组中第一个元素":["93.4"],"item":["93.7"],"countnames":["93.9"],"acc":["93.9","93.14"],"cur":["93.9"],"counts":["93.9"],"max":["93.10"],"jane":["93.10"],"groupby":["93.10"],"friends":["93.11","106.7"],"anna":["93.11"],"bible":["93.11"],"myarray":["93.12"],"并且性能更好":["93.12"],"会遍历数组两次":["93.13"],"但是可以使用":["93.13"],"只遍历一次并实现相同的效果":["93.13"],"从而更高效":["93.13"],"链的初始值":["93.14"],"由一系列":["93.14"],"链接而成的":["93.14"],"runpromiseinsequence":["93.14"],"值":["93.15"],"然后访问每个整数索引":["93.16"],"triple":["93.17"],"quadruple":["93.17"],"就会执行一个函数或指定的代码片段":["94.1"],"setinterval":["94.3"],"是javascript中常用的定时器函数":["94.3"],"但它们在执行上存在一些精度方面的问题":["94.3"],"intervalid":["94.5"],"callback":["94.6"],"作用":["94.6"],"在浏览器下一次重绘之前执行指定的回调函数":["94.6"],"确保动画在适当的时机更新":["94.6"],"同时也能够有效地减少功耗和提高性能":["94.6"],"通常比":["94.7"],"settimeout":["94.7","108.5"],"含义":["95.1","124.4"],"syn":["95.1"],"同步序列编号":["95.1"],"synchronize":["95.1"],"sequence":["95.1"],"表示向接收方建立tcp连接的请求":["95.1"],"仅在三次握手期间有效":["95.1"],"seq":["95.1"],"状态":["95.2"],"tcp规定":["95.2"],"即使":["95.2"],"包不携带数据":["95.2"],"也要消耗一个序列号":["95.2"],"第二次挥手":["95.2"],"服务端接收到了":["95.2"],"发出确认包":["95.2"],"ack":["95.2"],"并带上自己的序列号":["95.2"],"七层因特网协议栈":["96.0"],"起初网络分层是标准的七层":["96.0"],"也就是我们说的":["96.0"],"osi七层模型":["96.0"],"参考模型是国际标准化组织":["96.0"],"iso":["96.0"],"制定的":["96.0"],"scripting":["97.1"],"跨站脚本攻击":["97.1"],"标签形成注入":["97.2"],"在内联的":["97.2"],"拼接的数据突破了原本的限制":["97.2"],"反射型和dom型三种":["97.3"],"存储型":["97.3"],"即攻击被存储到服务到":["97.3"],"用户名":["97.4"],"密码等等":["97.4"],"按照规定的格式输入":["97.4"],"后端也需要做相同的过滤检查":["97.4"],"因为攻击者完全可以绕过正常输入流程":["97.4"],"直接利用借口向服务器发送设置":["97.4"],"转义html":["97.4"],"如果拼接":["97.4"],"forgery":["97.5"],"跨站请求伪造":["97.5"],"也被称为one":["97.5"],"才能最终完成请求":["97.6"],"此种方式能很好的遏制csrf":["97.6"],"但用户体验较差":["97.6"],"通常来讲csrf是由xss实现的":["97.7"],"会":["98.1"],"被绑定到":["98.1"],"上":["98.1","116.10"],"在非严格模式下则会被绑定到全局对象":["98.1"],"严格模式下":["98.2"],"this指向是":["98.2"],"func2":["98.2"],"use":["98.2","130.3"],"strict":["98.2"],"返回true":["98.3"],"当为更复杂的嵌套关系":["98.3"],"这里嵌套了两层对象":["98.3"],"此时this的指向应该是最后一个调用它的对象":["98.3"],"person":["98.3","106.6","116.9"],"brother":["98.3"],"mike":["98.3"],"是直接进行相关函数调用的":["98.4"],"不会执行相关函数":["98.4"],"而是返回一个函数":["98.4"],"这个新的函数已经自动绑定了新的":["98.4"],"info":["98.5"],"操作符的作用":["98.5"],"操作符用于创建一个给定构造函数的实例对象":["98.5"],"主要的工作":["98.5"],"创建一个新的对象":["98.5"],"将对象与构造函数通过原型链连接起来":["98.5"],"将构造函数中的":["98.5"],"出现在":["98.6"],"settimeout的":["98.6"],"匿名函数中":["98.6"],"因此this指向window对象":["98.6"],"输出为2":["98.7"],"输出为1":["98.7"],"说明":["98.7","132.10"],"方法的优先级会更高":["98.7"],"中的变量与任何特定值类型没有任何关联":["99.0"],"任何变量都可以被赋予":["99.0"],"和重新赋予":["99.0"],"各种类型的值":["99.0"],"也是一个弱类型语言":["99.0"],"对象可以被看作是一组属性的集合":["99.3"],"用对象字面量语法来定义一个对象时":["99.3"],"会自动初始化一组有限的属性":["99.3"],"然后":["99.3"],"这些属性还可以被添加和移除":["99.3"],"对象属性等价于键值对":["99.3"],"属性键要么是字符串类型":["99.3"],"因此必须使用":["99.4"],"来测试":["99.4"],"instanceof":["99.4"],"但是只有函数才会有":["100.1"],"代表这个对象是这个函数的原型对象":["100.2"],"这个对象也是当前函数所创建的实例的原型对象":["100.2"],"设计之初就是为了实现继承":["100.2"],"让由特定函数创建的所有实例共享属性和方法":["100.2"],"该构造函数的实例都可以访问调用":["100.3"],"那么这个构造函数的原型对象上的属性和方法":["100.3"],"怎么和构造函数的实例联系在一起的呢":["100.3"],"就是通过":["100.3"],"每个对象都有":["100.3"],"该属性指向的就是该对象的原型对象":["100.3"],"p1":["100.3","106.6","106.7"],"ƒ":["100.4"],"通过输出可以看到":["100.4"],"很显然":["100.4"],"的构造函数是":["100.4"],"praent":["100.4"],"我们有说过函数也是对象":["100.4"],"原型链":["100.5"],"打印undefined":["101.0"],"就有一个疑问":["101.0"],"怎么会是这样":["101.0"],"不应该报错吗":["101.0"],"经查阅":["101.0"],"此时涉及到":["101.0"],"函数及变量的声明都将被提升到函数的最顶部":["101.0"],"变量可以在使用后声明":["101.0"],"也就是变量可以先使用再声明":["101.0"],"当你声明一个变量时":["101.0"],"变量先会提升到最顶端":["101.0"],"默认为":["101.0"],"第一个例子中":["101.0"],"我们先声明了":["101.0"],"此时提升到顶部的是":["101.0"],"则就叫称为重绘":["102.2"],"每个页面至少需要一次":["102.2"],"回流":["102.2"],"就是在页面第一次加载的时候":["102.2"],"浏览器会使渲染树中受到影响的部分失效":["102.2"],"并重新构造这部分渲染树":["102.2"],"渲染器在":["102.3"],"文档解析":["102.3"],"重绘可以单独触发":["102.4"],"背景色":["102.4"],"颜色":["102.4"],"字体改变":["102.4"],"字体大小":["102.4"],"发生变化时":["102.4"],"避免逐个修改节点样式":["102.6"],"如果每句js操作都去回流重绘的话":["102.7"],"浏览器可能就会受不了":["102.7"],"可以传两个参数":["103.1"],"第一个参数为需要查找的元素":["103.1"],"第二个是可选参数":["103.1"],"表示开始搜索的索引":["103.1"],"从0开始":["103.1"],"会转换为整数":["103.1"],"并没有改变原来的数组":["103.2"],"没有返回值":["103.3"],"直接改变原数组":["103.3"],"注意和map方法区分":["103.3"],"将满足条件的元素生成一个新数组返回":["103.4"],"并且返回符合条件的第一个元素的值":["103.5"],"否则返回":["103.5","103.6","103.7","103.19"],"则返回":["103.6","103.7"],"reduceright":["103.8"],"该方法是所有元素调用返回函数":["103.8"],"返回值为最后结果":["103.8"],"传入的类型必须为函数类型":["103.8"],"并返回删除的元素":["103.9"],"该方法改变了数组的长度":["103.9"],"返回变化后数组长度":["103.10"],"并且更改原数组":["103.10"],"返回数组删除的元素":["103.11"],"并且改变原数组":["103.11"],"改变原来的数组":["103.12"],"这是属于数组原型的方法":["103.13"],"arr2":["103.14"],"不改变原数组":["103.15"],"并且没有参数时默认为逗号":["103.15"],"连接":["103.15"],"如果传入负数":["103.17"],"则以最后一项的下标为":["103.17"],"1开始计算":["103.17"],"并且删除元素":["103.17"],"不会改变原数组":["103.17"],"最多只支持三个参数":["103.18"],"只传入一个参数":["103.18"],"这个参数代表下标":["103.18"],"表示替换掉这个下标元素后面的元素为空":["103.18"],"其实也是删除功能":["103.18"],"传入两个参数":["103.18"],"第一个参数代表下标":["103.18"],"第二个元素代表要删除的数量":["103.18"],"传入三个参数":["103.18"],"如果有则返回":["103.19"],"指定要提取嵌套数组的结构深度":["103.20"],"不传值默认值为":["103.20"],"infinity":["103.20"],"传入这个参数表示提取嵌套数组的所有的结构深度":["103.20"],"属性和索引元素的对象":["103.21"],"函数的":["103.21"],"参数也是累数组对象":["103.21"],"step":["103.22"],"方法后再调用深度为":["103.23"],"flat":["103.23"],"基本数据类型":["104.1"],"指的是创建新的数据":["104.2"],"javascript中":["104.3"],"存在浅拷贝的现象有":["104.3"],"assign":["104.3"],"nature":["104.3"],"smart":["104.3"],"good":["104.3"],"names":["104.3"],"fx":["104.3"],"obj2":["104.4"],"stringify":["104.4"],"obj3":["104.5"],"shallowclone":["104.5"],"浅拷贝方法":["104.5"],"update":["104.5"],"浅拷贝是拷贝一层":["104.6"],"深拷贝浅拷贝的区别":["104.7"],"缓存使pwa能够在设备没有网络连接时进行工作":["105.1"],"expires和":["105.2"],"cache":["105.2","105.7"],"control":["105.2","105.7"],"强缓存":["105.2"],"判断是否命中":["105.2"],"强制缓存的情况主要有三种":["105.3"],"不存在该缓存结果和缓存标识":["105.3"],"如果客户端的事件小于":["105.4"],"时":["105.4"],"直接使用缓存结果":["105.4"],"expires是http":["105.4"],"0的字段":["105.4"],"但是现在浏览器默认使用的是http":["105.4"],"到了http":["105.4"],"已经被":["105.4"],"替代":["105.4"],"原因在于":["105.4"],"控制缓存的原理是使用客户端的时间与服务端返回的时间作对比":["105.4"],"浏览器携带混存表示向服务器发起请求":["105.5"],"的优先级比":["105.6"],"高":["105.6"],"浏览器缓存相关":["105.8"],"inheritance":["106.0"],"是面向对象软件技术中的一个概念":["106.0"],"我们举一个形象的例子":["106.1"],"定义一个类":["106.1"],"叫汽车":["106.1"],"汽车的属性包括颜色":["106.1"],"轮胎":["106.1"],"品牌":["106.1"],"速度":["106.1"],"排气量等等":["106.1"],"car":["106.1"],"构造函数继承":["106.2"],"parent1":["106.3","106.4"],"play":["106.3","106.5","106.8"],"getname":["106.5","106.6","106.7","106.8"],"p2":["106.6","106.7"],"p3":["106.6","106.7"],"consturctor":["106.8"],"hostname":["107.0"],"获取当前窗口的端口":["107.0"],"port":["107.0"],"resize":["108.0"],"scroll":["108.0"],"keypress":["108.0"],"定义":["108.1"],"oldttme":["108.2"],"now":["108.2"],"newtime":["108.2"],"防抖是指要在n秒后开始执行程序":["108.3"],"debounce":["108.4"],"func":["108.4"],"wait":["108.4"],"timeout":["108.4"],"实现":["108.5"],"目的都是":["108.5"],"只需要用户最后一次输入完":["108.6"],"再发送请求":["108.6"],"是一个让":["110.0"],"运行在服务端的开发平台":["110.0"],"发布于2009年5月":["110.0"],"由ryan":["110.0"],"dahl开发":["110.0"],"实质是对":["110.0"],"v8引擎":["110.0"],"node":["110.1","120.4"],"采用了非阻塞i":["110.1"],"o的机制":["110.1"],"就是说当一个请求所返回的数据需要很长时间":["110.1"],"那么会把这段请求代码放在回调函数中":["110.1"],"当主线程的任务执行完成时":["110.1"],"再去读取放在任务队列的请求的数据":["110.1"],"通过不同地轮询":["110.1"],"event":["110.1"],"loop":["110.1"],"组成一个新的对象返回":["112.1"],"t1":["112.1","112.5","112.7","112.8","112.9"],"里面被选定的键名":["112.2"],"将参数类型":["112.3"],"的所有属性变为可选属性":["112.3"],"partial":["112.4","116.1"],"作用刚好相反":["112.4"],"上面示例中":["112.5","112.6","112.14"],"是可选属性":["112.5"],"作为键值类型":["112.6"],"t2":["112.7","112.12"],"它与":["112.8"],"exclude":["112.8"],"正好相反":["112.8"],"组成一个新类型返回":["112.9"],"也就是返回":["112.9"],"的非空类型版本":["112.9"],"t3":["112.10","112.11"],"s":["112.10","118.0","131.2"],"void":["112.10","112.17","116.6"],"unknown":["112.11"],"t4":["112.11"],"参数的类型":["112.13"],"tohex":["112.13","112.16"],"类型参数是一个构造函数":["112.14"],"返回值是该构造函数的实例类型":["112.14"],"errorconstructor":["112.14"],"命令的参数类型":["112.15"],"它也可以返回多重":["112.15"],"tostring":["112.16"],"helperfunctions":["112.17"],"枚举是":["114.0"],"的初始值为":["114.1"],"其余成员的值会自动递增":["114.1"],"我们也可以不设置初始值":["114.1"],"则枚举的成员将以0开始依次递增":["114.1"],"枚举值被赋予从0开始递增的数字":["114.1"],"同时也可以通过枚举值来进行反向映射":["114.1"],"上述示例中":["114.2","115.4"],"我们可以发现":["114.2"],"如果枚举默认递增的值与手动赋值的值重复时":["114.2"],"typescript是注意不到这一点的":["114.2"],"编译结果是这样":["114.2"],"的枚举":["114.3"],"enum":["114.3"],"blue":["114.3"],"green":["114.3"],"常数枚举与普通枚举的区别是":["114.4"],"它会在编译阶段被删除":["114.4"],"并且不能包含计算成员":["114.4"],"down":["114.5"],"中括号":["115.2"],"表示法来定义":["115.2"],"来作为数字数组类型":["115.2"],"虽然编译不会报错":["115.3"],"但我们无法得到确定的返回值的类型":["115.3"],"这个时候":["115.3"],"泛型就派上用场了":["115.3"],"t":["115.3","115.5"],"箭头函数":["115.3"],"我们定义了一个":["115.4"],"的接口":["115.4"],"它接受两个类型参数":["115.4"],"通过指定类型参数为":["115.4"],"我们创建了一个具体的":["115.4"],"genericnumber":["115.5"],"idefaultfirst":["116.1"],"idefaultsecond":["116.1"],"crosstype":["116.1"],"crosstype中的name的类型将为":["116.1"],"具体类型联合":["116.1"],"second":["116.1"],"question":["116.1"],"sstring":["116.1"],"numbher":["116.1"],"getcrossover":["116.1"],"是typescript的工具类型":["116.1"],"iquestiontype":["116.2"],"这里表示id的类型是布尔值":["116.2"],"它也可以定义为字符串":["116.2"],"数字":["116.2"],"都是可以正常运行的":["116.2"],"guards":["116.3"],"类型守卫是一种用于":["116.3"],"printvalue":["116.4"],"cat":["116.5"],"meow":["116.5"],"这种形式":["116.6"],"必须是来自当前函数签名里的一个参数名":["116.6"],"表示一个类型":["116.6"],"bird":["116.6"],"fly":["116.6"],"n":["116.7","124.5"],"类型别名有时候和接口很相似":["116.8"],"但是可以作用于原始值":["116.8"],"联合类型":["116.8"],"元组预计其它任何需要手写的类型":["116.8"],"但是不需要给原始类型起别名":["116.8"],"与交叉类型一起使用":["116.9"],"linkedlist":["116.9"],"在下面示例中":["116.10"],"在编辑器中将鼠标悬停在":["116.10"],"interfaceed":["116.10"],"显示它返回的是":["116.10"],"但悬停在":["116.10"],"aliased":["116.10"],"初始化":["116.11"],"在这个条件语句中":["116.12"],"typescript手册":["116.13"],"checkalivetype":["118.0"],"res":["118.0"],"errcode":["118.0"],"errmsg":["118.0"],"ok":["118.0"],"调用人脸识别":["118.0"],"startface":["118.0"],"custname":["118.0"],"replace":["118.0"],"是一种数据结构":["120.1"],"是一组由节点组成的":["120.1"],"数组":["120.2"],"元素时":["120.2"],"因为需要":["120.2"],"移动其它元素":["120.2"],"来进行":["120.2"],"它包含一个值和一个指向下一个节点的引用":["120.3"],"它的实现可以参考下面代码":["120.3"],"newnode":["120.4"],"在链表指定位置插入新节点":["120.4"],"insertat":["120.4"],"循环链表":["120.5"],"一个":["120.5"],"包含两个值":["120.5"],"当前节点的值":["120.5"],"是否大于":["120.6"],"greaterthan":["120.6"],"是否小于或等于":["120.6"],"lessthanorequal":["120.6"],"greaterthanorequal":["120.6"],"反转比较顺序":["120.6"],"compareoriginal":["120.6"],"namedchunksplugin":["122.0"],"以改善构建性能":["122.0"],"tree":["122.0","123.1"],"shaking改进":["122.0"],"对tree":["122.0"],"shaking进行了改进":["122.0"],"提供了更好的代码优化":["122.0"],"syntax":["123.0","123.1"],"ast":["123.1"],"多端开发框架":["123.2"],"mpvue":["123.2"],"taro":["123.2"],"来源于一个ast转换网站":["123.2"],"astexplorer":["123.2"],"transsyntax":["123.2"],"aa":["123.2"],"转换成":["123.2"],"后":["123.2","127.1"],"program":["123.2"],"解析过程":["123.3"],"这个过程要经":["123.3"],"词法分析":["123.3"],"转换成ast":["123.4"],"是计算机科学中将字符序列转换为单词":["123.4"],"token":["123.4"],"序列的过程":["123.4"],"基本信息":["124.0"],"是一个信息文件":["124.1"],"里面储存着位置信息":["124.1"],"js脚本现在变得很复杂":["124.2"],"怎么在浏览器中使用sourcemap":["124.3"],"cheap":["124.4","124.8","124.9"],"inline":["124.4"],"这五种关键字的组合":["124.4"],"webpcak官网的devtool":["124.4"],"devtool中sourcemap关键字配置":["124.4"],"产生":["124.4"],"map文件":["124.4"],"nb":["124.5"],"webpack":["124.5"],"footer":["124.5"],"debugger":["124.7"],"source":["124.8"],"转换后的代码":["124.8"],"仅限行":["124.8"],"信息全面":["124.9"],"并且由于代码未压缩":["124.9"],"我们并不那么在意代码咧信息":["124.9"],"是一个具有高性能且极具灵活性的即时":["126.1"],"原子化":["126.1"],"pick":["127.0","127.2","127.3"],"的更改应用于当前所在分支":["127.1"],"而不是进行完整分支的合并":["127.1"],"执行":["127.1","127.3"],"会在目标提交的更改在当前分支上重新创建一个新的提交":["127.1"],"保持了原有提交的":["127.1"],"cherry":["127.2","127.3"],"commit":["127.2"],"来将该修复提交应用到生产分支":["127.2"],"041cd2b":["127.3"],"feat":["127.3"],"pick用法更新":["127.3"],"0cbf613":["127.3"],"更新watch和watcheffect的区别":["127.3"],"e360bfd":["127.3"],"fix":["127.3","130.3"],"修正文案错误":["127.3"],"5772f85":["127.3"],"config":["127.3","128.1"],"更新vitepress依赖版本":["127.3"],"9f1aa0d":["127.3"],"更新this指向相关":["127.3"],"命令":["127.3","129.3"],"后面跟上你想要移植的提交哈希":["127.3"],"之后合并冲突":["127.3"],"merging":["127.3","130.3"],"背景":["128.0"],"初始化git仓库":["128.1"],"当前git":["128.1"],"bash所在目录路径为gitrepo":["128.1"],"输入命令":["128.1"],"init":["128.1"],"会看见本地电脑的目录下会有":["128.1"],"文件夹":["128.1"],"在第一次安装git之后需要初始github的配置信息":["128.1"],"所以接下来要初始化你的github信息":["128.1"],"global":["128.1"],"fetch":["129.1","130.2"],"pull":["129.1"],"master":["129.2"],"dev":["129.2"],"它们的head指针分别指向e和f":["129.2"],"对上述做如下操作":["129.2"],"checkout":["129.2"],"选择or切换到master分支":["129.2"],"远程主机名":["129.3"],"这个命令将某个远程主机的更新全部取回本地":["129.3"],"如果只想取回特定分支的更新":["129.3"],"前面提到":["129.4"],"的过程可以理解为":["129.4"],"下面主要介绍它的两个使用场景":["130.1"],"failed":["130.2","130.3"],"some":["130.2"],"refs":["130.2"],"hint":["130.2"],"updates":["130.2"],"were":["130.2"],"because":["130.2"],"remote":["130.2"],"contains":["130.2"],"work":["130.2"],"have":["130.2"],"locally":["130.2"],"is":["130.2","130.3"],"usually":["130.2"],"caused":["130.2"],"by":["130.2","130.3"],"another":["130.2"],"repository":["130.2"],"pushing":["130.2"],"same":["130.2"],"may":["130.2"],"want":["130.2"],"integrate":["130.2"],"up":["130.3"],"with":["130.3"],"origin":["130.3"],"直接合并feature分支":["130.3"],"merge":["130.3"],"conflict":["130.3"],"content":["130.3"],"automatic":["130.3"],"conflicts":["130.3"],"then":["130.3"],"竟然失败了":["130.3"],"说明我两个分支之前的版本已经不同步了":["130.3"],"需要手动合并冲突":["130.3"],"再提交":["130.3"],"先查看冲突文件":["130.3"],"status":["130.3"],"ahead":["130.3"],"commits":["130.3"],"合并commit":["131.0"],"使用背景":["131.0"],"可以按下":["131.2"],"向下翻看":["131.2"],"oneline":["131.2"],"可以一行展现":["131.2"],"我们使用命令":["131.2"],"rebase":["131.2"],"startpoint":["131.2"],"endpoint":["131.2"],"的意思是":["131.2"],"常用使用场景":["132.1"],"正在进行一些工作":["132.1"],"stash":["132.2","132.3","132.5","132.6","132.7"],"直接保存其实是执行了命令":["132.3"],"show":["132.5","132.6"],"应用某个存储":["132.7"],"pop":["132.8"],"命令恢复之前缓存的工作目录":["132.8"],"将缓存堆栈中的对应":["132.8"],"删除所有缓存的stash":["132.10"],"新增的文件":["132.10"]},{"0":["8.0","41.12","48.5","62.49","68.39","74.1","74.2","81.1","82.12","82.13","90.0","93.7","93.9","103.22","114.1","114.4","124.5"],"1":["1.0","4.0","29.4","30.0","31.1","41.4","45.1","48.5","61.31","62.48","62.49","64.5","68.7","68.11","74.6","74.7","74.8","75.0","82.13","82.15","82.17","82.23","84.2","85.0","93.9","93.14","93.15","98.4","103.2","103.3","103.4","103.5","103.6","103.7","103.9","103.10","103.11","103.12","103.13","103.15","103.17","103.18","114.4"],"2":["4.0","9.0","10.0","11.0","14.5","37.6","41.1","52.5","62.27","68.3","75.0","82.13","82.15","82.17","83.16","93.15","97.3","98.1","103.1","103.2","103.4","103.6","103.7","103.9","103.10","103.11","103.12","103.13","103.15","103.17","103.18","103.20","103.22","105.2","110.1","114.4"],"3":["2.0","29.6","55.1","61.51","82.15","82.17","82.36","83.16","92.13","93.6","93.8","103.1","103.2","103.4","103.9","103.10","103.11","103.12","103.13","103.15","103.17","103.18","103.20","103.22","114.4","115.3"],"4":["1.0","8.0","10.0","37.4","52.8","62.25","82.15","83.5","83.9","93.8","93.15","103.2","103.12","103.17","103.18","103.20","103.22","124.8","127.3"],"5":["15.0","92.7","93.8","103.2","103.18","104.5","118.0","124.8"],"6":["15.0","61.18","92.7","104.5","123.2"],"7":["92.7","92.11","104.5"],"8":["18.2","20.0","20.2","30.0","31.1","82.36","92.6","92.12","127.3","130.2"],"9":["92.6"],"10":["74.14","83.3","92.6","116.11"],"11":["10.0","92.6"],"12":["92.7"],"13":["56.1"],"14":["81.5","92.8","130.2"],"16":["41.12","112.13","112.16"],"17":["123.2"],"18":["57.1"],"19":["57.2"],"20":["57.3","68.0","83.3"],"21":["57.4","93.11"],"22":["69.0","127.3"],"23":["127.3"],"25":["70.0"],"30":["92.7"],"35":["84.1"],"43":["92.11"],"46":["127.3"],"47":["92.11"],"49":["68.39","123.2"],"50":["62.25","74.3","74.11","74.12"],"60":["74.5"],"68":["123.2"],"98":["92.8"],"100":["74.1","74.3","74.6","74.7","74.8","74.9","74.11","74.12","74.13","130.2"],"123":["56.2","82.21","83.8"],"200":["61.4"],"202":["61.4"],"940":["24.4"],"2000":["92.8"],"2014":["92.8"],"2019":["92.11"],"2024":["127.3"],"20120620":["92.12"],"var":["1.0","19.0","83.2","84.1","84.25","84.31","98.5","114.4","114.5","120.6"],"arr":["1.0","82.15","82.16","82.17","83.9","84.28","93.7","103.1","103.3","103.5","103.6","103.7","103.9","103.10","103.11","103.13","103.15","103.17","103.18","103.19","103.20","103.23"],"一个指向数组或列表的起始位置":["2.0"],"通常是最左侧":["2.0"],"另一个指向数组或列表的结束位置":["2.0"],"通常是最右侧":["2.0"],"在两个指针没有相遇之前":["2.0"],"进行如下操作":["2.0"],"比较指针所指向的元素与目标值或特定条件的关系":["2.0"],"根据比较结果":["2.0"],"调整指针的位置":["2.0"],"如果指针所指向的元素满足条件":["2.0"],"可以得到问题的解":["2.0"],"或进行其它操作":["2.0"],"如果指针所指向的元素不满足条件":["2.0"],"根据问题的要求":["2.0"],"将指针向中间移动一步或多步":["2.0"],"继续移动指针":["2.0"],"直到两个指针相遇":["2.0"],"夹逼原则的核心思想是通过双指针的相向移动":["2.0"],"将问题的解空间逐渐缩小":["2.0"],"直到找到满足条件的解或遍历完所有可能的情况":["2.0"],"夹逼原则常用于解决一些查找问题":["2.0"],"比如在有序数组中查找目标值":["2.0"],"找出数组中三个数的和等":["2.0"],"它的优势在于时间复杂度较低":["2.0"],"通常为":["2.0"],"newarr":["3.0","103.14"],"for":["3.0","61.38","81.1","82.18","84.22","93.13","116.1","130.2"],"let":["3.0","56.2","81.1","82.18","83.10","83.15","92.15","94.6"],"j":["3.0"],"length":["3.0","81.1","82.13","84.25","90.0","91.2","114.3"],"k":["3.0"],"输出":["4.0","84.29"],"解释":["4.0"],"函数应该返回新的长度":["4.0"],"并且原数组":["4.0"],"的前两个元素被修改为":["4.0"],"不需要考虑数组中超出新长度后面的元素":["4.0"],"示例2":["4.0","8.0"],"typescript":["5.0","7.0","9.0","11.0","48.2","55.1","93.16","98.4","116.8","116.10"],"getconcatarr":["5.0"],"number":["5.0","7.0","47.0","49.6","55.1","56.3","74.14","95.1","99.1","112.3","112.15","116.10"],"void":["5.0","112.7"],"splice":["5.0","48.5"],"sort":["5.0"],"a":["5.0","30.1","30.5","31.0","32.4","80.0","82.12","82.13","82.18","82.23","83.9","83.11","84.6","84.25","85.0","92.8","92.11","93.12","93.14","104.3","112.3"],"b":["5.0","82.12","82.13","82.18","82.23","83.9","83.11","84.25","93.12","112.15"],"return":["5.0","23.2","30.1","30.5","31.0","32.4","43.1","45.1","61.18","61.33","64.5","68.21","74.14","83.17","84.9","84.25","84.27","84.31","90.0","93.9","106.4","106.7","106.8","112.13","116.1","118.0"],"如何理解":["6.0"],"首先":["6.0","28.1","30.2","64.11"],"我们需要找到数组中最长的驼峰":["6.0"],"但由于这个驼峰数组长度不确定":["6.0"],"但我们可以利用驼峰的性质":["6.0"],"从中间向两边递减":["6.0"],"从数组中间向两边查找最常的递减序列":["6.0"],"为了确保找到的是最长的递减序列":["6.0"],"可以采用贪心算法":["6.0"],"即只要当前元素大于前一个元素":["6.0"],"就将当前元素加入递减序列":["6.0"],"当找到递减序列结束时":["6.0"],"比较当前递减序列的长度与之前记录的最长递减序列的长度":["6.0"],"插入进去排序后下标为4":["7.0"],"求解":["7.0","11.0"],"先将目标值放在数组中":["7.0"],"进行去重和排序":["7.0"],"再进行判断下标":["7.0"],"const":["7.0","11.0","41.10","44.3","51.5","51.16","52.7","55.1","55.3","56.3","64.7","64.10","65.18","65.19","65.33","65.54","65.55","68.13","81.1","82.4","82.6","82.13","82.15","82.16","82.24","82.25","83.9","83.10","83.14","83.20","83.21","84.5","84.10","87.0","93.16","94.6","98.2","98.4","103.1","103.3","103.5","103.6","103.7","103.17","103.18","103.19","103.20","116.5","116.9"],"searchinsert":["7.0"],"push":["7.0","65.12","65.23","91.2","106.6","130.3","133.2"],"newnum":["7.0","61.37"],"array":["7.0","30.4","61.44","74.14","84.2","100.1"],"from":["7.0","41.5","41.10","65.19","65.54","65.55","68.13"],"new":["7.0","61.3","61.37","83.12","84.6","87.0","93.14","98.1","103.21","106.3","120.6"],"set":["7.0","12.4","13.5","61.32","61.44","81.0"],"等等":["9.0"],"主要是通过使用闭包函数来保存变量":["9.0"],"防止被全局篡改":["9.0"],"并且保留计数器值":["9.0"],"param":["9.0"],"右侧数之和":["10.0"],"str2":["11.0"],"loveleetcode":["11.0"],"firstuniqchar":["11.0"],"angularjs":["12.0"],"前端js框架":["12.0"],"angular":["12.0","19.0","19.2"],"material":["12.0"],"前端界面框架":["12.0"],"59美金":["12.1"],"我个人认为还是非常超值的":["12.1"],"对比工作效率的提升而言":["12.1"],"另外":["12.1","37.9","51.12","68.26"],"出于个人习惯":["12.1"],"support":["12.2"],"由于国内网络原因":["12.2"],"chrome浏览器必须要连接至国外路由才能下载":["12.2"],"另外推荐您点击以下链接进行下载":["12.2"],"通过官网可以直接下载node":["12.3"],"js的安装包":["12.3"],"可选":["12.4"],"将npm默认设置从淘宝服务器上获取数据":["12.4"],"config":["12.4"],"直接通过bower在项目内进行下载使用":["12.5"],"然后一步一步的将各个需要的内容填充进来":["13.0"],"这样我们会对使用angularjs开发有一个更好的了解":["13.0"],"在webstorm中":["13.0"],"js":["13.1","18.3","22.1","24.1","41.7","48.2","83.23"],"css":["13.1","31.1","60.0","65.2","74.9","74.12","74.13","105.0","126.1"],"img":["13.1","62.34"],"三个目录":["13.1"],"目录下的内容":["13.2"],"既是我们不期望用户通过网络链接直接可以访问到的内容":["13.2"],"会有哪些内容呢":["13.2"],"产品的文档":["13.2"],"这样可以更好的理解配置生成的文件的内容":["13.3"],"在左下角点击":["13.4"],"does":["13.5"],"this":["13.5","52.8","61.33","65.12","83.22","99.4","106.1","106.7","108.4"],"package":["13.5"],"expose":["13.5"],"项目的关键字":["13.5"],"keywords":["13.5"],"作者和联系方式":["13.5"],"authors":["13.5"],"harry":["13.5","22.0","23.0","23.3"],"andtoo":["13.5"],"net":["13.5"],"授权方式":["13.5"],"如果您期望这是一个私人项目":["13.5"],"可以输入no":["13.5"],"license":["13.5"],"mit":["13.5"],"项目主页":["13.5"],"homepage":["13.5"],"是否要把当前已经安装的模块设置为项目的依赖项":["13.5"],"文件":["13.6"],"告诉":["13.6"],"bower":["13.7"],"并配置好了bower工具":["14.0"],"validate":["14.1"],"against":["14.1"],"file":["14.2","82.8","127.3","130.3"],"然后输入":["14.2"],"点击":["14.2","34.0"],"ok":["14.2","49.7"],"webstorm会自动帮助我们加入基本的html内容":["14.2"],"js是完整的版本":["14.3"],"1m大小":["14.3"],"如下所示":["14.4"],"html":["14.4","18.1","19.5","20.1","21.0","24.1","31.0","53.2","65.2"],"doctype":["14.4"],"图3":["14.5"],"运行index":["14.5"],"如果浏览器没有自动打开":["14.5"],"data":["15.0","19.0","24.1","24.2","24.3","28.0","37.3","38.0","41.7","52.5","65.57"],"binding":["15.0","37.3","38.0"],"条件判断语句":["15.0"],"if":["15.0","37.3","38.0","56.3","74.14","94.6","116.1","116.2"],"show":["15.0"],"hide":["15.0"],"上方的":["16.0"],"和":["16.0","18.3","48.6","56.2","61.28","65.2","65.17","65.21","68.1","68.11","84.5","94.7","99.0","106.1"],"既是angularjs的基本表达式":["16.0"],"如果angularjs被成功的引入":["16.0"],"那么最终的页面将不会显示双括号":["16.0"],"请注意这里的使用用法":["17.1"],"view":["17.1","52.1","52.3","64.3","65.16"],"part":["17.1","31.0"],"外部有单引号":["17.1"],"div":["17.1","19.5","43.1","48.4","65.28","65.29","65.42","65.43","65.45","65.47","68.21","75.0","85.0"],"views":["17.1"],"还有":["17.2"],"onload":["17.2"],"需要将":["17.3"],"script":["17.3","68.49"],"的":["17.3","19.3","24.1","49.3","64.3","101.0","120.2","124.4"],"type":["17.3","21.0","25.2","25.3","30.5","30.6","30.7","47.0","62.32","64.14","65.49","106.3","106.5","112.4","112.13","112.16","116.8","116.10"],"初始化":["18.0","102.4"],"index":["18.1","24.1","82.18","91.1"],"中引入":["18.1"],"zh":["18.2","92.4"],"head":["18.2","20.0","20.2","24.1","30.0","83.5","120.6"],"meta":["18.2","20.0","20.2","30.0"],"charset":["18.2","20.0","20.2","30.0"],"utf":["18.2","20.0","20.2","30.0"],"网页的标题":["18.2","20.0"],"我们在这里使用了angularjs的基本表达式":["18.2","20.0"],"title":["18.2","20.0","20.2","30.0","31.1","83.22","84.1"],"学习angularjs":["18.2","30.0","31.1"],"module":["19.0","19.2"],"firstctrl":["19.0","25.0","31.0"],"function":["19.0","23.3","24.1","24.2","25.0","30.1","30.4","31.0","32.4","33.0","43.1","48.2","61.32","83.15","97.4","98.6","99.4","100.4","104.3","106.7","112.7","112.14","114.2"],"scope":["19.0","22.1","23.3","24.1","24.2","30.3","30.4","30.5","31.0","32.5"],"message":["19.0","19.5","112.12"],"angularjs会解析参数的名称":["19.3"],"并转化为对应的对象传入":["19.3"],"这里使用的":["19.3"],"用于将":["19.3"],"ng":["19.3","24.3","27.1","30.6","30.7"],"controller":["19.3","24.1","25.0","30.4","31.0"],"javascript":["19.4","21.2","22.1","24.1","28.3","30.1","30.4","33.0","41.5","44.3","50.5","51.5","51.13","52.1","52.8","53.2","55.3","62.43","62.45","64.7","64.10","64.13","65.22","65.23","65.33","65.55","82.6","82.16","82.18","82.24","82.25","82.31","83.14","83.15","83.20","83.23","92.3","92.10","94.6","97.4","99.4","103.1","103.3","103.5","103.6","103.7","103.18","103.19","103.23","105.0","114.4","114.5","120.3"],"h1":["19.4","68.5"],"hello":["19.5","61.37","65.42","82.2","82.3","82.4","82.5","82.34","83.7","83.21","84.28","116.11"],"onclick":["20.1","22.1","45.1"],"alert":["20.1","85.0"],"将以下代码放置在firstctrl中":["21.0"],"input":["21.0","30.6","30.7","49.6","62.34","64.4"],"checkbox":["21.0"],"model":["21.0","25.1","30.6","30.7","65.30","99.4"],"通过复选框来控制文字是否显示":["21.0"],"的工作模式与":["21.1"],"不一样":["21.1"],"list":["22.0","23.0","23.3","29.2","65.37","65.38"],"name":["22.0","23.0","23.1","23.3","25.0","28.0","30.3","49.4","61.32","64.4","65.46","83.14","83.20","84.1","116.8","123.2","128.1"],"tom":["22.0","23.0","106.6"],"jerry":["22.0","106.6"],"下面":["22.0"],"app":["22.1","24.1","28.3","30.0","30.1","30.4","31.2","43.1","68.38","127.3"],"中":["22.1","48.0","50.0","65.2","116.12","129.2"],"对":["22.1","122.0"],"函数进行一些改造":["22.1"],"让它能够获取传入的数据":["22.1"],"json":["23.0","53.4","68.60"],"将对象转化为json文本输出":["23.0"],"orderby":["23.1"],"text":["23.2","30.6","30.7","65.37","98.3"],"split":["23.2","81.1"],"searchtext":["23.3"],"h":["23.4","84.28"],"搜索":["23.4"],"且":["23.4"],"为如下代码":["24.1"],"deleted":["24.1"],"false":["24.1","25.3","34.0","48.5","68.25","84.25","116.2"],"important":["24.1"],"并在":["24.1"],"部分将css文件引入":["24.1"],"style":["24.2","31.1","88.0"],"class":["24.3","52.8","61.17","76.0","120.3"],"5s":["24.4","74.13"],"animate":["24.4","94.6"],"color":["24.4","25.0","25.2","25.3","74.1","74.3","74.6","74.8","74.9"],"red":["24.4","24.5","25.0"],"font":["24.4","74.1"],"size":["24.4","62.28","74.1"],"styletext为样式为":["24.5"],"类型的文本":["24.5"],"通过样式传入":["24.5"],"我们可以直接向元素传入对应的样式":["24.5"],"实现样式动态化的效果":["24.5"],"一个比较主要的用途是向元素传入动态的背景图片":["24.5"],"例子如下":["24.5"],"以下两个示例来自于stackoverflow":["24.5"],"colors":["25.0"],"黑色":["25.0","25.3"],"black":["25.0","25.2","25.3"],"白色":["25.0","25.2","25.3"],"white":["25.0","25.2","25.3"],"红色":["25.0","68.39"],"colorchosen":["25.1"],"options":["25.1"],"暗色":["25.2","25.3"],"亮色":["25.3"],"美国united":["25.4"],"states":["25.4"],"uk":["25.4"],"英国united":["25.4"],"kingdom":["25.4"],"gr":["25.4"],"德国germany":["25.4"],"country":["25.4"],"相信大家对于angularjs已经有了基本的了解":["26.0"],"但是我感觉此翻译很难让读者明确其具体的含义和用法":["27.0"],"因此":["27.0"],"我在本书中直接应用了英文名":["27.0"],"angularjs的directive":["27.0"],"从实际用途的理解":["27.0"],"在第四章中我们学习的":["27.1"],"目的是对界面操作的抽象与解耦":["27.2"],"e":["28.0","28.4","64.4","83.7","84.28","93.12","130.2"],"template":["28.0","30.6","30.7","49.7","50.2","65.28","65.29","65.31","65.43","65.44","65.45","68.9"],"p":["28.0","45.1","48.3","64.5","65.29","83.6","84.6","112.5"],"姓名":["28.0"],"性别":["28.0","28.1"],"sex":["28.0","28.1","30.6"],"我们将这段代码分拆开逐步讲解":["28.1"],"声明一个directive的基本结构如下":["28.1"],"html对应的标签":["28.2"],"将被替换成对应的内容":["28.2"],"则可以让angularjs用替换的模式应用directive":["28.3"],"directive":["28.3","30.1","31.2","32.4","33.0"],"people":["28.3","29.5","30.1","116.9"],"值":["28.4"],"对应类型":["28.4"],"使用方法":["28.4"],"并且通过":["29.0"],"语法":["29.1"],"也就是从第二个单词开始":["29.1"],"peoplelist":["29.2"],"因为html对大小写不敏感":["29.3"],"并进行一下两个方面的处理":["29.4"],"去除字段的":["29.4"],"x":["29.4","30.0","31.1","83.6","112.3","115.3","115.5"],"示例":["29.5","73.0","84.1"],"减号":["29.5"],"黄色背景部分代表不符合标准":["29.6"],"图5":["29.6"],"html5验证结果":["29.6"],"无data前缀":["29.6"],"directive提供了非常简单的定义一个scope的功能":["30.1"],"restrict":["30.1","30.5","31.0","32.4"],"info":["30.1","30.2","30.5","51.5"],"在firstctrl中加入如下代码":["30.3"],"anotherperson":["30.3"],"张三":["30.3"],"注意":["30.7","51.5","82.12","102.2"],"这里没有加入下方的value模型":["30.7"],"一个用于输入文字的输入框":["30.7"],"绑定到value上":["30.7"],"value":["30.7","49.5","56.3","61.32","64.7","65.54","84.9","116.2","120.6"],"br":["30.7"],"提交的按钮":["30.7"],"绑定上方scope的btnclick方法":["30.7"],"注意传入参数的方式和html中具体使用的方式":["30.7"],"link":["31.1","32.5"],"href":["31.1"],"rel":["31.1"],"stylesheet":["31.1"],"formdirective":["31.2","32.4","33.0"],"stringify":["32.0","61.45"],"带有三个参数":["32.0"],"为了更好的了解link函数三个参数的意义":["32.0"],"函数中加上了日志输出的":["32.0"],"被转义成json的文本中很难获取任何实质的信息":["32.1"],"实现了jquery中的大部分常用功能":["32.2"],"也就是":["32.2"],"我们可以在获取了":["32.2"],"参数后":["32.2"],"调用jquery常用的语法":["32.2"],"install":["32.3","92.2"],"attrs":["32.5"],"children":["32.5","41.10"],"bind":["32.5","61.26","65.27"],"这是如何实现的呢":["33.0"],"这就要应用到directive的":["33.0"],"属性":["33.0","62.7","62.39","105.4"],"tab列表中项目被选中":["34.0"],"的处理函数":["34.0"],"pane":["34.0"],"foreach":["34.0","84.13","84.18","93.13"],"selected":["34.0"],"初始化页面时":["34.0"],"但是我建议各位读者好好的掌握本章的内容":["35.0"],"的过程中的资料梳理":["37.1"],"hairui219":["37.2"],"learning":["37.2"],"条件判断":["37.3","38.0"],"js的使用方法":["37.4"],"您知道控制台命令如何使用":["37.4"],"如果您需要对以上某方面内容入门":["37.4"],"之后我改做应用和手机游戏的后端开发":["37.5"],"主要使用php":["37.5"],"在这几年的工作经验中":["37.5"],"过程并不向用户开放":["37.6"],"起到了隐蔽后端服务器的效果":["37.6"],"业":["37.7"],"zhi":["37.7"],"来获取元素和填入代码之类的工作":["37.8"],"但学会基本的语法之后":["37.8"],"我仍然是对于具体如何操作dom来实现具体的功能完全没有头绪":["37.8"],"这是一种什么感觉呢":["37.8"],"就像是在读大学时学习c":["37.8"],"c":["37.8","61.30","82.13","83.7","83.17","93.12","112.14"],"java语言":["37.8"],"我们可以手工的去实现一些基本的算法或数据结构":["37.8"],"但是学完了之后":["37.8"],"我们可以直接使用c":["37.8"],"或java制作基于windows的客户端程序了吗":["37.8"],"完全重构整个网站是可以接受的":["37.9"],"我之前只是误打误撞的制作出来一个":["37.9"],"我自认为是一个比较追求新技术的人":["37.10"],"但是当我测试angular":["37.10"],"2时":["37.10"],"发现我电脑上安装的chrome":["37.10"],"v44版本无法运行":["37.10"],"当我下载更新到v47后才能正常运行":["37.10"],"官网介绍v46以上才支持es6":["37.10"],"许可协议进行许可":["37.11"],"访问":["37.11"],"http":["37.11"],"creativecommons":["37.11"],"org":["37.11"],"licenses":["37.11"],"by":["37.11"],"nc":["37.11"],"数据绑定":["38.0","65.2"],"在vue中我们组合不同功能的方式是通过composition":["41.1"],"开放是针对组件通信来说":["41.2"],"指的是不同组件可以通过props":["41.2"],"单向数据流":["41.2"],"进行数据交互":["41.2"],"componentwillmount":["41.3","68.26"],"react17版本中被移除":["41.3"],"render":["41.3","50.2","53.4","64.5","64.6","68.21"],"componentdidmount":["41.3","64.6"],"更新":["41.3","52.8"],"class的区别":["41.4"],"import":["41.5","65.54","68.13","124.7"],"的警告":["41.6"],"关于使用废弃的":["41.6"],"在页面重新加载时去获取redux中的数据":["41.7"],"使用webpack构建的项目":["41.7"],"需要通过webpack":["41.8"],"不在react中使用jsx会更加方便":["41.9"],"每个jsx元素只是调用":["41.9"],"errorboundary":["41.10"],"haserror":["41.10"],"sethaserror":["41.10"],"需要使用babel去转换为浏览器识别的js":["41.11"],"所以在":["41.12"],"受控组件更合适":["41.13"],"数据驱动是react的核心":["41.13"],"一个html":["42.1"],"返回所有数据":["42.1"],"减少http请求":["42.1"],"现在统一到服务端node去做":["42.2"],"尤其是遇到高并发访问的情况":["42.2"],"利用dom":["44.0"],"document":["44.1","81.4"],"于是每次数据微小的变化都会引起dom的重新渲染":["44.2"],"vue":["44.3","49.7","53.4","65.19","65.27","65.31","65.44","65.45","65.54","65.57","68.7","68.9","127.3"],"转化后":["44.3"],"并且虚拟dom感受到变化的时候是通过局部更新而非整体":["44.5"],"从而减少非常多的dom操作":["44.5"],"并且模拟了事件冒泡和捕获的过程":["44.6"],"采取事件代理批量更新等方法":["44.6"],"高阶组件通常用于组件之间的复用逻辑":["45.0"],"例如状态管理":["45.0"],"数据获取":["45.0"],"访问控制等等":["45.0"],"hoc一个常见的示例就是react":["45.0"],"button":["45.1","49.5","68.5","68.19"],"useeffect":["45.1"],"返回的是一个全局可以访问和修改的":["45.2"],"ref":["45.2","48.4","68.1"],"对象":["45.2","115.4"],"usestate用于保存和更新组件的状态":["45.2"],"matchpattern":["47.0"],"任何名称与":["47.0"],"exclude":["47.0"],"匹配的组件都不会被缓存":["47.0"],"最多可以缓存多少组件实例":["47.0"],"max":["47.0"],"string":["47.0","56.3","99.1","112.7","112.16","115.2","115.3","116.9"],"regexp":["47.0","100.1","112.14"],"keepalive支持传入三个可选参数":["47.0"],"分别是":["47.0"],"keepalive":["47.0"],"默认会缓存内部的所有组件实例":["47.0"],"但是可以通过":["47.0"],"来定制该行为":["47.0"],"支持传入":["47.0"],"字符串":["47.0","68.60","97.2"],"数组或者正则表达式":["47.0"],"的实现原理基于浏览器的异步任务队列和微任务队列":["48.0"],"默认使用微任务":["48.0"],"实际上就启动执行了该进程的主执行线程":["48.1"],"线程则相当于车间里的工人":["48.1"],"一个车间会有多个工人在工作":["48.1"],"所以一个进程可以包含多个线程":["48.1"],"浏览器是多线程的":["48.1"],"所以它可以一次能够处理多个事件":["48.1"],"比如渲染页面":["48.1"],"脚本执行":["48.1"],"事件处理等等":["48.1"],"js则是单线程的":["48.1"],"浏览器只给js分配了一个线程":["48.1"],"执行栈与任务队列":["48.1"],"observer":["48.2"],"scheduler":["48.2"],"export":["48.2","50.5","64.13","65.54","68.13","83.23","124.7"],"queuewatcher":["48.2"],"watcher":["48.2"],"resolve":["48.3","48.5","93.14"],"执行回调函数":["48.3"],"then":["48.3","93.14"],"flushcallback":["48.3"],"ios":["48.3","118.0"],"中可能会出现一个回调被推入微任务队列":["48.3"],"但是队列没有刷新的情况":["48.3"],"所以用一个空的计时器来强制刷新任务队列":["48.3"],"isios":["48.3"],"noop":["48.3"],"true":["48.3","65.51","84.9","84.25","87.0","114.1"],"else":["48.3","48.5","74.14","84.7"],"isie":["48.3"],"tostring":["48.3","83.8","112.13","120.6"],"object":["48.3","84.2","84.4","106.9"],"mutationobserverconstructor":["48.3"],"不支持":["48.3"],"的话":["48.3"],"在支持mutationobserver的非":["48.3"],"ie":["48.3"],"环境下":["48.3"],"如":["48.3","65.36","68.26","68.54","75.0","92.8"],"flushindex":["48.5"],"currentpreflushparentjob":["48.5"],"可以入队就添加到主任务队列":["48.5"],"id":["48.5","68.9","123.2"],"否则就插入到头部":["48.5"],"findinsertionindex":["48.5"],"创建微任务":["48.5"],"这个方法负责尝试创建微任务":["48.5"],"等待任务队列执行":["48.5"],"是否正在执行":["48.5"],"isflushpending":["48.5"],"是否正在等待执行":["48.5"],"微任务创建器":["48.5"],"当前任务":["48.5"],"当前没有微任务":["48.5"],"简写":["49.1"],"这里的":["49.1"],"就是一个参数":["49.1"],"它告诉":["49.1"],"指令将表达式":["49.1"],"的值绑定到元素的":["49.1"],"attribute上":["49.1"],"在简写中":["49.1"],"参数前的一切":["49.1"],"都会被忽略为一个":["49.1"],"字符":["49.1"],"另一个例子是":["49.1"],"指令":["49.1","83.12"],"它将监听dom事件":["49.1"],"惰性":["49.3"],"如果初次渲染时条件值为false":["49.3"],"那么它不会做任何事":["49.3"],"条件区块只有当条件首次变为true才会被渲染":["49.3"],"是基于表达式的真假性":["49.3"],"来条件性地渲染元素或者模版片段":["49.3"],"的默认方式是尝试就地更新元素而不移动它们":["49.4"],"要强制其重新排序元素":["49.4"],"则需要使用特殊attribute":["49.4"],"来提供一个排序提示":["49.4"],"src":["49.5"],"imagesrc":["49.5"],"动态":["49.5"],"名":["49.5"],"key":["49.5","61.32","84.5","84.9","93.10","116.1"],"缩写":["49.5"],"缩写形式的动态":["49.5"],"事件而不是":["49.6"],"将输入合法字符串转为数字":["49.6"],"方法接收原生事件作为唯一参数":["49.7"],"如果使用内联声明":["49.7"],"生命可以访问一个特殊的":["49.7"],"变量":["49.7","97.2","112.17"],"click":["49.7","65.40","68.5","97.5"],"handle":["49.7"],"还支持绑定不带参数的事件":["49.7"],"监听器的对象":["49.7"],"请注意":["49.7"],"当使用对象语法时":["49.7"],"不支持任何修饰符":["49.7"],"destroyed":["50.0"],"而在":["50.0"],"在":["50.0","65.2","68.3","82.21","127.2"],"组件挂载之前":["50.1"],"mounted":["50.1"],"组件挂载到实例上去之后":["50.1"],"beforeupdate":["50.1","50.4"],"判断是否存在":["50.2"],"选项":["50.2","51.9"],"若不存在则停止编译":["50.2"],"直到调用":["50.2"],"mount":["50.2"],"才会继续编译":["50.2"],"优先级":["50.2"],"outerhtml":["50.2"],"是在页面":["50.3"],"节点渲染完毕之后就立刻执行的":["50.3"],"触发时机上":["50.3"],"update":["50.4","112.17"],"被替换为":["50.4"],"onbeforeupdate":["50.4"],"onupdate":["50.4"],"beforedestroy":["50.4"],"函数需要返回一个对象":["50.5"],"用于暴露组件状态和方法给模版使用":["50.5"],"因此也提高了代码的可读性和组件的封装性":["50.5"],"default":["50.5","64.13","65.54","68.13","124.7"],"透传":["50.5"],"attributes":["50.5"],"非响应式对象":["50.5"],"等价于":["50.5"],"console":["50.5","51.8","65.54","81.4","82.5","82.7","82.9","82.20","82.29","84.4","84.10","84.29","84.31","85.0","98.6","103.14","104.3","104.5"],"log":["50.5","65.54","81.4","82.7","82.9","82.20","82.29","82.30","84.4","84.29","93.15","103.14","104.3","104.5","114.1"],"插槽":["50.5"],"触发事件":["50.5"],"函数":["50.5","61.38","93.14","100.1"],"vue侦听器":["51.0"],"执行的回调函数":["51.2"],"返回一个值":["51.3"],"该回调函数会在副作用下一次重新执行前调用":["51.4"],"可以用来清除无效的副作用":["51.4"],"当直接侦听一个响应式对象时":["51.5"],"侦听器会自动启用深层模式":["51.5"],"state":["51.5"],"reactive":["51.5"],"并在依赖更改时重新执行":["51.6"],"第二个参数是watcheffect的属性":["51.7"],"objdata":["51.8"],"str":["51.8","61.37","82.2","82.4","82.5","82.6","84.28","84.29"],"ontrigger":["51.9"],"功能和":["51.9"],"watcheffect":["51.10","51.15"],"当不再需要此侦听器时":["51.10"],"只追踪明确侦听的数据源":["51.12"],"它不会追踪任何在回调中访问到的东西":["51.12"],"post":["51.13","61.40"],"选项即可":["51.13"],"source":["51.13","115.4"],"返回的函数":["51.15"],"需要异步请求得到的数据":["51.16"],"当我们用":["52.1"],"也会更新":["52.2"],"例如在用户填写表单时":["52.2"],"视图层":["52.3"],"还有两个主要部分组成":["52.4"],"监听器":["52.4"],"同时对模版执行编译":["52.5"],"找到其中动态绑定的数据":["52.5"],"从":["52.5"],"中获取数据并初始化视图":["52.5"],"这个过程发生在解析器":["52.5"],"选项做响应式处理":["52.6"],"observe":["52.6"],"代理":["52.6"],"到":["52.6"],"vm":["52.6","52.8"],"上":["52.6","68.11","98.5"],"childnodes":["52.7"],"对应的dep中":["52.8"],"当":["52.8"],"setter":["52.8"],"触发时":["52.8"],"便可通过对应":["52.8"],"通知管理所有":["52.8"],"负责更新视图":["52.8"],"constructor":["52.8"],"updater":["52.8"],"在单页面应用中":["53.2"],"所有有必要的代码":["53.2"],"之后解析":["53.3"],"生成":["53.3"],"fcp":["53.3"],"资源加载下来了":["53.3"],"首次的内容绘制":["53.3"],"有一个大结构了":["53.3"],"queryselector":["53.4"],"header":["53.4","62.12","65.13"],"同构":["53.4"],"同构渲染就是一套代码多端使用":["53.4"],"现在有一些框架":["53.4"],"next":["53.4","120.6"],"nuxt":["53.4"],"类似于渲染就是":["53.4"],"server":["53.4"],"getsum":["55.1"],"08":["55.2"],"到被加载的那个模块里面去取值":["55.3"],"输出的是对象的拷贝":["55.3"],"在引入的模块中的变化影响不到这个值":["55.3"],"若文件引用的模块值改变":["55.3"],"引入的模块值不会改变":["55.3"],"而":["55.3","56.2","62.50","68.7","82.22"],"引入的模块值会改变":["55.3"],"用法不同":["55.3"],"类型是可以的":["56.2"],"unknown类型赋值给除了":["56.2"],"类型不会报错":["56.2"],"其它都会报错":["56.2"],"known":["56.2"],"known1":["56.2"],"boolean":["56.2","100.1","115.4"],"fun":["56.3"],"typeof":["56.3","112.10","112.16"],"️":["57.1"],"更新了面试相关的javascript相关":["57.2"],"的区别请简述":["59.7"],"跨平台的语言":["61.1"],"脚本语言":["61.1"],"解释性语言":["61.1"],"来创建该对象":["61.3"],"设置回调函数":["61.3"],"在发送请求之前":["61.3"],"需要设置一个回调函数来处理服务器响应":["61.3"],"onreadystatechange":["61.3"],"属性来监听状态变化":["61.3"],"并在状态变化时触发回调函数":["61.3"],"打开和发送请求":["61.3"],"open":["61.3","87.0"],"方法来指定请求的类型":["61.3"],"表示服务器已经成功接受请求":["61.4"],"并返回客户端所请求的结果":["61.4"],"表示服务器已经接受了请求":["61.4"],"但是还没有处理":["61.4"],"就会形成闭包":["61.6"],"别的函数可能误用这些变量":["61.7"],"造成全局对象过于庞大":["61.7"],"影响访问速度":["61.7"],"因为变量的取值是需要从原型链上遍历的":["61.7"],"除了每次使用变量都是用":["61.7"],"会造成内存泄漏":["61.8"],"details":["61.8","62.48","130.2"],"什么是内存泄漏":["61.8"],"内存泄漏":["61.8"],"memory":["61.8"],"leak":["61.8"],"是指程序中已经不再使用的内存没有被及时释放":["61.8"],"导致系统的可用内存逐渐减少":["61.8"],"就可以管理某一些类型的所有事件":["61.9"],"js高级程序设计":["61.9"],"提高性能":["61.10"],"减少内存空间":["61.10"],"每个函数都是对象":["61.10"],"对象会占用内存":["61.10"],"对象越多":["61.10"],"内存占用率越大":["61.10"],"可以返回事件的目标节点":["61.11"],"我们称为事件源":["61.11"],"捕获阶段":["61.12"],"从window对象传导到目标节点":["61.12"],"生命周期":["61.13"],"cookie可以设置过期时间":["61.13"],"可以使会话级的":["61.13"],"浏览器关闭时失效":["61.13"],"也可以是持久性的":["61.13"],"cookie还可以设置域名和路径":["61.13"],"用于控制其在哪些请求中发送":["61.13"],"本地存储分为两种":["61.13"],"newkey":["61.16"],"newvalue":["61.16"],"name1":["61.16","116.9"],"操作起来更方便":["61.17"],"简化了过程":["61.17"],"js本身事没有":["61.17"],"也就是实例":["61.18"],"普通函数的返回值由":["61.18"],"决定":["61.18"],"构造函数的函数名与类名相同":["61.18"],"引申":["61.18"],"构造函数在被":["61.18"],"的过程中":["61.18"],"发生了什么":["61.18"],"待开发":["61.20"],"解决问题":["61.20","124.5"],"await":["61.21"],"函数前必须加一个":["61.21"],"请求参数的限制是来源与浏览器或":["61.22"],"web":["61.22","68.38"],"服务器":["61.22"],"浏览器或者":["61.22"],"服务器限制了":["61.22"],"请求":["61.23","61.40"],"一般是做查询操作":["61.23"],"的交互是通过":["61.24"],"事件驱动":["61.24","110.1"],"addeventlistener":["61.25"],"scrollheight":["61.27"],"里的方法":["61.28"],"clientx":["61.28"],"clienty":["61.28"],"javascript的解释器会消耗完系统中所有可用的内存":["61.30"],"造成系统崩溃":["61.30"],"javascript不像c":["61.30"],"它有一套自己的垃圾回收机制":["61.30"],"garbage":["61.30"],"这种方法不太常见":["61.31"],"引用计数法的意思是每个值被引用的次数":["61.31"],"当声明了一个变量":["61.31"],"并用一个引用类型的值赋值给改变量":["61.31"],"则这个值的引用次数就为1":["61.31"],"相反的":["61.31"],"如果包含了对这个值引用的变量":["61.31"],"又取得了另外一个值":["61.31"],"则在原先的引用值的引用次数":["61.31"],"减":["61.31"],"当这个值的引用次数为":["61.31"],"newarg":["61.33"],"concat":["61.33"],"www":["61.35"],"phpernote":["61.35"],"com":["61.35"],"uploadfiles":["61.35","61.36"],"editor":["61.35","61.36"],"201107240502201179":["61.36"],"jpg":["61.36"],"但是不能实现例如包装对象":["61.37"],"对象的克隆":["61.37"],"包装对象":["61.37"],"num":["61.37","116.10"],"空对象":["61.37"],"剩余部分作为右侧子串":["61.38"],"preresult":["61.38"],"对右侧子串进行全排列":["61.38"],"递归调用":["61.38"],"i":["61.38","81.1","90.0"],"get":["61.40","84.5","84.8","84.16","87.0"],"所谓的同源":["61.41"],"指的是协议":["61.41"],"margin":["61.42","62.5","62.51","74.10","74.11","74.12","74.14"],"left":["61.42","74.11"],"top":["61.42","74.5","74.11","74.12","102.5"],"合并成":["61.42"],"或者是指向该函数所属的对象":["61.43"],"全局this":["61.43"],"结构":["61.44"],"不仅适用于数组还适用于对象":["61.45"],"也就是说会包括那些在原型链上的属性":["61.46"],"prototype":["61.47","99.4","106.3","106.4"],"咱两在一起上班":["61.48"],"到吃饭时间了":["61.48"],"响应":["61.50"],"的模式":["61.50"],"无状态保存":["61.50"],"无链接":["61.50"],"目的是减少文件下载体积":["61.51"],"使用":["61.51","65.15","68.32","85.0","127.0"],"cdn":["61.51"],"之后使用的时候从缓存中调用":["61.52"],"懒加载是延迟加载":["61.52"],"xss攻击与csrf攻击":["61.54"],"png":["62.1"],"可以在文件大小和图像质量之间取得平衡":["62.2"],"优点":["62.2","62.3","62.4"],"简单图形和带有透明度的图像":["62.3"],"支持动画":["62.4"],"外边距":["62.5"],"组成":["62.5"],"设置元素的宽高只是设置了内容区域的宽高":["62.5"],"盒子真正的宽高应该是":["62.5"],"需要播放的视频地址":["62.9","62.10"],"width":["62.9","74.9","74.11","74.12","74.13","88.0"],"视频区域的宽度":["62.9"],"height":["62.9","74.6","74.9","74.12","74.13","88.0"],"属性名称":["62.10"],"功能":["62.10","62.16","105.4"],"表单元素":["62.11"],"页面头部":["62.12"],"main":["62.12"],"页面主要内容":["62.12"],"footer":["62.12"],"页面底部":["62.12"],"模糊半径":["62.14"],"阴影尺寸":["62.14"],"阴影颜色":["62.14"],"内":["62.14"],"外部阴影":["62.14"],"背景图片尺寸":["62.15"],"origin":["62.15","62.18","107.0","129.4"],"linear":["62.16","74.5"],"定义如何换行":["62.17"],"wrap":["62.17"],"倾斜":["62.18"],"可以更改元素转换的位置":["62.18"],"改变":["62.18"],"xyz":["62.18"],"proprety":["62.19"],"过渡属性名":["62.19"],"keyframes":["62.20","74.2","74.4"],"动画名称":["62.20"],"duration":["62.20"],"属性是对ie6的兼容":["62.21"],"兼容性高":["62.21"],"但是设置":["62.21"],"绝对定位":["62.22"],"脱离文档流":["62.22"],"相对于父级定位":["62.22"],"并且子元素不能设置浮动":["62.24"],"float":["62.24"],"否则居中失效":["62.24"],"translatey":["62.25"],"不知道父元素高度":["62.25"],"子绝对定位父相对定位":["62.25"],"子元素":["62.25"],"父元素设置display":["62.26"],"table":["62.26"],"cell":["62.26"],"vertical":["62.26"],"align":["62.26"],"middle":["62.26"],"子元素设置margin":["62.26"],"自身浮动法":["62.27"],"左栏左浮动":["62.27"],"右栏右浮动":["62.27"],"adjust":["62.28"],"hover":["62.30","75.0"],"active":["62.30","75.0"],"css2伪类选择器":["62.30"],"结构伪类选择器":["62.30"],"nth":["62.30"],"child":["62.30","65.37","65.42","65.46","65.47","106.3","106.5"],"伪元素选择器":["62.31","75.0"],"position":["62.32","74.11","74.12","74.13"],"如果前者小于后者":["62.33"],"优先加载":["62.33"],"em":["62.34"],"select":["62.34"],"sub":["62.34"],"padding":["62.35","116.2"],"内边距":["62.35","88.0"],"direction":["62.36"],"弹性容器中子元素排列方式":["62.36"],"主轴排列方式":["62.36"],"的值并不是固定的":["62.38"],"会继承父级元素的字体大小":["62.38"],"参考物是父元素的":["62.38"],"或":["62.40","83.10","92.8","96.0"],"xhtm":["62.40"],"通过它可以告诉浏览器":["62.41"],"使用哪一个":["62.41"],"在开始拖放被拖放元素时触发":["62.42"],"darg":["62.42"],"在正在拖放被拖放元素时触发":["62.42"],"这里影响和优化的主要是网络和":["62.43"],"脚本":["62.43"],"则可以改成":["62.44"],"async":["62.44"],"或者":["62.44","92.2","97.5"],"defer":["62.44"],"是由":["62.45"],"通过修改":["62.45"],"dom":["62.45","64.20","65.11","84.5"],"服务器会发送查询报文到顶级域名服务器":["62.48"],"顶级域名服务器收到请求后会返回权威":["62.48"],"地址":["62.48"],"服务器地址再发送查询报文到权威":["62.48"],"权威":["62.48"],"服务器接收到请求后":["62.48"],"返回最终的":["62.48"],"tcp三次握手建立连接":["62.48"],"网络模型":["62.48"],"网络模型可以分为七层":["62.48"],"四层或五层模型":["62.48"],"这里我们将其分为五层":["62.48"],"五层":["62.48"],"自上而下":["62.48"],"分为应用层":["62.48"],"传输层":["62.48"],"网络层":["62.48"],"content":["62.49"],"initial":["62.49"],"scale":["62.49"],"trhead":["62.50"],"完成":["62.50","102.2"],"js动画":["62.50"],"则会在":["62.50"],"普通流的块级元素垂直方向的":["62.51"],"用于创建对跨渲染保留的元素或值的可变引用":["64.1"],"usecallback":["64.1","68.33"],"缓存回调函数":["64.1"],"避免在每次渲染时都创建新的回调函数实例":["64.1"],"当回调函数作为prop传递给子组件时":["64.1"],"当对react组件的数据火状态进行更改时":["64.2"],"虚拟dom会更新":["64.2"],"而不是直接操作真实的dom":["64.2"],"native":["64.3","100.4"],"weex":["64.3"],"不同点":["64.3"],"严格上只针对":["64.3"],"mvc":["64.3"],"层":["64.3"],"h3":["64.4"],"controlled":["64.4"],"component":["64.4","64.10","64.22"],"onchange":["64.4"],"handleagechange":["64.5"],"is":["64.5","65.46","104.3"],"此方法负责渲染jsx标记并返回要在屏幕上显示的内容":["64.6"],"此方法在组件dom中呈现后会立即调用":["64.6"],"它通常用于初始化任务":["64.6"],"例如":["64.6","65.44","68.42"],"相反":["64.8"],"建议使用useeffect":["64.8"],"传递给":["64.8"],"以防止内存泄漏":["64.9"],"此外":["64.9"],"如果组件多次渲染":["64.9"],"则在执行下一个效果之前":["64.9"],"清除上一个效果":["64.9"],"parent":["64.10","68.9"],"状态管理器可以解决几个问题":["64.11"],"并且没有后计划将其传递给其它区组件":["64.12"],"则建议使用本地状态":["64.12"],"我们跟踪接收到的动作的类型":["64.13"],"并根据它修改状态并返回一个新的状态对象":["64.13"],"它必须具有类型字段":["64.14"],"flux":["64.15"],"它旨在处理流式数据和大规模数据集":["64.16"],"提供了一种功能强大且灵活的方式来处理数据流":["64.16"],"xmlhttprequest对象与服务器进行异步通信的技术":["64.17"],"ajax可以实现在不重新加载整个页面的情况下更新部分页面内容":["64.17"],"ajax是一种基于原生javascript的技术":["64.17"],"相对来说比较底层":["64.17"],"并且需要开发者处理一些底层逻辑细节":["64.17"],"hooks时":["64.18"],"需要遵循一些规则":["64.18"],"其中一个重要的规则是不能将":["64.18"],"hooks放到条件判断语句":["64.18"],"循环语句等代码块中":["64.18"],"父组件可以将数据作为属性传递给子组件":["64.19"],"并且子组件可以通过":["64.19"],"尽可能高效地识别需要进行实际":["64.20"],"更新的部分":["64.20"],"从而避免不必要的重绘和重新排版":["64.20"],"diff算法的一般流程如下":["64.20"],"虚拟dom没有立即更新真的dom":["64.21"],"是先把dom结构抽象成dom树":["64.21"],"mvvm":["65.1"],"编写的":["65.2"],"可以使用模版引擎来渲染动态数据":["65.2"],"视图模型":["65.2"],"viewmodel是链接模型和视图的桥梁":["65.2"],"它负责将模型数据映射到视图上":["65.2"],"并将用户的交互事件传递给模型":["65.2"],"viewmodel可以使用数据绑定来自动更新视图":["65.2"],"当模型数据发生改变时":["65.2"],"视图自动更新":["65.2"],"最重要的部分是数据绑定和双向数据绑定":["65.2"],"是指将视图中的元素绑定到模型数据的过程":["65.2"],"子组件所有的":["65.3"],"阻止点击事件冒泡":["65.4"],"相当于原生中":["65.4"],"event":["65.4"],"stoppropagation":["65.4"],"prevent":["65.4"],"防止执行预设的行为":["65.4"],"相当于原生中的":["65.4"],"preventdefault":["65.4"],"并不能显示输出":["65.6"],"等价":["65.7"],"只是":["65.7"],"可以的":["65.9"],"如果绑定多个事件":["65.9"],"是保证唯一性":["65.10"],"vue在执行时":["65.10"],"当在模版中把数据绑定到一个计算属性上时":["65.11"],"方式进行跳转的叫做编程式导航":["65.12"],"router":["65.12","65.16","65.19","65.23","65.33"],"后台更改":["65.13"],"url的":["65.15"],"hash值来做路由":["65.15"],"支持所有浏览器":["65.15"],"以及浏览器的前进后退会触发相应的监听事件":["65.16"],"然后调用":["65.16"],"之后更新路由":["65.16"],"触发":["65.16"],"history":["65.18"],"routes":["65.18"],"hash只能修改":["65.20"],"的部分":["65.20"],"可以设置与当前url一样的新的url":["65.20"],"路由定义":["65.22"],"path":["65.22"],"user":["65.22","81.4","128.1"],"导航到搜索页面并传递查询参数":["65.23"],"使用路由参数更合适":["65.24"],"确保信息直接可见":["65.24"],"如果希望用户能够在url中看到传递的信息":["65.24"],"使用双大括号":["65.26"],"将变量插入到模版中":["65.26"],"指令可以将一个变量的值绑定到html元素属性上":["65.27"],"v":["65.30","65.36","65.46"],"实例中的方法":["65.31"],"createrouter":["65.33","65.55"],"guards":["65.34"],"表示当前导航正要离开的路由":["65.35"],"一个函数":["65.35"],"用于进入下一个钩子":["65.35"],"beforeresolve":["65.35"],"mext":["65.35"],"在导航被确认之前":["65.35"],"也就是所有组件的":["65.35"],"beforerouterenter":["65.35"],"被调用之后触发":["65.35"],"在这些守卫中":["65.35"],"通过调用":["65.35"],"自定义属性名":["65.37"],"属性值":["65.37"],"的形式传递":["65.37"],"子组件":["65.38","65.42","65.44"],"子组件接受通过":["65.38"],"nox":["65.40"],"buttom":["65.40"],"transferparents":["65.40"],"点击传值给父组件":["65.40","65.41"],"父组件接收":["65.41"],"引入组件":["65.41"],"world":["65.42","82.2","82.5","83.21","84.31"],"slot":["65.43"],"我是设置的默认内容":["65.43"],"xxx":["65.44"],"可简写为":["65.44"],"指令的":["65.44"],"元素":["65.44"],"这个元素会将目标插槽的名字传递下去匹配对应插槽":["65.44"],"父组件":["65.45"],"slotprops":["65.46"],"my":["65.46"],"bigturnip":["65.47"],"或者是由以上类型的值组成的数组":["65.50"],"第二个参数是在发生变化时要调用的回调函数":["65.50"],"这个回调函数接收三个参数":["65.50"],"新值":["65.50"],"旧值":["65.50"],"fooref":["65.51"],"barref":["65.51"],"foo":["65.51","84.4","98.2"],"bar":["65.51","98.7"],"prefoo":["65.51"],"prebar":["65.51"],"深度遍历":["65.51"],"当使用getter函数作为源时":["65.51"],"回调只在此函数的返回值变化时才会触发":["65.51"],"如果想让回调在深层级变更时也能触发":["65.51"],"你需要使用":["65.51"],"deep":["65.51"],"强制侦听器进入深层级模式":["65.51"],"在深层级模式时":["65.51"],"适用于派生值的场景":["65.52"],"它会缓存计算结果":["65.52"],"只有在依赖的响应式数据变化时才重新计算":["65.52"],"是监听一个值的变化而执行对应的回调":["65.52"],"白屏时间怎么检测":["65.53"],"setup":["65.54"],"访问当前路由信息":["65.54"],"createwebhashhistory":["65.55"],"而不仅仅是对象的属性":["65.56"],"这使得vue3能够高效的追踪数据的变化":["65.56"],"从而提高响应性能":["65.56"],"编译优化":["65.56"],"的编译器做了大量的优化工作":["65.56"],"生成的运行时代码更为精简和高效":["65.56"],"其中有一个重要的变化是将模版编译为更优化的渲染函数":["65.56"],"减少了运行时的开销":["65.56"],"新的编译器还引入了静态提升":["65.56"],"static":["65.56"],"hoisting":["65.56"],"对应一般":["65.57"],"对象的":["65.57"],"里存放的数据是响应式的":["65.57"],"数据发生改变":["65.57"],"的参数中":["68.3"],"我们可以定义一个对象":["68.3"],"其中的每个属性代表一个prop":["68.3"],"在这个示例中":["68.3"],"我们定义了一个名为":["68.3"],"count":["68.3","68.5"],"changeparentcount":["68.5"],"更新父组件的count":["68.5"],"defineexpose适用于将组件内部的属性和方法暴露给父组件或者其它组件使用":["68.7"],"通过这种方式":["68.7"],"我们可以定义哪些部分可以从组件外部访问和调用":["68.7"],"子组件child":["68.7"],"上面这段代码中":["68.7","84.1"],"我们定义了一个":["68.7"],"它接收一个参数":["68.9"],"即要注入的数据的键":["68.9"],"在子组件中使用inject时":["68.9"],"可以直接使用接收到的数据":["68.9"],"而不需要再组件的配置选项中声明这些数据":["68.9"],"父组件parent":["68.9"],"child1":["68.9"],"child2":["68.9","106.3"],"将父组件的":["68.11"],"双向绑定到子组件的":["68.11"],"面的代码中":["68.11"],"接着":["68.13"],"创建一个event":["68.13"],"bus":["68.13"],"ts":["68.13"],"设计的状态管理库":["68.15"],"类似":["68.15"],"react":["68.17"],"无法检测到状态的更改":["68.17"],"正确的做法是始终使用":["68.17"],"行为":["68.18"],"最好使用具有唯一标识的属性作为":["68.18"],"jsx":["68.18","68.19"],"错误的方式":["68.18","68.19","68.21"],"可以使用箭头函数或在构造函数中绑定方法来解决这个问题":["68.19"],"可能会导致":["68.20"],"通过next":["68.22"],"mounting":["68.23"],"更新阶段":["68.23"],"updating":["68.23"],"getderivedstatefromprops":["68.24"],"props":["68.24"],"静态方法":["68.24"],"用于根据":["68.24"],"决定是否重新渲染组件":["68.25"],"可以通过返回":["68.25"],"来阻止渲染过程":["68.25"],"还有一些过时的生命周期方法":["68.26"],"但效果在所有dom突变后同步运行":["68.35"],"并且列表移出可视区域时":["68.36"],"虚拟滚动列表会回收对应的dom元素从而降低内存占用":["68.36"],"收集现代性能指标并提供对开发人员最佳实践的意见":["68.37"],"搜索引擎优化":["68.38"],"seo":["68.38"],"页面是否针对搜索引擎结果排名进行了优化":["68.38"],"pwa":["68.38"],"progressive":["68.38"],"慢":["68.39"],"调试面板中的":["68.40"],"lighthouse":["68.40"],"有几种常用的方式可以实现跨页面通信":["68.41"],"storage提供了一种在浏览器中存储数据的方法":["68.43"],"这些数据在不同页面之间是共享的":["68.43"],"但是":["68.45","82.21"],"api允许在不同的窗口或iframe之间安全地发送消息":["68.46"],"通过在页面上建立websocket连接":["68.47"],"可以实现实时的跨页面数据传输":["68.47"],"不同端口或不同协议的资源发起请求时":["68.48"],"是一种利用":["68.49"],"标签的":["68.49"],"w3c":["68.50"],"提出的跨域解决方案":["68.50"],"通过在服务器端设置相应的":["68.50"],"当浏览器无法直接访问目标资源时":["68.51"],"如果目标服务器支持":["68.52"],"来进行跨域身份验证":["68.53"],"是一种基于":["68.53"],"性能问题":["68.54"],"如果在父页面和":["68.54"],"中频繁进行通信":["68.54"],"可能会影响页面的性能":["68.54"],"特别是在某些情况下":["68.54"],"由于通信的频繁性":["68.54"],"可能会导致页面变得不稳定或响应变慢":["68.54"],"浏览器兼容性":["68.54"],"不同浏览器对于":["68.54"],"中的跨页面通信机制的支持程度可能有所不同":["68.54"],"需要谨慎考虑兼容性问题":["68.54"],"为了解决这些问题":["68.54"],"可以采取一些措施":["68.54"],"例如使用安全的通信机制":["68.54"],"开发方式有以下特点":["68.55"],"集中管理":["68.55"],"所有项目的代码都集中存储在一个代码仓库中":["68.55"],"便于管理和维护":["68.55"],"接受一个函数和依赖项数组作为参数":["68.56"],"并返回该函数的记忆化版本":["68.56"],"记忆化版本只有在依赖项发生变化时才会重新计算":["68.56"],"否则将复用上一次计算的结果":["68.56"],"parse":["68.60","104.4"],"来监听":["68.60"],"的变化":["68.60"],"并更新本地存储中对应的值":["68.60"],"将":["68.60"],"转换为":["68.60"],"并保存到本地存储中":["68.60"],"最终可以在一起渲染所有页面":["69.5"],"once":["69.7"],"在拖动过程中连续触发":["70.3"],"api":["70.4"],"用于指定鼠标悬停在拖动元素上时的光标样式":["70.5"],"dragstart":["70.6"],"api是优于options":["70.9"],"因为composition":["70.9"],"textanimation":["72.0"],"10px":["74.1","74.12","74.15"],"background":["74.1","74.3","74.6","74.8","74.9"],"465efb":["74.1","74.3","74.6","74.7","74.8"],"6px":["74.1","74.8"],"display":["74.1","74.5","74.6"],"inline":["74.1","74.5","74.6"],"block":["74.1","74.5","74.6"],"1px":["74.1"],"webkit":["74.1","74.6","74.7","74.8","74.10","74.11","74.14"],"animation":["74.1","74.6","74.7","74.8"],"in":["74.2","74.4","74.8","84.7","112.5","116.1","130.2"],"out":["74.2","74.4","74.8","120.4"],"auto":["74.3"],"border":["74.3","74.6","74.7","74.8","74.10"],"radius":["74.3","74.6","74.7","74.8","74.10"],"opacity":["74.3"],"8s":["74.4","74.9"],"infinite":["74.4","74.6","74.7","74.8","74.11"],"ease":["74.4","74.6","74.8"],"delay":["74.4","94.1"],"9s":["74.4","74.9"],"absolute":["74.5","74.8","74.11","74.12"],"30px":["74.6","74.11"],"bouncedelay":["74.6","74.8"],"4s":["74.6","74.13"],"scaleout":["74.7"],"0s":["74.7"],"relative":["74.8","74.11","74.12","74.13"],"2s":["74.8"],"fill":["74.8"],"mode":["74.8"],"both":["74.8","130.3"],"6s":["74.9","74.13"],"7s":["74.9","74.13"],"fff":["74.9"],"300px":["74.9","74.12","74.13"],"200px":["74.10"],"25px":["74.10"],"100px":["74.10","74.12","74.15"],"20px":["74.10"],"15px":["74.10"],"moz":["74.10"],"60px":["74.11"],"1s":["74.11"],"80px":["74.12"],"keys":["74.14","84.13","85.0","116.1"],"map":["74.14","83.9","84.26"],"right":["74.14"],"0px":["74.14"],"下面的选择器的权重是递增的":["75.0"],"类型选择器":["75.0"],"元素选择器":["75.0"],"标签这些":["75.0"],"before":["75.0","130.2"],"after":["75.0"],"class选择器":["75.0"],"类名选择器":["75.0"],"伪类选择器":["75.0"],"focus":["75.0"],"visited":["75.0"],"这些":["75.0"],"box":["76.0"],"ul":["76.0"],"原文链接":["77.0"],"partial":["79.1"],"container":["79.1"],"undefined":["80.0","83.5","84.25","112.12"],"我们只是想打印obj里边的fn":["80.0"],"这个时候就应该用我们的call了":["80.0"],"都是改变上下文中的":["80.1"],"通常是由web服务器使用响应":["81.0"],"header设置的":["81.0"],"然后浏览器使用":["81.0"],"cookiestring":["81.1"],"cookies":["81.1"],"cookiearray":["81.1"],"cookieitem":["81.1"],"展示所有":["81.2"],"如果你运行了上面这段代码":["81.2"],"你会看到多个cookie":["81.2"],"这是因为":["81.2"],"操作不是重写整个所有的cookie":["81.2"],"它只设置代码中提到的cookie":["81.2"],"从技术上讲":["81.2"],"cookie的名称和值可以是任意字符":["81.2"],"为了保持有效的格式":["81.2"],"设置":["81.3"],"那么该cookie在":["81.3"],"如果我们在site":["81.4"],"com网站上设置了cookie":["81.4"],"cookie":["81.4"],"jhon":["81.4"],"在forum":["81.4"],"域名下":["81.4"],"我们无法访问它":["81.4"],"03":["81.5"],"07":["81.5"],"gmt":["81.5"],"cooke的国旗时间定义了浏览器会自动清除该cookie的时间":["81.5"],"日期必须完全采用gmt时区的这种格式":["81.5"],"我们可以使用":["81.5"],"date":["81.5","100.1","127.3"],"toutcstring":["81.5"],"来获取它":["81.5"],"datatracker":["81.6"],"ietf":["81.6"],"开始":["82.5"],"users":["82.8"],"hhh":["82.8","84.10"],"documents":["82.8"],"txt":["82.8"],"abc":["82.9"],"标准化形式":["82.10"],"它主要用于处理":["82.10"],"可以在调用时扩展实际传入的参数":["82.12"],"扩展运算符后面还可以放置表达式":["82.12"],"如果扩展运算符后面是一个空数组":["82.12"],"则不会有任何效果":["82.12"],"warning":["82.12"],"只有在函数调用时":["82.12"],"扩展运算符才能放在圆括号中":["82.12"],"否则会报错":["82.12"],"arraylike":["82.13"],"区别":["82.14"],"方法的主要目的":["82.14"],"是弥补数组构造函数":["82.14"],"的不足":["82.14"],"因为参数个数不同":["82.14"],"会导致":["82.14"],"内的全部元素":["82.16"],"是对键值的遍历":["82.18"],"是对键值对的遍历":["82.18"],"of":["82.18","120.4"],"baz":["82.20"],"如果使用字面量方式定义对象":["82.21"],"使用大括号":["82.21"],"es5":["82.21"],"返回true":["82.22"],"操作符返回false":["82.22"],"二是object":["82.22"],"那么可以使用第二个参数指定修饰符":["82.27"],"而且":["82.27"],"返回的正则表达式会忽略原有的正则表达式的修饰符":["82.27"],"regex":["82.28","85.0"],"s":["82.29","83.8"],"exec":["82.30"],"abcabc":["82.30"],"表示是否有y修饰符":["82.31"],"表示是否有u修饰符":["82.31"],"replace":["82.32"],"search":["82.32"],"china":["82.34"],"ecmascript是一种由":["83.0"],"ecma":["83.0"],"国际组织制定的脚本语言标准":["83.0"],"关键字的区别在于":["83.2"],"块级作用域":["83.3"],"y":["83.3","83.6","112.3"],"常量":["83.3"],"tail":["83.5","120.6"],"z":["83.5","85.0"],"此时的p是模式":["83.6"],"不是变量":["83.6"],"如果想要p也作为变量赋值":["83.6"],"可以写成下面这样":["83.6"],"d":["83.7","84.28","93.12"],"result":["83.9","116.1"],"所以不能用":["83.10"],"再次声明":["83.10"],"add":["83.11","83.15","84.21","92.15","115.5"],"不可以对箭头函数使用":["83.12"],"arguments":["83.13","83.15","108.4"],"要用":["83.13"],"rest":["83.13"],"我们可以放置任何有效的javascript表达式":["83.14"],"这些表达式的值将被插入到字符串中":["83.14"],"对象了":["83.15"],"rest参数搭配的变量是一个数组":["83.15"],"该变量将对于的参数放入到数组中":["83.15"],"这个示例的含义是表示一个求和函数":["83.15"],"利用rest参数":["83.15"],"可以向该函数传入任意数目的参数":["83.15"],"values":["83.15","84.13","84.18"],"arr2":["83.18"],"它提供了一种更方便的方法来定义和初始化对象属性":["83.19"],"lastworld":["83.21"],"last":["83.21","105.7"],"aa":["83.21"],"first":["83.21"],"author":["83.22"],"下面是一个示例":["83.23"],"utils":["83.23"],"导出一个常量":["83.23"],"es6":["84.1"],"原生提供":["84.1"],"构造函数":["84.1"],"用来生成":["84.1"],"实例":["84.1"],"handler":["84.1","84.5"],"time":["84.1"],"作为构造函数":["84.1"],"接收两个参数":["84.1"],"第一个参数是需要代理的目标对象":["84.1"],"上例是一个空对象":["84.1"],"deleteproperty":["84.2","84.7"],"delete":["84.2","84.7","85.0"],"ownkeys":["84.2"],"getownpropertydescriptor":["84.2"],"proto":["84.4"],"propertykey":["84.4"],"receiver":["84.4"],"obj":["84.4"],"create":["84.4","106.9"],"上面代码中":["84.5"],"由于设置了存值函数":["84.5"],"任何不符合要求的":["84.5"],"属性赋值":["84.5"],"都会抛出一个错误":["84.5"],"这是数据验证的一种实现方法":["84.5"],"利用":["84.5"],"方法":["84.5"],"还可以数据绑定":["84.5"],"即每当对象发生变化时候":["84.5"],"会自动更新":["84.5"],"有时候我们会在对象上面设置内部属性":["84.5"],"属性名的第一个字符使用下划线开头":["84.5"],"表示这些属性不应该被外部使用":["84.5"],"结合":["84.5"],"就可以做到防止这些内部属性被外部读写":["84.5"],"target":["84.5","84.9","98.4"],"invariant":["84.5"],"am":["84.6","92.8"],"the":["84.6"],"proxy":["84.6"],"让":["84.7"],"操作都变成函数行为":["84.7"],"某些":["84.7"],"是":["84.7","112.6"],"命令式":["84.7"],"has":["84.7"],"argumentslist":["84.8"],"用于创建一个类的实例对象":["84.8"],"notifyobservers":["84.9"],"设置观察者":["84.9"],"addobserver":["84.9"],"函数都返回一个全新且不相等的":["84.10"],"mysymbol1":["84.10"],"mysymbol2":["84.10"],"weakset":["84.11"],"它类似于对象":["84.12"],"但有一些不同之处":["84.12"],"返回以键遍历器的对象":["84.13"],"返回以值遍历器的对象":["84.13"],"entries":["84.13","84.18"],"返回以键和值为遍历器的对象":["84.13"],"使用回调函数遍历每个成员":["84.13","84.18"],"只接受对象":["84.14"],"作为键":["84.14"],"节点":["84.15"],"dom节点被移除时自动释放此成员键":["84.15"],"返回键值对":["84.16"],"类似于数组":["84.17"],"返回以属性值为遍历器的对象":["84.18"],"返回以属性值和属性值为遍历器的对象":["84.18"],"并且这些对象是弱引用的":["84.19"],"这意味着如果一个对象在":["84.19"],"不用担心这些节点从文档移除时会引发内存泄漏":["84.20"],"添加值":["84.21"],"是一种迭代机制":["84.23"],"为es6":["84.24"],"创造了一种新的遍历命令":["84.24"],"it":["84.25"],"done":["84.27","130.2"],"必须部署":["84.27"],"接口":["84.28"],"l":["84.28"],"o":["84.28","124.8"],"遍历字符串":["84.29"],"内部封装了多个状态":["84.30"],"执行":["84.30","110.0"],"ending":["84.31"],"hw":["84.31"],"当属性名匹配提供的正则表达式时":["85.0"],"允许使用":["85.0"],"方式取值":["85.0"],"否则只能用":["85.0"],"号取值":["85.0"],"notation":["85.0"],"文件末尾强制换行":["85.0"],"eol":["85.0"],"替代":["85.0"],"eqeqeq":["85.0"],"allow":["85.0"],"null":["85.0","94.5","108.2","120.6"],"方法表达式是否需要命名":["85.0"],"func":["85.0"],"names":["85.0"],"方法定义风格":["85.0"],"declaration":["85.0"],"强制使用方法声明的方式":["85.0"],"f":["85.0"],"expression":["85.0"],"强制使用方法表达式的方式":["85.0"],"allowarrowfunctions":["85.0"],"declaration风格中允许箭头函数":["85.0"],"禁止使用alert":["85.0"],"confirm":["85.0"],"prompt":["85.0"],"禁止使用数组构造器":["85.0"],"bitwise":["85.0"],"禁止使用按位运算符":["85.0"],"caller":["85.0"],"禁止使用arguments":["85.0"],"caller或arguments":["85.0"],"callee":["85.0"],"catch":["85.0"],"shadow":["85.0"],"禁止catch子句参数与外部作用域变量同名":["85.0"],"assign":["85.0"],"禁止给类赋值":["85.0"],"cond":["85.0"],"禁止在条件表达式中使用赋值语句":["85.0"],"禁止使用console":["85.0"],"禁止修改const声明的变量":["85.0"],"constant":["85.0"],"condition":["85.0"],"禁止在条件中使用常量表达式":["85.0"],"continue":["85.0"],"禁止使用continue":["85.0"],"control":["85.0"],"禁止在正则表达式中使用控制字符":["85.0"],"debugger":["85.0"],"禁止使用debugger":["85.0"],"不能对var声明的变量使用delete操作符":["85.0"],"不能使用看起来像除法的正则表达式":["85.0"],"dupe":["85.0"],"在创建对象字面量时不允许键重复":["85.0"],"args":["85.0","103.23","108.4"],"函数参数不能重复":["85.0"],"duplicate":["85.0"],"switch中的case标签不能重复":["85.0"],"如果if语句里面有return":["85.0"],"后面不能跟else语句":["85.0"],"xhr":["87.0"],"xmlhttprequest":["87.0"],"responsetype":["87.0"],"blob":["87.0"],"setrequestheader":["87.0"],"authorization":["87.0"],"basic":["87.0"],"a2vybwl0omtlcm1pda":["87.0"],"不包括内边距":["88.0"],"边框和外边距":["88.0"],"clientheight":["88.0"],"具有":["89.0"],"的简单语法和":["89.0"],"的异步":["89.0"],"得益于es6的静态模块结构":["89.0"],"可以进行":["89.0"],"tree":["89.0","123.0"],"shaking":["89.0"],"允许像":["89.0"],"rollup":["89.0"],"这样的打包器":["89.0"],"删除不必要的代码":["89.0"],"减少代码包可以获得更快的加载":["89.0"],"可以在html中调用":["89.0"],"只要如下":["89.0"],"它的返回值作为一个元素被添加为新数组中":["91.1"],"该函数被调用时将传入以下参数":["91.1"],"element":["91.1"],"数组中当前正在处理的元素":["91.1"],"正在处理的元素的索引":["91.1"],"调用了":["91.1"],"它方便了日常开发中对时间的操作":["92.0"],"提高了开发效率":["92.0"],"日常开发中":["92.0"],"moment":["92.2"],"yarn":["92.2"],"locale":["92.4"],"cn":["92.4"],"获取本周周日23时59分59秒":["92.6"],"获取当前月最后一天23时59分59秒":["92.6"],"获取当前月的总天数":["92.6"],"daysinmonth":["92.6"],"获取时间戳":["92.6"],"以秒为单位":["92.6"],"设置小时":["92.7"],"hours":["92.7"],"设置分钟":["92.7"],"minutes":["92.7"],"设置秒数":["92.7"],"从sunday到saturday":["92.8"],"w":["92.8"],"年份中的第几周":["92.8"],"如42":["92.8"],"表示第42周":["92.8"],"yyyy":["92.8"],"四位数字完整表示的年份":["92.8"],"yy":["92.8"],"两位数字表示的年份":["92.8"],"大写的am":["92.8"],"pm":["92.8"],"end":["92.9","123.2"],"五月":["92.11"],"24日":["92.11"],"年前":["92.12"],"上周六晚上7点49":["92.13"],"本月一号":["92.15"],"行一个提供的reducer函数":["93.1"],"每一次运行reducer函数会将先前的结果作为参数传入":["93.1"],"一个初始值":["93.2"],"在第一次调用时":["93.3"],"如果指定了":["93.3"],"initialvalue":["93.3","93.17"],"则为指定的":["93.3"],"currentvalue":["93.4"],"开始执行":["93.4"],"如果没有":["93.4"],"acc":["93.6","93.10"],"表示的是累加器":["93.6"],"accumulator":["93.6"],"initvalue":["93.7"],"判断累加器的结果中是否有未记录的名称key":["93.9"],"通过传入一个空对象":["93.9"],"cur":["93.10"],"curgroup":["93.10"],"potter":["93.11"],"bob":["93.11"],"war":["93.11"],"and":["93.11"],"sapce":["93.11"],"romeo":["93.11"],"如果你喜欢使用":["93.13"],"循环":["93.13"],"你可以再遍历一次时使用":["93.13"],"进行过滤和映射":["93.13"],"curfunc":["93.14"],"p1":["93.14"],"arrlike":["93.16"],"函数组合":["93.17"],"实现管道功能":["93.17"],"pipe":["93.17"],"functions":["93.17"],"reduce":["93.17"],"settimeout和setinterval是两个用于执行延迟操作或定期执行代码的函数":["94.0"],"作用":["94.1","94.2"],"在指定的延迟时间":["94.1"],"以毫秒为单位":["94.1","94.2"],"以指定的时间间隔":["94.2"],"重复执行传入的函数":["94.2"],"javascript是单线程执行":["94.3"],"javascript是单线程执行的":["94.3"],"意味着所有任务都在同一个执行队列中":["94.3"],"setinterval":["94.4","94.7"],"intervalfunction":["94.5"],"用法":["94.6"],"starttime":["94.6"],"timestamp":["94.6"],"tcp数据包序列号":["95.1"],"在tcp发送的每个数据包都会随机生成一个序列号":["95.1"],"该序列号用于接受放对数据包的接收确认":["95.1"],"防止丢失以及数据接收完毕后按序列号顺序组装":["95.1"],"ack":["95.1"],"确认编号":["95.1"],"acknowledgement":["95.1"],"数据包的确认标志":["95.1"],"服务端进入":["95.2"],"close":["95.2"],"这个时候客户端已经没有数据要发送了":["95.2"],"不过服务器端有数据发送的话":["95.2"],"客户端依然需要接收":["95.2"],"客户端接收到服务端发送的":["95.2"],"后":["95.2","98.7","102.2"],"进入到":["95.2"],"wati":["95.2"],"一个用于计算机或通信系统间互联的标准体系":["96.0"],"一般称为":["96.0"],"osi参考模型":["96.0"],"七层模型":["96.0"],"所谓的":["96.0"],"简称":["97.1"],"xss":["97.1"],"方法名等":["97.2"],"在标签属性中":["97.2"],"恶意内容包含引号":["97.2"],"从而突破属性值的限制":["97.2"],"常见的是在评论区插入攻击脚本":["97.3"],"如果脚本被储存到服务端":["97.3"],"那么所有看见对应评论的用户都会受到攻击":["97.3"],"是必要的":["97.4"],"就需要对引号":["97.4"],"尖括号":["97.4"],"斜杠进行转移":["97.4"],"但这还不是很完善":["97.4"],"想对html模版各处插入点进行充分的转移":["97.4"],"就需要采用合适的转义库":["97.4"],"attack":["97.5"],"session":["97.5"],"refer":["97.6"],"check":["97.6"],"csrf时常也被成为xsrf":["97.7"],"csrf实现的方式还可以是直接通过命令行发起请求等":["97.7"],"本质上讲":["97.7"],"window":["98.1","98.2"],"global":["98.1"],"一般使用":["98.1"],"打印":["98.2"],"输出mike":["98.3"],"o1":["98.3"],"o2":["98.3"],"我们可以手动调用它":["98.4"],"fn":["98.4","98.6","108.4"],"arg1":["98.4"],"绑定到新建的对象":["98.5"],"根据构造函数返回类型作为判断":["98.5"],"如果是原始值则被忽略":["98.5"],"如果是返回对象":["98.5"],"需要正常处理":["98.5"],"上述过程可以用如下代码表述":["98.5"],"settimeout":["98.6","108.4"],"输出值为":["98.7"],"上述代码中通过":["98.7"],"函数中的":["98.7"],"绑定为obj1对象":["98.7"],"执行bar":["98.7"],"obj1的值为":["98.7"],"所以输出值为2":["98.7"],"当使用":["98.7"],"bar作为构造函数时":["98.7"],"new的优先级比bind绑定的优先级更高":["98.7"],"这意味着当操作涉及不匹配的类型时":["99.0"],"它允许隐式类型转换":["99.0"],"而不是抛出类型错误":["99.0"],"前端数据类型分为":["99.0"],"基本数据类型":["99.0"],"复杂数据类型":["99.0"],"symbol":["99.1","99.3"],"要么是":["99.3"],"属性值可以是任何类型的值":["99.3"],"包括其它对象":["99.3"],"从而可以构建复杂的数据结构":["99.3"],"有两种对象属性的类型":["99.3"],"数据属性和访问器属性":["99.3"],"每个属性都有对应的特性":["99.3"],"attribute":["99.3"],"引擎可在内部访问每个属性":["99.3"],"用于检测构造函数的":["99.4"],"属性是否出现在某个实例对象的原型链上":["99.4"],"car":["99.4"],"make":["99.4"],"year":["99.4"],"上图中":["100.0"],"都是javascript内置的":["100.1"],"类似的我们还有":["100.1"],"也可以说是让某一个构造函数实例化的所有对象都可以找到公共的方法和属性":["100.2"],"有了":["100.2"],"我们不需要":["100.2"],"通常被称为隐式类型":["100.3"],"被称为显式类型":["100.3"],"那么我们可以说一个对象的隐式原型指向了该对象的构造函数的显式原型":["100.3"],"我们通过在显式原型上定义的属性方法":["100.3"],"通过隐式原型传递给了构造函数的实例":["100.3"],"这样一来实例就很容易能够访问到构造函数原型上的方法和属性了":["100.3"],"我们之前也说过":["100.3"],"属性是对象":["100.3"],"独有的":["100.3"],"那么":["100.3"],"那":["100.4"],"函数是不是也有构造函数呢":["100.4"],"显然是有的":["100.4"],"code":["100.4","130.3"],"通过输出看到":["100.4"],"第二次":["101.0"],"也会提升到顶部":["101.0"],"也为":["101.0"],"之下的":["101.0"],"才是":["101.0"],"所以此时打印的是":["101.0"],"第二个例子中也是如此":["101.0"],"先提升到顶部":["101.0"],"为":["101.0"],"再去给":["101.0"],"赋值":["101.0"],"赋值结果为":["101.0"],"所以打印的是":["101.0"],"实际的运行结果为":["101.0"],"浏览器会":["102.2"],"重新绘制":["102.2"],"受影响的部分到屏幕中":["102.2"],"该过程称为":["102.2"],"dom树":["102.3","102.4"],"创建之后创建":["102.3"],"会计算dom节点的样式信息":["102.3"],"会触发":["102.4"],"reflow回流":["102.4"],"页面第一次渲染":["102.4"],"除了":["102.5"],"尽量一次性修改":["102.6"],"所以很多浏览器都会优化这些操作":["102.7"],"浏览器会维护1个队列":["102.7"],"两者区别是":["103.8"],"方法从右向左操作的":["103.8"],"第三个以及后面的多个参数表示从第一个参数的值的位置开始被插入的元素":["103.18"],"setmap":["103.21"],"newmap":["103.21"],"生成的数字范围":["103.22"],"但比分别调用这两个方法稍微更高效一些":["103.23"],"引用数据类型":["104.1"],"这个数据有着原始数据属性值的一份精确复制":["104.2"],"如果属性是基本类型":["104.2"],"name2":["104.3","116.9"],"xka":["104.3"],"love":["104.3"],"beautiful":["104.3"],"属性为对象时":["104.6"],"浅拷贝是复制":["104.6"],"如何实现一个深拷贝":["104.7"],"响应速度":["105.1"],"过期":["105.2"],"如果命中则直接从缓存中获取资源":["105.2"],"否则进入下一步":["105.2"],"没有命中强缓存":["105.2"],"则根据请求头的":["105.2"],"强制缓存失效":["105.3"],"则直接向服务器发起请求":["105.3"],"跟第一次发起请求一致":["105.3"],"那么客户端与服务端的时间因为某些原因":["105.4"],"例如时区不同":["105.4"],"客户端与服务端有一方时间不准确":["105.4"],"发生误差":["105.4"],"那么强制缓存则会直接失效":["105.4"],"这样的话强制缓存的存在就毫无意义":["105.4"],"在http":["105.4"],"1中":["105.4"],"是最重要的规则":["105.4"],"主要用于控制网页缓存":["105.4"],"取值有以下几种":["105.4"],"public":["105.4"],"所有内容都被缓存":["105.4"],"客户端和代理服务都可缓存":["105.4"],"由服务器根据缓存标识决定是否使用缓存的过程":["105.5"],"主要分为两种情况":["105.5"],"是服务器响应请求时":["105.6"],"返回该资源文件在服务器最后被修改的时间":["105.6"],"则是客户端再次发起该请求时":["105.6"],"携带上次请求返回的":["105.6"],"的值":["105.6"],"通过此字段告诉服务器":["105.6"],"该资源上次请求返回的最后被修改时间":["105.6"],"服务器收到该请求":["105.6"],"生效则直接使用缓存":["105.7"],"若不生效则进行协商缓存":["105.7"],"modified":["105.7","130.3"],"如果一个类别b":["106.0"],"继承自":["106.0"],"speed":["106.1"],"由汽车的这个类可以派生出":["106.1"],"轿车":["106.1"],"货车":["106.1"],"两个类":["106.1"],"在汽车的基础属性上":["106.1"],"为轿车添加一个后备箱":["106.1"],"借助call":["106.2"],"getname":["106.4"],"第二次调用":["106.5"],"call":["106.5","106.8"],"clone":["106.7"],"original":["106.7"],"friends":["106.8"],"getfriends":["106.8"],"获取当前窗口的路径":["107.0"],"pathname":["107.0"],"获取当前窗口的源信息":["107.0"],"获取当前窗口的协议":["107.0"],"protocol":["107.0"],"mousemove":["108.0"],"等事件在触发时":["108.0"],"节流是指程序在n秒内只运行一次":["108.1"],"oldtime":["108.2"],"apply":["108.2"],"定时器写法":["108.2"],"毫秒后第一次执行":["108.2"],"第二次事件停止触发后依然会再一次执行":["108.2"],"若在这个时间段内被重复触发":["108.3"],"保存this指向":["108.4"],"参数对象":["108.4"],"降低回调执行频率":["108.5"],"节省计算资源":["108.5"],"差异":["108.5"],"手机号":["108.6"],"邮箱验证输入检测":["108.6"],"进行了封装":["110.0"],"对一些特殊用例进行优化":["110.0"],"提供替代的api":["110.0"],"使得":["110.0"],"在非浏览器环境下运行得更好":["110.0"],"直到数据正常返回":["110.1"],"再去处理数据":["110.1"],"从而提升了执行效率":["110.1"],"事件驱动的编程思想主要是通过事件或者状态变化来进行应用程序的流程控制":["110.1"],"一般通过事件驱动来完成":["110.1"],"一旦事件被监测到":["110.1"],"则调用响应的回调函数":["110.1"],"简单来说":["110.1"],"就是当异步任务执行的时候":["110.1"],"t2":["112.1","112.2","112.8","112.9"],"t1":["112.2","112.4"],"不会改变这一点":["112.5"],"只会让":["112.5"],"变为只读":["112.5"],"的实现如下":["112.5"],"的第一个参数":["112.6"],"用作对象的键名":["112.6"],"第二个参数":["112.6"],"的键值类型":["112.6"],"可以是联合类型":["112.6"],"t3":["112.7","112.12"],"t4":["112.7","112.10","112.12"],"any":["112.10"],"t5":["112.10","112.11"],"math":["112.10"],"random":["112.10"],"t6":["112.10","112.11"],"上面实例中":["112.11"],"的返回值会包括函数的参数名":["112.11"],"这一点需要注意":["112.11"],"如果参数类型":["112.11"],"不是带有参数的函数形式":["112.11"],"会报错":["112.11"],"报错":["112.11","112.17"],"它可以返回一些内置构造方法的参数类型":["112.12"],"errorconstructor":["112.12"],"functionconstructor":["112.14"],"regexpconstructor":["112.14"],"的参数都是typescript内置的原生对象的构造函数类型":["112.14"],"所以返回值就是这些构造函数的实例类型":["112.14"],"由于":["112.14"],"class作为类型":["112.14"],"代表实例类型":["112.14"],"要获取它的构造方法":["112.14"],"必须把它当成值":["112.14"],"如果它的类型参数不是":["112.15"],"上面示例中":["112.16","112.17"],"something":["112.17"],"wrong":["112.17"],"正确":["112.17"],"的类型是一个正常的对象类型与":["112.17"],"组成的交叉类型":["112.17"],"现代typescript高级教程":["113.0"],"中一种特殊的数据类型":["114.0"],"允许我们为一组数值设定友好的名字":["114.0"],"conssole":["114.1"],"上述示例中":["114.3"],"就是一个计算所得项":["114.3"],"上面的例子不会报错":["114.3"],"但是如果紧接在计算所得项后面的是未手动赋值的项":["114.3"],"上面例子编译结果是":["114.4","114.5"],"定义的类型只会用于编译时的检查":["114.5"],"编译结果中会被删除":["114.5"],"泛型":["115.1"],"generics":["115.1"],"字符串数组为":["115.2"],"除此之外":["115.2"],"我们也可以使用泛型":["115.2"],"elemtype":["115.2"],"返回":["115.3"],"我们在函数名后使用了":["115.3"],"其中":["115.3"],"表示任意类型":["115.3"],"后面的":["115.3"],"参数和函数返回值就可以直接使用":["115.3"],"了":["115.3"],"在调用时":["115.3"],"我们传入":["115.3"],"类型":["115.3"],"表示指定它的类型为字符串":["115.3"],"当然也可以不指定类型":["115.3"],"由类型推断自动推断出来":["115.3"],"它的":["115.4"],"类型是":["115.4"],"的类型是":["115.4"],"定义函数的形状":["115.4"],"类型确定情况":["115.4"],"isearchfunc":["115.4"],"substring":["115.4"],"zerovalue":["115.5"],"作用是":["116.1"],"构造类型":["116.1"],"并将它所有的属性设置为可选的":["116.1"],"它的返回类型表示输入类型的所有子类型":["116.1"],"hasownproperty":["116.1"],"as":["116.1"],"hasownpropertu":["116.1"],"seconds":["116.1"],"在函数中定义":["116.2"],"getunointype":["116.2"],"收窄":["116.3"],"这里使用":["116.4"],"操作符将":["116.4"],"值的类型范围收窄到":["116.4"],"dog":["116.5"],"bark":["116.5"],"layeggs":["116.6"],"fish":["116.6"],"swim":["116.6"],"pet":["116.6"],"是字符串字面量或字符串字面量类型":["116.7"],"并且":["116.7"],"是个联合类型":["116.7"],"通常没什么用处":["116.8"],"尽管可以运行":["116.8"],"name3":["116.9"],"上时":["116.10"],"现实的却是这个字面量类型":["116.10"],"alias":["116.10"],"错误的初始化":["116.11"],"表示待推断的函数参数":["116.12"],"整句的含义为":["116.12"],"如果":["116.12"],"能赋值给":["116.12"],"这才是真正让你入门typescript类型体操的文章":["116.13"],"custidcard":["118.0"],"身份证名称":["118.0"],"身份证号码":["118.0"],"showtoast":["118.0"],"微信版本过低":["118.0"],"暂时无法使用此功能":["118.0"],"请升级微信最新版本":["118.0"],"fail":["118.0"],"兼容版本":["118.0"],"读数字":["118.0"],"android":["118.0"],"微信6":["118.0"],"4及以上版本":["118.0"],"集合":["120.1"],"每个节点都有一个指针和指向它的下一个节点":["120.1"],"最后一个指针指向":["120.1"],"插入":["120.2"],"操作":["120.2"],"所以从":["120.2"],"起点":["120.2"],"中间":["120.2"],"插入或移除元素具有很高的成本":["120.2"],"链表插入":["120.2"],"throw":["120.4"],"error":["120.4"],"range":["120.4"],"和指向":["120.5"],"下一个节点的链接":["120.5"],"双线链表":["120.5","120.6"],"conmpareoriginal":["120.6"],"doublylinkedlistnode":["120.6"],"双向链表节点":["120.6"],"previous":["120.6"],"vallback":["120.6"],"callback":["120.6"],"doublylinkedlist":["120.6"],"comparatorfunction":["120.6"],"双向链表的头节点":["120.6"],"doublylinkedisnode":["120.6"],"用于比较的函数":["120.6"],"将新的节点插入到头部":["120.6"],"prepend":["120.6"],"创建新的节点作为头部节点":["120.6"],"newnode":["120.6"],"如果存在头部节点":["120.6"],"以便删除未使用的代码":["122.0"],"支持webassembly":["122.0"],"wasm":["122.0"],"webassembly提供了原生的支持":["122.0"],"使得在项目中使用webassembly更加方便":["122.0"],"支持es6模块导入":["122.0"],"或简称语法树":["123.1"],"是源代码语法结构的一种抽象表示":["123.1"],"body":["123.2"],"variabledeclaration":["123.2"],"declarations":["123.2"],"variabledeclarator":["123.2"],"identifier":["123.2"],"语法分析":["123.3"],"构建ast":["123.3"],"抽象语法树":["123.3"],"进行词法分析的程序或者函数叫作":["123.4"],"词法分析器":["123.4"],"lexical":["123.4"],"analyzer":["123.4"],"简称lexer":["123.4"],"也叫":["123.4"],"也就是说":["124.1"],"转换后代码的每一个位置所对应的转换前的位置":["124.1"],"有了它":["124.1"],"大部份源码需要转换才能放在浏览器中运行":["124.2"],"chrome浏览器中默认是开启了soruce":["124.3"],"使用eval包裹模块代码":["124.4"],"不包含":["124.4"],"列信息":["124.4"],"也不包含":["124.4"],"loader":["124.4"],"sourcemap":["124.4"],"包含":["124.4"],"chunks":["124.5"],"sourceurl":["124.5"],"关键字":["124.5"],"特点":["124.5"],"index页面":["124.7"],"原始源代码":["124.8"],"所以":["124.9"],"比较推荐配置":["124.9"],"devtool":["124.9"],"引擎":["126.1"],"内容":["127.1"],"但生成了新的提交id":["127.1"],"bash":["127.1"],"快速解决线上问题":["127.2"],"提取特定功能":["127.2"],"分支a":["127.2"],"上开发了一个新功能":["127.2"],"但由于计划安排暂时不能将其合并到主分支":["127.2"],"合并冲突后结果":["127.3"],"55b234d":["127.3"],"fri":["127.3"],"mar":["127.3"],"0800":["127.3"],"changed":["127.3"],"insertion":["127.3"],"deletion":["127.3"],"会尝试将指提交所做的所有更改应用到当前分支":["127.3"],"如果没有冲突":["127.3"],"会自动创建一个新的提交":["127.3"],"这个提交包含了与原始提交相同的更改":["127.3"],"单据有新的提交哈希":["127.3"],"本地安装了git":["128.0"],"your":["128.1"],"github":["128.1"],"username":["128.1"],"然后再输入命令":["128.1"],"email":["128.1"],"这里说明一下":["128.1"],"尖括号里输入的是你的github账号":["128.1"],"第二个尖括号输入的是与你github绑定的电子邮箱":["128.1"],"第三步":["128.1"],"现在需要将你的电脑和github账号通过sshkey绑定":["128.1"],"image":["129.1"],"可以简单的概括为":["129.1"],"merge":["129.2"],"将dev分支合并到当前分支":["129.2"],"合并完成后":["129.2"],"g":["129.2","130.2"],"现在abcdefg属于master":["129.2"],"g是一次合并后的结果":["129.2"],"可以指定分支名":["129.3"],"分支名":["129.3"],"注意之间有空格":["129.3"],"fetch":["129.4"],"master":["129.4"],"changes":["130.2"],"pull":["130.2"],"again":["130.2"],"see":["130.2"],"note":["130.2"],"about":["130.2"],"fast":["130.2"],"forwards":["130.2"],"help":["130.2"],"push失败了":["130.2"],"说明a在我之前已经提交了":["130.2"],"我本地master分支的提交历史已经落后远端了":["130.2"],"需要先pull一下":["130.2"],"与远端同步后才能push":["130.2"],"enumerating":["130.2"],"objects":["130.2"],"counting":["130.2"],"compressing":["130.2"],"total":["130.2"],"publish":["130.3"],"local":["130.3"],"you":["130.3"],"have":["130.3"],"unmerged":["130.3"],"paths":["130.3"],"run":["130.3"],"abort":["130.3"],"mark":["130.3"],"resolution":["130.3"],"打开文件":["130.3"],"进行修改":["130.3"],"原文件":["130.3"],"fmt":["130.3"],"println":["130.3"],"修改后":["130.3"],"现在通过add添加":["130.3"],"然后commit提交":["130.3"],"一个repo通常是由一个team中的多个人共同维护":["131.0"],"如果需要增加新feature":["131.0"],"是git中用于将一个分支的提交应用到另一个分支上的命令":["131.1"],"它主要作用是将一个分支上的修改":["131.1"],"interractive":["131.2"],"即弹出交互式页面让用户编辑完成合并操作":["131.2"],"则指定了一个编辑的区间":["131.2"],"是可选的":["131.2"],"如果不指定":["131.2"],"则该区间默认终点是当前分支head所指向的commit":["131.2"],"注":["131.2"],"该区间指定的是一个前开后闭的区间":["131.2"],"针对与我们之前创建的提交":["131.2"],"具体执行以下命令":["131.2"],"但需要在不更改当前分支或提交任何更改的情况下切换到另一个分支或者进行其它操作":["132.1"],"想要推送某个分支但又不想包含当前所有的更改":["132.1"],"命令":["132.2","132.6"],"save":["132.3"],"用于查看执行stash操作的存储列表":["132.4"],"列表格式类似于下面这种格式":["132.4"],"显示做了哪些改动":["132.5"],"默认show第一个存储":["132.5"],"显示第一个存储的改动":["132.6"],"如果想显示其它存存储":["132.6"],"但不会把存储从存储列表中删除":["132.7"],"默认使用第一个存储":["132.7"],"即":["132.7"],"删除":["132.8"],"并将对应修改应用到当前的工作目录下":["132.8"],"默认为第一个":["132.8"],"存储":["132.9"],"直接执行stash是不会被存储的":["132.10"],"不保存新建文件":["132.10"],"branch":["133.1"]},{"0":["4.0","6.0","7.0","25.0","34.0","51.5","61.31","61.37","62.21","74.3","74.5","74.8","74.10","82.3","82.9","82.18","82.22","82.30","83.6","83.9","83.15","84.5","93.3","93.16","112.14","130.2","132.7","132.8"],"1":["18.2","20.0","20.2","21.2","24.1","48.3","61.22","64.20","65.2","65.42","68.5","68.9","68.36","74.1","81.1","82.16","82.18","92.13","93.7","93.16","99.1","101.0","103.8","103.19","115.3","115.4","116.2"],"2":["13.1","48.3","48.5","62.24","62.28","62.33","62.48","65.2","65.13","68.7","68.9","74.3","74.10","82.16","82.23","83.10","83.11","84.2","92.2","93.7","93.13","93.14","93.16","98.4","103.3","103.5","103.19","103.23","114.1"],"3":["4.0","14.5","37.6","52.5","62.21","62.27","62.48","68.3","75.0","82.13","82.16","82.23","83.12","83.23","85.0","93.16","95.2","98.1","98.7","100.1","103.3","103.5","103.6","103.7","103.19","103.23","110.1","131.2"],"4":["4.0","48.3","61.37","61.42","61.51","62.26","62.48","75.0","82.16","82.17","95.2","103.1","103.3","103.4","103.5","103.6","103.7","103.9","103.10","103.11","103.13","103.15","103.19","103.23","130.2"],"5":["4.0","8.0","61.51","62.25","74.4","75.0","82.15","82.16","82.17","85.0","93.13","93.14","103.1","103.4","103.6","103.7","103.9","103.10","103.11","103.12","103.13","103.17","103.20"],"6":["74.3","93.13","103.12","103.21","124.8","130.2"],"7":["1.0","15.0","115.3","118.0"],"8":["1.0","15.0","24.1","92.7"],"9":["1.0","92.7"],"10":["1.0","62.31","75.0","92.7","98.2","103.22"],"11":["1.0"],"12":["92.6"],"13":["92.6"],"14":["83.23"],"20":["123.2"],"21":["123.2"],"23":["123.2"],"25":["74.4","74.10"],"26":["93.11"],"40":["57.2"],"42":["116.1"],"50":["68.39","74.2","74.4","74.9","74.13"],"65":["82.7"],"75":["74.4"],"89":["68.39"],"97":["82.9"],"100":["74.2","74.5","74.14","75.0"],"123":["83.6"],"200":["87.0"],"204":["61.4"],"o":["2.0","61.37"],"或":["2.0","29.4","61.3","65.35","68.60","85.0"],"nlogn":["2.0"],"具体取决于排序的时间复杂度":["2.0"],"需要注意的是":["2.0"],"在使用夹逼原则时":["2.0"],"要保证数组或列表已经有序":["2.0"],"否则可能会得到错误的结果":["2.0"],"此外":["2.0"],"对于一些特殊情况":["2.0"],"还需要考虑边界条件和指针移动的终止条件":["2.0"],"以确保算法的正确性":["2.0"],"typescript":["2.0","6.0","8.0","93.13","115.2"],"const":["2.0","9.0","51.15","83.23","84.9","93.13","99.4","103.8","103.23","115.2","116.6","116.10"],"threesum":["2.0"],"number":["2.0","6.0","9.0","11.0","56.2","68.3","82.12","83.8","84.4","93.13","100.1"],"array":["2.0","3.0","6.0","52.7","55.1","104.3","112.10","116.2"],"len":["2.0"],"length":["2.0","7.0","34.0","114.4","115.4"],"if":["3.0","7.0","34.0","49.4","61.36","64.18","65.33","81.1","87.0","93.12","105.7","116.4"],"push":["3.0","34.0","65.54"],"return":["3.0","9.0","28.3","31.2","33.0","55.1","82.3","83.15","83.22","91.2","98.5","98.7","115.4","116.2"],"from":["3.0","52.7","74.6","124.7","130.2"],"new":["3.0","48.3","48.5","52.6","61.33","61.44","81.5","84.13","84.18","100.4","106.5","106.8"],"set":["3.0","84.16","84.26"],"arr":["3.0","61.44","82.13","83.6","93.13","103.8","104.3","115.2"],"param":["5.0"],"do":["5.0","89.0","130.3"],"not":["5.0"],"anything":["5.0"],"modify":["5.0"],"in":["5.0","23.0","74.1","74.5","74.6","74.7"],"place":["5.0"],"instead":["5.0"],"选择较长的一个作为结果":["6.0"],"求解":["6.0","8.0"],"getlongesthump":["6.0"],"let":["6.0","7.0","81.2","81.5","84.13","84.18","100.4","106.8","120.4","120.6"],"maxlength":["6.0"],"sort":["7.0"],"a":["7.0","28.4","33.0","82.25","116.1"],"b":["7.0","112.6","116.1"],"numindex":["7.0"],"for":["7.0","11.0","25.1","83.15","84.24","84.27"],"k":["7.0"],"主要是通过双指针存储临时变量来求解":["8.0"],"danger":["8.0","49.4","65.28"],"注意":["8.0","25.4","84.1","127.1"],"下面第一个方法执行完成后":["8.0"],"返回的数字是正确的":["8.0"],"但数组可能不会修改成我们所需要的数组":["8.0"],"function":["9.0","22.1","28.3","31.2","61.31","61.36","64.9","64.13","84.4","84.5","101.0","104.4","112.11"],"createcounter":["9.0"],"两者相等":["10.0"],"示例2":["10.0"],"数组中不存在满足此条件的中心下标":["10.0"],"示例3":["10.0"],"str":["11.0","97.4"],"string":["11.0","48.3","84.26","100.1","103.16","116.8","118.0"],"map":["11.0","48.5","68.18","84.13","124.5","124.9"],"bower":["12.0","13.2","13.6"],"获取包括angularjs在内的各种开发库":["12.0"],"为了使用bower":["12.0"],"您可能还需要安装如下工具":["12.0"],"我使用的是英文版的webstorm":["12.1"],"目前网络上也存在有汉化包":["12.1"],"如果希望使用汉化界面的朋友可以自行搜索尝试":["12.1"],"在学习本书的过程中":["12.1"],"您可以使用webstorm的30天尝试版本":["12.1"],"这样可以直接下载完整的安装包":["12.2"],"直接在google搜索chrome的官网页面下载的是一个小型下载器":["12.2"],"在国内无法正确安装":["12.2"],"windows":["12.3","85.0"],"os":["12.3"],"x":["12.4","18.2","20.0","20.2","22.0","23.0","24.1","92.6","112.14"],"会需要您输入本机的密码":["12.4"],"sudo":["12.4"],"选择":["13.0"],"file":["13.0"],"如下图所示":["13.1"],"图2":["13.1"],"一些项目配置文件":["13.2"],"如":["13.2","32.2","102.4"],"如果不想通过命令行创建":["13.3"],"terminal":["13.4"],"currently":["13.5"],"installed":["13.5"],"components":["13.5"],"as":["13.5"],"dependencies":["13.5"],"将常用的忽略文件项添加到列表":["13.5"],"add":["13.5","92.2","92.7"],"commonly":["13.5"],"ignored":["13.5"],"files":["13.5","130.2"],"ignore":["13.5"],"list":["13.5","29.5"],"将项目设置为私有":["13.5"],"防止其被误发布到网络上":["13.5"],"would":["13.5"],"you":["13.5"],"like":["13.5"],"mark":["13.5"],"将组件库下载到特定的目录":["13.6"],"在项目根目录创建":["13.6"],"的配置已经全部结束":["13.7"],"本章开始":["14.0"],"doctype":["14.2","18.1","19.0","24.1","31.0"],"lang":["14.2","14.4","19.0","24.1","31.0"],"zh":["14.2","14.4","19.0","24.1","31.0"],"head":["14.2","14.4","31.0","127.3","129.4","131.2"],"如果在运行环境中":["14.3"],"您应该将angular":["14.3"],"js替换为angular":["14.3"],"meta":["14.4","24.1","31.0"],"我在windows电脑上遇到了相同的问题":["14.5"],"请将webstorm使用管理员权限打开":["14.5"],"运行效果如下图所示":["14.5"],"重复语句":["15.0","37.3","38.0"],"repeat":["15.0","23.0","37.3","38.0"],"过滤器":["15.0","37.3"],"filter":["15.0"],"样式选择器":["15.0"],"class":["15.0","44.3","112.14"],"而是直接显示hello":["16.0"],"我们可以尝试下将表达式中的内容替换为如下内容":["16.0"],"并观察运行的结果":["16.0"],"假设":["17.1"],"scope中有template":["17.1"],"url":["17.1","24.5","61.3","61.22","65.18"],"http":["17.1","61.22","68.50","107.0"],"这个对象":["17.1"],"和":["17.2","48.0","53.2","61.13","65.36","65.54","81.3","105.2","112.11"],"设置为":["17.3"],"text":["17.3","30.0","30.5","62.17","65.28"],"然后给它配置一个":["17.3"],"可以将网页自动初始化为一个angularjs应用":["18.0"],"这样你才能在网页中使用各种angularjs提供的功能":["18.0"],"比如前一节介绍的基本表达式功能":["18.0"],"并将":["18.1"],"ng":["18.1","19.5","20.1","23.0","23.3","23.4","24.4","30.5","31.0"],"配置进去即可":["18.1"],"app":["18.3","27.1"],"hello":["19.0","49.7","64.10","82.6","82.31","83.14","84.29","116.1"],"同时":["19.0","23.2"],"我们在":["19.0","68.5"],"index":["19.0","68.18","82.30","84.4","114.4"],"html":["19.0","22.0","22.1","23.3","23.4","24.2","24.4","25.0","27.0","30.3","30.6","32.0","62.41","65.6"],"中进行一些代码修改":["19.0"],"最终代码如下":["19.0"],"声明ng":["19.2"],"controller的方法":["19.2"],"firstctrl":["19.2","19.5","23.4","24.4","28.0","30.7","31.1"],"这个ng":["19.2"],"中的数据和html代码绑定起来":["19.3"],"传入":["19.3"],"的数据":["19.3"],"可以直接在html代码中调用":["19.3"],"在上面的例子中":["19.3"],"我们对":["19.3"],"data":["19.4","29.4","41.2","48.3","51.16","64.10","130.2"],"message":["19.4","30.7","65.47","68.9"],"controller":["19.5","23.4","24.4","28.0","30.7","31.1"],"学习angularjs":["20.0","20.2","24.1"],"body":["20.0","20.2","31.1"],"将firstctrl绑定到这个div标签上":["20.0"],"这个标签中的内容将可以使用firstctrl中的数据":["20.0"],"div":["20.0","20.1","21.0","23.3","23.4","24.2","24.4","24.5","25.0","30.3","30.6","31.1","32.0","49.5","65.27","65.44"],"h1":["20.1","32.4"],"world":["20.1","82.3","82.4","82.6","83.14"],"如果data":["21.0"],"则显示此段文字":["21.0"],"p":["21.0","30.1","30.5","30.6","32.4","65.42","131.2"],"如果使用":["21.1"],"来控制元素是否显示":["21.1"],"则在不显示的情况下":["21.1"],"我们将这些数据显示在html的一个表格中":["22.0"],"table":["22.0","22.1"],"tr":["22.0","22.1","23.0"],"alert":["22.1"],"点击了第":["22.1"],"行的按钮":["22.1"],"将刚才的表格也进行一些改造":["22.1"],"jerry":["23.0","23.3"],"orderby":["23.0"],"对显示的数据列表按照name进行排序":["23.0"],"结果为显示顺序harry":["23.0"],"json":["23.1"],"对list的内容进行排序后输出成json文本":["23.1"],"join":["23.2","116.2"],"我们利用最早的hello":["23.2"],"world的例子":["23.2"],"将我们定义的":["23.2"],"这个过滤器应用上去":["23.2"],"tom":["23.3"],"对于最后一项":["23.4"],"我们可以采取如下输入方法来应用":["23.4"],"style":["24.0","24.3","30.0","62.18"],"并加入对应的代码":["24.1"],"全部代码如下":["24.1"],"charset":["24.1"],"utf":["24.1"],"title":["24.1"],"此处引入style":["24.1"],"css样式文件":["24.1"],"orange":["24.3","68.39"],"3em":["24.4"],"修改html代码如下":["24.4"],"input":["24.4","82.30"],"type":["24.4","30.0","44.3","62.30","65.38","75.0","112.3","130.2"],"image":["24.5","62.14","62.32"],"img":["24.5"],"products":["24.5"],"product":["24.5"],"也可以传入一个函数":["24.5"],"主要用于解决ie11中背景图片不显示的问题":["24.5"],"getbackgroundstyle":["24.5"],"蓝色":["25.0","25.2","25.3"],"blue":["25.0","25.3","114.4"],"黄色":["25.0"],"yellow":["25.0"],"保存选中的状态":["25.0"],"默认颜色设置为黑色":["25.0"],"colorchosen":["25.0"],"color":["25.1","65.29","74.5","74.11","74.12","114.4"],"name":["25.1","30.1","30.4","30.5","48.4","75.0","81.2","104.4","118.0"],"亮色":["25.2"],"红色":["25.2","25.3"],"red":["25.2","25.3","49.5","114.4"],"true":["25.3","33.0","48.5","61.37","82.5","83.6","84.7","116.7"],"以下代码中":["25.4"],"for后面有一个":["25.4"],"空格":["25.4","81.2"],"如果没有":["25.4","62.41"],"则无法成功运行":["25.4"],"这是因为传入":["25.4"],"的其实是一串文本":["25.4"],"我建议您在阅读后续内容之前":["26.0"],"对本章内容进行一次回顾":["26.0"],"可以称之为":["27.0"],"自定义html标签":["27.0"],"举个例子":["27.0"],"angularjs可以让我们进行如下的html编码":["27.0"],"因此":["27.2","37.5","37.8","120.2","120.6"],"可能像我一样对前端经验不太足的读者们":["27.2"],"scope":["28.0"],"harry":["28.0","30.4"],"男":["28.0","30.3","30.4"],"我们调用了":["28.1"],"函数来告诉angularjs加入一个新的directive":["28.1"],"调用这个函数":["28.1"],"我们需要传入2个参数":["28.1"],"我们这里看看替换后实际的html代码如何":["28.2"],"图5":["28.2"],"e":["28.3","61.37","82.15","84.29"],"element":["28.4","103.16"],"people":["28.4","30.4"],"使用了它":["29.0"],"但是":["29.0","32.1"],"每个单词的首字母大写":["29.1"],"peoplelistarray":["29.2"],"而javascript对大小写敏感":["29.3"],"头":["29.4"],"冒号":["29.5"],"而如果我们在ng":["29.6"],"app和ng":["29.6"],"controller前加上data":["29.6"],"前缀":["29.6"],"link":["30.0","65.12"],"css":["30.0","53.2","74.14","77.0"],"rel":["30.0"],"stylesheet":["30.0"],"href":["30.0","97.2"],"template":["30.1","32.4","50.5","65.27","68.3","68.13"],"姓名":["30.1","118.0"],"性别":["30.1","30.5","30.6"],"sex":["30.1","30.3","30.4"],"是告诉这个directive它需要自己存储信息":["30.2"],"类似于建立一个基于这个directive的":["30.2"],"model":["30.5","65.36"],"button":["30.7","49.7","64.4","64.5","65.31","68.13"],"提交":["30.7"],"click":["30.7","49.1","65.31","68.13","68.21"],"代码片段开始":["31.1"],"代码片段结束":["31.1"],"form":["31.1","32.0","61.44","103.21"],"directive":["31.1"],"的命令":["32.0"],"未加上":["32.0"],"转变为json格式输出":["32.0"],"是因为":["32.0"],"本身涉及循环引用":["32.0"],"因此无法转化为json":["32.0"],"对应的html代码":["32.0"],"bind":["32.2","85.0"],"addclass":["32.2","32.5"],"removeclass":["32.2"],"等来直接对元素进行操作":["32.2"],"实现我们期望的功能":["32.2"],"jquery":["32.3"],"save":["32.3"],"在":["32.3","110.1"],"标题":["32.4"],"这里是段落文字":["32.4"],"mouseenter":["32.5"],"strike":["32.5"],"restrict":["33.0"],"通过transclude标签将directive变为一个容器":["33.0"],"注意template中的ng":["33.0"],"供其它directive调用的注册函数":["34.0"],"this":["34.0","61.18","61.36","64.19","65.46","68.21","80.1"],"注意templateurl的命名":["34.0"],"templateurl":["34.0"],"gqtablist":["34.0"],"获取gqtabcontainer这个directive":["34.0"],"这样在利用angularjs构建网站时":["35.0"],"x相关的文档来自于":["36.0"],"希望能对大家学习angularjs有一定帮助":["37.1"],"txt":["37.1"],"如果您在阅读过程中":["37.1"],"angular":["37.2"],"show":["37.3","38.0"],"hide":["37.3","38.0"],"我向您推荐w3school网站":["37.4"],"您可以在这个网站上快速的了解相关的知识":["37.4"],"另外":["37.4","50.0"],"在javascript方面":["37.4"],"如果您有一定的php经验":["37.4"],"我向您推荐这本书":["37.4"],"我形成了一套app的构建思路":["37.5"],"可以对api的访问限制和安全性进行更完善的设计实现":["37.6"],"前端网站托管在阿里云的oss上":["37.6"],"界":["37.7"],"hu":["37.7"],"一点也不":["37.8"],"学习dom入门给我的感觉与之一模一样":["37.8"],"因为当时并不知道还有javascript框架这种东西存在":["37.8"],"我去网上搜索教程时也是一头雾水":["37.8"],"我想了一个笨办法":["37.8"],"直接在一个国外的网站上购买了一套后台管理系统界面的模板":["37.8"],"浏览了下源代码之后":["37.8"],"我发现源码提供了两套版本":["37.8"],"一套完全基于jquery":["37.8"],"bootstrap的版本":["37.8"],"和一套基于angularjs的版本":["37.8"],"两个版本的界面布局一模一样":["37.8"],"可用":["37.9"],"的网站":["37.9"],"为了使用更地道的方式制作这个新版网站":["37.9"],"新版本angular":["37.10"],"2抛弃了controller":["37.10"],"service":["37.10"],"完全用directive":["37.10"],"这点与我的技术构想不符":["37.10"],"查看该许可协议":["37.11"],"attribution":["37.11"],"noncommercial":["37.11"],"international":["37.11"],"cc":["37.11"],"api":["41.1","64.6","64.17"],"mixin":["41.1"],"provide":["41.1","68.1"],"数据驱动视图":["41.2"],"ui":["41.2"],"渲染界面不应该直接操作dom":["41.2"],"componentwillreceiveprops":["41.3","68.26"],"shouldcomponentupdate":["41.3"],"componentwillupdate":["41.3"],"hooks更加简洁":["41.4"],"reactdom":["41.5"],"finddomnode":["41.6"],"方法的警告":["41.6"],"可以创建一个文件":["41.7"],"js将数据保存在data中":["41.7"],"babel之类的变异工具转换为js文件执行":["41.8"],"js可以被打包工具直接编译不需要额外的转换":["41.8"],"react":["41.9"],"boolean":["41.10","85.0","112.9","112.10","112.15"],"false":["41.10","65.35","116.7","123.2"],"errorhandler":["41.10"],"console":["41.10","64.4","82.4","82.8","82.13","82.18","82.31","83.3","83.11","83.14","93.9","93.10","103.1","103.13","103.15","103.17","103.20","103.21","106.3","106.6","106.8","116.11","124.7"],"此时就会有个依据去判断是原生dom标签还是react组件":["41.11"],"版本之后":["41.12"],"官方推出了fragment的概念":["41.12"],"当需要在react组件中访问":["41.13"],"修改或验证表单元素的值时":["41.13"],"响应快":["42.1"],"用户体验好":["42.1"],"会大量占用服务端cpu资源":["42.2"],"onclick":["43.1","64.4","64.5","68.19","68.21"],"current":["43.1"],"diff算法避免了没有必要的dom操作":["44.0"],"虚拟dom是一个对象":["44.1"],"而真实的dom是dom结构":["44.1"],"在虚拟dom中":["44.2"],"virtualdom":["44.3"],"props":["44.3","64.6"],"children":["44.3"],"所以性能会比真实的dom操作提升不少":["44.5"],"info":["44.5","51.10","84.1","103.14","112.5","116.9","127.1"],"虚拟dom的优势其实是在于它的diff算法和批量处理策略":["44.5"],"从而磨平各个浏览器事件兼容性问题":["44.6"],"redux的":["45.0"],"connect":["45.0"],"函数":["45.0","51.5","61.37","61.45","101.0","115.3"],"它将redux":["45.0"],"store":["45.0","65.57","105.4"],"用于在函数式组件中执行副作用的操作":["45.1"],"比如订阅事件":["45.1"],"数据获取":["45.1"],"dom操作等等":["45.1"],"它接收一个函数作为参数":["45.1"],"这个函数就是副作用代码":["45.1"],"还可以接收第二个参数":["45.1"],"用于指定副作用操作的依赖项":["45.1"],"用于引用":["45.2"],"dom":["45.2","50.5"],"元素或者保存值":["45.2"],"usestate的值会被重新渲染":["45.2"],"useref的值则不会":["45.2"],"名称匹配的组件":["47.0"],"会被缓存":["47.0"],"child1":["47.0"],"child2":["47.0"],"is":["47.0"],"componentname":["47.0"],"正则":["47.0"],"在没有原生":["48.0"],"promise":["48.0"],"mutationobserver":["48.0"],"的情况下才会改用":["48.0"],"执行栈":["48.1"],"执行栈使用到的是数据结构中的栈结构":["48.1"],"它是一个存储函数调用的栈结构":["48.1"],"遵循":["48.1"],"先进后出":["48.1"],"的原则":["48.1"],"它主要负责跟踪所有要执行的代码":["48.1"],"每当一个函数执行完成时":["48.1"],"就会从堆栈中探出":["48.1"],"pop":["48.1"],"这个执行完成的函数":["48.1"],"因为每次派发更新都会引起渲染":["48.2"],"所以把所有watcher都放到nexttick里调用":["48.2"],"flushschedulerqueue":["48.2"],"这里参数":["48.2"],"方法会被放到事件循环":["48.2"],"phantomjs":["48.3"],"ios7":["48.3"],"android":["48.3"],"counter":["48.3"],"observer":["48.3","52.4"],"textnode":["48.3"],"document":["48.3","107.0"],"createtextnode":["48.3"],"observe":["48.3"],"characterdata":["48.3"],"timerfunc":["48.3"],"test":["48.4","82.29"],"避免在事件循环周期内多次创建新的微任务":["48.5"],"把flushjobs推入到任务队列等待执行":["48.5"],"这个方法负责处理队列任务":["48.5"],"主要逻辑如下":["48.5"],"先处理前置任务队列":["48.5"],"根据":["48.5"],"排队队列":["48.5"],"遍历执行队列任务":["48.5"],"执行完毕后清空并重置队列":["48.5"],"执行后置队列任务":["48.5"],"如果还有就递归继续执行":["48.5"],"seen":["48.5"],"countmap":["48.5"],"正在执行":["48.5"],"dev":["48.5"],"开发环境下":["48.5"],"flushpreflushcbs":["48.5"],"执行前置任务队列":["48.5"],"排序队列":["48.5"],"以确保":["48.5"],"从父到子":["48.5"],"因为父级总是在子级前面先创建":["48.5"],"如果符组件更新期间卸载了组件":["48.5"],"vue3":["48.6","50.5"],"dosomething":["49.1","89.0"],"这里的参数是要监听的事件名称":["49.1"],"有一个相应的缩写":["49.1"],"即":["49.1","132.8"],"动态参数":["49.1"],"同样在指令参数上也可以使用一个javascript的表达式":["49.1"],"需要包含在一个方括号内":["49.1"],"attributename":["49.1"],"当":["49.3","49.4","68.60"],"元素被触发":["49.3"],"元素及其所包含的指令":["49.3"],"组件都会销毁或重构":["49.3"],"如果初始条件是假":["49.3"],"那么其内部的内容根本不会被渲染":["49.3"],"id":["49.4","65.22","68.13","90.0","128.1"],"与":["49.4"],"优先级":["49.4"],"同时使用时":["49.4"],"内联字符串拼接":["49.5"],"path":["49.5","65.23","65.35","65.54"],"to":["49.5","84.5","124.4"],"images":["49.5"],"filename":["49.5","87.0"],"isred":["49.5"],"classa":["49.5"],"classb":["49.5"],"trim":["49.6"],"移除输入内容两端空格":["49.6"],"vue":["49.6","50.5","65.26","65.30","68.13"],"方法处理函数":["49.7"],"dothis":["49.7"],"动态事件":["49.7"],"内联声明":["49.7"],"dothat":["49.7"],"的基础上做了一些改变":["50.0"],"主要是针对最后两个生命周期":["50.0"],"beforeunmount":["50.0","50.4"],"unmounted":["50.0","50.4"],"组件数据发生变化":["50.1"],"更新之前":["50.1"],"update":["50.1"],"组件数据更新之后":["50.1"],"获取到的是挂载":["50.2"],"的":["50.2","65.56","68.3","68.5","112.17"],"在此阶段可获取到":["50.2"],"此阶段":["50.2"],"虽已完成dom初始化":["50.2"],"但并未挂载在":["50.2"],"是比":["50.3"],"要更早的":["50.3"],"destroyed":["50.4"],"这些钩子函数的执行顺序与vue2的版本相同":["50.4"],"但有所不同的是":["50.4"],"在vue3中":["50.4"],"暴露公共属性":["50.5"],"expose":["50.5"],"onbeforemount和onmounted":["50.5"],"onbeforemount":["50.5"],"都是":["50.5"],"中的生命周期钩子":["50.5"],"它们分别在组件":["50.5"],"挂载":["50.5"],"之前和之后运行":["50.5"],"钩子函数会在组件挂载到dom前运行":["50.5"],"可以用来在组件挂载前执行一些初始化操作":["50.5"],"钩子函数会在组件挂载到":["50.5"],"后运行":["50.5"],"通常用于获取数据和初始化页面状态等操作":["50.5"],"默认是懒侦听的":["51.1"],"调整回调函数的操作":["51.2"],"一个ref":["51.3"],"例如等待中的异步请求":["51.4","65.50"],"当侦听多个来源时":["51.4","65.50"],"回调函数接收两个数组":["51.4"],"count":["51.5"],"watch":["51.5","51.9"],"深层级变更状态所触发的回调":["51.5"],"侦听一个":["51.5"],"getter":["51.5"],"log":["51.8","64.4","82.4","82.5","82.8","82.13","82.18","82.31","83.3","83.11","83.14","84.10","84.31","93.9","93.10","98.6","103.1","103.15","103.17","103.20","103.21","106.3","106.6","106.8","116.11","124.7"],"相同":["51.9"],"仅在数据源确定改":["51.12"],"变时才会触发回调":["51.12"],"callback":["51.13"],"javascript":["51.15","61.31","64.8","64.9","81.5","82.10","82.22","82.27","84.13","84.18","94.1","94.2","103.8"],"ref":["51.16","68.11"],"代码更新":["52.1"],"的状态被更新":["52.2"],"如果此时可以自动更新":["52.2"],"应用的展示效果":["52.3"],"各类ui组件":["52.3"],"compile":["52.5","52.6"],"同时定义一个更新函数":["52.5"],"watcher":["52.5"],"将来对应数据变化":["52.5"],"proxy":["52.6","84.7"],"执行编译":["52.6"],"el":["52.6"],"遍历子元素":["52.7"],"foreach":["52.7","91.1","91.2"],"node":["52.7","53.4","120.3"],"判断是否为节点":["52.7"],"iselement":["52.7"],"updatefn":["52.8"],"创建实例时":["52.8"],"把当前实例指定到":["52.8"],"target静态属性上":["52.8"],"target":["52.8","64.4"],"读一下key":["52.8"],"触发get":["52.8"],"置空":["52.8"],"null":["52.8","112.7","120.1","123.2"],"未来执行dom更新函数":["52.8"],"都通过单个页面的加载而检索":["53.2"],"或者根据需要":["53.2"],"通常是为响应用户操作":["53.2"],"contentful":["53.3"],"首次内容绘制":["53.3"],"顾名思义":["53.3"],"它代表浏览器第一次向屏幕绘制":["53.3"],"内容":["53.3"],"只有首次绘制文本":["53.3"],"图片":["53.3","105.0"],"包含背景图":["53.3"],"非白色的":["53.3"],"canvas":["53.3"],"ssr":["53.4"],"服务端渲染也可以解决首屏加载慢这个问题":["53.4"],"因为服务端会把所有数据全部渲染完成在返回给客户端":["53.4"],"请求":["53.4"],"解析":["53.4"],"返回给客户端":["53.4"],"带请求数据":["53.4"],"但是需要解决":["53.4"],"node层的高并发问题":["53.4"],"路由懒加载":["53.4"],"可以通过":["53.4","65.20","127.2"],"plugin":["53.4"],"syntax":["53.4"],"dynamic":["53.4","122.0"],"fs":["55.3"],"exports相当于是对":["55.3"],"module":["55.3","89.0","122.0"],"exports的引用":["55.3"],"两者等价":["55.3"],"️":["56.1"],"v":["56.2"],"报错":["56.2","83.10"],"known2":["56.2"],"类型也不能够直接调用上面的方法和属性":["56.2"],"foo":["56.2"],"此时为":["56.3"],"else":["56.3","116.2"],"更新了面试相关的":["57.1"],"更新了面试相关的javascript相关":["57.3"],"更新了":["57.4"],"浏览器":["60.0"],"为什么javascript是弱类型语言":["61.1"],"弱类型语言实现相对于强类型语言来说的":["61.1"],"在强类型语言中":["61.1"],"get":["61.3","64.4","68.49","92.6"],"post":["61.3"],"以及请求的":["61.3"],"然后使用":["61.3","68.7","68.9"],"send":["61.3","87.0"],"方法发送请求":["61.3"],"处理响应":["61.3"],"在回调函数中":["61.3"],"readystate":["61.3","61.36"],"属性判断请求的状态":["61.3"],"而且这个请求最终会不会处理还不确定":["61.4"],"表示服务器已经成功处理了请求":["61.4"],"但没有返回任何实体内容":["61.4"],"可能会返回新的头部元信息":["61.4"],"闭包就是函数的局部变量集合":["61.6"],"只是这些局部变量在函数返回后会继续存在":["61.6"],"关键字外":["61.7"],"我们在实际情况下经常遇到这样一种情况":["61.7"],"即有的函数只需要执行一次":["61.7"],"最终可能导致程序崩溃":["61.8"],"产生场景":["61.8"],"对象或变量未被正确销毁":["61.8"],"当一个对象或变量不再被使用时":["61.8"],"应该及时将它们从内存中删除":["61.8"],"如果没有正确销毁这些对象或变量":["61.8"],"它们所占用的内存就会一直存在":["61.8"],"造成内存泄漏":["61.8"],"性能也会变差":["61.10"],"但利用事件委托":["61.10"],"就只对它的父级进行操作":["61.10"],"减少了调用的对象":["61.10"],"节省了内存空间":["61.10"],"但这个有兼容性":["61.11"],"从外向里":["61.12"],"这个阶段不会响应任何时间":["61.12"],"localstorage":["61.13"],"sessionstorage":["61.13"],"是永久性的":["61.13"],"除非通过代码或者浏览器设置进行删除":["61.13"],"而":["61.13","129.1"],"ming":["61.16"],"类型的":["61.17"],"但是每个函数都具有一个":["61.17"],"prototype":["61.17","61.18","83.8","84.4","98.5","104.3"],"属性":["61.17","70.4","85.0","116.1"],"内部":["61.18"],"创建一个新对象":["61.18"],"使新对象的":["61.18"],"proto":["61.18","98.5","106.8"],"指向原函数的":["61.18"],"改变":["61.18"],"指向":["61.18"],"指向新的obj":["61.18"],"并执行该函数":["61.18"],"回调地狱":["61.20"],"异步操作方法前加一个":["61.21"],"关键字":["61.21"],"的长度":["61.22"],"为了明确这个概念":["61.22"],"我们必须再次强调以下几点":["61.22"],"是一个查找的过程":["61.23"],"可以不用每次都与数据库连接":["61.23"],"来实现的":["61.24"],"是":["61.25","64.3","84.6","118.0"],"dom二级事件新增的指定事件处理程序的操作":["61.25"],"这个方法接收三个参数":["61.25"],"区别":["61.26"],"offsetheight区别":["61.27"],"是鼠标的横纵坐标":["61.28"],"我们用":["61.28"],"offsetx":["61.28"],"collection":["61.30"],"javascript的姐时期可以检测到何时程序不在使用一个对象了":["61.30"],"当它确定了一个对象是无用的时候":["61.30"],"它就知道不再需要这个对象":["61.30"],"可以把它所占用的内存释放掉了":["61.30"],"的时候":["61.31"],"就会把所占的内存给回收进来":["61.31"],"这样垃圾收集器再次运行的时候":["61.31"],"就会释放引用次数为":["61.31"],"的这些值":["61.31"],"引用计数法存在":["61.31"],"内存泄漏":["61.31"],"problem":["61.31"],"缺点":["61.32"],"如果id不再user对象中":["61.32"],"则不能监听id的变化":["61.32"],"在es6中":["61.32"],"考虑原型链":["61.33"],"为什么考虑原型链":["61.33"],"因为在":["61.33"],"一个":["61.33"],"过程中生成新函数的时候":["61.33"],"必须条件就是要继承原函数原型":["61.33"],"201107240502201179":["61.35"],"jpg":["61.35"],"onload":["61.35","87.0"],"onreadystatechange":["61.36"],"complete":["61.36"],"newstr":["61.37"],"h":["61.37","83.7","84.29","92.8","129.2"],"l":["61.37"],"bol":["61.37"],"newbol":["61.37"],"valueof":["61.37","92.6"],"所有对象都有":["61.37"],"方法":["61.37","65.35","68.7","82.12","84.1","84.7"],"j":["61.38"],"所以会有跨域问题出现":["61.40"],"跨域问题来源于":["61.40"],"域名":["61.41"],"网址后面加斜杠":["61.42"],"www":["61.42"],"campr":["61.42"],"com":["61.42"],"指向的是window":["61.43"],"不能拷贝":["61.45"],"undefined":["61.45","104.4"],"map循环方法不会对空数组进行检测":["61.46"],"object":["61.47","99.0","100.3","106.7","116.1","118.0"],"create":["61.47","106.7"],"我去喊你一起吃饭":["61.48"],"你很忙":["61.48"],"我就坐着等你忙完再一起去吃饭":["61.48"],"https是由":["61.50"],"ssl":["61.50"],"协议构建的可进行加密传输":["61.50"],"托管资源":["61.51"],"使用缓存":["61.51"],"按照一定的条件活着需求":["61.52"],"gif":["62.1"],"文件大小相对较小":["62.2"],"支持高度压缩":["62.2"],"支持透明度":["62.3"],"无损压缩":["62.3"],"透明度":["62.4"],"适合存储简单的动画图像":["62.4"],"内容宽高":["62.5"],"内填充":["62.5"],"边界边框":["62.5"],"content":["62.7","76.0"],"视频区域的高度":["62.9"],"autoplay":["62.9"],"是否自动播放":["62.9"],"视频类型":["62.10"],"支持ogg":["62.10"],"mp3":["62.10"],"表单属性":["62.11"],"nav":["62.12"],"导航栏":["62.12"],"aside":["62.12"],"侧边栏":["62.12"],"article":["62.12"],"加载页面一块独立内容":["62.12"],"设施边框图像":["62.14"],"source":["62.14","82.23","124.5","124.9"],"规定":["62.15"],"position":["62.15","74.9","74.14"],"允许长的内容可以自动换行":["62.17"],"轴":["62.18"],"指定嵌套元素怎么样在三位空间中呈现":["62.18"],"2d":["62.18"],"duration":["62.19"],"动画需要花费的时间":["62.20"],"timing":["62.20"],"之后":["62.21"],"超出部分会被隐藏":["62.21"],"在浮动元素后面加一个空标签并设置属性":["62.21"],"clear":["62.21"],"both":["62.21"],"height":["62.21","74.14"],"fixed":["62.22"],"固定定位":["62.22"],"子父元素款素固定":["62.24"],"top":["62.25","62.26","74.3","74.8","74.9"],"创建一个隐藏节点":["62.25"],"子元素相对定位":["62.26"],"子元素":["62.26"],"left":["62.26","74.3","74.8","74.9"],"值为":["62.26"],"中间栏放最后":["62.27"],"绝对定位法":["62.27"],"左右两栏采用绝对定位":["62.27"],"none":["62.28","102.3"],"n":["62.30","89.0","120.2"],"查找第几个子元素":["62.30"],"of":["62.30","83.15","84.24","84.27","93.11"],"查找同已类型第几个":["62.30"],"only":["62.30"],"class选择器":["62.31"],"伪类选择器":["62.31"],"内联元素":["62.32"],"字母间距":["62.32"],"letter":["62.32"],"spacing":["62.32"],"段落间距":["62.32"],"word":["62.32"],"使用图片预加载技术":["62.33"],"sup":["62.34"],"u":["62.34","115.3","116.1"],"textarea":["62.34"],"会独占一行":["62.34"],"自身边距到自身内容之间的距离":["62.35"],"当需要在":["62.35"],"wrap":["62.36"],"设置弹性盒子的子元素超出父容器时是否换行":["62.36"],"flow":["62.36"],"font":["62.38"],"size":["62.38"],"中所有的字体都是相对于父元素的大小决定的":["62.38"],"相对于":["62.38"],"就是根据不同的媒体类型设置不同的css样式":["62.39"],"标记语言":["62.40"],"的版本标准来解析文档":["62.41"],"dragenter":["62.42","70.3"],"事件主体是目标元素":["62.42"],"在被拖放元素进入某元素时触发":["62.42"],"交互阶段":["62.43"],"页面加载完成":["62.43"],"同样的":["62.44"],"css如果不是在页面构建前加载":["62.44"],"则可以加上取消阻止显示的标志":["62.44"],"降低关键资源大小":["62.44"],"或者":["62.45","102.5","116.3","131.2"],"cssom":["62.45"],"来触发的":["62.45"],"链接层和实体层":["62.48"],"物理层":["62.48"],"每层都有相关的协议和功能":["62.48"],"并且需要下一层的支持":["62.48"],"它们的功能以及依赖关系":["62.48"],"如下图":["62.48"],"网络传输数据包装":["62.48"],"应用层http协议的通信请求":["62.48"],"规定应用程序的数据格式":["62.48"],"基于传输层tcp协议的tcp连接":["62.48"],"传输层的tcp连接":["62.48"],"负责传输数据包":["62.48"],"基于网络层ip协议分配ip地址连通网络和链接层mac地址":["62.48"],"网卡地址":["62.48"],"确认接收主机":["62.48"],"网络层的数据发送":["62.48"],"基于连接层将实体层发出的电信号分组并且解读":["62.48"],"通过arp协议利用ip地址获取到mac地址":["62.48"],"实体层":["62.48"],"就是电脑间链接的介质":["62.48"],"比如光纤":["62.48"],"电缆等等":["62.48"],"maxmum":["62.49"],"user":["62.49","70.5"],"执行":["62.50"],"然后触发":["62.50"],"会重叠":["62.51"],"重叠结果为":["62.51"],"使用":["64.1","124.5","127.1"],"usecallback可以确保子组件在依赖项未变化时不会因为接收到新的函数引起不必要的重新渲染":["64.1","68.32"],"在某些情况下":["64.1","68.32"],"可以配合":["64.1"],"usememo":["64.1"],"然后":["64.2","114.2"],"虚拟dom计算组件先前状态和更新状态之间的差异":["64.2"],"mvvm":["64.3"],"模式":["64.3","64.15"],"虚拟":["64.3"],"不一样":["64.3"],"会跟踪每一个组件的依赖关系":["64.3"],"不需要重新渲染整个":["64.3"],"组件树":["64.3"],"increment":["64.5"],"另一方面":["64.5"],"调用或设置事件侦听器":["64.6"],"componentdidupdate":["64.6"],"当组件的":["64.6"],"或状态更改时调用此方法":["64.6"],"setvalue":["64.7"],"的函数将在渲染提交到屏幕后执行":["64.8"],"或者如果将依赖项数组作为第二个参数传递":["64.8"],"则每次其中一个依赖项更改时都会调用该函数":["64.8"],"handlechange":["64.9"],"将数据及其相关逻辑与组件分开是一种很好的做法":["64.11"],"其次":["64.11"],"本地状态也用于表示列表中单个项的组件中":["64.12"],"appreducer":["64.13"],"state":["64.13"],"initialstale":["64.13"],"action":["64.13","84.5"],"some":["64.14"],"也还可以选择天机一些数据作为载荷":["64.14"],"并允许用户进行数据转换":["64.16"],"过滤":["64.16"],"fetch是现代浏览器提供的一种用于发起网络请求的api":["64.17"],"使用promise对象处理异步操作":["64.17"],"fetch更加简洁和现代化":["64.17"],"提供了更有好的api来处理网络请求":["64.17"],"这是因为react需要依赖hook调用的顺序来却顶hook对应的状态":["64.18"],"如果hook调用的顺序发生改变":["64.18"],"可能会导致程序出现错误或不符合预期的行为":["64.18"],"而在":["64.18"],"来访问这些数据":["64.19"],"生成虚拟dom树":["64.20"],"首先":["64.20"],"将当前的dom结构抽象为虚拟dom树":["64.20"],"并且生成待更新的新虚拟dom树":["64.20"],"通过比较两棵虚拟dom树":["64.21"],"高阶函数":["64.22"],"模型的框架":["65.1"],"当模型数据发生变化时":["65.2"],"视图将自动更新":["65.2"],"双向数据绑定":["65.2"],"是指同时将视图中的元素绑定到模型数据":["65.2"],"并将模型数据绑定到视图中的元素":["65.2"],"当视图或模型中的数据发生变化时":["65.2"],"另一部分将自动更新":["65.2"],"mvvm优点":["65.2"],"关注点分离":["65.2"],"mvvm模式通过明确的分层将数据":["65.2"],"用户界面和业务逻辑分离开来":["65.2"],"这有助于提高代码可维护性和可测试性":["65.2"],"使开发人员更容易地修改":["65.2"],"扩展和维护不同的部分":["65.2"],"代码重用":["65.2"],"可以根据不同的视图需求进行调整":["65.2"],"都会刷新为最新的值":["65.3"],"数据从父组件传递给子组件":["65.3"],"captrue":["65.4"],"添加事件侦听器时使用事件捕获模式":["65.4"],"就是谁有该事件修饰符":["65.4"],"就先触发谁":["65.4"],"self":["65.4"],"只会触发自己范围内的事件":["65.4"],"不包括子元素":["65.4"],"once":["65.4"],"叫指令":["65.7"],"可以渲染输出":["65.8"],"可以使用键值对形式":["65.9"],"会对节点进行检查":["65.10"],"如果没有key值":["65.10"],"那么vue检查到这里有":["65.10"],"vue会在它依赖的任何值导致该计算属性改变时更新":["65.11"],"进行跳转的叫声明式":["65.12"],"包括不支持":["65.15"],"html5":["65.15"],"的重新渲染":["65.16"],"hash":["65.16"],"模式是优先监听":["65.16"],"popstate":["65.16"],"事件":["65.16"],"不行就降级为":["65.16"],"hashchange":["65.16"],"history":["65.17"],"模式在内部传递的实际url之前使用了一个哈希字符":["65.18"],"由于这部分":["65.18"],"从未被发送到服务器":["65.18"],"routes":["65.19"],"history模式的url中没有":["65.19"],"号":["65.19"],"采用传统的路由分发模式":["65.19"],"即用户输入":["65.19"],"将记录添加到栈中":["65.20"],"query方式与区别":["65.21"],"component":["65.22"],"useprofile":["65.22"],"在页面中调用":["65.22"],"search":["65.23","107.0","115.4"],"使用路由参数":["65.24"],"query":["65.24"],"非标识性信息":["65.24"],"active":["65.28"],"isactive":["65.28"],"haserror":["65.28"],"activecolor":["65.29"],"fontsize":["65.29"],"可以实现表单输入和数据的双向绑定":["65.30"],"beforeenter":["65.34"],"可以控制路由导航的行为":["65.35"],"调用":["65.35"],"表示继续导航":["65.35"],"中止当前的导航":["65.35"],"子组件":["65.37"],"props接收父组件传递过来的数据":["65.37"],"是一个对象":["65.37","100.1"],"但是不要直接去找操作修改props的值":["65.37"],"type属性定义接收的数据类型":["65.37"],"defineprops":["65.38"],"接收父组件传递的值":["65.38"],"属性定义接受的数据类型":["65.38"],"default":["65.38"],"属性设置默认值":["65.38"],"父组件接收":["65.40"],"引入组件":["65.40"],"注册组件":["65.40"],"定义事件":["65.40","65.41"],"接收并使用传递的值":["65.40","65.41"],"父组件中使用自定义事件接收":["65.41"],"自定义事件名称必须与子组件传递的一致":["65.41"],"即等号前面名称":["65.41"],"父组件":["65.43"],"monkey":["65.44","65.45"],"child":["65.45","106.4"],"等同于":["65.45","82.20"],"and":["65.46","85.0"],"i":["65.46","129.2"],"am":["65.46"],"years":["65.46","92.7"],"old":["65.46"],"year":["65.46","92.6"],"bigturnipprops":["65.47"],"用于侦听一个或者多个响应式数据源":["65.48"],"value":["65.49","81.2","84.31"],"oldvalue":["65.49","65.51"],"oncleanup":["65.49"],"cleanupfn":["65.49"],"void":["65.49"],"以及一个用于注册副作用清理的回调函数":["65.50"],"该回调函数会在副作用下一次重新执行前调用":["65.50"],"可以用来清除无效的副作用":["65.50"],"如果回调函数":["65.51"],"由于深层级的变更而被触发":["65.51"],"那么新值和旧值将会是同一个对象":["65.51"],"newvalue":["65.51"],"适用于需要在数据变化时执行异步或复杂操作的场景":["65.52"],"是否调用缓存":["65.52"],"函数所依赖的属性不变的时候会调用缓存":["65.52"],"怎么解决白屏问题":["65.53"],"路由器":["65.54"],"router是":["65.54"],"router的实例":["65.54"],"包含了整个路由器的配置信息":["65.54"],"可以理解为全局的路由控制器":["65.54"],"它提供了一些方法和属性":["65.54"],"比如":["65.54","124.4","127.1"],"replace":["65.54","97.4"],"go":["65.54"],"home":["65.55"],"views":["65.55"],"about":["65.55"],"等":["65.56","68.26"],"技术":["65.56"],"使得生成的代码更加紧凑和高效":["65.56"],"tree":["65.56"],"shanking的支持":["65.56"],"vue3在设计上更加友好用于":["65.56"],"shanking":["65.56"],"使得在应用中使用vue3时能够更好地利用打包模块工具":["65.56"],"如webpack":["65.56"],"对应这个数据的组件也会发生改变":["65.57"],"相当于":["65.57"],"的计算属性":["65.57"],"主要是对":["65.57"],"面试":["68.0","70.0"],"defineexpose":["68.1"],"prop":["68.3","83.6"],"它的类型是":["68.3"],"并设置了默认值为0":["68.3"],"之后在":["68.3"],"中":["68.3"],"可以直接使用":["68.3"],"上段代码中":["68.5"],"button中使用":["68.5"],"添加点击事件监听器":["68.5"],"当按钮被点击时":["68.5"],"将调用":["68.5"],"msg":["68.7","100.4"],"变量和一个childmethod的方法":["68.7"],"defineexpose函数将msg和childmethod对外暴露出去":["68.7"],"这样":["68.7"],"我们在父组件中就可以访问子组件的msg属性或者调用":["68.7"],"childmethod":["68.7"],"父组件parent":["68.7"],"子组件child1":["68.9"],"子组件child2":["68.9"],"上面的代码中":["68.9"],"我们在父组件":["68.9"],"中定义了一个响应式数据":["68.9"],"我们在父组件内部使用":["68.11"],"函数定义了两个响应式变量":["68.11"],"并给它们分别赋予初始值":["68.11"],"然后在":["68.11"],"中使用":["68.11"],"在需要通信的组件中":["68.13"],"导入":["68.13","89.0"],"event":["68.13"],"对象并进行事件的监听和触发":["68.13"],"组件first":["68.13"],"first":["68.13","74.6"],"vuex":["68.15"],"的设计模式":["68.15"],"来更新状态":["68.17"],"jsx":["68.17","68.20","124.4"],"错误的方式":["68.17"],"items":["68.18"],"item":["68.18"],"handleclick":["68.19","68.21"],"typeerror":["68.20"],"请确保在返回之前处理这些情况":["68.20"],"js":["68.22","89.0","124.4"],"卸载阶段":["68.23"],"unmounting":["68.23"],"来更新":["68.24"],"在组件被创建和每次接收到新的":["68.24"],"render":["68.25"],"getsnapshotbeforeupdate":["68.25"],"prevprops":["68.25"],"prevstate":["68.25"],"componentdidcatch":["68.26"],"但是它缓存的是普通数值而不是回调函数":["68.33"],"这些hook提供了强大的工具":["68.35"],"虚拟滚动列表的实现原理通常包括以下几个步骤":["68.36"],"计算可视区域的高度以及每个列表项的高度":["68.36"],"为lighthouse提供一个需要审查的网址":["68.37"],"验证":["68.38"],"的各个方面的性能情况":["68.38"],"页面的性能评分":["68.38"],"包括首次内容绘制":["68.38"],"推荐":["68.40"],"在链接中添加参数":["68.42"],"通过在一个页面中写入数据":["68.43"],"但是会话存储的数据在会话结束后被清除":["68.44"],"cookies的容量有限":["68.45"],"通过在发送消息的窗口中调用postmessage":["68.46"],"会受到浏览器的同源策略限制":["68.48"],"请求来实现跨域通信的技术":["68.49"],"头部信息":["68.50"],"例如":["68.50","75.0"],"可以发送请求到同源服务器上的代理服务器":["68.51"],"的安全传输令牌":["68.53"],"可以在不同域之间传递身份验证信息":["68.53"],"确保所有参与通信的页面都受信任":["68.54"],"限制通信频率以减少性能影响等":["68.54"],"登录状态不一致":["68.54"],"通过url传递token参数进行登录态校验":["68.54"],"还有iframe的宽高设置":["68.54"],"第三方页面的滚动":["68.54"],"需要设置是根据那个参数滚动的":["68.54"],"微前端的方式":["68.54"],"微前端之前没怎么接触过":["68.54"],"在此做了一些了解":["68.54"],"微前端是一种将前端应用程序拆分为更小":["68.54"],"更可管理的部分":["68.54"],"并独立开发":["68.54"],"测试":["68.54"],"部署的方法":["68.54"],"开发者可以在单个仓库中查找所有相关的代码":["68.55"],"而不需要在多个仓库之间切换":["68.55"],"共享代码":["68.55"],"不同项目之间可以共享代码和资源":["68.55"],"避免了代码重复的问题":["68.55"],"返回的记忆化值可以在组件的渲染过程中使用":["68.56"],"但通常不建议在其它地方调用":["68.56"],"这是因为":["68.56","80.0"],"setitem":["68.60"],"stringify":["68.60"],"发生变化时触发":["68.60"],"返回":["68.60"],"面试二面":["69.0"],"trigger":["69.7"],"当拖动元素进入可放置区域时触发":["70.3"],"draggable":["70.4"],"dragover":["70.6"],"drop":["70.6"],"api几乎是函数":["70.9"],"会有更好的类型推断":["70.9"],"textanimation3d":["72.0"],"实际效果":["73.0"],"stretchdelay":["74.1"],"2s":["74.1","74.10"],"infinite":["74.1","74.3","74.10"],"ease":["74.1","74.3","74.5","74.7"],"out":["74.1","74.5","74.6","74.7"],"delay":["74.1","74.14"],"transform":["74.2","74.4","74.8","74.9","74.10"],"perspective":["74.2"],"120px":["74.2"],"rotatey":["74.2"],"180deg":["74.2","74.4"],"absolute":["74.3","74.9","74.13"],"webkit":["74.3","74.9","74.12","74.13"],"animation":["74.3"],"bounce":["74.3","74.5"],"0s":["74.3"],"translatex":["74.4"],"42px":["74.4"],"rotate":["74.4","74.9"],"90deg":["74.4","74.8"],"scale":["74.4","74.10"],"translatey":["74.4"],"background":["74.5","74.11","74.12","76.0"],"465efb":["74.5","74.11","74.12"],"border":["74.5","74.11","74.12","74.13"],"radius":["74.5","74.11","74.12","74.13"],"prevent":["74.6"],"frame":["74.6"],"flickering":["74.6"],"when":["74.6"],"starts":["74.6"],"rotatez":["74.8"],"45deg":["74.8","74.9"],"right":["74.8"],"bottom":["74.8"],"relative":["74.9","74.14"],"150px":["74.9","74.13"],"margin":["74.9","74.13"],"75px":["74.9","74.13"],"ms":["74.9","74.10"],"20px":["74.9"],"keyframes":["74.10"],"translate":["74.10"],"var":["74.10","81.1","82.21","98.3","106.3"],"float":["74.11"],"moz":["74.11","74.12","74.13"],"50px":["74.12"],"s":["74.14","81.1"],"300px":["74.14"],"width":["74.14"],"属性选择器":["75.0"],"radio":["75.0"],"id选择器":["75.0"],"行内样式":["75.0"],"important":["75.0"],"通过设置元素选择器为1来做对比各种选择器的权重关系":["75.0"],"权重数字":["75.0"],"类":["75.0","85.0"],"layout":["76.0"],"此时打印的是":["80.0"],"通过call函数将a的指向变成了obj这个对象":["80.0"],"所以":["80.0","112.17","120.5"],"它会执行函数":["80.0"],"并且打印出name的值":["80.0"],"call方法还可以传入多个参数":["80.0"],"并立即执行这个函数":["80.1"],"header":["81.0"],"将它们自动添加到":["81.0"],"几乎":["81.0"],"每个对相同域的请求中":["81.0"],"最常见的用处就是用于身份验证":["81.0"],"match":["81.1"],"key":["81.1"],"decodeuricomponent":["81.1"],"它们应该使用内建的":["81.2"],"encodeuricomponent":["81.2"],"函数对其进行转义":["81.2"],"特殊字符":["81.2"],"需要编码":["81.2"],"my":["81.2"],"smith":["81.2"],"admin":["81.3"],"没有user":["81.4"],"但这是可以设置的":["81.4"],"如果我们想允许像":["81.4"],"这样的子域在":["81.4"],"上设置cookie":["81.4"],"也是可以实现的":["81.4"],"为此":["81.4"],"例如我们可以将cookie设置为一天后过期":["81.5"],"当前时间":["81.5"],"1天":["81.5"],"now":["81.5","130.3"],"86400e3":["81.5"],"org":["81.6"],"doc":["81.6"],"str1":["82.2"],"formcodepoint":["82.7"],"字符串的表达形式":["82.10"],"uncaught":["82.12"],"syntaxerrot":["82.12"],"unexpected":["82.12"],"syntaxerror":["82.12"],"替代函数的":["82.12"],"apply":["82.12","108.4"],"由于扩展运算符可以展开数组":["82.12"],"所以不再需要":["82.12"],"方法转为函数的参数了":["82.12"],"的行为有差异":["82.14"],"空值":["82.14"],"found":["82.15"],"elem":["82.18"],"中只能使用方法一":["82.21"],"标识符":["82.21"],"定义属性":["82.21"],"返回false":["82.22"],"操作符返回true":["82.22"],"只使用新指定的修饰符":["82.27"],"abc":["82.28"],"gi":["82.28"],"𠮷":["82.29"],"groups":["82.30"],"split":["82.32"],"允许为函数的参数设置默认值":["82.34"],"这个运算符的一个特点是右结合":["82.36"],"而不是常见的左结合":["82.36"],"它定义了javascript的语法":["83.0"],"类型":["83.0","112.15","116.4","118.0"],"声明的变量只在其所在的块级作用域中有效":["83.2"],"还有一种情况是不完全解构":["83.5"],"即等号左边的模式":["83.5"],"只匹配一部分等号右边的数组":["83.5"],"d":["83.5","112.8","112.14","133.1"],"嵌套赋值":["83.6"],"如果解构模式是嵌套的对象":["83.6"],"而且子对象所在的父属性不存在":["83.6"],"那么将会报错":["83.6"],"默认值":["83.9"],"函数参数的解构也可以使用默认值":["83.9"],"move":["83.9"],"error":["83.10","84.5"],"引申":["83.10"],"使用函数默认值时":["83.10"],"函数不能有同名参数":["83.10"],"否则会抛出错误":["83.12"],"不可以使用":["83.12"],"arguments":["83.12"],"参数":["83.13","118.0"],"解决":["83.13"],"sum":["83.15","93.8"],"val":["83.15"],"arr2":["83.16"],"它是es6中一个非常方便的特性":["83.19"],"alex":["83.20"],"age":["83.20","105.4"],"表达式还可以用方法名":["83.21"],"getsummary":["83.22"],"书名":["83.22"],"pi":["83.23"],"导出一个函数":["83.23"],"即如果没有":["84.1"],"的介入":["84.1"],"操作原来要访问的就是这个对象":["84.1"],"第二个参数是一个配置对象":["84.1"],"对于每一个被代理的操作":["84.1"],"需要提供一个对应的处理函数":["84.1"],"该函数将拦截对应的操作":["84.1"],"如上面代码中的":["84.1"],"用来拦截对目标对象属性的访问请求":["84.1"],"方法的两个参数分别是目标对象和要访问的属性":["84.1"],"可以看到":["84.1","100.3"],"由于拦截器函数总是返回":["84.1"],"所以访问任何属性都会得到":["84.1"],"要使得":["84.1"],"起作用":["84.1"],"必须针对":["84.1"],"上例是":["84.1"],"对象":["84.1","84.4"],"进行操作":["84.1"],"而不是针对目标对象":["84.1"],"上例是空对象":["84.1"],"如果":["84.1"],"没有设置任何拦截":["84.1"],"那就等同于直接通向原对象":["84.1"],"属性的描述对象":["84.2"],"defineproperty":["84.2","99.3"],"propdesc":["84.2"],"preventextensions":["84.2"],"getprototypeof":["84.2"],"上面代码中":["84.4","84.6"],"拦截操作定义在":["84.4"],"对象上面":["84.4"],"所以如果读取":["84.4"],"继承属性时":["84.4"],"拦截就会生效":["84.4"],"实现数组读取负数的索引":["84.4"],"createarray":["84.4","115.4"],"elements":["84.4"],"handler":["84.4"],"attempt":["84.5"],"private":["84.5","105.4"],"property":["84.5"],"c":["84.5","112.15"],"的实例":["84.6"],"当它作为函数调用时":["84.6"],"就会被":["84.6"],"让操作变成了函数行为":["84.7"],"assign":["84.7"],"对象的方法与":["84.7"],"方法一一对应":["84.7"],"只要是":["84.7"],"对象的方法":["84.7"],"就能在":["84.7"],"对象上找到对应的方法":["84.7"],"这就让":["84.7"],"对象可以方便地调用对应":["84.7"],"完成默认行为":["84.7"],"作为修改行为的基础":["84.7"],"不管":["84.7"],"propkey":["84.8"],"receiver":["84.8"],"获取对象的属性值":["84.8"],"removeobserver":["84.9"],"创建观察者":["84.9"],"observer1":["84.9"],"typeof":["84.10","112.13","112.14","116.2"],"tostring":["84.10"],"数据结构":["84.11"],"map的键可以是任意类型的值":["84.12"],"创建一个空的":["84.13"],"不接受其它类型的数据":["84.14"],"不用担心这些节点从文档移除时会引发内存泄漏":["84.15"],"添加键值对":["84.16"],"但是它的值是唯一的":["84.17"],"创建一个":["84.18"],"中没有任何其它引用":["84.19"],"临时存放一组对象或存放跟对象绑定的信息":["84.20"],"返回实例":["84.21"],"of循环":["84.22"],"为各种不同的数据结构提供统一的访问机制":["84.23"],"对于遍历器对象来说":["84.25"],"属性都是可以省略的":["84.25"],"因此上面的":["84.25"],"上面代码的扩展运算符内部就调用":["84.28"],"实际上":["84.28"],"这提供了一种简便机制":["84.28"],"可以将任何部署了":["84.28"],"接口的数据结构":["84.28"],"转为数组":["84.28"],"也就是说":["84.28"],"只要某个数据结构部署了":["84.28"],"就可以对它使用扩展运算符":["84.28"],"将其转为数组":["84.28"],"iterable":["84.28"],"char":["84.29"],"函数会返回一个遍历器对象":["84.30"],"next":["84.31"],"done":["84.31"],"empty":["85.0"],"块语句中的内容不能为空":["85.0"],"character":["85.0"],"正则表达式中的":["85.0"],"内容不能为空":["85.0"],"label":["85.0"],"禁止使用空label":["85.0"],"eq":["85.0"],"禁止对null使用":["85.0"],"运算符":["85.0"],"eval":["85.0"],"禁止使用eval":["85.0"],"ex":["85.0"],"禁止给catch语句中的异常参数赋值":["85.0"],"extend":["85.0"],"native":["85.0"],"禁止扩展native对象":["85.0"],"extra":["85.0"],"禁止不必要的函数绑定":["85.0"],"cast":["85.0"],"禁止不必要的bool转换":["85.0"],"parens":["85.0"],"禁止非必要的括号":["85.0"],"semi":["85.0"],"禁止多余的冒号":["85.0"],"fallthrough":["85.0"],"禁止switch穿透":["85.0"],"floating":["85.0"],"decimal":["85.0"],"禁止省略浮点数中的0":["85.0"],"禁止重复的函数声明":["85.0"],"implicit":["85.0"],"coercion":["85.0"],"禁止隐式转换":["85.0"],"implied":["85.0"],"禁止使用隐式eval":["85.0"],"inline":["85.0"],"comments":["85.0"],"禁止行内备注":["85.0"],"inner":["85.0"],"declarations":["85.0"],"functions":["85.0"],"禁止在块语句中使用声明":["85.0"],"变量或函数":["85.0"],"invalid":["85.0"],"regexp":["85.0","112.12"],"禁止无效的正则表达式":["85.0"],"禁止无效的this":["85.0"],"只能用在构造器":["85.0"],"对象字面量":["85.0"],"irregular":["85.0"],"whitespace":["85.0"],"不能有不规则的空格":["85.0"],"禁止使用":["85.0"],"label名不能与var声明的变量名相同":["85.0"],"labels":["85.0"],"禁止标签声明":["85.0"],"lone":["85.0"],"blocks":["85.0"],"禁止不必要的嵌套块":["85.0"],"lonely":["85.0"],"禁止else语句内只有if语句":["85.0"],"loop":["85.0"],"禁止在循环中使用函数":["85.0"],"如果没有引用外部变量不形成闭包就可以":["85.0"],"mixed":["85.0"],"requires":["85.0"],"声明时不能混用声明类型":["85.0"],"spaces":["85.0"],"tabs":["85.0"],"禁止混用tab和空格":["85.0"],"linebreak":["85.0"],"换行风格":["85.0"],"status":["87.0"],"获取文件blob数据并保存":["87.0"],"getfilename":["87.0"],"saveas":["87.0"],"response":["87.0"],"url方式保存文件到本地":["87.0"],"鼠标事件触发":["88.0"],"clientx":["88.0"],"鼠标相对于浏览器":["88.0"],"这里说的是浏览器的有效区域":["88.0"],"左上角x轴的坐标":["88.0"],"不随滚动条滚动而改变":["88.0"],"clienty":["88.0"],"左上角y轴的坐标":["88.0"],"pagex":["88.0"],"cjs是commonjs的缩写":["89.0"],"经常是这么使用":["89.0"],"importing":["89.0"],"require":["89.0"],"exporting":["89.0"],"导出":["89.0"],"exports":["89.0"],"something":["89.0","130.3"],"获取其中某一个参数":["90.0"],"decodeuri":["90.0"],"unit":["90.0"],"方法二":["90.0"],"解析url字符串参数":["90.0"],"数组本身":["91.1"],"返回值":["91.1"],"一个新数组":["91.1"],"每个元素都是回调函数的返回值":["91.1"],"myforeach":["91.2"],"通常会对时间进行下面这几个操作":["92.0"],"比如获取时间":["92.0"],"format":["92.6"],"返回值为字符串类型":["92.6"],"unix":["92.6"],"返回值为数值型":["92.6"],"以毫秒为单位":["92.6"],"获取年份":["92.6"],"seconds":["92.7"],"年份":["92.7"],"月份":["92.7"],"months":["92.7"],"小写的am":["92.8"],"hh":["92.8"],"小时":["92.8"],"24小时制":["92.8"],"00到23":["92.8"],"无前导零":["92.8"],"0到23":["92.8"],"12小时制":["92.8"],"00到12":["92.8"],"diff":["92.9"],"返回毫秒数":["92.9"],"moment":["92.10"],"晚上":["92.11"],"dddd":["92.11"],"星期五":["92.11"],"本周二晚上7点49":["92.13"],"ll":["92.14"],"2019年5月24日":["92.14"],"m":["92.15"],"上一个月月底":["92.15"],"最后":["93.1"],"将其结果汇总为单个返回值":["93.1"],"第一次执行回调函数时":["93.1"],"可选":["93.2"],"否则为array":["93.3"],"的值":["93.3"],"currentvalue":["93.3"],"当前元素的值":["93.3"],"则":["93.4"],"cur":["93.6","93.12","93.15"],"表示的是当前元素":["93.6"],"reduce":["93.8","93.12"],"acc":["93.8","93.12","93.15","93.17"],"表示累加器通过对象操作来控制名称key出现的次数":["93.9"],"输出值为":["93.9"],"groupepeople":["93.10"],"输出结果为":["93.10"],"juliet":["93.11"],"alice":["93.11"],"the":["93.11"],"lord":["93.11"],"myarr":["93.12"],"crr":["93.12"],"includes":["93.12"],"reject":["93.14"],"p2":["93.14"],"fn":["93.17","101.0"],"组合的函数":["93.17"],"实现特定值的乘法":["93.17"],"后执行传入的函数":["94.1"],"只执行一次":["94.1"],"用法":["94.1","94.2"],"示例":["94.2"],"每隔一秒执行一次":["94.2"],"如果队列中已有任务":["94.3"],"那么定时任务的执行可能会受到延迟":["94.3"],"最小延迟时间":["94.3"],"都可以通过":["94.4"],"settimeout":["94.5"],"启动第一次":["94.5"],"progress":["94.6"],"更精准":["94.7"],"因为它与浏览器的重绘同步":["94.7"],"标识对发出方发出数据包的接收确认":["95.1"],"sent":["95.1"],"客户端发送同步标志syn后":["95.1"],"进入syn":["95.1"],"sent状态":["95.1"],"recv":["95.1"],"服务端确认客户端的syn包并发送syn包后":["95.1"],"第三次挥手":["95.2"],"服务端数据发送完毕之后":["95.2"],"向客户端发送":["95.2"],"半连接状态下服务器可能又发送了一些数据":["95.2"],"服务器此时进入了":["95.2"],"last":["95.2","105.2"],"ack状态":["95.2"],"第四次挥手":["95.2"],"客户端收到服务器的":["95.2"],"包之后":["95.2"],"ip四层模型":["96.0"],"ip五层模型":["96.0"],"是以":["96.0"],"osi七层":["96.0"],"优化而来":["96.0"],"是一种代码注入攻击":["97.1"],"攻击者通过在目标网站上注入恶意脚本":["97.1"],"注入其它属性或者标签":["97.2"],"在标签的":["97.2"],"src":["97.2"],"等属性中":["97.2"],"反射型":["97.3"],"攻击者将脚本混在url里":["97.3"],"服务端接收到url将恶意代码当作参数取出并拼接在html里返回":["97.3"],"浏览器解析此html后执行恶意代码":["97.3"],"escape":["97.4"],"g":["97.4"],"amp":["97.4"],"riding":["97.5"],"通常缩写为":["97.5"],"csrf":["97.5"],"请求来源限制":["97.6"],"此方法成本最低":["97.6"],"但是并不能保证100":["97.6"],"xss是代码注入问题":["97.7"],"csrf是http问题":["97.7"],"方法调用构造函数时":["98.1"],"构造函数的":["98.1"],"会被绑定到新创建的对象上":["98.1"],"bar":["98.2"],"func":["98.2"],"o3":["98.3"],"上述第一个例子中":["98.3"],"函数返回了this":["98.3"],"并且通过o1对象直接调用":["98.3"],"所以打印项为":["98.3"],"第二个例子中":["98.3"],"arg2":["98.4"],"call":["98.5"],"如果构造函数中出现了显式":["98.5"],"的状况":["98.5"],"那么需要注意":["98.5"],"其可以洗分为两种情况":["98.5"],"执行一个构造函数":["98.5"],"如果返回的是一个对象":["98.5"],"bar1":["98.7"],"输出":["98.7"],"箭头函数的绑定无法被修改":["98.7"],"因此属于优先级高的一列":["98.7"],"除了":["99.0"],"以外":["99.0"],"所有类型都定义了表示在语言最低层面的不可变值":["99.0"],"我们将这些值称为原始值":["99.0"],"bigint":["99.1"],"但是你可以通过":["99.3"],"设置它们":["99.3"],"或通过":["99.3"],"getownpropertydescriptor":["99.3"],"读取它们":["99.3"],"数据属性":["99.3"],"数据属性将键与值相关联":["99.3"],"它可以通过以下属性来描述":["99.3"],"auto":["99.4"],"p1":["100.0"],"它有两个属性":["100.1"],"为每个实例创建重复的属性方法":["100.2"],"而是将属性方法创建在构造函数的原型对象上":["100.2"],"那些不需要共享的方法才被创建在构造函数之中":["100.2"],"也是对象":["100.3"],"它有隐式原型么":["100.3"],"又指向谁呢":["100.3"],"构造函数的原型对象上的隐式原型指向了":["100.3"],"的原型对象":["100.3"],"那么parent的原型对象就继承了object的原型对象":["100.3"],"由此我们可以验证一个结论":["100.3"],"函数的构造函数是":["100.4"],"这点也不奇怪":["100.4"],"因为我们每次定义函数其实都是调用了new":["100.4"],"下面两种效果是一样的":["100.4"],"func1":["100.4"],"介绍完":["101.0"],"变量":["101.0"],"就应该介绍":["101.0"],"变量的提升了":["101.0"],"首先先看一个例子":["101.0"],"这个a会打印1吗":["101.0"],"不会":["101.0"],"打印出来undefined":["101.0"],"当render树":["102.1"],"一定会引起":["102.2"],"不一定会引起":["102.2"],"而且每个页面都至少需要一次":["102.2"],"就是页面第一次开始加载的时候":["102.2"],"可能会有人问":["102.2"],"如果说元素设置成了":["102.3"],"display":["102.3"],"变化":["102.4"],"增删节点":["102.4"],"render树":["102.4"],"padding":["102.4"],"transforms":["102.5"],"opacity":["102.5"],"减少style修改所影响元素的数量":["102.6"],"把所有会引起回流":["102.7"],"newarr":["103.2"],"isbigenough":["103.4"],"warning":["103.16"],"题外话":["103.16"],"方法和":["103.16"],"都是将元素转变为字符串的方法":["103.16"],"但两者又有一些地方有差别":["103.16"],"存在性检查":["103.16"],"在使用":["103.16"],"表示删除掉下标为1的元素后面的元素":["103.18"],"原数组变更为":["103.18"],"indexof":["103.20"],"步长为":["103.22"],"基本数据类型保存在栈内存中":["104.1"],"拷贝的就是基本类型的值":["104.2"],"slice":["104.3"],"one":["104.3"],"two":["104.3"],"three":["104.3"],"arr1":["104.3"],"存在弊端":["104.4"],"转义时会忽略":["104.4"],"symbol":["104.4"],"和函数":["104.4"],"obj":["104.4","116.1"],"name1":["104.4"],"name3":["104.4"],"name4":["104.4","116.9"],"两个对象指向同一个地址":["104.6"],"字体以及应用程序明确请求的任何数据":["105.0"],"即使设备不在线":["105.1"],"modified":["105.2"],"etag":["105.2"],"判断是否命中协商缓存":["105.2"],"不存在缓存标识":["105.3"],"存在该缓存结果和缓存标识":["105.3"],"所有内容只有客户端可以缓存":["105.4"],"的默认取值":["105.4"],"no":["105.4"],"客户端缓存内容":["105.4"],"但是是否使用缓存则需要经过协商缓存来验证决定":["105.4"],"所有内容都不会被缓存":["105.4"],"即不使用强制缓存":["105.4"],"也不使用协商缓存":["105.4"],"max":["105.4"],"xxx":["105.4"],"是数字":["105.4"],"缓存内容将在xxx秒后失效":["105.4"],"协商缓存生效":["105.5"],"发现请求头":["105.6"],"含有":["105.6"],"字段后":["105.6"],"然后根据":["105.6"],"的字段值与该资源在服务器的最后被修改时间做对比":["105.6"],"若服务器的资源最后被修改时间大于":["105.6"],"sinde":["105.6"],"since":["105.7"],"另一个类别a":["106.0"],"给货车添加一个大货箱":["106.1"],"truck":["106.1"],"extends":["106.1","116.1"],"super":["106.1"],"组合继承":["106.2"],"上述代码看似没啥问题":["106.3"],"但实际上是存在潜在问题":["106.3"],"s1":["106.3"],"第一次调用":["106.5"],"手动挂上构造器":["106.5"],"指向自己的构造函数":["106.5"],"person2":["106.6"],"lucy":["106.6"],"getfriends":["106.7"],"person":["106.8"],"来划分不同的继承方式":["106.9"],"获取当前文档的url":["107.0"],"urls":["107.0"],"获取参数":["107.0"],"分隔":["107.0"],"会不断调用绑定在事件上的回调函数":["108.0"],"极大的浪费资源":["108.0"],"降低页面性能":["108.0"],"若在这个时间段内重复触发":["108.1"],"throttleinterval":["108.2"],"timer":["108.2"],"则重新开始计时":["108.3"],"立即执行版本":["108.4"],"immediate":["108.4"],"防抖是在一段连续操作结束后":["108.5"],"处理回调":["108.5"],"利用":["108.5"],"窗口大小":["108.6"],"resize":["108.6"],"的速度非常快":["110.0"],"性能非常好":["110.0"],"运行时建立的平台":["110.0"],"用于方便地搭建响应速度快":["110.0"],"易于扩展的网络应用":["110.0"],"会被放置到任务队列中":["110.1"],"主线程任务完毕后":["110.1"],"会读取任务队列中的事件":["110.1"],"因为任务队列中的每一个异步任务执行完毕后都会在队列中添加一个事件":["110.1"],"而js而js主线程执行完后就会执行这些事件":["110.1"],"从而调起对应的回调函数放入主线程中进行执行":["110.1"],"单线程":["110.1"],"java":["110.1"],"t3":["112.1","112.2","112.8","112.9"],"t4":["112.1","112.8","112.9"],"t1":["112.3"],"的实现如下":["112.4"],"keyof":["112.5"],"ps":["112.5"],"我们可以自定义类型工具":["112.5"],"mutable":["112.5"],"将参数类型的所有属性变为可变属性":["112.5"],"这时会依次展开为多个键":["112.6"],"any":["112.7","112.11"],"t5":["112.7","112.12"],"isarray":["112.10"],"如果参数类型是泛型参数":["112.10"],"返回值取决于泛型类型":["112.10"],"如果泛型不带有限制条件":["112.10"],"就会返回":["112.10"],"unknown":["112.10"],"t7":["112.10","112.11"],"never":["112.11"],"是两个特殊值":["112.11"],"分别返回":["112.11"],"t8":["112.11"],"constructorparameter":["112.12"],"functionconstructor":["112.12"],"regexpconstructor":["112.12"],"pattern":["112.12"],"flags":["112.12"],"如果参数类型不是构造方法":["112.12"],"如果函数没有":["112.13"],"然后用":["112.14"],"运算符获取它的构造方法类型":["112.14"],"y":["112.14","115.5"],"那么就会原样返回":["112.15"],"给出了函数":["112.16"],"的类型":["112.16"],"并将其中的":["112.16"],"这里的":["112.17"],"的作用是提示":["112.17"],"应该满足":["112.17"],"的条件":["112.17"],"typescript手册":["113.0"],"枚举的定义使用":["114.0"],"从编译结果我们可以看出来":["114.2"],"枚举值递增到":["114.2"],"时与前面":["114.2"],"的值重复了":["114.2"],"导致":["114.2"],"先是":["114.2"],"也是":["114.2"],"所以在赋值时":["114.2"],"最好不要出现这种情况":["114.2"],"那么它就会因为无法获得初始值而报错":["114.3"],"赋值项之后是未赋值的枚举项的报错":["114.3"],"常数项和计算所得项的完整定义":["114.3"],"引用自中文手册":["114.3"],"枚举":["114.3"],"当满足以下条件时":["114.3"],"枚举成员被当作是常数":["114.3"],"不具有初始化函数并且之前的枚举成员是常数":["114.3"],"假如包含了计算成员":["114.4"],"则会在编译阶段报错":["114.4"],"green":["114.4"],"ts":["114.4"],"外部枚举与声明语句一样":["114.5"],"是一种强大的类型工具":["115.1"],"它允许我们编写可重用":["115.1"],"来定义一个数组":["115.2"],"通过":["115.3"],"的类型自动":["115.3"],"推断出泛型的类型":["115.3"],"多个类型参数":["115.3"],"定义泛型的时候":["115.3"],"可以一次定义多个类型参数":["115.3"],"swap":["115.3"],"tuple":["115.3"],"seven":["115.3"],"我们实现了一个":["115.3"],"用于交换输入中的元组":["115.3"],"泛型约束":["115.3"],"在函数内部使用泛型参数时":["115.3"],"由于不知道参数的具体类型":["115.3"],"所以不能够随意使用它的属性与方法":["115.3"],"泛型定义函数":["115.4"],"icreatearray":["115.4"],"这个类型断言可以省略":["116.1"],"现在":["116.1"],"obj就同时拥有了":["116.1"],"属性与":["116.1"],"泛型联合":["116.1"],"t":["116.1"],"断言":["116.3"],"之后就可以调用字符串的方法":["116.4"],"makesound":["116.5"],"animial":["116.5"],"这里使用":["116.5"],"这一段就是类型谓词":["116.6"],"isfish":["116.6"],"那么":["116.7"],"分支的类型细化为有一个可选的或者必须的属性":["116.7"],"nameresolver":["116.8"],"tip":["116.9"],"类型别名不能出现在右侧任何地方":["116.9"],"yikes":["116.9"],"declare":["116.10"],"arg":["116.10"],"但是访问一个已知的索引":["116.11"],"会得到正确的类型":["116.11"],"则结果是":["116.12"],"类型中的参数":["116.12"],"6及以上版本":["118.0"],"屏幕闪烁":["118.0"],"2及以上版本":["118.0"],"开放状态":["118.0"],"未开放":["118.0"],"开放范围":["118.0"],"白名单":["118.0"],"参数说明":["118.0"],"是否必填":["118.0"],"说明":["118.0"],"idcardnumber":["118.0"],"在访问一个元素时":["120.2"],"需要从七点开始迭代整个链表直到找到所需的元素":["120.2"],"访问的时间复杂度就在":["120.2"],"之间":["120.2"],"constructor":["120.3"],"currentnode":["120.4"],"prenode":["120.4"],"currentindex":["120.4"],"while":["120.4"],"prevnode":["120.4"],"currentnext":["120.4"],"有三个整数值":["120.5"],"数值":["120.5"],"向后的节点的链接":["120.5"],"向前的节点的链接":["120.5"],"那么它就不再是头部节点了":["120.6"],"将其前驱节点设置为新节点":["120.6"],"新的头部节点":["120.6"],"然后标记新的节点为头部节点":["120.6"],"如果还没有尾部节点":["120.6"],"那么就让新的节点称为尾部节点":["120.6"],"将新的及诶单追加到尾部":["120.6"],"append":["120.6"],"如果还没有头部节点":["120.6"],"让新的节点称为头部节点":["120.6"],"将新的节点添加到链表的末尾":["120.6"],"将当前尾部节点添加到新节点的前驱引用":["120.6"],"设置新节点为链表的尾部节点":["120.6"],"删除具有特定值的节点":["120.6"],"delete":["120.6"],"import":["122.0"],"webpack5对动态导入语法":["122.0"],"提供了更好的支持":["122.0"],"可以更轻松地使用代码分割":["122.0"],"模块联邦":["122.0"],"抽象语法树":["123.0"],"它以树状的形式表现编程语言的语法结构":["123.1"],"树上的每个节点都表示源代码中的一种结构":["123.1"],"之所以说语法是":["123.1"],"init":["123.2"],"arrowfunctionexpression":["123.2"],"expression":["123.2"],"generator":["123.2"],"async":["123.2"],"params":["123.2"],"一系列操作":["123.3"],"transformation":["123.3"],"扫描器":["123.4"],"scanner":["123.4"],"其作用是将一行行的源码拆解成一个个":["123.4"],"所谓":["123.4"],"出错的时候":["124.1"],"开发着工具将直接显示原始代码":["124.1"],"而不是转换后的代码":["124.1"],"随着持续开发所带来的代码量增多":["124.2"],"map功能":["124.3"],"babel":["124.4"],"否则无法定义源文件":["124.4"],"将":["124.4"],"作为":["124.4"],"datauri":["124.4"],"包裹源代码进行执行":["124.5"],"利用字符串可缓存进行提效":["124.5"],"sourcemappingurl":["124.5"],"bundle":["124.5"],"对于":["124.7"],"转换过后的代码":["124.8"],"生产环境":["124.9"],"它是一个引擎":["126.1"],"而非一款框架":["126.1"],"为提交的具体节点":["127.1"],"61ab26":["127.1"],"若另一个":["127.2"],"分支b":["127.2"],"需要临时拥有这个功能":["127.2"],"应用develop分支前的日志如下":["127.3"],"c8b94bb":["127.3"],"origin":["127.3","129.3","133.2"],"应用develop分支后的日志如下":["127.3"],"同时github也已经申请了账号":["128.0"],"ssh":["128.1"],"如果输入命令后无法进入":["128.1"],"则说明还没有在本地机器上绑定你自己github账户的公钥":["128.1"],"那么就需要下边的ssh":["128.1"],"keygen命令进行绑定":["128.1"],"命令如果失效":["128.1"],"跳过该命令":["128.1"],"ls":["128.1"],"看ssh文件夹下有没有":["128.1"],"rsa":["128.1"],"pub":["128.1"],"这两个文件":["128.1"],"fetch区别":["129.0"],"是将远程主机的最新内容拉到本地":["129.1"],"用户在检查了以后决定是否合并到工作本机分支中":["129.1"],"是将e和ｆ的代码合并后的结果":["129.2"],"可能会出现冲突":["129.2"],"而abdf依然属于dev分支":["129.2"],"可以继续在dev的分支上进行开发":["129.2"],"分支":["129.2","129.3"],"最常见的命令如取回":["129.3"],"主机的":["129.3"],"master":["129.3"],"从远程主机的master分支拉取最新内容":["129.4"],"merge":["129.4","130.2"],"delta":["130.2"],"reused":["130.2"],"unpacking":["130.2"],"a1bc60a":["130.2"],"b91f711":["130.2"],"made":["130.2"],"recursive":["130.2"],"strategy":["130.2"],"controllers":["130.2"],"deal":["130.2"],"local":["130.2"],"rtu":["130.2"],"interface":["130.2"],"instrument":["130.2"],"562ec58":["130.3"],"现在在查看一下分支提交历史":["130.3"],"0e80f97":["130.3"],"虽然合并成功":["130.3"],"但是master已经保存了合并历史":["130.3"],"出现开叉了":["130.3"],"对于强迫症患者来说肯定是不能接受的":["130.3"],"通过rebase合并分支":["130.3"],"现在将版本退回到合并前":["130.3"],"也就是回退一个版本":["130.3"],"reset":["130.3"],"hard":["130.3"],"at":["130.3"],"退回去了":["130.3"],"现在是位于master分支的":["130.3"],"提交这里":["130.3"],"先切换回feature分支":["130.3"],"那么就是一个feature分支了":["131.0"],"由于开发中各种修改":["131.0"],"衍合":["131.1"],"77663d6":["131.2"],"执行完命令后":["131.2"],"我们可以看到终端变成如下界面":["131.2"],"rebase操作":["131.2"],"commands表示了可以进行的指令的类型":["131.2"],"即为":["131.2"],"pick":["131.2"],"表示保留这一个commitid":["131.2"],"命令的作用是将更改存储在一个临时区域中":["132.0"],"而只想把某些更改推送到远程仓库":["132.1"],"想要在多个分支之间进行代码重构或实验性开发时":["132.1"],"保存时的描述":["132.3"],"命令":["132.3"],"shell":["132.4"],"如果要显示其它存贮":["132.5"],"后面加":["132.5"],"如果要使用其它个":["132.7"],"从列表中删除这个存储":["132.9"],"这个文件还在":["132.10"],"说明没有被存起来":["132.10"],"说白了就是没有在git":["132.10"],"版本控制中的文件":["132.10"]},{"0":["12.1","12.2","74.7","74.11","82.17","84.4","92.6","92.9","93.13","103.18","104.3","114.3","116.11","132.4"],"1":["16.0","19.0","31.0","32.0","37.8","56.2","61.47","74.5","74.10","80.0","82.3","82.22","82.25","83.17","83.21","84.9","84.18","84.28","92.8","95.1","104.3","114.3","116.11","127.1"],"2":["28.2","29.4","32.0","37.8","41.4","42.2","61.22","64.20","65.42","68.5","68.11","68.36","80.0","81.1","81.6","83.15","83.21","83.23","84.9","84.18","84.28","93.9","103.8","115.2"],"3":["1.0","12.1","32.0","37.10","62.33","64.20","65.2","68.9","80.0","83.6","83.11","83.15","84.28","93.7","93.14","97.3","98.4","103.8","105.2","114.1","115.2","130.3"],"4":["29.6","37.6","52.5","61.3","62.21","65.2","68.9","82.23","83.16","84.28","93.16","100.1","103.8","106.3","115.2"],"5":["61.42","62.26","65.2","83.11","83.15","83.16","84.28","103.3","103.5","103.8","103.19","103.22","103.23","115.2","127.3"],"6":["1.0","61.51","62.25","65.2","103.23"],"7":["103.12","103.22","103.23","130.2"],"8":["14.2","14.4","19.0","31.0","64.5","82.14","83.9","103.23"],"9":["15.0","103.22","103.23"],"10":["15.0","83.15","103.23"],"11":["82.14"],"13":["92.7"],"14":["92.6"],"15":["83.3","92.6"],"16":["92.6"],"18":["83.20","93.11"],"20":["92.12"],"21":["130.2"],"26":["3.0"],"28":["123.2"],"30":["84.13"],"32":["123.2"],"38":["114.4"],"47":["123.2"],"50":["74.14"],"100":["57.3","74.4"],"200":["61.3","112.7"],"201":["112.7"],"301":["61.4"],"400":["112.7"],"600":["105.4"],"1000":["75.0"],"1998":["99.4"],"2019":["92.15"],"2526":["12.2"],"1411572969":["92.8"],"n":["1.0","56.2"],"result":["2.0","61.18","82.23","115.4"],"if":["2.0","5.0","52.6","104.4","108.4"],"return":["2.0","7.0","64.10","65.33","65.40","81.1","83.21","93.8","93.12","104.4","116.6","120.4"],"sort":["2.0","48.5"],"for":["2.0","6.0","8.0","25.0","37.4","48.5","76.0","99.3","115.4"],"let":["2.0","4.0","5.0","8.0","9.0","82.12","106.4","115.4","115.5"],"j":["2.0"],"break":["2.0"],"console":["3.0","7.0","52.7","64.8","81.2","82.2","82.6","82.15","82.22","82.27","82.28","84.7","84.9","93.12","93.16","94.2","94.5","99.4","103.9","103.10","103.11","103.12","103.19","115.3","116.4"],"log":["3.0","7.0","52.7","64.8","81.2","82.6","82.15","82.22","82.27","82.28","84.7","84.9","93.12","94.2","94.5","99.4","103.9","103.10","103.11","103.12","103.13","103.19","115.3","116.4","130.2"],"利用map的特性去处理":["3.0"],"新建一个":["3.0"],"map":["3.0","124.7"],"然后遍历数组":["3.0"],"将差值记录在":["3.0"],"中":["3.0","64.5","64.18","68.9","93.14","103.14"],"最后通过":["3.0"],"的前五个元素被修改为":["4.0"],"求解":["4.0"],"通过判断与前一项是否相等":["4.0"],"在通过指针重新指向":["4.0"],"typescript":["4.0","116.7"],"removeduplicates":["4.0"],"number":["4.0","8.0","85.0","99.0","112.7","115.5","118.0"],"len":["4.0","8.0"],"index1":["5.0"],"index2":["5.0"],"tail":["5.0"],"while":["5.0","120.6"],"k":["6.0","8.0"],"length":["6.0","8.0","55.1","84.4"],"leftindex":["6.0"],"i":["6.0","11.0"],"target1":["7.0"],"target2":["7.0"],"target3":["7.0"],"removeele":["8.0"],"index":["8.0","32.2","32.3","130.3"],"isinit":["9.0"],"false":["9.0","82.29","83.5","84.10","84.31"],"res":["9.0"],"中心下标是0":["10.0"],"左侧数之和是":["10.0"],"下标":["10.0"],"左侧不存在元素":["10.0"],"右侧数之和是":["10.0"],"of":["11.0","130.2"],"cnpm":["12.0"],"国内用户推荐":["12.0"],"淘宝的npm加速服务":["12.0"],"npm":["12.0"],"node":["12.0"],"直接下载安装即可":["12.1"],"30天的时间对于学习angularjs和进行一些初级的开发尝试完全足够了":["12.1"],"本书写作时使用的webstorm版本是11":["12.1"],"webstorm自8":["12.1"],"chrome完整版本下载链接":["12.2"],"本书写作时使用的chrome版本是47":["12.2"],"x都有对应的安装包":["12.3"],"本书使用的node":["12.3"],"new":["13.0","61.31","82.27","84.29","85.0","99.4","104.4","106.4","115.5","116.2"],"然后选择empty":["13.0"],"创建目录":["13.1"],"大家对于":["13.1"],"的配置文件":["13.2"],"测试文档":["13.2"],"这些文件我们是绝对不希望用户可以直接访问到的":["13.2"],"也可以跳过下面命令行创建的部分":["13.3"],"即可启用":["13.4"],"图2":["13.4"],"private":["13.5"],"which":["13.5"],"prevents":["13.5"],"it":["13.5","130.3"],"from":["13.5","55.3","65.34"],"being":["13.5"],"accidentally":["13.5"],"published":["13.5"],"registry":["13.5"],"以下是生成的配置文件的预览":["13.5"],"并在其中加入如下内容":["13.6"],"json":["13.6","30.6"],"现在项目看起来应该长这个样子":["13.7"],"我们将进入正式的学习使用angularjs的过程":["14.0"],"meta":["14.2","19.0","28.0","61.51"],"charset":["14.2","14.4","19.0","28.0","31.0"],"utf":["14.2","14.4","19.0","31.0"],"title":["14.2","14.4","19.0","31.0","34.0"],"学习angularjs":["14.2","14.4","19.0","31.0"],"min":["14.3"],"js":["14.3","53.4"],"148kb":["14.3"],"hello":["14.5","18.2","19.3","56.2","61.30"],"看不到":["14.5"],"和":["14.5","50.0","53.3","61.22","62.5","62.36","62.44","65.11","65.56","68.22","94.3","108.5","112.6","112.12","114.5","116.1","116.9"],"就说明angularjs已经成功运行起来了":["14.5"],"style":["15.0","31.0","37.3","38.0","97.2"],"下拉列表选项":["15.0","37.3"],"options":["15.0","50.0"],"引入":["15.0","92.2"],"include":["15.0"],"和模板":["15.0"],"template":["15.0","17.1","49.4","49.6","65.26","65.30","68.7"],"网页会显示2":["16.0"],"a":["16.0","31.2","48.5","61.30","65.27","82.7","84.1","103.22"],"bc":["16.0"],"网页会显示abc":["16.0"],"是定义和使用html代码碎片的功能":["17.0"],"用于将html切碎分别存储":["17.0"],"并根据需求再去获取对应的代码块":["17.0"],"geturl":["17.1"],"从上面的例子可以看出":["17.1"],"autoscroll":["17.2"],"的属性":["17.2"],"id":["17.3","32.0","68.3","68.7"],"这个":["17.3"],"就是这段html代码被引用时的名称":["17.3"],"使用":["17.3","62.28","62.33","65.13","75.0","82.16","99.1","103.22"],"在现在阶段":["18.0"],"我们并不会用到":["18.0"],"lang":["18.1","28.0","30.7"],"zh":["18.1","28.0","30.7"],"head":["18.1","19.0","28.0","127.1","129.3","130.2"],"app被放置在了这里":["18.2"],"h1":["18.2","20.0","23.2","33.0","62.34"],"world":["18.2","19.4","20.0","64.10"],"以上代码的运行结果如下":["18.2"],"图4":["18.2"],"文件呼唤":["18.3"],"网页的标题":["19.0"],"我们在这里使用了angularjs的基本表达式":["19.0"],"controller的名称":["19.2"],"function":["19.2","52.6","61.35","62.20","82.12","84.28","112.8","112.12"],"scope":["19.2","31.2","32.4"],"controller的实体":["19.2"],"传入了":["19.3"],"data":["19.3","20.0","20.2","24.4","124.5"],"message":["19.3","20.0","50.5"],"对象":["19.3","98.6"],"并在html代码中直接使用了":["19.3"],"为什么不推荐这样做呢":["19.5"],"因为在我们后续会学习应用":["19.5"],"filter":["19.5","37.3","38.0"],"firstctrl":["20.0","23.2","25.4","30.0","30.1","30.5","30.6"],"这里增加了一个input输入框":["20.0"],"input":["20.1","20.2","23.3","23.4","24.5"],"type":["20.1","20.2","23.3","23.4","24.1","24.5","106.4"],"text":["20.1","20.2","23.3","23.4","32.5"],"model":["20.1","20.2","23.3","23.4","25.0"],"if中的文字":["21.0"],"中包含的内容":["21.1"],"会被全部从html中移除掉":["21.1"],"而如果使用":["21.1"],"true":["21.2","41.10","51.5","83.8","106.1","106.6"],"但是请":["21.2"],"注意":["21.2","51.10","61.21","83.21","112.17"],"在":["21.2","68.11","68.25","103.14"],"in":["22.0","22.1","25.0","25.1","74.3","85.0","112.4","114.4","127.3"],"td":["22.0","22.1"],"x":["22.1","31.0","62.18","83.10","92.8","95.1","103.2","103.3"],"list":["22.1"],"name":["22.1","68.13","83.18","84.13","87.0","112.11"],"以上都是angularjs的常用用法":["23.0"],"具体的系统自带的":["23.0"],"的列表":["23.0"],"我们可以从官方网站上获取":["23.0"],"这里对管网提供的功能进行一个简要列表":["23.0"],"filter名称":["23.0"],"示例用法":["23.0","81.1"],"说明":["23.0"],"传入自定义的函数作为过滤器":["23.0"],"结果为":["23.1","98.3"],"代码如下":["23.2"],"html":["23.2","25.4","29.2","30.4","30.5","30.7","32.2","32.3","57.1","62.38","81.6"],"div":["23.2","24.1","25.4","27.0","28.4","30.0","30.4","30.5","50.5","62.12","62.34","64.10","68.18","68.20"],"ng":["23.2","28.0"],"controller":["23.2","25.4","27.1","30.0","30.3","30.5","30.6"],"link":["24.1","31.0","32.4"],"rel":["24.1"],"stylesheet":["24.1"],"href":["24.1","31.0","90.0"],"body":["24.1","30.0","88.0"],"此处放置了ng":["24.1"],"并设定了每个样式激活时的条件":["24.1"],"对应下方3个复选框":["24.1"],"p":["24.1","24.2","28.3","33.0","50.5","65.26","68.13","112.4"],"class":["24.2","37.3","38.0"],"直接使用字符串作为样式":["24.2"],"warning":["24.3","112.17"],"同时应用两种样式":["24.3"],"button":["24.4","24.5","48.4","68.7"],"value":["24.4","24.5","62.30","64.9","84.7","84.8","99.3","103.4","103.5","103.6","103.7","115.4","120.3"],"开始动画":["24.4"],"click":["24.4","24.5","68.7","68.19"],"br":["24.4"],"imagepath":["24.5"],"下面":["24.5"],"我们通过官网的示例来看看如何传入文本":["24.5"],"设置字体颜色为红色":["24.5"],"mystyle":["24.5"],"label":["25.0","25.4"],"选择一个颜色":["25.0"],"无空选项":["25.0"],"select":["25.0","70.5"],"colors":["25.1"],"blue":["25.2"],"黄色":["25.2","25.3"],"yellow":["25.2","25.3"],"然后修改":["25.3"],"而angularjs需要解析这段文本":["25.4"],"因此提出了对格式的要求":["25.4"],"选择一个国家":["25.4"],"有空选项":["25.4"],"并将印象不深的地方多浏览几遍":["26.0"],"如果可能":["26.0"],"直接作为标签名":["27.0"],"people":["27.0","30.0","30.3"],"直接作为标签属性":["27.0"],"可能会对directive的学习或者使用价值感到困难":["27.2"],"doctype":["28.0","30.7"],"第一个参数是directive的命名":["28.1"],"这里是":["28.1","48.3"],"第二个参数是这个directive的功能":["28.1"],"directive生效后的html代码":["28.2"],"姓名":["28.3"],"attribute":["28.4"],"在实际应用场景中":["29.0"],"我们的命名通常不止1个单词":["29.0"],"这时候我们就需要注意directive的命名和使用规则":["29.0"],"并且不使用连接符号":["29.1"],"驼峰式命名的例子":["29.1"],"array":["29.2","115.4","116.9"],"实际使用举例":["29.2"],"为了保证html和javascript都能按原有模式正常工作":["29.3"],"下划线":["29.5"],"则可以通过html5的验证":["29.6"],"有data前缀":["29.6"],"第一个人的信息":["30.0"],"harry":["30.1"],"这段配置":["30.2"],"告诉directive从html标签中":["30.2"],"获取名为":["30.2"],"张三":["30.4"],"sex":["30.5"],"peoplelist":["30.6"],"span":["30.6","79.1"],"repeat":["30.6"],"person":["30.6"],"clickbtncallback":["30.7"],"msg":["30.7"],"alert":["30.7","61.35","61.36","100.4"],"点击了按钮":["30.7"],"信息是":["30.7"],"对应的html代码":["30.7"],"css":["31.0","57.1","62.40","62.44"],"这里":["31.1"],"我们保留了上个例子中的":["31.1"],"所有":["31.1"],"文件":["31.1","124.4"],"包括独立的part":["31.1"],"对javascript也未进行任何修改":["31.1"],"运行效果如下":["31.1"],"图5":["31.1"],"restrict":["31.2"],"在chrome的":["32.0"],"开发者工具":["32.0"],"的控制台中":["32.0"],"我们可以看到如下结果":["32.0"],"childtail":["32.0"],"null":["32.0","51.16","61.18","82.12","83.5","99.0","103.16","104.4","112.8"],"这里才是整个directive中的":["32.1"],"同时":["32.2"],"如果你希望在angularjs中直接使用完整的jquery也是非常容易的":["32.2"],"只需要安装jquery":["32.2"],"并在":["32.2","68.11"],"中引入":["32.3"],"attrs":["32.4","34.0"],"鼠标移过来了":["32.5"],"mouseleave":["32.5"],"这里是放置原有代码的地方":["33.0"],"标题":["33.0"],"这里是段落文字":["33.0"],"第四个参数是获取到的directive":["34.0"],"element":["34.0","94.6"],"tabcontainer":["34.0"],"调用了上方gqtabcontainer的addpane":["34.0"],"方法":["34.0","68.5","68.46","82.13","103.16"],"注意参数命名":["34.0"],"不需要和上方directive一致":["34.0"],"在html代码中":["34.0"],"我们直接使用了":["34.0"],"gq":["34.0"],"tab":["34.0"],"container":["34.0","106.1"],"思路更清晰更有条理":["35.0"],"learning":["36.0"],"angular":["36.0"],"有任何疑问或者发现错误":["37.1"],"可联系":["37.1"],"作者":["37.1","83.22"],"github地址":["37.2"],"样式选择器":["37.3","38.0"],"如果您没有php经验":["37.4"],"这本书也可以阅读":["37.4"],"javascript":["37.4","51.4","51.9","61.30","62.44","64.19","65.35","92.2","99.1","100.2","107.0"],"php":["37.4","110.1"],"developers":["37.4"],"在制作网站前端时":["37.5"],"我也希望采用类似的方法":["37.5"],"我不喜欢直接在php代码中直接嵌入html模板的方案":["37.5"],"以静态网站的方式部署":["37.6"],"这样页面部分不再占用服务器的流量和空间":["37.6"],"便于之后的扩展":["37.6"],"其实有一个调侃的说法":["37.7"],"写java的写不来javascript的用angularjs":["37.7"],"但是基于angularjs的版本提供了一些如单页应用":["37.8"],"在同一个界面直接刷新部分界面而不是整页刷新":["37.8"],"的特性":["37.8"],"然后便是一系列的在网上搜索了解angularjs的过程":["37.8"],"看完它基本的tutorial":["37.8"],"phonecat":["37.8"],"之后":["37.8"],"我马上被它的特性震惊了":["37.8"],"因为":["37.8","112.17"],"angularjs的整个结构体系非常符合我的思路":["37.8"],"双向绑定的特性实在是太和我胃口了":["37.8"],"我现在正在重新学习angularjs":["37.9"],"写这本书":["37.9"],"一方面是为了记录学到的angularjs的技术":["37.9"],"便于我日后查询":["37.9"],"即使在我评估angular":["37.10"],"2时已经是beta版本":["37.10"],"但是官网仍然推荐不要将其用于生产环境":["37.10"],"我的网站运行的是对公业务":["37.10"],"且对合作方使用的浏览器有一定的影响能力":["37.10"],"但是我没有信心让所有客户都安装上chrome的最新版本":["37.10"],"copyright":["37.11"],"this":["37.11","48.2","68.17","83.13","108.2","120.3"],"过滤器":["38.0"],"inject":["41.1","68.1"],"而react中我们通过hoc":["41.1"],"higher":["41.1"],"而是通过修改数据":["41.2"],"state":["41.2"],"或":["41.2","110.1"],"props":["41.2","51.8","64.4","64.5","65.37"],"componentwillunmount":["41.3","64.6"],"卸载":["41.3"],"并且更贴合原生js写法":["41.4"],"dom":["41.5","65.10","68.25"],"app":["41.5"],"检测意外的副作用":["41.6"],"检测过时的":["41.6"],"跳转页面后获取":["41.7"],"sessionstorage":["41.7"],"存入sessionstorage初始化时查询":["41.7"],"有数据就加载":["41.7"],"jsx需要":["41.8"],"babel":["41.8"],"createelement":["41.9"],"component":["41.9","53.4"],"caught":["41.10"],"by":["41.10"],"这个依据就是标签的首字母":["41.11"],"能够让一个组件返回多个元素":["41.12"],"应该使用受控组件":["41.13"],"适用于需要对表单元素的值进行实时操作和处理的情况":["41.13"],"首屏渲染快":["42.1"],"首屏渲染是node发送过来的字符串":["42.1"],"开发条件受限":["42.2"],"export":["43.1","87.0"],"default":["43.1","53.4","55.3","64.7"],"父组件与子组件的加载顺序":["43.1"],"danger":["43.1"],"加载顺序":["43.1"],"父子组件初始化":["43.1"],"父组件":["43.1","68.3"],"constructor":["43.1","100.1","106.5"],"getderivedstatefromprops":["43.1"],"render":["43.1","68.24"],"子组件":["43.1"],"从而提高性能":["44.0"],"断点看到真实dom中挂载了很对属性和方法":["44.1"],"我们并不需要去关心":["44.1"],"是将所有的操作聚集在一块计算出所有变化后统一更新一次虚拟dom":["44.2"],"将所有的dom":["44.5"],"手机起来":["44.5"],"一起去改变真是的dom":["44.5"],"对于跨平台react和":["44.6"],"连接到":["45.0"],"react":["45.0","68.0","68.26","69.0"],"组件":["45.0"],"使组件可以访问和更新":["45.0"],"store中的状态":["45.0"],"timer":["45.1"],"time":["45.1","95.2"],"settime":["45.1"],"intervaild":["45.1"],"setinterval":["45.1"],"usestate的值在每一个render中都是独立存在的":["45.2"],"而useref":["45.2"],"current则更像是相对于render函数的一个全局变量":["45.2"],"每次它会保持render的最新状态":["45.2"],"usestate异步更新值":["45.2"],"useref则同步更新":["45.2"],"数组":["47.0","61.37","61.45","120.1"],"或者正则表达式":["47.0"],"名称匹配的组件则":["47.0"],"不会被缓存":["47.0"],"settimeout":["48.0","108.2"],"vue3":["48.0"],"如果有代码需要进去执行的话":["48.1"],"就进行push操作":["48.1"],"任务队列":["48.1"],"任务队列使用到的是数据结构中的队列结构":["48.1"],"它用来保存异步任务":["48.1"],"先进先出":["48.1"],"原则":["48.1"],"它主要负责将新的任务发送到队列中进行处理":["48.1"],"执行顺序":["48.1"],"先执行同步任务":["48.1"],"执行完接着执行微任务":["48.1"],"主线程任务的行完成后就会执行这个函数":["48.2"],"对watcher队列排序":["48.2"],"遍历执行watcher对应的run方法":["48.2"],"然后render":["48.2"],"更新视图":["48.2"],"也就是说":["48.2","84.30"],"我的胃来食":["48.2"],"使用settmmediate":["48.3"],"虽然也是宏任务":["48.3"],"但是比settimeout更好":["48.3"],"以上都不支持的情况下":["48.3"],"使用settimeout":["48.3"],"环境判断结束就会得到一个延迟回调函数":["48.3"],"然后进入核心的":["48.3"],"nexttick":["48.3","48.6"],"nexttick方法":["48.3"],"这里的主要逻辑是":["48.3"],"把传入的回调函数放入回调队列":["48.3"],"执行保存的异步任务":["48.3"],"就会遍历":["48.3"],"执行相应的回调函数了":["48.3"],"这三行是使用了":["48.3"],"typescript中的":["48.3"],"函数重载":["48.3"],"方法的函数重载定义":["48.3"],"用于在异步更新":["48.3"],"就可以跳过":["48.5"],"b":["48.5","84.1"],"getid":["48.5"],"try":["48.5"],"遍历主任务队列":["48.5"],"批量执行更新任务":["48.5"],"active":["48.5"],"checkrecursiveupdates":["48.5"],"continue":["48.5"],"callwitherrorhandling":["48.5"],"errorcodes":["48.5"],"scheduler":["48.5"],"finally":["48.5"],"队列任务执行完":["48.5"],"重置队列索引":["48.5"],"flushpostflushcbs":["48.5"],"的":["48.6","123.1"],"会作为一个javascript的表达式被动态执行":["49.1"],"计算得到的值会被用作最终的参数":["49.1"],"举例来说":["49.1"],"如果你的足见实例有一个数据属性":["49.1"],"其值为":["49.1"],"那么这个绑定就等价于":["49.1"],"相似地":["49.1"],"还可以将一个函数绑定到动态事件名称上":["49.1"],"eventname":["49.1"],"dosonething":["49.1"],"是无论初始条件如何":["49.3"],"它都会被渲染":["49.3"],"只有css":["49.3"],"display":["49.3","62.25"],"会被切换":["49.3"],"来改变元素的可见性":["49.3"],"比":["49.4"],"的优先级更高":["49.4"],"并且不推荐在同一元素上使用这两个指令":["49.4"],"因为同时使用时会抛出一个错误":["49.4"],"ul":["49.4"],"li":["49.4","76.0"],"user":["49.4","81.5","98.5"],"users":["49.4"],"isactive":["49.4"],"isb":["49.5"],"classc":["49.5"],"isc":["49.5"],"fontsize":["49.5"],"size":["49.5"],"px":["49.5","65.29"],"styleobjecta":["49.5"],"styleobjectb":["49.5"],"绑定对象形式的":["49.5"],"缩写":["49.7"],"使用缩写的动态事件":["49.7"],"停止传播":["49.7"],"阻止默认事件":["49.7"],"api":["50.0"],"composition":["50.0"],"在生命周期上也有一些小的不同":["50.0"],"conposition":["50.0"],"beforedestroy":["50.1"],"组件实例销毁之前":["50.1"],"destroy":["50.1"],"组件实例销毁之后":["50.1"],"选项上":["50.2"],"mounted":["50.2"],"完成挂载":["50.2"],"生成的":["50.2"],"替换了":["50.2"],"选项所对应的":["50.2"],"两者的相同点":["50.3"],"都能拿到实例对象的属性和方法":["50.3"],"讨论这个问题本质就是触发的时机":["50.3"],"放在":["50.3"],"它们是使用es6类定义的":["50.4"],"生命周期钩子":["50.4"],"描述":["50.4"],"替代了vue2中的":["50.4"],"的作用":["50.4"],"需要注意的是":["50.5","68.26"],"钩子":["50.5"],"钩子需要在":["50.5"],"函数中使用":["50.5"],"onbeforeupdate":["50.5"],"onupdated":["50.5"],"更新":["50.5"],"钩子函数会在数据重新渲染之前运行":["50.5"],"可以用来在组件更新前执行一些操作":["50.5"],"即仅在侦听源发生变化时才执行回调函数":["51.1"],"一个响应式对象":["51.3"],"分别对应来源数组中的新值和旧值":["51.4","65.50"],"watch":["51.4"],"当侦听一个":["51.5"],"getter函数时":["51.5"],"回调只在此函数的返回值变化时才触发":["51.5"],"如果想让深层对象变化是":["51.5"],"也被侦听调用":["51.5"],"可以加":["51.5"],"强制侦听器进入深层级模式":["51.5"],"会在":["51.8"],"变化时打印":["51.8"],"watcheffect":["51.9","51.16"],"watcheffect仅会在其同步执行期间":["51.10"],"会避免在发生副作用时追踪依赖":["51.12"],"因此":["51.12","61.23","98.7","128.1"],"我们能更加":["51.12"],"精确地控制回调函数的触发时机":["51.12"],"stopwatcheffect":["51.15"],"时":["52.1","61.3","65.19","103.16"],"的状态":["52.2"],"那么就相当于我们把":["52.2"],"业务逻辑层":["52.3"],"viewmodel":["52.3"],"对所有数据的属性进行监听":["52.4"],"解析器":["52.4"],"会更新函数":["52.5"],"由于":["52.5","84.19","84.25","105.4"],"的某个":["52.5"],"选项执行响应具体化操作":["52.6"],"obj":["52.6","83.20","84.10","85.0"],"typeof":["52.6"],"object":["52.6","61.31","83.6","84.1"],"编译元素":["52.7"],"nodename":["52.7"],"else":["52.7","120.6"],"isinterpolation":["52.7"],"判断是否为插值文本":["52.7"],"由dep调用":["52.8"],"update":["52.8","68.11"],"call":["52.8","98.1"],"声明dep":["52.8"],"deps":["52.8"],"依赖管理":["52.8"],"adddep":["52.8"],"动态装在适当的资源并添加到页面":["53.2"],"页面在任何时间点":["53.2"],"都不会重新加载":["53.2"],"也不会将控制转移到其它页面":["53.2"],"举个例子":["53.2"],"或者":["53.3","61.18","104.4"],"svg":["53.3"],"时才被算作":["53.3"],"details":["53.3"],"fcp的区别":["53.3"],"fcp这两个指标之间的主要区别是":["53.3"],"fp是当浏览器开始绘制内容到屏幕上时":["53.3"],"只要在视觉上发生变化":["53.3"],"无论是什么内容触发的视觉变化":["53.3"],"import":["53.4","64.19","65.35","92.4"],"插件":["53.4"],"async":["53.4"],"resolve":["53.4"],"asynccomponent":["53.4"],"then":["53.4"],"如果是多个参数求和":["55.1"],"getsums":["55.1"],"args":["55.1","82.12"],"readfile":["55.3"],"从":["55.3"],"导入":["55.3"],"模块":["55.3"],"as":["55.3","116.6"],"trim":["56.2"],"known3":["56.2"],"类型可以复制给任意其它类型":["56.3"],"更新了es6新特性":["57.2"],"原型与原型链相关":["57.4"],"变量类型有很多种":["61.1"],"比如":["61.1"],"int":["61.1"],"并通过":["61.3"],"status":["61.3"],"属性判断服务器响应的状态码":["61.3"],"当":["61.3"],"等于":["61.3"],"并且":["61.3"],"表示请求成功":["61.3"],"并可以通过":["61.3"],"客户端请求的网页已经永久移动到新位置":["61.4"],"当链接发生变化时":["61.4"],"返回":["61.4","68.24"],"代码告诉客户端链接的变化":["61.4"],"闭包就是就是函数的":["61.6"],"堆栈":["61.6"],"其内部变量无需维护":["61.7"],"就可以使用闭包":["61.7"],"结果缓存":["61.7"],"我们在开发中会遇到很多情况":["61.7"],"循环引用":["61.8"],"当两个或多个对象相互引用时":["61.8"],"如果它们之间没有被正确断开引用关系":["61.8"],"就会形成循环引用":["61.8"],"这种情况下":["61.8"],"这些对象所占用的内存就无法被垃圾回收器回收":["61.8"],"从而导致内存泄漏":["61.8"],"定时器未被清除":["61.8"],"称为事件代理":["61.9"],"是js中很常用的绑定事件的技巧":["61.9"],"动态绑定事件处理程序":["61.10"],"由于事件委托是基于事件冒泡机制实现的":["61.10"],"因此可以动态地添加或删除子元素":["61.10"],"而无需重新绑定事件处理程序":["61.10"],"处理未来元素的事件":["61.10"],"由于事件委托是基于父元素的事件处理程序实现的":["61.10"],"标准浏览器使用":["61.11"],"目标阶段":["61.12"],"从目标节点触发":["61.12"],"存储的数据会在会话结束时失效":["61.13"],"即浏览器标签关闭":["61.13"],"安全性":["61.13"],"cookie存在一些安全性问题":["61.13"],"因为它可以被跨站脚本":["61.13"],"xss":["61.13"],"攻击":["61.13"],"key1":["61.16"],"value1":["61.16"],"key2":["61.16"],"prototype指向一个对象":["61.17"],"当函数作为构造函数时":["61.17"],"prototype就起到类似":["61.17"],"执行结果保存起来作为":["61.18"],"判断执行函数的结果是不是":["61.18"],"undefuned":["61.18"],"如果是则返回之前的新对象":["61.18"],"如果不是则返回result":["61.18"],"手写实现一个":["61.18"],"代码难以维护":["61.20"],"意思就是等这个异步操作执行":["61.21"],"执行完成之后再往下走":["61.21"],"️":["61.21"],"协议未规定":["61.22"],"的长度限制":["61.22"],"例如鼠标点击事件":["61.24"],"onclick":["61.24"],"要处理的事件名":["61.25"],"作为事件处理程序的函数和一个布尔值":["61.25"],"这个布尔值代表了什么阶段调用事件处理程序":["61.25"],"具体可见":["61.27"],"offsety":["61.28","88.0"],"来标识元素的初始坐标":["61.28"],"移动的距离应该是":["61.28"],"鼠标移动时的坐标":["61.28"],"鼠标按下去时刻的坐标":["61.28"],"例如":["61.30","89.0","99.0"],"var":["61.30","61.31","61.32","74.12","82.12","83.6","84.7","89.0","106.5"],"obj1":["61.31","83.6","83.18"],"obj2":["61.31","83.6"],"someotherobject":["61.31"],"anotherobject":["61.31"],"proxy":["61.32"],"来实现":["61.32"],"图片的宽度为":["61.35","61.36"],"width":["61.36"],"图片的高度为":["61.36"],"方法对于":["61.37"],"如果存在任意元市值":["61.37"],"它就默认将对象转换为标示它的原始值":["61.37"],"对象是符合值":["61.37"],"而且大多数对象无法真正表示为一个原始值":["61.37"],"因此默认的":["61.37"],"方法简单地返回对象本身":["61.37"],"而不是一个原始值":["61.37"],"函数和正则表达式简单地继承了这个默认方法":["61.37"],"调用这些类型的实例的":["61.37"],"方法只是简单地返回这个对象本身":["61.37"],"对原始值或者包装类":["61.37"],"baseclone":["61.37"],"base":["61.37"],"在右侧子串的每个位置插入左侧字符":["61.38"],"生成新的排列":["61.38"],"并加入结果数组":["61.38"],"tmp":["61.38"],"javascript的同源策略":["61.40"],"即":["61.40","112.14","129.1"],"协议":["61.40"],"端口相同":["61.41"],"浏览器处于安全方面考虑":["61.41"],"目录":["61.42"],"会判断这个目录是什么文件类型":["61.42"],"cdn托管":["61.42"],"标明高度与宽度":["61.42"],"如果浏览器没有找到这两个参数":["61.42"],"对象中的":["61.43"],"或者扩展运算符":["61.44"],"symbol":["61.45"],"浅拷贝":["61.45"],"只是简单的指针赋值":["61.45"],"map会返回一个新数组":["61.46"],"方法创建":["61.47"],"继承有六种":["61.47"],"原型继承":["61.47"],"身份认证的网络协议":["61.50"],"具有安全性的":["61.50"],"解密传输协议":["61.50"],"gizp":["61.51"],"压缩网站的js和css文件":["61.51"],"等到满足条件的时候再加载对应资源":["61.52"],"两者主要区别是一个提前加载":["61.52"],"比较流行的是":["62.1"],"色彩丰富":["62.2"],"适合存储真实照片":["62.2"],"适合存储简单图形和带有透明背景的图像":["62.3"],"缺点":["62.3","62.4"],"色彩表现不如":["62.4"],"和模型有两种":["62.5"],"标准盒模型":["62.5"],"ie盒模型":["62.5"],"这两者的区别主要在于宽高的包含范围":["62.5"],"表示标准盒子模型":["62.7"],"controls":["62.9","62.10"],"是否显示进度条":["62.9"],"poster":["62.9"],"没有播放之前现实的展位图片":["62.9"],"wav":["62.10"],"autoplay":["62.10"],"是否自动播放":["62.10"],"表单事件":["62.11"],"section":["62.12"],"英译为":["62.12"],"部分":["62.12"],"相当于":["62.12"],"figure":["62.12"],"边框图片的路径":["62.14"],"slice":["62.14"],"图片边框向内偏移":["62.14"],"属性相对于什么位置定位":["62.15"],"clip":["62.15"],"线性渐变":["62.16"],"overflow":["62.17"],"指定当文本溢出包含它的元素":["62.17"],"转换方法":["62.18"],"rotate":["62.18"],"旋转":["62.18"],"translate":["62.18","62.26"],"完成过渡效果需要花费的时间":["62.19"],"timing":["62.19"],"动画如何完成一个周期":["62.20"],"但增加了新标签":["62.21"],"不利于页面优化":["62.21"],"相对于浏览器窗口定位":["62.22"],"static":["62.22"],"默认值":["62.22","83.6"],"元素出现在正常的文档流中":["62.22"],"父元素设置text":["62.24"],"algin":["62.24"],"让隐藏节点的":["62.25"],"height":["62.25","62.32"],"为剩余高度的一半":["62.25"],"给父元素":["62.25"],"table":["62.25"],"transform":["62.26","74.7"],"子元素相对父元素绝对定位":["62.26"],"分别固定于页面的左右两侧":["62.27"],"中间的主体栏用左右":["62.27"],"值撑开距离":["62.27"],"webkit":["62.28"],"查找唯一类型":["62.30"],"attr":["62.30"],"属性选择器":["62.30","62.31"],"root":["62.30"],"行高":["62.32"],"line":["62.32"],"字体颜色":["62.32"],"color":["62.32","74.13"],"font":["62.32"],"字体种类":["62.32"],"将当前展示图片的前一张和后一张优先下载":["62.33"],"可以设置宽高等属性":["62.34"],"h6":["62.34"],"hr":["62.34"],"border":["62.35","74.9"],"外侧添加空白时用":["62.35"],"是":["62.36","112.14"],"根元素的":["62.38"],"1em":["62.38"],"1rem":["62.38"],"达到自适应的目的":["62.39"],"表现":["62.40"],"会导致":["62.41"],"html文档以混杂模式出现":["62.41"],"dragover":["62.42","70.3"],"在被拖放在某元素内移动时触发":["62.42"],"用户交互的这段过程":["62.43"],"影响的主要是":["62.43"],"压缩":["62.44"],"资源":["62.44"],"降低请求量":["62.45"],"合并资源":["62.45"],"减少":["62.45"],"主要负责传送0和1的电信号":["62.48"],"由此我们可得知internet通信的前提必须是知道双方的ip地址和mac地址":["62.48"],"以太网的物理地址":["62.48"],"ip地址负责确定接收方的子网":["62.48"],"mac地址负责确定接收方的主机地址":["62.48"],"tcp协议":["62.48"],"transmission":["62.48"],"control":["62.48","68.50"],"protocol":["62.48"],"传输控制协议":["62.48"],"是一种面向连接的":["62.48"],"可靠的":["62.48"],"基于字节流的":["62.48"],"传输层协议":["62.48"],"tcp协议的主要功能是当应用层向tcp层发送用于网间传输的":["62.48"],"用8位字节表示的数据流":["62.48"],"tcp则把数据流分割成适当长度的报文段":["62.48"],"最大传输段大小":["62.48"],"miss":["62.48"],"通常受该计算机连接的网络的数据链路层的最大":["62.48"],"传送单元":["62.48"],"mtu":["62.48"],"限制":["62.48"],"之后tcp把数据包传给ip层":["62.48"],"scalable":["62.49"],"no":["62.49"],"采用border":["62.49"],"image的方式":["62.49"],"进行下一步操作":["62.50"],"需要特别注意的是":["62.50"],"如果改变":["62.50"],"两者相邻的外边距皆为正数时":["62.51"],"折叠结果是比较它们两者之间较大的值":["62.51"],"将计算逻辑和函数绑定在一起":["64.1"],"从而在依赖项不变时只计算一次":["64.1"],"用于缓存计算值":["64.1"],"称为":["64.2"],"差异":["64.2"],"过程":["64.2"],"而":["64.3","110.1","112.17"],"不同":["64.3"],"当应用的状态被改变时":["64.3"],"全部组件都会重新渲染":["64.3"],"所以":["64.3","84.25"],"中用":["64.3"],"shouldcomponentupdate":["64.3"],"这个生命周期的钩子函数来控制":["64.3"],"组件写法不一样":["64.3"],"另一方面":["64.4"],"不受控制的组件使用refs":["64.4"],"或其它方法在内部管理自己的状态":["64.4"],"它们独立存储和更新其状态":["64.4"],"而不依赖于":["64.4"],"或回调":["64.4"],"父组件对不受控制的组件的状态的控制较少":["64.4"],"jsx":["64.4"],"useref":["64.4"],"功能组件被定义为简单的javascript函数":["64.5"],"它们将":["64.5"],"作为参数并直接返回jsx":["64.5"],"功能组件无权访问生命周期方法或状态":["64.5"],"然而随着":["64.5"],"react16":["64.5"],"hooks":["64.5"],"的引入":["64.5"],"它允许执行副作用":["64.6"],"根据更改更新组件或触发其它api调用":["64.6"],"此方法在从dom中删除组件之前调用":["64.6"],"它用于清理":["64.6"],"在初始呈现期间":["64.7"],"loading":["64.8"],"something":["64.8","81.3"],"当数组中有参数时":["64.8"],"setvalue":["64.9"],"someapi":["64.9"],"child":["64.10","68.7","74.9","74.11"],"当时用本地状态并在组件之间传递它时":["64.11"],"由于组件深度潜逃的可能性":["64.11"],"代码可能会变得复杂":["64.11"],"但是":["64.12"],"通常会查看":["64.13"],"来决定发生了什么":["64.13"],"switch":["64.13"],"payload":["64.14"],"为了更改状态":["64.14"],"必须调用函数":["64.14"],"这是一种可以预测的应用程序状态管理模式":["64.15"],"聚合和其它操作":["64.16"],"通过flux":["64.16"],"相对于ajax更加强大和灵活":["64.17"],"支持流式数据":["64.17"],"cors和其它现代特性":["64.17"],"axios是一个基于promise的http客户端":["64.17"],"可以用于浏览器和node":["64.17"],"js环境":["64.17"],"由于它们的执行次数是动态的":["64.18"],"可能会导致hook的调用顺序发生改变":["64.18"],"比较两个虚拟dom树":["64.20"],"对两棵虚拟dom树进行深度优先的便利":["64.20"],"比较相应节点的差异":["64.20"],"找出差异":["64.21"],"vue的核心只关注视图层":["65.1"],"从而实现业务逻辑的重用":["65.2"],"这允许在不同的视图之间共享共同的viewmodel":["65.2"],"团队协作":["65.2"],"mvvm模式的分层结构可以使不同的团队成员在不同层次上独立工作":["65.2"],"减少了彼此的依赖性":["65.2"],"由于数据逻辑与展示逻辑分开":["65.2"],"所以对逻辑的修改和调试不影响用户界面的呈现":["65.2"],"mvvm模式通常具有双向数据绑定的功能":["65.2"],"使视图与数据保持同步":["65.2"],"从而实现了更实时的用户体验":["65.2"],"响应式编程":["65.2"],"mvvm模式通常设计响应式编程范式":["65.2"],"使数据的变化能够自动传播到相关的视图中":["65.2"],"只能单向绑定":["65.3"],"子组件内部不能直接修改父组件传递过来的数据":["65.3"],"只执行一次":["65.4"],"passive":["65.4"],"一般触摸事件的修饰符":["65.4"],"常用于改善移动端设备的滚屏性能":["65.4"],"键盘修饰符":["65.4"],"enter":["65.4"],"回车键":["65.4"],"delete":["65.4","84.16","84.21"],"捕获":["65.4"],"叫模版插值":["65.7"],"是它的另一种写法":["65.7"],"事件类型":["65.9"],"节点":["65.10"],"就会对内容清空并赋新值":["65.10"],"每个计算属性都包括一个":["65.11"],"getter":["65.11","65.49"],"view":["65.12"],"路由出口":["65.12"],"路由模版显示的位置":["65.12"],"http":["65.13","105.0"],"api的浏览器":["65.15"],"依赖":["65.15"],"模式监听":["65.16"],"pushstate":["65.16"],"所以它不需要在服务器里面进行任何特殊处理":["65.18"],"对后端没啥影响":["65.18"],"改变hash值不会重新加载页面":["65.18"],"因为浏览器可以通过":["65.18"],"onhashchange":["65.18"],"事件监听hash的辩护":["65.18"],"url":["65.19","85.0"],"服务器接收请求并解析":["65.19"],"然后进行相应的逻辑处理":["65.19"],"当使用这种模式时":["65.19"],"会导致一个问题":["65.19"],"stateobject":["65.20"],"参数添加任意类型的数据到记录中":["65.20"],"而hash只能添加短字符串":["65.20"],"router":["65.22","65.35"],"push":["65.22","84.4","106.3"],"q":["65.23"],"vue":["65.23","65.35","70.0"],"category":["65.23"],"framework":["65.23"],"当需要传递筛选条件":["65.24"],"搜索关键字":["65.24"],"分页信息等非标识性信息时":["65.24"],"类名":["65.28"],"也可以使用数组语法":["65.28"],"样式信息":["65.29"],"dosomething":["65.31"],"me":["65.31","68.19","68.21"],"path":["65.33","85.0"],"login":["65.33"],"to":["65.34","84.7","84.9"],"重定向到一个不同的地址":["65.35"],"error":["65.35","114.4","116.2","127.3","130.3"],"将会把导航终止":["65.35"],"并把错误传递给":["65.35"],"onerror":["65.35"],"注册过的回调":["65.35"],"show":["65.36"],"default属性设置默认值":["65.37"],"在当前属性没有值传入时调用":["65.37","65.38"],"props也可以定义为":["65.37"],"为了开启":["65.37"],"对props类型的推导":["65.37"],"可通过":["65.38"],"进行解构":["65.38"],"父组件中使用自定义时间接收":["65.40"],"自定义事件名称必须与子组件传递的一致":["65.40"],"即登号前面名称一致":["65.40"],"等号后面的事件名称可自行定义":["65.40","65.41"],"事件中通过默认参数接收使用子组件传递的值":["65.40","65.41"],"setup函数中的时间必须":["65.40"],"setup语法糖中组件引入后使用":["65.41"],"无需注册":["65.41"],"子组件中的":["65.42"],"就是父组件放在子组件中的内容":["65.42"],"如果不传值":["65.43"],"orange":["65.44","65.45"],"apple":["65.44"],"slotname":["65.45"],"你不懂吗喽":["65.45"],"也可以通过解构来获取数据":["65.46"],"子组件child":["65.47"],"并在数据源变化时调用所给的回调函数":["65.48"],"ref":["65.49"],"回调函数接收两个数组":["65.50"],"第三个参数是可选的":["65.50"],"是一个对象":["65.50"],"支持下面这些选项":["65.50"],"当直接侦听一个响应式对象时":["65.51"],"侦听器会自动启用深层模式":["65.51"],"深层级变更状态所触发的回调":["65.51"],"调试选项与刷新时机":["65.51"],"每次监听的值发生变化时都会调用回调":["65.52"],"是否调用return":["65.52"],"必须有":["65.52"],"首页白屏":["65.53"],"等方法":["65.54"],"用于改变url":["65.54"],"以及":["65.54"],"currentroute":["65.54"],"matched":["65.54"],"等属性":["65.54"],"userouter":["65.54"],"函数或来获取路由器实例":["65.54"],"createrouter":["65.54"],"createwebhashhistory":["65.54"],"contact":["65.55"],"功能":["65.56"],"去除无用的代码":["65.56"],"减少包的大小":["65.56"],"fragment":["65.56"],"teleprot":["65.56"],"teleport":["65.56"],"中数据的过滤":["65.57"],"放置了所有的处理数据逻辑的方法":["65.57"],"当触发事件想改变":["65.57"],"数据的时候使用":["65.57"],"变量":["68.3","83.15","98.3"],"它是通过父组件传递过来的":["68.3"],"parent":["68.3","68.7","83.14","100.2"],"触发父组件中的自定义事件":["68.5"],"然后使用":["68.5"],"defineemits函数定义了一个名为":["68.5"],"changeparentcount的自定义事件":["68.5"],"然后通过":["68.5"],"emit方法触发名为":["68.5"],"的自定义事件":["68.5"],"childref":["68.7"],"将数据":["68.9"],"提供给所有子组件":["68.9"],"在子组件":["68.9"],"我们使用":["68.9"],"获取来自父组件的数据":["68.9"],"此时":["68.9"],"在子组件内部":["68.11"],"通过":["68.11","84.6"],"defineemits":["68.11"],"我们定义了两个事件":["68.11"],"这样":["68.11"],"父组件可以监听并处理这两个事件":["68.11"],"然后我们":["68.11"],"中定义了一个按钮":["68.11"],"script":["68.11","85.0"],"中实现":["68.11"],"emitevent":["68.13"],"更新name和age":["68.13"],"组件second":["68.13"],"second":["68.13"],"通过定义":["68.15"],"store":["68.15"],"counter":["68.17"],"正确的方式":["68.19","68.21"],"错误的方式":["68.20"],"condition":["68.20"],"每个阶段都对应着一系列的生命周期方法":["68.23"],"用于在不同的时机执行特定的逻辑":["68.23"],"但在新版的":["68.23"],"时都会调用":["68.24"],"必选方法":["68.24"],"更新之前获取当前":["68.25"],"的快照":["68.25"],"在新版的":["68.26"],"中已经被标记为不推荐使用":["68.26"],"可以配合":["68.32"],"usememo":["68.32"],"用于管理状态":["68.35"],"根据滚动条的位置":["68.36"],"计算出可视区域的起始索引和结束索引":["68.36"],"它将针对此页面运行一连串的测试":["68.37"],"first":["68.38","112.11","130.3"],"contentful":["68.38"],"paint":["68.38"],"首次有效绘制":["68.38"],"meaningful":["68.38"],"平均值":["68.39"],"橙色":["68.39"],"然后在目标页面中读取这些参数":["68.42"],"然后在另一个页面中读取这些数据":["68.43"],"实现跨页面通信":["68.43"],"与local":["68.44"],"storage相比":["68.44"],"并且会随着每个http请求发送到服务器":["68.45"],"不受同源策略的限制":["68.47"],"因此可以用于跨域通信":["68.47"],"这样的请求就称为跨域请求":["68.48"],"虽然":["68.49","75.0"],"access":["68.50"],"allow":["68.50"],"由代理服务器去请求目标资源":["68.51"],"可以使用服务器端代理向目标服务器发起请求":["68.52"],"并将结果返回给客户端":["68.52"],"nginx":["68.53"],"反向代理":["68.53"],"可以使用":["68.53","132.1"],"在微前端架构中":["68.54"],"通常会涉及多个独立的前端应用":["68.54"],"它们可以是由不同团队开发":["68.54"],"使用不同技术栈构建的":["68.54"],"以下是实现微前端的一些常见方式":["68.54"],"组合式架构":["68.54"],"基于组件的架构":["68.54"],"将前端应用程序拆分为可复用的组件":["68.54"],"每个组件负责自己的":["68.54"],"ui":["68.54"],"和业务逻辑":["68.54"],"然后":["68.54","112.14"],"通过组合这些组件来构建整个应用程序":["68.54"],"模块化的架构":["68.54"],"将前端应用程序划分为独立的模块":["68.54"],"每个模块负责特定功能或页面":["68.54"],"共享的代码可以更容易地被复用和维护":["68.55"],"同时也有助于保持一致性":["68.55"],"统一构建和部署":["68.55"],"所有项目的构建和部署流程可以集中在一个仓库中管理":["68.55"],"便于统一配置和管理":["68.55"],"这样可以减少重复的配置工作":["68.55"],"是一个与":["68.56"],"生命周期相关的":["68.56"],"和一个用于更新":["68.60"],"的函数":["68.60"],"使用自定义":["68.60"],"来管理本地存储中的数据":["68.60"],"examplecomponent":["68.60"],"remove":["69.7"],"在拖动元素在可放置区域内移动时触发":["70.3"],"dragleave":["70.3"],"用于设置元素是否可拖动":["70.4"],"datatransfer":["70.4"],"等":["70.6"],"在事件处理函数中实现拖拽操作的逻辑":["70.6"],"对":["70.9"],"tree":["70.9","130.3"],"原文链接":["72.0"],"boxshadow":["73.0"],"1s":["74.1","74.8"],"0s":["74.1","74.8"],"rotatex":["74.2"],"0deg":["74.2"],"out":["74.3"],"delay":["74.3","74.5","74.6","74.8"],"0px":["74.4","74.5","74.11"],"270deg":["74.4"],"360deg":["74.4"],"bottom":["74.5","74.11","74.12"],"fill":["74.6"],"mode":["74.6"],"both":["74.6"],"32s":["74.6"],"keyframes":["74.7"],"scale":["74.7"],"9s":["74.8"],"465efb":["74.9","74.13"],"moz":["74.9"],"radius":["74.9"],"nth":["74.9","74.11"],"2n":["74.9","74.11"],"right":["74.9","74.11","74.12"],"linear":["74.12"],"infinite":["74.12"],"20px":["74.13"],"background":["74.13"],"absolute":["74.14"],"left":["74.14"],"top":["74.14","130.3"],"50px":["74.14"],"150px":["74.14"],"25px":["74.14"],"75px":["74.14"],"无穷大":["75.0"],"优先生效":["75.0"],"例外规则":["75.0"],"当在一个样式声明中使用一个":["75.0"],"规则时":["75.0"],"此声明将覆盖任何其它声明":["75.0"],"从技术上讲":["75.0"],"与优先级无关":["75.0"],"但它与最终的结果直接相关":["75.0"],"是一个坏习惯":["75.0"],"应该尽量避免":["75.0"],"v":["76.0"],"实现跳动的方块动画":["77.0"],"call与apply函数的差别":["80.0"],"就是后面传入的参数格式不同":["80.0"],"call传入的是每个单纯的元素":["80.0"],"而apply传入的是一个数组":["80.0"],"bind":["80.1","98.1"],"方法可以让对应的函数想什么时候调就什么时候调用":["80.1"],"登录后":["81.0"],"服务器在响应中使用":["81.0"],"parsedcookies":["81.1"],"将cookie编码为":["81.2"],"20name":["81.2"],"20smith":["81.2"],"下都是可见的":["81.3"],"但是在":["81.3"],"home":["81.3"],"当在":["81.4"],"设置cookie时":["81.4"],"我们应该明确地将":["81.4"],"选项设置为根域":["81.4"],"那么":["81.4"],"所有子域都可以访问到这样的cookie":["81.4"],"document":["81.5","88.0","94.6"],"john":["81.5","84.13"],"expries":["81.5"],"如果我们将":["81.5"],"rfc6265":["81.6"],"touppercase":["82.3"],"foo":["82.5","83.10","84.5"],"the":["82.8"],"is":["82.8"],"located":["82.8"],"at":["82.8"],"const":["82.10","82.34","83.6","83.17","114.5","116.7","116.8"],"str":["82.10","85.0"],"c":["82.10","82.23","128.1"],"es5":["82.12"],"写法":["82.12"],"fun":["82.12"],"z":["82.12","112.1"],"es6":["82.12","103.14","106.8"],"func":["82.12"],"该方法还可以接收第二个参数":["82.13"],"作用类似于数组的":["82.13"],"用来对每个元素进行处理":["82.13"],"将处理后的值放入返回的数组":["82.13"],"上面代码中":["82.14","84.1","112.5"],"方法没有参数":["82.14"],"一个参数":["82.14"],"三个参数时":["82.14"],"返回的结果不一样":["82.14"],"填充":["82.16"],"从下标为1到下标为3的区间":["82.16"],"将索引为3及其之后的元素复制到索引为0的位置":["82.17"],"除了属性简写":["82.20"],"方法也可以简写":["82.20"],"abc":["82.21"],"es6中":["82.21"],"对象定义属性名的方式也有了变化":["82.21"],"prototype":["82.24","103.13"],"undefined":["82.30","99.0","103.16","116.6"],"d":["82.31"],"y":["82.31","83.10"],"内部调用转为调用regexp实例对应的":["82.32"],"regexp":["82.32"],"即直接写在参数定义的后面":["82.34"],"多个指数运算符连用时":["82.36"],"是从最右边开始计算的":["82.36"],"操作符":["83.0"],"对象和函数等基本组件":["83.0"],"而不会被提升到函数作用域":["83.2"],"这意味着在使用":["83.2"],"正常运行":["83.3","83.10"],"报错":["83.3","83.5","83.6","112.12"],"如果等号的右边不是数组":["83.5"],"或者严格地说":["83.5"],"不是可遍历的结构":["83.5"],"那么将会报错":["83.5"],"nan":["83.5"],"对于数据结构具有":["83.5"],"iterator":["83.5","84.24","84.25"],"接口":["83.5"],"那么都可以采用数组的形式进行解构赋值":["83.5"],"对象的解构赋值可以取到继承的属性":["83.6"],"setprototypeof":["83.6","84.2"],"对象的解构也能指定默认值":["83.6"],"默认值生效的条件是":["83.6"],"对象的属性值严格等于":["83.6"],"l":["83.7","84.29"],"syntaxerror":["83.10"],"duplicate":["83.10"],"parameter":["83.10"],"not":["83.10"],"函数表达式示例":["83.11"],"multiply":["83.11"],"该对象在函数体内不存在":["83.12"],"如果要用":["83.12"],"可以用":["83.12"],"箭头函数没有原型属性":["83.13"],"箭头函数的":["83.13"],"插入dom标签":["83.14"],"参数代替":["83.15"],"对象不是数组":["83.15"],"而是一个类数组的对象":["83.15"],"numbers":["83.17"],"alex":["83.18"],"可以提高代码的可读性和可维护性":["83.19"],"h":["83.21"],"ello":["83.21"],"hi":["83.21"],"属性名表达式与简洁表示法":["83.21"],"不能同时使用":["83.21"],"会报错":["83.21","112.10","112.17"],"属性名表达式如果是一个对象":["83.21"],"默认情况下会自动将对象转为字符串":["83.21"],"创建":["83.22"],"area":["83.23"],"r":["83.23","129.2","131.2"],"main":["83.23"],"是一个空对象":["84.1"],"没有任何拦截效果":["84.1"],"访问":["84.1","120.2"],"就等同于":["84.1"],"一个技巧是将":["84.1"],"设置到":["84.1"],"属性":["84.1"],"从而可以在":["84.1"],"上调用":["84.1"],"isextensible":["84.2"],"proto":["84.2","85.0"],"如果目标对象是函数":["84.2"],"string":["84.4","112.8","114.2"],"reflect":["84.4"],"只要读写的属性名的第一个字符是下划线":["84.5"],"一律报错":["84.5"],"从而达到禁止读写内部属性的目的":["84.5"],"方法传入四个参数":["84.5"],"receiver":["84.5","84.7"],"bar":["84.5"],"上面示例中":["84.5","112.2","112.15"],"方法的第四个参数":["84.5"],"指的是原始的操作行为所在的那个对象":["84.5"],"一般情况下是":["84.5"],"ser":["84.5"],"方法拦截":["84.6"],"返回一个字符串":["84.6"],"函数调用":["84.6"],"twice":["84.6"],"怎么修改默认行为":["84.7"],"你总可以在":["84.7"],"上":["84.7"],"获取默认行为":["84.7"],"set":["84.7","84.8"],"on":["84.7"],"has":["84.9"],"been":["84.9"],"updated":["84.9"],"observer2":["84.9"],"可以作为对象的属性名来定义对象的私有成员":["84.10"],"包括对象和函数":["84.12"],"而对象只能使用字符串作为键":["84.12"],"age":["84.13"],"weakmap中的键是弱引用的":["84.14"],"这意味着如果键对象都没有其它引用":["84.14"],"部署私有属性":["84.15"],"返回实例":["84.16"],"不会重复":["84.17"],"那么这个对象将会被垃圾回收机制回收":["84.19"],"只要这些对象在外部消失":["84.20"],"删除值":["84.21"],"任何数据结构只要内部有":["84.23"],"循环":["84.24"],"函数可以简写下面的形式":["84.25"],"只是把接口规格加到数据结构之上":["84.25"],"typedarray":["84.26"],"函数的":["84.26"],"提前退出调用":["84.27"],"yield":["84.28"],"后面跟的是一个可遍历的结构":["84.28"],"它会调用该结构的遍历器接口":["84.28"],"后面跟着一个星号表示这个yield也是可迭代的":["84.28"],"可以被遍历":["84.28"],"generator":["84.28"],"o":["84.29","98.5","110.0"],"遍历set和map的元素":["84.29"],"generator函数除了状态机":["84.30"],"不能用多余的空格":["85.0"],"字符串不能用":["85.0"],"换行":["85.0"],"multiple":["85.0"],"lines":["85.0"],"max":["85.0"],"空行最多不能超过2行":["85.0"],"reassign":["85.0"],"不能重写native对象":["85.0"],"negated":["85.0"],"lhs":["85.0"],"操作符的左边不能有":["85.0"],"nested":["85.0"],"ternary":["85.0"],"禁止使用嵌套的三目运算":["85.0"],"禁止在使用new构造一个实例后不赋值":["85.0"],"禁止使用new":["85.0"],"require":["85.0","92.2"],"wrappers":["85.0"],"禁止使用new创建包装实例":["85.0"],"calls":["85.0"],"不能调用内置的全局对象":["85.0"],"比如math":["85.0"],"octal":["85.0"],"禁止使用八进制数字":["85.0"],"escape":["85.0"],"禁止使用八进制转义序列":["85.0"],"param":["85.0"],"禁止给参数重新赋值":["85.0"],"concat":["85.0","93.8"],"node中不能使用":["85.0"],"dirname或":["85.0"],"filename做路径拼接":["85.0"],"plusplus":["85.0"],"process":["85.0"],"禁止使用process":["85.0"],"exit":["85.0"],"redeclare":["85.0"],"禁止重复声明变量":["85.0"],"禁止在正则表达式字面量中使用多个空格":["85.0"],"restricted":["85.0"],"如果禁用了指定模块":["85.0"],"使用就会报错":["85.0"],"语句中不能有赋值表达式":["85.0"],"禁止使用javascript":["85.0"],"void":["85.0","112.8"],"self":["85.0"],"compare":["85.0"],"不能比较自身":["85.0"],"sequences":["85.0"],"禁止使用逗号运算符":["85.0"],"外部作用域中的变量不能与它所包含的作用域中的变量或参数同名":["85.0"],"严格模式中规定的限制标识符不能作为声明时的变量名使用":["85.0"],"文件的blob数据":["87.0"],"文件名":["87.0","124.4"],"urlobject":["87.0"],"window":["87.0","98.6"],"webkiturl":["87.0"],"随滚动条滚动而改变":["88.0"],"pagey":["88.0"],"screenx":["88.0"],"鼠标相对于显示器屏幕左上角x轴的坐标":["88.0"],"screeny":["88.0"],"鼠标相对于显示器屏幕左上角y轴的坐标":["88.0"],"offsetx":["88.0"],"鼠标相对于事件源左上角x轴的坐标":["88.0"],"鼠标相对于事件源左上角y轴的坐标":["88.0"],"网页部分":["88.0"],"网页可见区域宽":["88.0"],"cjs是同步导入模块":["89.0"],"可以从node":["89.0"],"modules中引入一个库或者从本地目录引入一个文件":["89.0"],"mylocalmodule":["89.0"],"some":["89.0","94.6"],"local":["89.0"],"file":["89.0"],"都会生效":["89.0"],"当cjs导入时":["89.0"],"它会给你一个导入对象的副本":["89.0"],"location":["90.0"],"n1":["90.0"],"方法对数组的每个元素执行一次给定的函数":["91.1"],"设置时间":["92.0"],"格式化时间":["92.0"],"方式":["92.2"],"获取月份":["92.6"],"january":["92.6"],"december":["92.6"],"获取一个月中的某一天":["92.6"],"date":["92.6"],"获取一个星期中的某一天":["92.6"],"日期":["92.7"],"days":["92.7","92.15"],"星期":["92.7"],"weeks":["92.7"],"小时":["92.7"],"分钟":["92.7"],"0到12":["92.8"],"没有前导零的分钟数":["92.8"],"0到59":["92.8"],"有前导零的分钟数":["92.8"],"00到59":["92.8"],"s":["92.8","114.2"],"没有前导零的秒数":["92.8"],"1到59":["92.8"],"ss":["92.8"],"有前导零的描述":["92.8"],"01到59":["92.8"],"unix时间戳":["92.8"],"格式化年月日":["92.8"],"xxxx年xx月xx日":["92.8"],"months":["92.9"],"todate":["92.10"],"mmm":["92.11"],"yy":["92.11"],"5月":["92.11"],"startof":["92.12"],"day":["92.12"],"小时前":["92.12"],"昨天晚上7点49分":["92.13"],"今天晚上7点49分":["92.13"],"本年的的开始日期":["92.15"],"不存在":["93.1"],"上一次计算结果":["93.1"],"如果需要回调函数从数组索引为0的":["93.1"],"则为array":["93.3"],"初始":["93.4"],"化为数组中的第一个值":["93.4"],"回调函数从数组中的第二个值作为":["93.4"],"sum":["93.6","93.7"],"reduce":["93.6","93.11"],"cur":["93.8","93.13"],"第二种写法":["93.9","93.10"],"只是实现方法不同":["93.9"],"rings":["93.11"],"shining":["93.11"],"allbooks":["93.11"],"输出结果为":["93.12"],"newarr":["93.13"],"acc":["93.13"],"将由":["93.14"],"包装在已解决的":["93.14"],"f3":["93.14"],"输出为7":["93.15"],"multiply6":["93.17"],"multiply9":["93.17"],"示例":["94.1"],"延迟一秒后执行":["94.1"],"浏览器和node":["94.3"],"js环境通常将":["94.3"],"cleartimeout":["94.4","108.5"],"示例使用":["94.5"],"stopinterval":["94.5"],"执行动画操作":["94.6"],"例如移动元素":["94.6"],"getelementbyid":["94.6"],"可以更好的利用浏览器的优化":["94.7"],"recv状态":["95.1"],"established":["95.1"],"客户端与服务端发送同步标识syn后":["95.1"],"对方确认后进入tcp建立状态":["95.1"],"三次握手详细过程":["95.1"],"建立连接时":["95.1"],"客户端向服务端发syn包":["95.1"],"该数据包假设syn为j":["95.1"],"随机产生一个值seq":["95.1"],"发送确认包":["95.2"],"此时客户端进入":["95.2"],"此时tcp连接还没有释放":["95.2"],"必须经过两个":["95.2"],"msl":["95.2"],"才会进入":["95.2"],"closed状态":["95.2"],"可以看出服务端结束tcp连接的时间要比客户端早一些":["95.2"],"为什么建立连接时需要握手三次":["95.2"],"关闭连接时需要四次呢":["95.2"],"把某些层进行合并了":["96.0"],"本质上还是相同的":["96.0"],"太过细化":["96.0"],"有一定的参考意义":["96.0"],"但实现起来比较繁琐":["96.0"],"相比较而言":["96.0"],"使其在用户的浏览器上运行":["97.1"],"利用这些恶意脚本":["97.1"],"攻击者可获取用户的敏感信息":["97.1"],"包含":["97.2"],"伪协议":["97.2"],"等可执行代码":["97.2"],"dom型":["97.3"],"将攻击脚本写在url中":["97.3"],"诱导用户点击该url":["97.3"],"lt":["97.4"],"gt":["97.4"],"xsrf":["97.5"],"是一种挟制用户在当前已经登陆的web应用程序上执行非本意":["97.5"],"有效":["97.6"],"因为服务器并不是什么时候都能取到":["97.6"],"referer":["97.6"],"xss是内容没有过滤导致浏览器将攻击者的输入当代码执行":["97.7"],"csrf则是因为浏览器在发送http请求时候自动带上":["97.7"],"一般通过":["98.1"],"apply":["98.1"],"方法显式调用函数时":["98.1"],"函数体内的":["98.1"],"this打印出来为":["98.2"],"bar打印出来为":["98.2"],"上述示例中的":["98.2"],"函数返回了":["98.3"],"的调用":["98.3"],"此时已经执行完成":["98.3"],"所以o2":["98.3"],"打印":["98.3"],"第三个例子中":["98.3"],"通过把o1":["98.3"],"赋值给":["98.3"],"的值时":["98.3"],"执行fn函数":["98.3"],"此时this指向window":["98.3"],"复杂类型":["98.5"],"则":["98.5","105.6"],"指向被返回的对象":["98.5"],"输出":["98.6"],"如果想要this指向":["98.6"],"这个对象":["98.6"],"箭头函数捕获的是其外部作用域的":["98.7"],"值":["98.7"],"而不是在调用时绑定的":["98.7"],"无论如何调用":["98.7"],"它始终会打印":["98.7"],"函数所在作用域的":["98.7"],"而不会受到":["98.7"],"方法的影响":["98.7"],"这一步打印结果为":["98.7"],"foo函数体":["98.7"],"所有原始类型都有它们相应的对象包装类型":["99.0"],"这为处理原始值提供可用的方法":["99.0"],"bigint类型":["99.1"],"类型在":["99.1"],"中是一个数字的原始值":["99.1"],"它可以表示任意大小的整数":["99.1"],"通过属性访问其获取值":["99.3"],"可以是任意的":["99.3"],"javascript的值":["99.3"],"writable":["99.3"],"一个布尔值":["99.3"],"表示是否可以通过赋值来改变属性":["99.3"],"enumerable":["99.3"],"表示是否可以通过":["99.3"],"honda":["99.4"],"accord":["99.4"],"expected":["99.4","116.2"],"是构造函数":["100.0"],"原型对象":["100.1"],"有一个默认的":["100.1"],"继续引用上面的代码":["100.2"],"当我们想要为":["100.2"],"实例化的所有实例添加一个共享的属性时":["100.2"],"万物继承自":["100.3"],"这也就是为什么":["100.3"],"我们可以实例化一个对象":["100.3"],"并且可以调用该对象上没有的属性和方法了":["100.3"],"我们并没有在parent中定义任何方法和属性":["100.3"],"但是我们可以调用":["100.3"],"tostring":["100.3"],"hasownproperty":["100.3"],"等等一些方法":["100.3"],"我们可以调用很多我们没有定义的方法":["100.3"],"这些方法从哪里来的呢":["100.3"],"现在引出":["100.3"],"原型链":["100.3"],"那么我们再回来看一下":["100.4"],"再次打印":["100.4"],"此时的a才会打印1":["101.0"],"这个a":["101.0"],"也会打印1":["101.0"],"为什么会这样呢":["101.0"],"由于函数的局部作用域的问题":["101.0"],"全局变量访问不到函数内部的变量":["101.0"],"所以会打印":["101.0"],"就拿这个例子来说":["101.0"],"由于在下面var了一个变量":["101.0"],"但是由于变量的提升":["101.0"],"它会先赋值为":["101.0"],"并且提升到函数体内部的顶端":["101.0"],"也就是说此时的":["101.0"],"虽然全局作用域里边已经声明了变量":["101.0"],"但是由于函数体内部的变量的提升":["101.0"],"从先后顺序来讲":["101.0"],"它会现访问到全局的作用域里的":["101.0"],"渲染树":["102.1"],"什么是":["102.2"],"render树":["102.2"],"在了解":["102.2"],"之前":["102.2","110.0"],"我们先了解一下浏览器在页面加载完成后到页面显示的中间过程":["102.2"],"首先将得到的代码解析生成":["102.2"],"dom树":["102.2"],"这个dom树里边包括了所有的html的标签":["102.2"],"包括":["102.2","102.4"],"或者元素的子孙元素继承了":["102.3"],"改变":["102.4"],"浏览器窗口":["102.4"],"resize":["102.4"],"当你查询布局信息":["102.4"],"offsetleft":["102.4"],"offsettop":["102.4"],"属性都会引起重绘":["102.5"],"做动画的时候要注意":["102.5"],"尽量使用这两个属性":["102.5"],"使用csstext来替代要多次修改的style属性":["102.6"],"重绘的操作放入这个队列":["102.7"],"等队列中的操作到了一定的数量或者到了一定的时间间隔":["102.7"],"满足条件的下标":["103.1","103.20"],"x2":["103.2"],"num":["103.3","132.5","132.6"],"isbigenough":["103.5"],"islessthan4":["103.6","103.7"],"我们可以使用解构的方式也可以合并两个或者多个数组":["103.14"],"方法时":["103.16"],"如果调用方法的元素是":["103.16"],"会返回报错":["103.16"],"因为这些类型的数据没有":["103.16"],"而在使用":["103.16"],"表示从下标为1的元素开始删除":["103.18"],"删除0个元素":["103.18"],"生成字母表":["103.22"],"并将其序列排序":["103.22"],"charcodeat":["103.22"],"筛选出奇数项":["103.23"],"引用数据类型保存在堆内存中":["104.1"],"如果属性是引用类型":["104.2"],"拷贝的就是内存地址":["104.2"],"循环递归":["104.4"],"deepclone":["104.4"],"hash":["104.4"],"weakmap":["104.4"],"如果对象是":["104.4"],"深拷贝会另外创造一个一模一样的对象":["104.5"],"新对象跟原对象不共享内存":["104.5"],"修改新对象不会改到原对象":["104.5"],"深拷贝":["104.5"],"深拷贝是递归拷贝深层次":["104.6"],"都是通过发出":["105.0"],"如果其用户界面是从缓存中获取的":["105.1"],"如果命中":["105.2"],"直接从缓存中获取资源":["105.2"],"如果没有命中":["105.2"],"则进入下一步":["105.2"],"如果前两步都没有命中":["105.2"],"但结果已失效":["105.3"],"从上述示例中可以看到":["105.4"],"http响应报文中":["105.4"],"的时间值":["105.4"],"是一个绝对值":["105.4"],"http响应报文中的":["105.4"],"为":["105.4"],"是相对值":["105.4"],"优先级高于":["105.4"],"那么直接根据":["105.4"],"cashe":["105.4"],"返回304":["105.5"],"的字段值":["105.6"],"重新返回该资源":["105.6"],"状态码为200":["105.6"],"否则返回304":["105.6"],"代表资源无更新":["105.6"],"可继续使用缓存文件":["105.6"],"返回当前资源文件的一个唯一标识":["105.6"],"由服务器生成":["105.6"],"etag":["105.7"],"就把这个b称为":["106.0"],"a的子类":["106.0"],"货箱":["106.1"],"minicar":["106.1"],"原型式继承":["106.2"],"s2":["106.3","106.5"],"s1":["106.5"],"可以看到":["106.8"],"打印出来的结果":["106.8"],"属性得到了继承":["106.8"],"方法也没有问题":["106.8"],"文章一开头":["106.8"],"我们使用的是":["106.8"],"中的":["106.8"],"extends":["106.8","112.10","115.3"],"最后的寄生组合式继承方式是通过组合继承改造之后的最优的继承方式":["106.9"],"中的参数":["107.0"],"getsearchstring":["107.0"],"结果":["107.0"],"key":["107.0","128.1"],"需要检索的键":["107.0"],"传入的需要分割的url地址":["107.0"],"例":["107.0"],"getsearchstr":["107.0"],"为了优化体验":["108.0"],"需要对这类事件进行调用次数限制":["108.0"],"对此我们就可以采用":["108.0"],"则只生效一次":["108.1"],"两者结合":["108.2"],"throttled":["108.2"],"只需要在窗口完成调整后":["108.6"],"再计算窗口大小":["108.6"],"使用事件驱动":["110.0"],"非阻塞i":["110.0"],"模型而得以轻量和高效":["110.0"],"非常适合在分布式设备上运行数据密集型的实时应用":["110.0"],"在理解":["110.0"],"先明确几个概念":["110.0"],"终端":["110.0"],"终端指的是设备终端终端设备":["110.0"],"会为每一个客户端链接创建一个线程":["110.1"],"而每个线程需要大约2mb的内存":["110.1"],"在一个8gb的服务器上":["110.1"],"大约能同时为4000左右的用户服务":["110.1"],"通过非阻塞i":["110.1"],"上面的示例中":["112.1"],"从对象类型":["112.1"],"会从对象类型":["112.2"],"中挑选出指定的键名":["112.2"],"组成一个新的对象类型":["112.2"],"指定的键名":["112.2"],"必须是对象键名":["112.2"],"keyof":["112.4"],"上述代码中":["112.4"],"符号":["112.4"],"表示去除属性的只读标志":["112.5"],"相应地":["112.5"],"就表示增加只读标志":["112.5"],"等同于":["112.5"],"第一个参数是联合类型":["112.6"],"展开成两个键名":["112.6"],"如果参数":["112.6"],"是联合类型":["112.6"],"t6":["112.7","112.9","112.12"],"t7":["112.7","112.12"],"boolean":["112.7"],"any":["112.8","112.12"],"t5":["112.8","112.9"],"t8":["112.10"],"u":["112.10"],"如果类型不是函数":["112.10"],"t9":["112.10"],"info":["112.11","126.1","130.3"],"引申":["112.11"],"主要用于从外部模块提供的函数类型中":["112.11"],"获取参数类型":["112.11"],"interface":["112.11","115.3"],"irequest":["112.11"],"last":["112.11"],"ireponse":["112.11"],"就会报错":["112.12","112.14"],"参数":["112.13"],"则返回":["112.13"],"unknown":["112.13","116.12"],"的构造方法类型":["112.14"],"就能获得实例类型":["112.14"],"本身":["112.14"],"如果类型参数不是构造方法":["112.14"],"t1":["112.14"],"类型参数是一个联合类型":["112.15"],"其中的":["112.15"],"会原样返回":["112.15"],"所以最终返回的是":["112.15"],"实现如下":["112.15"],"参数删除":["112.16"],"如果函数没有":["112.16"],"则返回原始函数类型":["112.16"],"可以正确调用":["112.17"],"里面没有这个方法":["112.17"],"使用这个类型工具时":["112.17"],"深入理解typescript":["113.0"],"enum":["114.0"],"关键字":["114.0"],"反向映射":["114.1"],"以免发生不必要的错误":["114.2"],"手动赋值可以不是数字":["114.2"],"这个时候需要通过类型断言来跳过tsc的类型检查编译出来的js仍是可用的":["114.2"],"编译结果":["114.2"],"在这种情况下":["114.3"],"当前枚举成员的值为上一个枚举成员的值加":["114.3"],"但第一个枚举元素是个例外":["114.3"],"如果它没有初始化方法":["114.3"],"那么它的初始值为":["114.3"],"枚举成员使用常数枚举表达式初始化":["114.3"],"ts2474":["114.4"],"declarations":["114.4"],"member":["114.4"],"initializer":["114.4"],"must":["114.4"],"be":["114.4"],"constant":["114.4"],"常出现在声明文件中":["114.5"],"同时使用":["114.5"],"也是可以的":["114.5"],"灵活和类型安全的代码":["115.1"],"泛型允许我们在定义函数":["115.1"],"loggingidentity":["115.3"],"arg":["115.3"],"ts泛型类型不明确":["115.3"],"我们可以在函数参数类型上加上一些限制":["115.3"],"只能让它穿入那些包含":["115.3"],"属性的变量":["115.3"],"这个限制操作就是":["115.3"],"lengthwise":["115.3"],"mygenericnumber":["115.5"],"使用交叉类型进行接口混入":["116.1"],"初始时的":["116.1"],"answer":["116.1"],"定义":["116.1"],"iquestionrecord":["116.1"],"throw":["116.2"],"or":["116.2"],"got":["116.2"],"变量的技术":["116.3"],"通常与联合类型与交叉类型一起使用":["116.3"],"操作符将":["116.5"],"的类型收窄到":["116.5"],"类上":["116.5"],"之后调用":["116.5"],"getsmallpet":["116.6"],"分支的类型细化为有一个可选的或不存在属性":["116.7"],"move":["116.7"],"nameorresolver":["116.8"],"这个写法会报错":["116.9"],"如果需要使用类型注解的层次结构":["116.9"],"请使用接口":["116.9"],"它能使用":["116.9"],"implements":["116.9"],"extedns":["116.9"],"为一个简单的对象类型使用类型别名":["116.9"],"只需要一个与异化的名字就可以":["116.9"],"另外":["116.9"],"当想给联合类型和交叉类型提供一个语义化的名称时":["116.9"],"类型别名是一个好的选择":["116.9"],"请注意":["116.9"],"类型别名在":["116.9"],"interfaced":["116.10"],"在旧版本的":["116.10"],"substr":["116.11"],"ok":["116.11"],"否则返回":["116.12"],"shiftarr":["116.12"],"arr":["116.12"],"否":["118.0"],"调用成功回调":["118.0"],"调用失败回调":["118.0"],"complete":["118.0"],"调用完成回调":["118.0"],"不管成功失败都会回调":["118.0"],"人脸核验交互方式":["118.0"],"默认":["118.0"],"见表1":["118.0"],"表1":["118.0"],"与":["120.1"],"可以直接":["120.2"],"通过索引":["120.2"],"来访问":["120.2"],"成本就很低":["120.2"],"单向链表与数组各个操作时间复杂度对比":["120.2"],"链表操作":["120.2"],"最大时间复杂度":["120.2"],"search":["120.2"],"获取指定位置节点的值":["120.4"],"getat":["120.4"],"既可以":["120.5"],"向前查询":["120.5"],"也可以":["120.5"],"向后查询":["120.5"],"deletenode":["120.6"],"currentnode":["120.6"],"deletednode":["120.6"],"如果要删除的是头部节点":["120.6"],"将头部节点设置为第二个节点":["120.6"],"它将成为新的头部节点":["120.6"],"将新头部节点的前驱设置为":["120.6"],"如果链表中的所有节点的值都和传入的参数相同":["120.6"],"那么所有节点都会被删除":["120.6"],"因此需要更新尾部节点":["120.6"],"如果要删除的是尾部节点":["120.6"],"将尾部节点设置为倒数第二个节点":["120.6"],"它将成为新的尾部节点":["120.6"],"如果要删除的是中间节点":["120.6"],"previousnode":["120.6"],"nextnode":["120.6"],"fedration":["122.0"],"这是webpack5的一项重大功能":["122.0"],"允许多个独立的webpack构建连接在一起":["122.0"],"实现模块共享":["122.0"],"从而更好地支持微服务架构":["122.0"],"缓存组":["122.0"],"groups":["122.0"],"抽象":["123.1"],"是因为这里的语法并不会表示出真实语法中出现的每个细节":["123.1"],"blockstatement":["123.2"],"expressionstatement":["123.2"],"callexpression":["123.2"],"callee":["123.2"],"memberexpression":["123.2"],"转化过程":["123.3"],"这个过程就是将上一步解析后的内容":["123.3"],"按照编译器指定的规则进行处理":["123.3"],"指的是语法上不可能再分的":["123.4"],"最小的单个字符或字符串":["123.4"],"是编译过程的一个逻辑阶段":["123.4"],"解决了开发代码与实际运行代码不一致时帮助我们debug到原始开发代码的技术":["124.1"],"实际运行的代码与开发环境的代码不一致":["124.2"],"导致进行debug越来越困难":["124.2"],"如果被关闭可以手动开启":["124.3"],"下图所示":["124.3"],"嵌入":["124.4"],"不单独生成":["124.4"],"性能最好":["124.4"],"生成文件":["124.4"],"然后在末尾添加模块来源":["124.4"],"sourceurl":["124.4"],"依靠sourceurl找到原始代码的位置":["124.4"],"错误追踪":["124.4"],"源码行和列位置":["124.4"],"定位最全":["124.5"],"但":["124.5"],"map文件最大":["124.5"],"性能最低":["124.5"],"inline":["124.5","124.8"],"处理后结果":["124.5"],"base64":["124.5"],"字符串":["124.5"],"source":["124.7"],"而言":["124.7"],"此时页面":["124.7"],"一般情况下":["124.9"],"我们并不希望其它人都可以在浏览器直接看到我们未编译的源码":["124.9"],"所以我们不应该直接提供sourcemap给浏览器":["124.9"],"但我们又需要sourcemap来定位我们的错误信息":["124.9"],"一方面":["124.9"],"因为它并未提供核心工具类":["126.1"],"所有功能可以通过预设和内联配置提供":["126.1"],"需要注意":["127.1"],"需要保证工作区是干净的":["127.1"],"没有对head提交的修改":["127.1"],"当不清楚如何应用更改时":["127.1"],"会发生以下情况":["127.1"],"当前的分支和":["127.1"],"将该功能转移到":["127.2"],"解决冲突":["127.2"],"当多个开发者在不同分支上工作时":["127.2"],"如果在应用更改时出现冲突":["127.3"],"git会暂停":["127.3"],"的动作":["127.3"],"并提示解决冲突":["127.3"],"tsx":["127.3"],"conflict":["127.3"],"content":["127.3"],"merge":["127.3"],"想通过git把github上别人的代码clone到本地":["128.0"],"如果没有那么就需要绑定ssh":["128.1"],"需要输入命令":["128.1"],"keygen":["128.1"],"t":["128.1"],"则是将远程主机的最新内容拉下来后直接合并":["129.1"],"branch":["129.2","130.2","133.2"],"的基本操作":["129.2"],"查看本地所有分支":["129.2"],"查看远程所有分支":["129.2"],"查看本地和远程的所有分支":["129.2"],"branchname":["129.2"],"取回更新后":["129.3"],"会返回一个":["129.3"],"将拉取下来的最新内容合并到当前所在的分支中":["129.4"],"即将远程主机的某个分支的更新取回":["129.4"],"并与本地指定的分支合并":["129.4"],"完整格式可表示为":["129.4"],"pull成功":["130.2"],"现在使用git":["130.2"],"log看下一提交历史":["130.2"],"oneline":["130.2"],"graph":["130.2"],"f63ecbf":["130.2"],"修正bug":["130.2"],"优化内置通道配置":["130.2"],"完善日报接口":["130.2"],"9f73b5e":["130.2"],"增加内置通道设置功能":["130.2"],"a0d464e":["130.2"],"竟然分叉了":["130.2"],"由于我本地master的提交历史和远端的master分支的提交历史不一致":["130.2"],"所以git为我进行了自动合并":["130.2"],"然后生成了一个新的提交历史":["130.2"],"对于部分强迫症来说这个不能接受的":["130.2"],"不想看到分叉":["130.2"],"在feature分支上执行":["130.3"],"rebase":["130.3"],"这句命令的意识是":["130.3"],"以master为基础":["130.3"],"将feature分支上的修改增加到master分支上":["130.3"],"并生成新的版本":["130.3"],"rewinding":["130.3"],"replay":["130.3"],"work":["130.3"],"applying":["130.3"],"using":["130.3"],"reconstruct":["130.3"],"falling":["130.3"],"back":["130.3"],"patching":["130.3"],"way":["130.3"],"changes":["130.3"],"patch":["130.3"],"本feature分支多次commit":["131.0"],"最后提交master后":["131.0"],"到另一个分支上":["131.1"],"使得目标分支上的提交历史变得整洁和线性":["131.1"],"reword":["131.2"],"表示保留着一个commitid":["131.2"],"但是需要修改commit的注释":["131.2"],"e":["131.2"],"edit":["131.2"],"但是要停止rebase操作来进行这次提交的修改":["131.2"],"即修改变更的代码与commit与注释":["131.2"],"squash":["131.2"],"表示将这个commitid与前一个commitid合并":["131.2"],"f":["131.2"],"fixup":["131.2"],"使得该工作目录变成一个干净的工作状态":["132.0"],"但又不想创建新的分支来存储每个实验性更改":["132.1"],"只是要保存的描述为空":["132.3"],"执行存储时":["132.3"],"添加备注":["132.3"],"比如查看第二个stash详情":["132.5"],"如果要应用并删除其它":["132.8"],"命令":["132.8"],"是不能被":["132.10"],"存起来的":["132.10"],"那要怎么办呢":["132.10"]},{"0":["32.0","55.1","74.12","83.5","107.0","115.5"],"1":["14.2","14.4","18.1","28.0","30.7","34.0","57.2","68.13","68.17","74.3","82.9","83.6","83.10","84.4","93.3","107.0","116.12","118.0"],"2":["61.31","61.47","68.13","82.6","83.17","84.6","92.8","95.1","116.10","116.12","127.1"],"3":["13.4","61.44","61.47","68.11","68.36","82.30","83.17","84.18","116.12","127.1"],"4":["12.3","62.27","83.12","93.14","98.1","106.5","115.3","116.2"],"5":["62.21","68.5","80.0","83.6","115.3"],"6":["103.1","103.6","103.7","103.20"],"7":["22.0","32.0","80.0","116.10"],"8":["18.1","28.0","30.7","34.0"],"9":["80.0"],"10":["80.0"],"11":["31.1"],"12":["92.15"],"14":["82.12","92.7"],"17":["82.12"],"19":["92.11"],"20":["83.18"],"27":["1.0"],"39":["97.4","123.2"],"40":["123.2"],"43":["123.2"],"50":["74.15"],"75":["74.10"],"80":["74.6","74.12"],"85":["74.12"],"90":["68.39","74.12"],"95":["74.12"],"98":["82.9"],"100":["62.31","74.15"],"106":["12.2"],"123":["65.22","98.7"],"180":["74.2"],"200":["112.8"],"201":["112.8"],"400":["112.8"],"403":["61.4"],"404":["61.4"],"1000":["45.1","94.1","94.2","94.5"],"1234":["103.15"],"1999":["87.0"],"3600":["81.5"],"result":["1.0","82.3"],"continue":["2.0","127.3","130.3"],"left":["2.0","84.6","102.4"],"right":["2.0","84.6"],"双指针夹逼":["2.0"],"while":["2.0","6.0","83.5"],"sum":["2.0","84.6"],"的":["3.0","81.0"],"get":["3.0","84.7","99.3","130.3"],"方法得到下标":["3.0"],"length":["4.0","32.0","107.0"],"index":["4.0","84.25"],"for":["4.0","25.4","55.1","107.0"],"if":["4.0","8.0","9.0","51.16","93.9","93.10","93.13","116.5","116.7","116.8"],"else":["5.0","9.0","61.38"],"rightindex":["6.0"],"寻找左边递减序列":["6.0"],"寻找右边递减序列":["6.0"],"使用二分法查找":["7.0"],"return":["8.0","41.10","52.6","82.20","83.11","84.7","93.6","93.7","93.11","112.17"],"true":["9.0","13.5","82.4","82.22","82.31","83.5","84.27","99.4","103.13"],"求解":["10.0"],"typescript":["10.0"],"const":["10.0","64.5","64.8","65.35","83.22","93.14"],"pivotindex":["10.0"],"number":["10.0","112.17","116.9"],"reduce":["10.0"],"cur":["10.0","93.7","93.11"],"tar":["10.0"],"求和":["10.0"],"k":["11.0","25.4","55.1","115.4"],"js的包管理软件":["12.0"],"js":["12.0","32.2","32.3","64.3"],"基于chrome":["12.0"],"v8引擎的本地":["12.0"],"x版本起就可以正确的开发angularjs网站":["12.1"],"再往前的版本没有评估":["12.1"],"使用最新的11":["12.1"],"3版本是在准备本书内容过程中":["12.1"],"m":["12.2","19.3"],"chrome的版本对于应用angularjs并不关键":["12.2"],"本书特意安装目前的最新版本":["12.2"],"js版本是5":["12.3"],"所有命令后面都跟上了一个":["12.4"],"在右边的location设置好项目的位置":["13.0"],"然后点击界面右下角的create即可":["13.0"],"三个目录的设置应该比较熟悉":["13.1"],"它们分别用于存放对应的文件":["13.1"],"通过设置一个public目录":["13.2"],"并在部署时将网站的根目录直接指向到":["13.2"],"目录":["13.2"],"直接在下方生成的文件解析的部分":["13.3"],"moduletype":["13.5"],"node":["13.5"],"test":["13.5"],"tests":["13.5"],"looks":["13.5"],"good":["13.5"],"命令运行完毕后":["13.5"],"会在项目的根目录生成一个":["13.5"],"directory":["13.6"],"components":["13.6","14.1","68.54"],"图2":["13.7"],"首先":["14.0"],"public":["14.1"],"命令解释":["14.1"],"这行命令告诉":["14.1"],"在这个项目中安装":["14.1"],"x":["14.2","14.4","19.0","23.3","28.0","30.7","34.0","82.13","103.22","112.17","116.9","131.2"],"body":["14.2","19.0","31.0","62.38"],"小贴士":["14.3"],"将js文件放在head部分和body部分有何区别":["14.3"],"如果angularjs没有成功运行":["14.5"],"那么您看到的应该是如下内容":["14.5"],"txt":["14.5"],"深入学习":["15.0"],"directive":["15.0","19.5"],"数据获取":["15.0"],"http":["15.0","62.45","62.48","87.0"],"如何使用第三方的angularjs扩充库":["15.0"],"ui":["15.0"],"route":["15.0"],"从上我们可以看出":["16.0"],"双括号":["16.0"],"内的内容":["16.0"],"其实是一个javascript表达式":["16.0"],"达到加速访问和代码复用的效果":["17.0"],"下面":["17.0"],"我们将分别介绍":["17.0"],"支持直接传入静态文本":["17.1"],"传入变量":["17.1"],"传入函数":["17.1"],"返回网页地址":["17.1"],"的方式来进行调用":["17.1"],"另外":["17.1","83.10"],"的用法也可以直接作为标签名使用":["17.1"],"但是我目前不清楚具体的使用方法和效果":["17.2"],"代码片段的方法就是上诉的":["17.3"],"include":["17.3"],"方法":["17.3","69.7","116.5"],"的扩展功能":["18.0"],"只需要在独立的javascript文件中将":["18.0"],"meta":["18.1","30.7","34.0"],"charset":["18.1","30.7","34.0"],"utf":["18.1","28.0","30.7","34.0"],"title":["18.1","28.0","30.7","61.51","116.1"],"学习angularjs":["18.1","28.0","30.7","34.0"],"app在body时的运行结果":["18.2"],"我们可以看到":["18.2"],"网页标题中的angularjs表达式并没有执行":["18.2"],"这是因为网页的":["18.2"],"标签中的内容":["18.2"],"并不在angularjs的管理之下":["18.2"],"如果我们将":["18.2"],"那么网页将不能正常的展示":["18.3"],"并且我们可在chrome的":["18.3"],"将firstctrl绑定到这个div标签上":["19.0"],"这个标签中的内容将可以使用firstctrl中的数据":["19.0"],"div":["19.0","20.2","31.0","32.4","33.0"],"h1":["19.0"],"并注入":["19.2"],"下文详解":["19.2"],"来调用":["19.3"],"命名并不是固定用法":["19.3"],"我们也可以使用":["19.3"],"shuju":["19.3"],"在":["19.4","62.38","65.12","106.1"],"scope":["19.4"],"或":["19.5","81.3","82.14","112.14"],"等功能时":["19.5"],"或者将数据在多个":["19.5"],"并使用ng":["20.0","20.1"],"model绑定了data":["20.0"],"input":["20.0","22.1","23.2","24.1","24.2","49.7","68.60"],"type":["20.0","22.1","23.2","24.2","28.0","31.1","64.13","68.60"],"text":["20.0","24.2","28.0","31.1","68.60","79.1"],"model":["20.0","21.2","24.1","25.2","25.3","25.4","27.1","68.1"],"这里我们放置一个按钮":["20.1"],"click绑定了":["20.1"],"onclick事件":["20.1"],"button":["20.1","22.1","50.5","68.9"],"style":["20.2","25.0","34.0","64.3","94.6"],"class":["20.2","28.4","106.8"],"示例文本":["20.2"],"可输入strike":["20.2"],"show中的文字":["21.0"],"false":["21.0","82.5","84.28"],"angularjs只是使用css控制将内容隐藏起来":["21.1"],"这两者可以应用于不同的场景":["21.1"],"如果内容较多":["21.1"],"ng":["21.2","34.0"],"运行结果":["22.0"],"图4":["22.0"],"repeat运行结果":["22.0"],"为了更好的查看具体的运行效果":["22.0"],"我们可以查看下最终生成的html代码":["22.0"],"value":["22.1","25.1","52.6","64.8","84.4","84.28","84.29","89.0"],"我是第":["22.1"],"click":["22.1","48.4","50.5","68.9"],"可选货币单位和保留小数位数":["23.0"],"将数字转化为文本":["23.0"],"自动加逗号":["23.0"],"可选设置小数位数":["23.0"],"date":["23.0","92.10","104.4"],"harry":["23.1","27.0","30.3","37.1"],"data":["23.2","28.3","65.3"],"message":["23.2","49.6","65.26","83.6"],"table":["23.3","23.4","62.34"],"tr":["23.3","23.4"],"repeat":["23.3","23.4","30.5"],"in":["23.3","30.5","30.6","76.0","83.10","93.9","99.3","115.3"],"示例文字":["24.1"],"checkbox":["24.1"],"选中后上方文字将加上删除线":["24.1"],"style中加上strike类":["24.1"],"br":["24.1","25.0"],"此示例可举一反三":["24.3"],"比如加入多个文本输入":["24.3"],"恢复原始":["24.4"],"设置背景颜色":["24.5"],"blue":["24.5"],"当前选中的颜色":["25.0"],"border":["25.0"],"solid":["25.0"],"1px":["25.0"],"height":["25.0","61.35","61.36","74.15","102.4"],"20px":["25.0"],"background":["25.0","74.14","97.2"],"option":["25.1"],"选择一个颜色":["25.1"],"然后修改ng":["25.2"],"options的语法":["25.2"],"html":["25.2","25.3","32.4","33.0","34.0","64.3"],"select":["25.2","25.3","25.4"],"colorchosen":["25.2","25.3"],"的语法":["25.3"],"as":["25.4","130.3"],"v":["25.4","68.1"],"也请尽量的实际的运行一下示例":["26.0"],"作为类属性":["27.0"],"学习directive可能会多花您一些时间":["27.2"],"link":["28.0","30.7","87.0"],"css":["28.0","30.7","34.0","62.49","64.3","74.15"],"在实例中":["28.1"],"我们直接在第二个参数的函数中返回了一个对象":["28.1"],"可以看到":["28.2"],"angularjs在":["28.2"],"name":["28.3","51.8","68.60","82.3","98.4","100.2","133.1","133.2"],"性别":["28.3"],"c":["28.4","84.4","103.22","115.2"],"对directive的命名":["29.0"],"angularjs是有特殊的规则需求的":["29.0"],"people":["29.1"],"angularjs提出了这套解决方法":["29.3"],"将字段中的连接符号去除":["29.4"],"并将第二个单词开始改为首字母大写":["29.4"],"其它字母小写":["29.4"],"但是实际使用中":["29.5"],"推荐使用":["29.5"],"所以":["29.6"],"如果你的项目需要使用html5的验证工具":["29.6"],"那么就需要在字段前加上data":["29.6"],"secondctrl":["30.0"],"第二个人的信息":["30.0"],"这样做":["30.0"],"无法实现动态化的列表":["30.0"],"是无法实现我们期望的功能的":["30.0"],"我们理想中的情况应该是什么样子呢":["30.0"],"男":["30.1"],"注意":["30.1","83.9"],"这里我将restrict从":["30.1"],"e":["30.1","51.9","68.60"],"element元素":["30.1"],"改变成为了":["30.1"],"attribute":["30.1"],"属性":["30.1"],"这样它的使用方法有了一些变化":["30.1"],"的属性":["30.2","102.3"],"并将它的值存储在":["30.2"],"info":["30.3","82.12","105.4","114.4","131.2"],"span":["30.4","30.5"],"person":["30.4","30.5","106.7"],"peoplelist":["30.5"],"json":["30.5"],"注意此处的数据传入方法":["30.6"],"head":["30.7","34.0"],"rel":["31.0"],"stylesheet":["31.0"],"form":["31.0","49.7","83.15","105.4"],"templateurl的使用":["31.1"],"要使用这个功能":["31.1"],"我们需要在":["31.1"],"script":["31.1"],"标签中":["31.1"],"首先声明":["31.1"],"并给这段代码进行命名":["31.1"],"示例代码中的":["31.1"],"templateurl":["31.2"],"childhead":["32.0"],"prevsibling":["32.0"],"nextsibling":["32.0"],"ng339":["32.0"],"attr":["32.0"],"核心部分":["32.1"],"中":["32.2","64.3","120.5"],"保证在":["32.2"],"引入之前引入":["32.2"],"children":["32.4","41.9"],"addclass":["32.4"],"strike":["32.4"],"removeclass":["32.5"],"firstctrl":["33.0"],"content":["34.0","83.14","116.1"],"doctype":["34.0"],"lang":["34.0"],"zh":["34.0","81.6"],"href":["34.0","65.27"],"仓库":["36.0"],"options":["37.3","38.0"],"引入ng":["37.3","38.0"],"include和模板ng":["37.3","38.0"],"template":["37.3","38.0"],"本章总结":["37.3"],"中文版":["37.4"],"stoyan":["37.4"],"stefanov":["37.4"],"著":["37.4"],"李强":["37.4"],"那样做感觉上比较混乱":["37.5"],"难以管理":["37.5"],"前端网站可以使用阿里云的cdn直接进行访问加速":["37.6"],"后端在使用api模式通讯的情况下":["37.6"],"本来就可以极大的提高负载能力":["37.6"],"虽然这个说法比较武断":["37.7"],"但是其中也体现出来一个明显的信息":["37.7"],"这让我完全不用再操心dom":["37.8"],"因为这两点特性":["37.8"],"我义无反顾的加入了使用angularjs的大军":["37.8"],"题外话":["37.8"],"国外网站购买的这种模板":["37.8"],"都是由专业的前端人员开发":["37.8"],"提供的功能都非常丰富完整":["37.8"],"它们对管理工具的使用也很正规":["37.8"],"使用bower或其它工具来管理第三方库等":["37.8"],"代码结构和注释也非常完善":["37.8"],"对我而言":["37.8"],"这笔投资绝对物有所值":["37.8"],"另一方面也是为了给自己一点压力":["37.9"],"让自己沉下心来掌握这门技术":["37.9"],"我在angularjs方面也是一名菜鸟":["37.9"],"与我技术构想不符则是对我本人来说更重要的一个原因":["37.10"],"因为我无法认同angular":["37.10"],"2的优化方向":["37.10"],"同时":["37.10","50.5"],"根据我的工作经验来看":["37.10"],"这样革命性的优化通常是内部一群理念不合的人另起炉灶":["37.10"],"结果可能喜忧参半":["37.10"],"work":["37.11"],"is":["37.11"],"licensed":["37.11"],"under":["37.11"],"the":["37.11","89.0","127.3"],"creative":["37.11"],"commons":["37.11"],"下拉列表选项":["38.0"],"order":["41.1"],"commponent":["41.1"],"数据驱动视图更新":["41.2"],"虚拟dom":["41.2"],"由浏览器的渲染流水线可知":["41.2"],"dom":["41.2","48.3"],"8版本引入hooks之后":["41.3"],"它提供了一种新的方式来使用状态和其它":["41.3"],"react":["41.3","44.6","68.24"],"业务代码更加聚合":["41.4"],"render":["41.5"],"context":["41.6","83.10"],"无数据就是初始化状态":["41.7"],"history":["41.7"],"api":["41.7","65.19","65.56"],"编译转换为浏览器识别语言":["41.8"],"props":["41.9","49.5"],"捕获全局错误":["41.10"],"window":["41.10","61.10","65.33"],"addeventlistener":["41.10"],"removeeventlistener":["41.10"],"如果标签的首字母是小写就会被认为是原生标签":["41.11"],"等价于":["41.12"],"一个空标签":["41.12"],"非受控组件不是通过数据控制页面":["41.13"],"而是直接通过dom本身管理":["41.13"],"并不依赖与js文件了":["42.1"],"这就会使用户更快地看到页面的内容":["42.1"],"尤其是针对大型单页应用":["42.1"],"在服务端渲染中只会执行到":["42.2"],"componentdidmount":["42.2","43.1"],"子组件修改自身state":["43.1"],"getderiverstatefromprops":["43.1"],"shouldcomponentupdate":["43.1"],"getsnapshotbeforeupdate":["43.1"],"componentdidupdate":["43.1","68.25"],"父组件修改props":["43.1"],"这些属性和方法":["44.1"],"都是默认的":["44.1"],"但在首次渲染上":["44.5"],"虚拟dom会多了一层计算":["44.5"],"native":["44.6"],"高阶组件是react":["45.0"],"中一种非常强大的模式":["45.0"],"可以帮助我们在组件间复用逻辑":["45.0"],"修改props":["45.0"],"实现条件渲染以及额":["45.0"],"clearinterval":["45.1","94.4"],"usecontext高阶函数":["45.1"],"usecontext":["45.1"],"用于在函数式组件中访问react的上下文":["45.1"],"usestate会触发重新渲染":["45.2"],"useref不触发":["45.2"],"useref不仅用于dom引用":["45.2"],"对象是通用容器":["45.2"],"期当前属性是可变的":["45.2"],"的实现原理基于":["48.0"],"resolve":["48.0","130.3"],"最后执行宏任务":["48.1"],"这个过程会不断重复":["48.1"],"任务执行顺序":["48.1"],"事件循环机制":["48.1"],"宏任务":["48.1"],"microtask":["48.1"],"与":["48.1"],"微任务":["48.1"],"macrotask":["48.1"],"是指在事件循环中两种不同类型的任务":["48.1"],"的时候":["48.2","100.3"],"任务队列可以简单理解成这样":["48.2"],"然后下一行":["48.2"],"console":["48.2","82.10","82.17","82.23","82.25","83.20","84.13","84.18","93.8","93.11","94.1","106.4","106.5","106.7"],"log":["48.2","82.2","82.17","84.13","84.18","93.8","93.11","93.16","94.1","106.4","106.5","106.7","129.3"],"由于会更新视图的任务":["48.2"],"之后执行回调函数":["48.3"],"这一行表示如果调用nexttick并且不传递任何参数":["48.3"],"它会返回一个promise":["48.3"],"void":["48.3","116.2"],"用于处理异步操作":["48.3"],"这一行表示":["48.3"],"如果调用nexttick并传递一个回调函数和一个上下文":["48.3"],"this":["48.3","83.10","127.3","130.3"],"那么这个回调函数将以指定的上下文执行":["48.3"],"t":["48.3"],"cb":["48.3"],"args":["48.3","61.18","84.2"],"any":["48.3","112.14"],"ctx":["48.3"],"handleclick":["48.4","50.5"],"重置队列执行状态":["48.5"],"currnetflushpromise":["48.5"],"重置当前微任务为":["48.5"],"如果住任务队列":["48.5"],"前置和后置任务队列还没有被清空":["48.5"],"就继续递归执行":["48.5"],"pendingpreflushcbs":["48.5"],"pendingpostflushcbs":["48.5"],"这个方法负责执行前置任务队列":["48.5"],"parentjob":["48.5"],"如果待处理的队列不为空":["48.5"],"保存队列中去重后的任务为当前活动的队列":["48.5"],"activepreflushcbs":["48.5"],"set":["48.5","83.5"],"遍历执行队列里的任务":["48.5"],"实现原理":["48.6"],"在此示例中":["49.1"],"当":["49.1"],"的值是":["49.1"],"focus":["49.1"],"时":["49.1","104.4"],"就等价于":["49.1"],"动态参数的限制":["49.1"],"动态参数中的表达式的值应该是一个字符串":["49.1"],"或者":["49.1"],"null":["49.1","52.6","64.4","112.15"],"特殊值":["49.1"],"意为显式移除该绑定":["49.1"],"其它非字符串的值会触发警告":["49.1"],"动态参数语法限制":["49.1"],"动态参数表达式因为某些自负的缘故有一些语法限制":["49.1"],"比如":["49.1","123.1"],"空格":["49.1"],"通过设置内联样式的":["49.3"],"css属性来触发工作":["49.3"],"当元素可见时将使用初始的":["49.3"],"的值":["49.3"],"warning":["49.3","83.9","85.0","98.3"],"总结":["49.3"],"上述示例中":["49.4","112.11"],"会抛出一个错误":["49.4"],"因为":["49.4","61.37"],"会先被执行":["49.4"],"而":["49.4","65.56","106.9"],"的条件表达式中的":["49.4"],"此时不存在":["49.4"],"这个问题可以通过迭代计算属性来解决":["49.4"],"id":["49.5","64.9"],"someprop":["49.5"],"other":["49.5"],"otherprop":["49.5"],"必须在子组件中已声明":["49.5"],"mycomponent":["49.5"],"something":["49.5","83.6"],"传递子父组件共有的":["49.5"],"placeholder":["49.6"],"编辑我":["49.6"],"不带表达式地阻止默认事件":["49.7"],"submit":["49.7"],"链式调用修饰符":["49.7"],"按键用于":["49.7"],"keyup":["49.7"],"提供了":["50.0"],"setup":["50.0"],"函数作为入口函数":["50.0"],"替换了":["50.0"],"activated":["50.1"],"keep":["50.1"],"alive":["50.1"],"缓存的组件激活时":["50.1"],"完成挂载与渲染":["50.2"],"此刻打印":["50.2"],"发现之前的挂载点及内容已被替换成新的dom":["50.2"],"beforeupdate":["50.2"],"更新的数据必须是被渲染在模版上的":["50.2"],"中的请求有可能导致页面闪动":["50.3"],"因为此时页面":["50.3"],"组件挂载之前":["50.4"],"组件挂载到实例上去之后":["50.4"],"组件数据发生变化":["50.4"],"更新之前":["50.4"],"count":["50.5"],"增加":["50.5"],"在上面的示例中":["50.5"],"我们通过":["50.5"],"钩子注册了":["50.5"],"一个函数":["50.5"],"在每次组件更新之前输出计数器数据的值":["50.5"],"在方法中添加了一个按钮点击事件":["50.5"],"用于修改计数器的值":["50.5"],"钩子函数会在数据重新渲染后运行":["50.5"],"通常用于更新":["50.5"],"执行动画或获取最新的状态等操作":["50.5"],"或是由以上类型的值组成的数组":["51.3"],"fooref":["51.4"],"barref":["51.4"],"post":["51.9","65.51"],"才追综艺来":["51.10"],"使用异步回调时候":["51.10"],"则会在副作用发生期间追踪依赖":["51.12"],"它会在同步执行过程中":["51.12"],"有个别名":["51.13"],"也可以":["51.13"],"后置刷新":["51.13"],"watchposteffect":["51.13"],"就会自动更新":["52.1"],"但改变":["52.1"],"和":["52.2","61.31","61.50","62.4","62.48","64.3","65.4","80.0","99.3","112.10","112.14"],"框架封装的核心":["52.3"],"它负责将数据与视图关联起来":["52.3"],"compiler":["52.4"],"对每个元素节点的指令进行扫描跟解析":["52.4"],"key":["52.5","76.0"],"在一个视图中可能出现多次":["52.5"],"所以每个":["52.5"],"都需要一个管家":["52.5"],"dep":["52.5"],"来管理多个":["52.5"],"observer":["52.6"],"编译插值文本":["52.7"],"textcontent":["52.7"],"判断是否有子元素":["52.7"],"push":["52.8","61.38","106.5","129.2"],"notify":["52.8"],"foreach":["52.8","81.1"],"创建":["52.8"],"时触发getter":["52.8"],"一个杯子":["53.2"],"早上装的牛奶":["53.2"],"中午装的是开水":["53.2"],"晚上装的是茶":["53.2"],"在这一刻":["53.3"],"这个时间点":["53.3"],"叫做fp":["53.3"],"相比之下":["53.3"],"fcp指的是浏览器首次绘制来自dom的内容":["53.3"],"例如文本":["53.3"],"canvas元素等":["53.3"],"这个时间点叫fcp":["53.3"],"quicklink":["53.4"],"google":["53.4"],"开源的一个脚本插件":["53.4"],"可以置顶浏览器在空闲的时候去指定需要加载的数据":["53.4"],"使用gzip压缩":["53.4"],"减少文件体积":["53.4"],"加快首屏页面打开速度":["53.4"],"服务器需要开启gzip":["53.4"],"我们可以通过使用webpack插件来实现这个功能":["53.4"],"shell":["53.4"],"pnpm":["53.4"],"install":["53.4"],"vite":["53.4"],"compression":["53.4"],"arr":["55.1","80.0","84.4","107.0","115.3"],"let":["55.1","56.3","61.18","100.1","107.0","116.9"],"中导入使用":["55.3"],"导出的模块":["55.3"],"filesystem":["55.3"],"所有导出模块":["55.3"],"引用对象名为":["55.3"],"类型变量能够进行的运算是有限的":["56.2"],"只支持比较运算":["56.2"],"运算符":["56.2"],"取反运算":["56.2"],"typeof":["56.2","104.4"],"运算符和":["56.2"],"instance":["56.2"],"运算符这几种":["56.2"],"aa":["56.2","56.3"],"fun1":["56.3"],"throw":["56.3","84.27","85.0"],"new":["56.3","61.32","65.35","82.14","83.5","83.22","84.7","92.10","107.0"],"error":["56.3","85.0","116.11"],"浏览器相关":["57.1"],"更新了一部分":["57.2"],"更新了面试相关的vue相关":["57.3"],"char":["61.1"],"float":["61.1"],"boolean":["61.1"],"responsetext":["61.3"],"responsexml":["61.3"],"属性获取服务器返回的数据":["61.3"],"示例":["61.3","84.7","98.4"],"var":["61.3","61.10","74.9","74.13","92.2"],"xhr":["61.3"],"function":["61.3","61.10","61.18","62.19","83.5","83.11","98.4","112.10"],"客户端保存新的链接":["61.4"],"并向新的链接发起请求":["61.4"],"一返回请求结果":["61.4"],"表示客户端请求的资源没有权限查看":["61.4"],"在函数返回后并不释放":["61.6"],"设想我们有一个处理过程很耗时的函数对象":["61.7"],"每次调用都会花费很长时间":["61.7"],"那么我们就需要把计算出来的值储存起来":["61.7"],"当调用就这个函数的时候":["61.7"],"首先在缓存中查找":["61.7"],"在使用":["61.8"],"javascript":["61.8","61.10","61.18","92.8","100.1"],"定时器时":["61.8"],"如果没有及时清除已经失效的定时器":["61.8"],"就会导致定时器所占用的内存无法被释放":["61.8"],"从而造成内存泄漏":["61.8"],"闭包":["61.8"],"脱离dom的引用":["61.8"],"事件委托就是把原本需要绑定在子元素上的响应时间委托给父元素":["61.9"],"因此可以处理未来添加到页面上的元素的事件":["61.10"],"onload":["61.10"],"ie浏览器使用":["61.11"],"冒泡阶段":["61.12"],"从目标节点传回到window对象":["61.12"],"也可能被窃取":["61.13"],"本地存储相对来说更安全":["61.13"],"因为它不会随着http请求被发送到服务器":["61.13"],"减少了被窃取的风险":["61.13"],"但仍然需要注意防范xss攻击":["61.13"],"用途":["61.13"],"cookie主要用户客户端与服务端传递信息":["61.13"],"value2":["61.16"],"直接删除键值对":["61.16"],"delete":["61.16"],"的作用":["61.17"],"特点":["61.17"],"封装":["61.17"],"隐藏对象的属性和实现细节":["61.17"],"手写一个new":["61.18"],"mynew":["61.18"],"fn":["61.18"],"创建一个空对象":["61.18"],"obj":["61.18","107.0","112.17"],"使空对象的隐式原型":["61.18"],"obj对象的":["61.18"],"常常第一个的函数的输出是第二个函数的输入这种现象":["61.20"],"支持多并发请求":["61.20"],"await只能在async中运行":["61.21"],"否则会报错":["61.21","112.2"],"当运行返回报错时候":["61.21"],"通过":["61.21","114.4","122.0","127.2"],"的最大长度显示是因为浏览器和":["61.22"],"不同的浏览器和":["61.22"],"请求更适合请求缓存":["61.23"],"页面滚动事件":["61.24"],"onscroll":["61.24"],"如果为true":["61.25"],"表示是在捕获阶段调用事件处理程序":["61.25"],"js中的元素尺寸与布局信息":["61.27"],"也就是说定位信息为":["61.28"],"鼠标移动的坐标":["61.28"],"鼠标按下去的坐标":["61.28"],"元素初始情况下的":["61.28"],"world":["61.30","116.2"],"b":["61.30","84.4","103.8","103.22","115.2","116.9"],"在这个例子里面":["61.31"],"通过各自的属性相互引用":["61.31"],"这样的话":["61.31"],"两个对象的引用次数为":["61.31"],"在采用引用计数的策略中":["61.31"],"由于函数执行之后":["61.31"],"这两个对象都离开了作用域":["61.31"],"bound":["61.33"],"width":["61.35","62.14","74.15","102.4"],"图片的高度为":["61.35"],"document":["61.35","61.36","83.14"],"getelementbyid":["61.36"],"mypic":["61.36"],"innnerhtml":["61.36"],"其实对于包装类":["61.37"],"完全可以用":["61.37"],"号来进行克隆":["61.37"],"其实没有深度克隆一说":["61.37"],"这里用":["61.37"],"语法上比较符合规范":["61.37"],"对于":["61.37"],"类型":["61.37"],"日期定义的":["61.37"],"方法会返回它的一个内部表示":["61.37"],"主机名":["61.40"],"端口号":["61.40"],"相同":["61.40"],"只允许本域名下的借口交互":["61.41"],"不同元的客户端脚本":["61.41"],"它需要一遍下载图片一遍计算大小":["61.42"],"如果图片很多":["61.42"],"浏览器会不断调整页面":["61.42"],"这不但影响速度":["61.42"],"也影响体验":["61.42"],"当浏览器知道了宽高":["61.42"],"指向其本身":["61.43"],"事件中的":["61.43"],"sort":["61.44"],"如果是数组":["61.45"],"可以使用数组的一些方法实现":["61.45"],"slice":["61.45"],"不会对原数组产生影响":["61.46"],"借用构造函数继承":["61.47"],"组合继承":["61.47"],"我就先自己去吃了":["61.48"],"你忙完了再去吃饭":["61.48"],"比":["61.50"],"安全":["61.50"],"标签优化":["61.51"],"description":["61.51"],"keywords":["61.51"],"一个迟缓甚至不加载":["61.52"],"格式":["62.1"],"缺点":["62.2"],"文件大小通常比":["62.3"],"jpeg":["62.3","62.4"],"标准盒模型的宽高指的是":["62.5"],"内容区域":["62.5"],"的宽高":["62.5"],"loop":["62.9","62.10"],"是否循环播放":["62.9","62.10"],"perload":["62.9","62.10"],"预加载视频":["62.9"],"是否显示进度条":["62.10"],"多媒体标签":["62.11"],"加载独立内容":["62.12"],"上图下字":["62.12"],"figcaption":["62.12"],"figure的标题":["62.12"],"hgroup":["62.12"],"标题组合标签":["62.12"],"图片边框的宽度":["62.14"],"outset":["62.14"],"规定背景的绘制区域":["62.15"],"padding":["62.15"],"box":["62.15","65.40","72.0"],"radial":["62.16"],"shadow":["62.17"],"文字阴影":["62.17"],"水平位移":["62.17"],"y":["62.18","115.4"],"指定元素在二维空间的位移":["62.18"],"scale":["62.18","62.28"],"n":["62.18"],"定义缩放转换":["62.18"],"3d":["62.18"],"指定切换效果的速度":["62.19"],"delay":["62.20"],"动画启动前的延迟间隔":["62.20"],"iteration":["62.20"],"auto":["62.21"],"但内部宽高超过父级时":["62.21"],"会出现滚动条":["62.21"],"给塌陷元素添加微对象":["62.21"],"这个写法固定":["62.21"],"sticky":["62.22"],"粘性定位":["62.22"],"元素先按照普通文档流进行相对定位":["62.22"],"center":["62.24"],"子元素设置display":["62.24"],"inline":["62.24","64.3"],"cell":["62.25"],"flex":["62.27"],"左右固定宽":["62.27"],"中间":["62.27"],"transform":["62.28","62.49","74.3","74.5","74.11","94.6"],"查找根元素html标签":["62.30"],"empty":["62.30"],"查找空标签":["62.30"],"目标伪类选择器":["62.30"],"表单":["62.30"],"enabled":["62.30"],"id选择器":["62.31"],"family":["62.32"],"字体大小":["62.32"],"size":["62.32"],"字体样式":["62.32"],"csssprite":["62.33"],"css精灵图":["62.33"],"p":["62.34","68.9","129.3"],"ul":["62.34"],"ol":["62.34"],"address":["62.34"],"简写形式":["62.36"],"align":["62.36"],"item":["62.36","76.0","103.23"],"16px":["62.38"],"中加入":["62.38"],"样式表":["62.40"],"不仅会降低解析效率":["62.41"],"而且会在解析过程中产生一些难以预料的bug":["62.41"],"dragleave":["62.42"],"在被拖放元素移出目标元素是触发":["62.42"],"drop":["62.42","70.3","131.2"],"关闭阶段":["62.43"],"minify":["62.44"],"gzip":["62.44"],"webp图片压缩":["62.44"],"http次数":["62.45"],"缓存":["62.45"],"协议缓存请求":["62.45"],"由它来通过将包传送给接收端实体的tcp层":["62.48"],"tcp三次握手":["62.48"],"tcp三次握手与四次挥手":["62.48"],"发送http":["62.48"],"https请求":["62.48"],"建立连接后就可以停过":["62.48"],"进行数据传输了":["62.48"],"如果使用了":["62.48"],"https":["62.48"],"会在":["62.48","84.1"],"之间多添加一层协议作为加密和认证的服务":["62.48"],"使用":["62.48","68.54","102.5"],"ssl":["62.48"],"tls":["62.48"],"协议":["62.48"],"保证了信息的安全":["62.48"],"协议的作用是认证客户端和服务端":["62.48"],"确保数据发送到正确的客户端和服务器":["62.48"],"加密数据防止数据中途被窃取":["62.48"],"维护数据的完整性":["62.48"],"确保数据在书参数过程中不被改变":["62.48"],"是不会layout或者paint的":["62.50"],"区别":["62.50"],"功能涵盖方面":["62.50"],"js动画比css动画功能强大":["62.50"],"实现":["62.50"],"重构难度":["62.50"],"两者相邻的外边距都是负数时":["62.51"],"折叠结果是两者绝对值的较大的值":["62.51"],"类似于":["64.1"],"但是它缓存的是普通数值而不是回调函数":["64.1"],"usereducer":["64.1"],"用于使用reducer函数的管理状态":["64.1"],"一旦确定了差异":["64.2"],"react就会有效地只更新真实dom的必要部分以反映这些变化":["64.2"],"这种方法最大限度的减少了实际dom操作次数":["64.2"],"jsx":["64.3"],"就是把":["64.3"],"全写进":["64.3"],"则是":["64.3"],"inputref":["64.4"],"classname":["64.4"],"功能组件现在可以管理状态并使用其它功能":["64.5"],"例如上下文当中的效果展示":["64.5"],"import":["64.5","83.23"],"usestate":["64.5","64.18"],"from":["64.5","64.19","83.23"],"setvalue":["64.5"],"中设置的任何资源":["64.6"],"例如删除事件侦听器或取消计时器":["64.6"],"某些生命周期方法":["64.6"],"如":["64.6","97.1","123.4"],"componentwillmount":["64.6"],"componentwillreceiveprops":["64.6"],"返回的状态与作为第一个参数传递的值匹配":["64.7"],"该函数用于更新状态":["64.7"],"它将新的状态值作为参数":["64.7"],"参数更改一次":["64.8"],"useeffect执行一次":["64.8"],"undofunction":["64.9"],"这里这个return":["64.9"],"的函数就是清理副作用的函数":["64.9"],"通过拥有全局存储":["64.11"],"我们可以访问和修改来自任何组件的数据":["64.11"],"如果组件分解涉及嵌套组件":["64.12"],"并且数据在层次结构中向下传递":["64.12"],"基于不同的action类型做一些不同的事情":["64.13"],"如果这个":["64.13"],"我们将操作传递给该函数":["64.14"],"它通过引入单向数据流和应用程序状态的集中存储来帮助管理应用程序的状态":["64.15"],"用户可以构建复杂的数据处理管道":["64.16"],"处理实时的数据流或者批处理数据":["64.16"],"并支持并行处理和分布式计算":["64.16"],"axios提供了更多的功能和配置选项":["64.17"],"如拦截器":["64.17"],"取消请求":["64.17"],"csrf防护等":["64.17"],"axios兼容更多的浏览器":["64.17"],"并提供了更好的错误处理机制":["64.17"],"从而引发问题":["64.18"],"例如":["64.18","97.5","114.0"],"在某个循环中使用":["64.18"],"hook":["64.18"],"由于循环次数是不固定的":["64.18"],"标记差异":["64.20"],"在比较过程中":["64.20"],"标记处需要进行更新的节点和操作":["64.20"],"例如插入":["64.20"],"删除或更新":["64.20"],"并标记需要更新节点和操作":["64.21"],"将dom进行局部更新":["64.21"],"mvvm缺点":["65.2"],"复杂性":["65.2"],"mvvm模式引入了额外的层次和概念":["65.2"],"可能会增加项目的初始学习成本":["65.2"],"特别是对于初学者来说":["65.2"],"性能":["65.2"],"在某些情况下":["65.2"],"mvvm模式可能引入额外的性能开销":["65.2"],"特别是实现数据绑定和观察者模式时":["65.2"],"虽然现在前端框架会优化这些问题":["65.2"],"但仍然需要注意这些问题":["65.2"],"过度工程":["65.2"],"在小型应用中":["65.2"],"采用":["65.2"],"模式可能会导致过度设计":["65.2"],"可以使用":["65.3"],"backspace":["65.4"],"两个键位":["65.4"],"tab":["65.4"],"制表键":["65.4"],"esc":["65.4"],"返回键":["65.4"],"将数据解析成纯文本":["65.7"],"事件名":["65.9"],"如果绑定的是多个相同事件":["65.9"],"如果有":["65.10"],"存在":["65.10"],"setter":["65.11","85.0"],"读取时触发":["65.11"],"路由中name的作用":["65.12"],"proxy":["65.13"],"api和服务器配置":["65.15"],"支持所有":["65.15"],"replacestate":["65.16"],"修改浏览器历史栈后":["65.16"],"url":["65.16","65.27","97.2","116.1"],"改变但不会刷新页面":["65.16"],"不会触发":["65.16"],"从而实现前端路由切换":["65.18"],"浏览器支持度友好":["65.18"],"包括低版本ie浏览器":["65.18"],"已经成为spa标配":["65.18"],"原理":["65.18"],"hash模式的主要原理是":["65.18"],"由于我们是一个单页的客户端应用":["65.19"],"如果没有适当的服务器配置":["65.19"],"用户在浏览器中直接访问没有配置的路由时":["65.19"],"会返回404":["65.19"],"history模式使用":["65.19"],"可以额外设置title属性供后续使用":["65.20"],"url处理":["65.20"],"优点":["65.22","65.23"],"直观":["65.22"],"查询参数可以传递多个键值对":["65.23"],"因此更灵活":["65.23"],"适用于各种场景":["65.23"],"查询参数更合适":["65.24"],"灵活性":["65.24"],"如果需要传递多个键值对或灵活地控制何时传递参数":["65.24"],"也可以使用对象语法":["65.29"],"也可以使用缩写形式":["65.31"],"获取token":["65.33"],"tokenstr":["65.33"],"sessionstorage":["65.33"],"next":["65.34","84.28"],"vuerouter":["65.35"],"use":["65.35","85.0"],"routes":["65.35","65.54","65.55"],"home":["65.35","65.54"],"之外":["65.36"],"还可以注册自定义的指令":["65.36"],"必须使用":["65.37","83.15"],"definecomponent":["65.37"],"输出才能使用":["65.40"],"父组件中使用自定义事件来进行接收":["65.41"],"当然可以放入任何内容":["65.42"],"例如变量":["65.42"],"父组件":["65.42","65.44","68.5"],"那么最终结果就是展示子组件设置的默认内容":["65.43"],"child":["65.43","65.44","68.9"],"如果传值":["65.43"],"是":["65.44","98.2"],"monkey的缩写":["65.44"],"西海龙王敖润之子":["65.45"],"apple":["65.45"],"大萝卜":["65.47"],"extends":["65.49","106.9","112.7","112.15","112.16"],"object":["65.49","83.21","84.5","103.16","107.0","120.6","123.2"],"never":["65.49","112.7","112.9","112.10","112.12","112.14","116.12"],"响应式对象":["65.49"],"interface":["65.49","116.2"],"watcheffectoptions":["65.49"],"immediate":["65.49","65.50"],"在侦听器创建时立即触发回调":["65.50"],"第一次调用时旧值是":["65.50"],"undefined":["65.50","85.0","98.3","98.5","112.15","120.6"],"deep":["65.50"],"source":["65.51","115.3"],"callback":["65.51","85.0","118.0"],"flush":["65.51"],"ontrack":["65.51"],"event":["65.51"],"debugger":["65.51"],"ontrigger":["65.51"],"停止侦听器":["65.51"],"stop":["65.51"],"可以没有":["65.52"],"使用场景":["65.52"],"当一个属性受多个属性影响的时候":["65.52"],"例如购物车商品结算":["65.52"],"component":["65.54","65.55"],"about":["65.54"],"contact":["65.54"],"path":["65.55"],"两个新特性":["65.56"],"它们使得组件的渲染更加高效":["65.56"],"允许组件返回多个根节点":["65.56"],"允许将组件的内容渲染到dom树的其它位置":["65.56"],"这两个特性能够减少不必要的dom操作":["65.56"],"提升渲染性能":["65.56"],"composition":["65.56"],"调用时添加一个参数":["65.57"],"就是":["65.57"],"的载荷":["65.57"],"异步操作数据":["65.57"],"字节面试":["68.0"],"将":["68.3"],"变量传递给子组件":["68.3"],"并将参数":["68.5"],"传递给父组件":["68.5"],"parent":["68.5","100.0","100.1"],"getchildpropertyandmethod":["68.7"],"获取子组件对外暴露的属性和方法":["68.7"],"上段代码中":["68.7"],"我们在":["68.7"],"template子组件child身上绑定了一个ref":["68.7"],"然后通过":["68.7"],"在页面中":["68.9"],"我们可以看到子组件获取到的父组件数据":["68.9"],"除了获取数据":["68.9"],"我们也可以修改数据":["68.9"],"子组件1":["68.9"],"parentmessage":["68.9"],"changeparentmessage":["68.9"],"的方法":["68.11"],"当按钮被点击时":["68.11"],"这个方法会调用":["68.11"],"emit":["68.11"],"方法来派发两个事件":["68.11"],"steven":["68.11"],"我们触发了一个名为":["68.11"],"的事件":["68.11"],"并传递了一个参数":["68.11"],"通过这个事件":["68.11"],"我们可以告知父组件更新它的":["68.11"],"值为":["68.11"],"age":["68.13","83.18"],"上面这个例子中":["68.13"],"我们创建了一个名为":["68.13"],"的事件总线对象":["68.13"],"并在两个组件中进行了引用":["68.13"],"状态":["68.15"],"getter":["68.15"],"正确的方式":["68.17","68.18","68.20"],"undefinedvariable":["68.20"],"处理点击事件":["68.21"],"nuxt":["68.22"],"推荐使用函数式组件和":["68.23"],"元素的描述":["68.24"],"会根据此方法的返回值来构建组件的":["68.24"],"通常用于保存一些需要在更新后恢复的状态":["68.25"],"如果使用函数式组件和":["68.26"],"hooks":["68.26"],"编写组件":["68.26"],"处理副作用和重新编辑":["68.35"],"只渲染起始索引和结束索引之间的列表项":["68.36"],"然后生成一个有关页面性能的报告":["68.37"],"首次":["68.38"],"cpu":["68.38"],"空闲":["68.38"],"idle":["68.38"],"green":["68.39"],"快":["68.39"],"绿色":["68.39"],"插件扩展":["68.40"],"但这种方法适用于传递简单的数据":["68.42"],"但要注意":["68.43"],"可能会影响性能":["68.45"],"然后在接收消息的窗口中监听message事件来实现跨页面通信":["68.46"],"通过在客户端和服务器之间建立":["68.47"],"为了解决跨域请求的限制":["68.48"],"能解决部分跨域问题":["68.49"],"但是只支持":["68.49"],"来授权浏览器跨域访问":["68.50"],"支持各种类型的":["68.50"],"并将结果返回给浏览器":["68.51"],"这种方法将跨域问题留给了服务器端处理":["68.52"],"等反向代理服务器来转发请求":["68.53"],"从而实现跨域访问":["68.53"],"通过模块化的方式组合这些模块来构建整个应用程序":["68.54"],"微服务架构":["68.54"],"独立部署的前端应用":["68.54"],"将前端应用程序拆分为多个微服务":["68.54"],"每个微服务都是独立开发":["68.54"],"测试和部署的":["68.54"],"通过服务网关或类似的机制来统一管理这些微服务":["68.54"],"使其能够协同工作":["68.54"],"web":["68.54"],"技术":["68.54"],"是一种标准化的":["68.54"],"并且更容易保持构建和部署的一致性":["68.55"],"跨项目协作":["68.55"],"开发者可以更容易地在不同项目之间进行协作和交流":["68.55"],"因为所有代码都在同一个仓库中":["68.55"],"这有助于促进团队内部的合作和知识共享":["68.55"],"它的计算是在组件":["68.56"],"渲染过程中触发的":["68.56"],"并且它的行为依赖于组件的依赖项数组的变化":["68.56"],"直接在组件之外调用":["68.56"],"setname":["68.60"],"渲染一个输入框":["68.60"],"并将其值与本地存储中的":["68.60"],"绑定":["68.60"],"onchange":["68.60"],"字节二面":["69.0"],"当拖动元素离开可放置区域时触发":["70.3"],"对象":["70.4"],"用于指定用户是否可以选择文本":["70.5"],"包括设置拖动元素的样式":["70.6"],"shaking":["70.9"],"友好":["70.9"],"代码也更容易压缩":["70.9"],"原文链接":["73.0"],"9s":["74.1"],"8s":["74.1","74.8","74.13"],"keyframes":["74.1","74.3","74.5","74.6","74.11","74.12","74.13"],"1deg":["74.2"],"179deg":["74.4"],"360deg":["74.5","74.11"],"16s":["74.6"],"opacity":["74.7"],"7s":["74.8"],"6s":["74.8"],"5s":["74.8"],"infinite":["74.9","74.13","74.14"],"50px":["74.9"],"ms":["74.11"],"rotate":["74.11"],"15px":["74.12"],"animate":["74.13","74.14"],"8px":["74.14"],"5px":["74.14"],"color":["74.14"],"465efb":["74.14"],"1s":["74.14"],"300px":["74.15"],"position":["74.15"],"relative":["74.15"],"absolute":["74.15"],"top":["74.15","130.2"],"margin":["74.15"],"因为这破坏了样式表中的固有的级联规则":["75.0"],"使得调试找":["75.0"],"bug":["75.0"],"变得更加困难了":["75.0"],"当两条相互冲突的带有":["75.0"],"规则的声明被应用到相同的元素上时":["75.0"],"拥有更大优先级的声明将会被采用":["75.0"],"一些经验法则":["75.0"],"一定要优先考虑使用样式规则的优先级来解决问题而不是直接加":["75.0"],"只有在需要覆盖全占或外部css的特定页面中使用":["75.0"],"不要在你的插件中使用":["75.0"],"不要在全站范围的css代码中使用":["75.0"],"lilist":["76.0"],"我的胃来食":["79.1"],"注":["80.0"],"亦可以var":["80.0"],"传入的时候直接传入arr":["80.0"],"需要注意的是":["80.0"],"注意如果":["80.0"],"并且可以将参数在执行的时候添加":["80.1"],"来设置具有唯一":["81.0"],"会话标识符":["81.0"],"session":["81.0","97.7"],"identifier":["81.0"],"函数数组":["81.1"],"cookietrimmed":["81.1"],"限制":["81.2"],"编码后的":["81.2"],"对":["81.2"],"大小不能超过":["81.2"],"4kb":["81.2"],"因此":["81.2","112.5"],"我们不能在一个":["81.2"],"中保存大的东西":["81.2"],"adminpage":["81.3"],"下不可见":["81.3"],"在site":["81.4"],"使cookie可以被在任何子域":["81.4"],"访问":["81.4"],"john":["81.4"],"设置为过去的时间":["81.5"],"则cookie将会被删除":["81.5"],"它是":["81.5"],"的替代选项":["81.5"],"指明了cookie的过期时间距离当前时间的秒数":["81.5"],"如果将其设置为0或者负数":["81.5"],"u0327":["82.10"],"扩展运算符的应用":["82.12"],"下面是扩展运算符取代":["82.12"],"方法的一个实际的例子":["82.12"],"应用":["82.12"],"math":["82.12"],"max":["82.12"],"简化求出一个数组最大元素的写法":["82.12"],"等同于":["82.13","112.4"],"只有当参数不少于两个时":["82.14"],"才会返回由参数组成的新数组":["82.14"],"参数只有一个正整数时":["82.14"],"实际上是指定数组的长度":["82.14"],"基本上可以用来替代":["82.14"],"o":["82.20","83.7"],"method":["82.20"],"es6":["82.21"],"允许字面量定义对象时":["82.21"],"用方法二":["82.21"],"表达式":["82.21"],"作为对象的属性名":["82.21"],"即把表达式放在方括号内":["82.21"],"regexp":["82.27","104.4"],"abc":["82.27","83.21"],"u":["82.29"],"prototype":["82.32","93.16"],"es6是ecmascript的第六个版本":["83.0"],"2015年发布":["83.0"],"引入了许多新的语言特性和改进":["83.0"],"声明的变量之前":["83.2"],"assignment":["83.3"],"to":["83.3","94.6"],"constant":["83.3"],"variable":["83.3"],"这个generator函数是为了生成斐波那契数列":["83.5"],"fibs":["83.5"],"yield":["83.5"],"msg":["83.6"],"wen":["83.6"],"wrong":["83.6"],"类数组都具有length属性":["83.7"],"因此还可以对这个属性进行解构赋值":["83.7"],"下面的写法会有不一样的结果":["83.9"],"allowed":["83.10"],"还有一个比较容易忽略的地方是":["83.10"],"rest":["83.12"],"参数代替":["83.12"],"永远是指向其上下文的":["83.13"],"queryselector":["83.14"],"所以为了使用数组的方法":["83.15"],"array":["83.15","93.16"],"先将其转为数组":["83.15"],"参数则是一个真正的数组":["83.15"],"可以直接使用数组特有的方法":["83.15"],"变量的写法":["83.15"],"obj2":["83.18","104.5"],"fun":["83.20"],"bar":["83.21"],"baz":["83.21"],"报错":["83.21","112.10","112.14"],"book类的实例":["83.22"],"book1":["83.22"],"导入常量和函数":["83.23"],"实例也可以作为其它对象的原型对象":["84.1"],"create":["84.1"],"对象是":["84.1"],"对象的原型":["84.1"],"obj对象本身没有time属性":["84.1"],"所以根据原型链":["84.1"],"对象上读取该属性":["84.1"],"导致被拦截":["84.1"],"同一个拦截器函数":["84.1"],"可以设置拦截多个操作":["84.1"],"对其属性进行访问时":["84.1"],"那么还有两种额外操作可拦截":["84.2"],"apply":["84.2","127.3"],"实例作为函数调用的操作":["84.2"],"call":["84.2","85.0"],"construct":["84.2"],"a":["84.4","89.0","103.8","115.2","116.9"],"实现链式操作":["84.4"],"pipe":["84.4"],"funcstack":["84.4"],"oproxy":["84.4"],"pipeobject":["84.4"],"myobj":["84.5"],"setprototypeof":["84.5"],"设置":["84.5"],"属性的值时":["84.5"],"并没有":["84.5"],"因此引擎会到":["84.5"],"的原型链去找":["84.5"],"myobj的原型对象":["84.5"],"是一个":["84.5"],"实例":["84.5"],"设置它的":["84.5"],"上面代码中":["84.7","112.9"],"方法拦截":["84.7"],"对象的属性赋值行为":["84.7"],"它采用":["84.7"],"方法将值赋值给对象的属性":["84.7"],"确保完成原有的行为":["84.7"],"然后再部署额外的功能":["84.7"],"longgedobj":["84.7"],"设置对象的属性值":["84.8"],"deleteproperty":["84.8"],"创建被观察者对象":["84.9"],"observalbe":["84.9"],"修改被观察者对象的数据":["84.9"],"privatemember":["84.10"],"私有成员":["84.10"],"可以通过":["84.10"],"此外":["84.12"],"获取值":["84.13"],"检查是否包含某个键":["84.13"],"会被垃圾回收机制回收":["84.14"],"并且对应的键值对也会对":["84.14"],"内部属性是实例的弱引用":["84.15"],"删除实例时它们也会随之消失":["84.15"],"删除键值对":["84.16"],"返回布尔值":["84.16","84.21"],"set可以存储任意类型的值":["84.17"],"检查是否包含某个值":["84.18"],"的成员是弱引用":["84.19"],"它在weakset结构中的引用就会自动被垃圾回收":["84.20"],"has":["84.21"],"接口":["84.23"],"接口主要提供":["84.24"],"遍历器与它所遍历的那个数据结构":["84.25"],"实际是分开的":["84.25"],"完全可以写出没有对应数据结构的遍历器对象":["84.25"],"或者用遍历器对象模拟出数据结构":["84.25"],"idmaker":["84.25"],"arguments":["84.26","123.2"],"done":["84.28"],"还是一个遍历器独享生成函数":["84.30"],"返回的遍历器对象":["84.30"],"spaced":["85.0"],"函数调用时":["85.0"],"函数名与":["85.0"],"之间不能有空格":["85.0"],"sparse":["85.0"],"arrays":["85.0"],"禁止稀疏数组":["85.0"],"sync":["85.0"],"nodejs":["85.0"],"禁止同步方法":["85.0"],"禁止使用三目运算符":["85.0"],"trailing":["85.0"],"一行结束后面不要有空格":["85.0"],"在调用super":["85.0"],"之前不能使用this或super":["85.0"],"literal":["85.0"],"禁止抛出字面量错误":["85.0"],"undef":["85.0"],"不能有未定义的变量":["85.0"],"init":["85.0"],"变量初始化时不能直接给它赋值为undefined":["85.0"],"不能使用undefined":["85.0"],"unexpected":["85.0"],"避免多行表达式":["85.0"],"underscore":["85.0"],"标识符不能以":["85.0"],"开头或结尾":["85.0"],"unneeded":["85.0"],"禁止不必要的嵌套":["85.0"],"isyes":["85.0"],"answer":["85.0"],"unreachable":["85.0"],"不能有无法执行的代码":["85.0"],"unused":["85.0"],"expressions":["85.0"],"禁止无用的表达式":["85.0"],"vars":["85.0"],"used":["85.0"],"不能有声明后未被使用的变量或参数":["85.0"],"define":["85.0","89.0"],"未定义前不能使用":["85.0"],"useless":["85.0"],"禁止不必要的call和apply":["85.0"],"禁用void操作符":["85.0"],"禁用var":["85.0"],"用let和const代替":["85.0"],"terms":["85.0"],"todo":["85.0"],"fixme":["85.0"],"xxx":["85.0"],"start":["85.0"],"不能有警告备注":["85.0"],"with":["85.0","127.3"],"禁用with":["85.0"],"是否允许非空数组里面有多余的空格":["85.0"],"arrow":["85.0"],"箭头函数用小括号括起来":["85.0"],"的前":["85.0"],"后括号":["85.0"],"在对象中使用getter":["85.0"],"块语句中使用var":["85.0"],"大括号风格":["85.0"],"避免多次调用回调什么的":["85.0"],"save":["87.0"],"createelementns":["87.0"],"www":["87.0"],"w3":["87.0"],"org":["87.0"],"xhtml":["87.0"],"网页可见区域高":["88.0"],"包括边线的宽":["88.0"],"网页正文全文宽":["88.0"],"cjs不能在浏览器中工作":["89.0"],"它必须经过转换和打包":["89.0"],"amd代表异步模块定义":["89.0"],"dep1":["89.0"],"dep2":["89.0"],"by":["89.0"],"returning":["89.0"],"地址的总长度":["90.0"],"n2":["90.0"],"取得":["90.0"],"号的位置":["90.0"],"substr":["90.0"],"从":["90.0","116.10"],"号后面的内容":["90.0"],"为数组中每个元素执行的函数":["91.1"],"并会丢弃它的返回值":["91.1"],"比较时间等等":["92.0"],"下面就是我对":["92.0"],"sunday":["92.6"],"saturday":["92.6"],"weekday":["92.6"],"isoweekday":["92.6"],"monday":["92.6"],"秒数":["92.7"],"subtract":["92.7"],"moment":["92.8"],"format":["92.8"],"yyyy年mm月dd日":["92.8"],"xxxx":["92.8"],"xx":["92.8"],"escaped":["92.11"],"endof":["92.12"],"add":["92.13","103.8","127.3"],"明天晚上7点49分":["92.13"],"lll":["92.14"],"2019年5月24日晚上7点50分":["92.14"],"startof":["92.15"],"year":["92.15"],"本年的的结束日期":["92.15"],"元素开始执行":["93.1"],"则需要传入初始值":["93.1"],"currentindex":["93.3"],"在这种情况下":["93.4"],"acc":["93.7","93.11"],"alphabet":["93.11"],"第二种实现方式":["93.12"],"doubled":["93.13"],"p4":["93.14"],"promisearr":["93.14"],"multiply16":["93.17"],"multiply24":["93.17"],"这将在一秒后执行":["94.1"],"这将每隔一秒执行一次":["94.2"],"也接受两个参数":["94.2"],"的最小延迟时间设定为4毫秒":["94.3"],"具体取决于浏览器或者环境":["94.3"],"functional":["94.5"],"interval":["94.5"],"executed":["94.5"],"模拟执行":["94.5"],"you":["94.6","127.3"],"want":["94.6"],"避免不必要的绘制":["94.7"],"并将该数据包发送给服务端":["95.1"],"客户端进入syn":["95.1"],"等待server确认":["95.1"],"服务端收到syn包":["95.1"],"必须先确认客户的syn":["95.1"],"发送一个ack值为j":["95.1"],"1的确认数据包":["95.1"],"同时也向客户端发送一个syn包":["95.1"],"在tcp握手的时候":["95.2"],"接收端发送":["95.2"],"syn":["95.2"],"的包是将一个":["95.2"],"和一个":["95.2"],"合并到一个包中":["95.2"],"所以减少了一次包的发送":["95.2"],"完成三次握手":["95.2"],"对于四次挥手":["95.2"],"tcp是全新工程通信":["95.2"],"在主动关闭放发送":["95.2"],"ip模型":["96.0"],"比较简洁":["96.0"],"具有较强的实际应用价值":["96.0"],"将计算机网络分为了四个层次":["96.0"],"cookie":["97.1","97.7"],"属性和标签中":["97.2"],"包含类似":["97.2"],"image":["97.2"],"如果url被解析":["97.3"],"那么攻击脚本就会被运行":["97.3"],"反射型xss根存储型xss的区别":["97.3"],"存储型xss的恶意代码存放在数据库里":["97.3"],"quto":["97.4"],"的操作的攻击方法":["97.5"],"攻击者诱导受害者进入第三方网站":["97.5"],"在第三方网站中":["97.5"],"而且低版本浏览器存在伪造":["97.6"],"referer的风险":["97.6"],"而一般网站的":["97.7"],"会被绑定到指定参数的对象上":["98.1"],"一般通过上下文对象调用函数时":["98.1"],"结果为":["98.2"],"虽然":["98.2"],"函数":["98.2"],"对象中的方法":["98.2"],"但是在赋值给":["98.2"],"window上没有text属性":["98.3"],"所以返回undefined":["98.3"],"拓展":["98.3"],"如果想要让console":["98.3"],"foo":["98.4"],"lucas":["98.4"],"logname":["98.4"],"如果返回的不是一个对象":["98.5"],"则可以使用箭头函数来解决":["98.6"],"这里打印的是":["98.7"],"如果修改了foo函数为箭头函数的形式":["98.7"],"对象提供像":["99.0"],"toexponential":["99.0"],"这样的方法":["99.0"],"当在原始值上访问属性时":["99.0"],"会自动将值包装到相应的包装对象中":["99.0"],"你可以安全地存储和操作巨大的整数":["99.1"],"甚至超过":["99.1"],"的安全整数限制":["99.1"],"symbol类型":["99.1"],"循环来枚举属性":["99.3"],"configurable":["99.3"],"表示该属性是否可以删除":["99.3"],"是否可以更改为访问器属性":["99.3"],"并可以更改其特性":["99.3"],"访问器属性":["99.3"],"将键与两个访问器函数":["99.3"],"output":["99.4"],"用于记录实例是由哪个构造函数创建":["100.1"],"定义一个函数":["100.1"],"我是原型属性":["100.2"],"所有实例都可以读取到我":["100.2"],"的概念":["100.3"],"当我们调用":["100.3"],"先在":["100.3"],"对象本身寻找":["100.3"],"没有找到则通过":["100.3"],"找到了原型对象":["100.3"],"也没有找到":["100.3"],"然后又通过":["100.3"],"可以看到function函数的构造函数就是本身了":["100.4"],"那我们也可以说":["100.4"],"function时所有函数的构造函数":["100.4"],"到这里我们已经对":["100.4"],"属性有了一个初步认识":["100.4"],"它的作用是从一个对象指向一个函数":["100.4"],"在函数体内部又重新给":["101.0"],"赋值了":["101.0"],"所以第一个打印的是":["101.0"],"第二次打印出来一个":["101.0"],"完全是因为在函数体内部声明了一个变量":["101.0"],"直接打印就会打印出":["101.0"],"至于函数体外边的":["101.0"],"那就更简单了":["101.0"],"由于在全局已经声明了变量":["101.0"],"所以在全局作用域中打印出来的就是":["101.0"],"还有一个例子":["101.0"],"中的一部分或者全部因为大小边距等引起结构变化":["102.1"],"display":["102.2"],"none":["102.2","105.7"],"还有js动态添加的元素等":["102.2"],"浏览器把所有的样式解析成样式结构体":["102.2"],"在dom树和样式结构体组合后构建成":["102.2"],"不包括":["102.2"],"那么元素的":["102.3"],"offsetwidth":["102.4"],"offsetheight":["102.4"],"scrolltop":["102.4"],"flexbox":["102.5"],"浏览器就会flush队列":["102.7"],"进行一个批处理":["102.7"],"找不到则返回":["103.1","103.20"],"原数组保持不变":["103.2"],"x2":["103.3"],"newarr":["103.4","103.23"],"islessthan6":["103.6","103.7"],"表示被删除的元素":["103.9"],"新数组的长度":["103.10"],"返回的是删除的那个元素":["103.11"],"方法时候":["103.16"],"如果传入的元素是":["103.16"],"则不会返":["103.16"],"回报错":["103.16"],"并且返回的结果是字符串的":["103.16"],"元素5对应的下标为":["103.17"],"删除一个元素":["103.18"],"还支持传入箭头函数":["103.21"],"可以进行函数操作":["103.21"],"使用箭头函数作为映射函数去操作多个元素":["103.21"],"z":["103.22"],"map":["103.22"],"string":["103.22","112.1","112.6","112.14"],"fromcharcode":["103.22"],"并且获取它们各自的平方的数组":["103.23"],"引用数据类型的变量是一个指向堆内存中实际对象的引用":["104.1"],"即浅拷贝是拷贝一层":["104.2"],"concat":["104.3"],"直接返回":["104.4"],"不进行操作":["104.4"],"instanceof":["104.4"],"deepclone":["104.5"],"一个深拷贝方法":["104.5"],"深拷贝是新开栈":["104.6"],"s":["105.0"],"请求来获取的":["105.0"],"pwa通常会更加反应迅速":["105.1"],"则直接从服务端获取资源":["105.2"],"强缓存与协商缓存的区别":["105.2"],"强缓存不会发送到服务器":["105.2"],"资源更新了可能浏览器还不知道":["105.2"],"协商缓存会发送请求给服务器":["105.2"],"则使用协商缓存":["105.3"],"使用协商缓存":["105.3"],"的值进行混存":["105.4"],"意思是在600秒内再次发起这个请求":["105.4"],"则会直接使用缓存结果":["105.4"],"强制缓存生效":["105.4"],"️":["105.4","131.1"],"在无法确定客户端的事件是否与服务端的事件同步的情况下":["105.4"],"相比于":["105.4"],"是更好的选择":["105.4"],"所以同时存在时":["105.4"],"只有":["105.4","132.3"],"生效":["105.4"],"如何在浏览器中判断强制缓存是否生效":["105.4"],"关于chrome网络请求的size":["105.4"],"可能会出现三种情况":["105.4"],"协商缓存失效":["105.5"],"是客户端再次发起请求时":["105.6"],"携带上次请求返回的唯一标识":["105.6"],"值":["105.6"],"通过此字段值告诉服务器":["105.6"],"该资源上起请求返回的唯一标识值":["105.6"],"服务器收到该请求后":["105.6"],"发现该请求头中":["105.6"],"match":["105.7"],"协商缓存由服务器决定是否使用缓存":["105.7"],"若协商缓存失效":["105.7"],"而把a称为":["106.0"],"b的父类别":["106.0"],"trunk":["106.1"],"后备厢":["106.1"],"这样轿车和货车就是不一样的":["106.1"],"但是二者都属于汽车这个类":["106.1"],"汽车":["106.1"],"轿车继承了汽车的属性":["106.1"],"而不需要再次在":["106.1"],"中定义汽车已有的属性":["106.1"],"继承":["106.1"],"寄生式继承":["106.2"],"没问题":["106.4"],"关键字直接实现继承":["106.8"],"constructor":["106.8"],"原型方法":["106.8"],"即":["106.8","128.1"],"下面可以简写为":["106.8"],"str":["107.0"],"substring":["107.0"],"获取url中":["107.0"],"之后的字符":["107.0"],"去掉第一位的问号":["107.0"],"以":["107.0"],"分隔字符串":["107.0"],"获得类似name":["107.0"],"xiaoli这样的元素数组":["107.0"],"split":["107.0"],"将每一个数组元素以":["107.0"],"分隔并赋给obj对象":["107.0"],"i":["107.0"],"防抖":["108.0"],"debounce":["108.0"],"starttime":["108.2"],"curtime":["108.2"],"当前时间":["108.2"],"remaining":["108.2"],"不为null":["108.4"],"callnow":["108.4"],"第一次会立即执行":["108.4"],"来实现":["108.5"],"而节流是在一段连续操作中":["108.5"],"每一段时间只执行一次":["108.5"],"防止重复渲染":["108.6"],"节流":["108.6"],"是计算机网络中处于网络最外围的设备":["110.0"],"主要用于用户信息的输入以及处理结果的输出等":["110.0"],"客户端":["110.0"],"客户端与服务段对应":["110.0"],"又称为用户端":["110.0"],"为用户提供本地服务的程序":["110.0"],"用来接收来自服务端的数据或者资源":["110.0"],"也可以理解为软件":["110.0"],"服务端":["110.0"],"为客户端提供服务":["110.0"],"事件驱动机制":["110.1"],"可以同时处理超过4万的用户连接":["110.1"],"缺点就是一个用户造成的线程奔溃会让整个服务器都崩溃":["110.1"],"其它用户也会崩溃":["110.1"],"单线程在同一时刻只能执行一个任务":["110.1"],"也就是说":["110.1"],"执行环境相对更简单":["110.1"],"更高效":["110.1"],"但是在单线程中i":["110.1"],"o设备对其来说是致命的":["110.1"],"因为i":["110.1"],"里删除指定属性":["112.1"],"返回剩下的属性":["112.1"],"指定删除的键名":["112.1"],"keys":["112.1"],"可以是对象类型":["112.1"],"中不存在的属性":["112.1"],"但必须兼容":["112.1"],"中已经存在的键名":["112.2"],"t4":["112.2"],"实现如下":["112.3","112.13","112.16"],"表示去除可选属性的":["112.4"],"问号":["112.4"],"使其变为必选属性":["112.4"],"相对应的":["112.4"],"表示增加可选属性的":["112.4"],"的实现也可以写成下面这样":["112.5"],"表明键值是联合类型":["112.6"],"的类型必须兼容":["112.6"],"的实现如下":["112.7","112.9"],"t6":["112.8"],"如果参数":["112.8"],"不包含在联合类型":["112.8"],"t0":["112.10"],"是两个特殊值":["112.10","112.12"],"分别返回":["112.10","112.12","112.14"],"gift":["112.11"],"export":["112.11"],"getgift":["112.11"],"模块只输出了函数":["112.11"],"没有输出参数":["112.11"],"和返回值":["112.11"],"这时就可以通过":["112.11"],"unknown":["112.12","112.16"],"t8":["112.12"],"t2":["112.14"],"如果类型参数是":["112.14"],"两个特殊值":["112.14"],"thisparametertype":["112.16"],"必须打开noimplicitthis设置":["112.17"],"下面是另一个例子":["112.17"],"getx":["112.17"],"枚举类型被用于取值被限定在一定范围内的取值":["114.0"],"实际上上述例子会被编译成下面这种格式":["114.1"],"当然":["114.2"],"手动赋值也可以是":["114.2"],"小数":["114.2"],"常数枚举表达式是":["114.3"],"表达式的子集":["114.3"],"它可以在编译阶段求值":["114.3"],"当一个表达式满足下面条件之一时":["114.3"],"它就是一个常数枚举表达式":["114.3"],"数字字面量":["114.3"],"expression":["114.4"],"赋值计算项编译报错":["114.4"],"常量枚举与枚举的区别":["114.4"],"声明差异":["114.4"],"常量枚举":["114.4"],"进行声明":["114.4"],"枚举":["114.4"],"则通过":["114.4"],"类或接口时使用类型参数":["115.1"],"这些类型参数在使用时可以被动态地指定具体的类型":["115.1"],"strarr":["115.2"],"num":["115.3","132.7","132.8"],"ts编译错误":["115.3"],"ts泛型约束限制":["115.3"],"多个泛型类型也可以互相约束":["115.3"],"copyfileds":["115.3"],"target":["115.3"],"也可以提前把泛型定义到接口上":["115.4"],"createtime":["116.1"],"username":["116.1"],"useravatar":["116.1"],"picture":["116.1"],"ianswerrecord":["116.1"],"comment":["116.1"],"audio":["116.1"],"通过提取公共部分":["116.1"],"利用联合类型将类型定义简化并且可复用":["116.1"],"iuserbaseinfo":["116.1"],"useavatar":["116.1"],"hello":["116.2"],"bird":["116.2","116.7"],"fly":["116.2"],"类型守卫可以通过一些条件检查来确定变量的确切类型":["116.3"],"touppercase":["116.4"],"else判断体里的逻辑是将":["116.4"],"的类型推断为":["116.4"],"number类型":["116.4"],"pets":["116.6"],"这里":["116.6"],"通过自定义的":["116.6"],"将pets的类型收窄为":["116.6"],"之后调用":["116.6"],"pet":["116.7"],"fish":["116.7"],"swim":["116.7"],"getusername":["116.8"],"中只是给现有类型起了一个别名":["116.9"],"它们并不会创建出不同或独立的类型":["116.9"],"当你使用类型别名时":["116.9"],"实际上就相当于直接使用了被别名的原始类型":["116.9"],"换句话说":["116.9"],"类型别名并不会创建出全新的":["116.9"],"不同的类型":["116.9"],"里":["116.10"],"类型别名不能被继承和实现":["116.10"],"它们也不能继承和实现其它类型":["116.10"],"开始":["116.10"],"类型别名可以被继承并生成新的交叉类型":["116.10"],"restarr":["116.12"],"footarr":["116.12"],"上面这个示例得到的结果是得到一个去掉首位字符的数组":["116.12"],"checkalivetype参数的类型":["118.0"],"解释":["118.0"],"先检查是否为屏幕闪烁":["118.0"],"不可以则自动读数字":["118.0"],"返回参数":["118.0"],"errmag":["118.0"],"错误信息":["118.0"],"错误码":["118.0"],"verifyresult":["118.0"],"本次认证结果凭据":["118.0"],"不同":["120.1"],"中的元素不是按照它们在内存中的的物理顺序存储的":["120.1"],"insert":["120.2"],"remove":["120.2"],"删除":["120.2"],"append":["120.2"],"删除指定位置的节点":["120.4"],"removeat":["120.4"],"在一个":["120.5"],"首节点和末节点被连接在一起":["120.5"],"这种方式在单向和双向链表中皆可实现":["120.5"],"findparams":["120.6"],"funtion":["120.6"],"查找具有特定值或者满足回调函数的节点":["120.6"],"find":["120.6"],"如果指定了回调函数":["120.6"],"那么尝试通过回调函数找到节点":["120.6"],"如果指定了值":["120.6"],"那么尝试通过值找到节点":["120.6"],"commpare":["120.6"],"删除尾部节点":["120.6"],"dealetetail":["120.6"],"没有尾部节点可以删除":["120.6"],"链表中只有一个节点":["120.6"],"deletetail":["120.6"],"新的缓存组概念被引入":["122.0"],"可以更细粒度地控制模块的缓存策略":["122.0"],"内置代码分割优化":["122.0"],"optimization":["122.0"],"splitchunks":["122.0"],"嵌套括号被隐含在树的结构中":["123.1"],"并没有以节点的形式呈现":["123.1"],"而类似于":["123.1"],"property":["123.2"],"computed":["123.2"],"optional":["123.2"],"形成一个新的表现形式":["123.3"],"code":["123.3"],"generation":["123.3"],"的任务是在":["123.4"],"的基础上将单词序列组合成各类语法短语":["123.4"],"程序":["123.4"],"语句":["123.4"],"常见的源码转换":["124.1"],"主要分为三种情况":["124.1"],"压缩":["124.1"],"浏览器中如何设置source":["124.3"],"包含eval关键字的配置项不产生":["124.4"],"eval依靠sourceurl定位原始代码":["124.4"],"其它都是":["124.4"],"map定位":["124.4"],"性能最低":["124.4"],"将map通过dataurl嵌入":["124.5"],"不再生成":["124.5"],"map文件":["124.5"],"减少文件数":["124.5"],"cheap":["124.5"],"展示源码是":["124.7"],"es5":["124.7"],"的代码":["124.7"],"因为已经被":["124.7"],"babal":["124.7"],"转义了":["124.7"],"webpack":["124.9"],"会生成":["124.9"],"sourcemap":["124.9"],"文件以提供给错误收集工具":["124.9"],"比如sentry":["124.9"],"英文官网":["126.1"],"指针保持在最后一次成功提交的位置":["127.1"],"引用被设置为":["127.1"],"指向难以应用的修改的提交":["127.1"],"在索引文件和工作区中":["127.1"],"可能在不同的上下文中解决了相同的问题":["127.2"],"可以将一个开发者修复的解决方案单独应用到其它分支":["127.2"],"could":["127.3"],"not":["127.3"],"hint":["127.3","130.3"],"after":["127.3"],"resolving":["127.3"],"conflicts":["127.3"],"mark":["127.3"],"them":["127.3","130.3"],"rm":["127.3","130.3"],"pathspec":["127.3"],"then":["127.3"],"run":["127.3"],"can":["127.3","130.3"],"instead":["127.3","130.3"],"skip":["127.3","130.3"],"然后一直回车就会提示rsa保存成功":["128.1"],"这样在":["128.1"],"ssh目录就会生成两个文件":["128.1"],"第四步":["128.1"],"cat":["128.1"],"然后复制里边的信息":["128.1"],"在网页登录github账号":["128.1"],"点击个人头像":["128.1"],"进入setting":["128.1"],"然后选择":["128.1"],"merge":["129.1"],"这样可能会产生冲突":["129.1"],"新建分支":["129.2"],"删除本地分支":["129.2"],"删除远程分支":["129.2"],"删除后还需推送到服务器":["129.2"],"origin":["129.2"],"删除后推送至服务器":["129.2"],"指的是某个branch在服务器上的最新状态":["129.3"],"我们可以在本地通过它查看刚取回的更新信息":["129.3"],"远程主机名":["129.4"],"远程分支名":["129.4"],"这个时候用":["130.2"],"rebase":["130.2"],"就可以解决":["130.2"],"rewinding":["130.2"],"replay":["130.2"],"your":["130.2"],"on":["130.2","132.4"],"it":["130.2"],"applying":["130.2"],"现在再查看一下提交历史":["130.2"],"2e2b995":["130.2"],"完美解决":["130.2"],"现在再push推送到远端":["130.2"],"0001":["130.3"],"am":["130.3"],"show":["130.3"],"current":["130.3"],"see":["130.3"],"all":["130.3"],"manually":["130.3"],"resolved":["130.3"],"conflicted":["130.3"],"files":["130.3"],"state":["130.3"],"before":["130.3"],"失败了":["130.3"],"原因很简单":["130.3"],"两个分支修改个同一个文件":["130.3"],"产生了冲突":["130.3"],"所以先需要解决冲突":["130.3"],"打开冲突的文件":["130.3"],"解决冲突":["130.3"],"会看到乱七八糟的所有增量修改历史":["131.0"],"其实对别人来说":["131.0"],"danger":["131.1"],"但是不保留该提交的注释信息":["131.2"],"exec":["131.2"],"表示执行shell命令":["131.2"],"d":["131.2"],"表示丢弃这条commitid":["131.2"],"根据我们的需求":["131.2"],"我们需要讲第二三次提交合并到第一次提交上去":["131.2"],"最终只形成一个提交":["131.2"],"提交信息":["131.2"],"从而可以去执行其它操作":["132.0"],"方便查找":["132.3"],"wip":["132.4"],"master":["132.4"],"比如第二个":["132.6","132.7"],"这个文件我也想存起来":["132.10"],"很明显":["132.10"],"先执行下":["132.10"]},{"0":["52.7","62.28","74.14","84.1","93.12","94.6","103.23","112.11"],"1":["12.3","13.0","61.8","74.13","84.6","93.12","94.6","98.3","98.5","114.2","120.4","129.2","132.6"],"2":["12.1","12.2","61.8","81.0","83.6","98.3","101.0"],"3":["20.0","29.4","41.1","41.4","61.8","68.7","68.13","81.0","82.18","95.1","128.1"],"4":["13.7","61.44","61.47","64.20","68.11","68.36","74.1","85.0","92.8","92.12","110.1","127.1"],"5":["21.0","47.0","52.5","61.47","62.27","62.28","62.38","74.9","74.13","83.5","84.6","94.5","98.1","114.2"],"6":["61.42","62.26","84.6","93.17","103.2","103.3","114.2"],"7":["62.25","84.6","92.9"],"8":["22.0","22.1","62.25","84.6","103.3"],"9":["93.17"],"10":["9.0","85.0","93.14","103.3","116.9"],"11":["85.0"],"16":["92.7"],"17":["92.6","92.7"],"18":["25.0","92.6","92.7","115.3"],"19":["25.1","92.6"],"20":["74.1","81.2"],"22":["84.6"],"25":["74.13"],"30":["57.3","84.29"],"31":["92.15"],"36":["68.11","93.17"],"40":["74.1","74.6"],"42":["116.9"],"44":["123.2"],"46":["123.2"],"50":["74.5","123.2"],"62":["62.38"],"66":["103.18","114.2"],"75":["74.13"],"80":["85.0"],"96":["97.4"],"97":["82.7"],"98":["82.7"],"99":["82.7","83.10"],"394":["130.2"],"500":["61.4"],"502":["61.4"],"1000":["62.31"],"1200":["93.14"],"2010":["61.37"],"push":["2.0","48.3","55.1","93.10","93.12","120.6"],"j为":["3.0"],"与数组每一项的差值":["3.0"],"判断map中是否包含着这个差值的项":["3.0"],"如果包含":["3.0"],"则这个时候这个差值与nums":["3.0"],"之和等于target":["3.0"],"has":["3.0","84.16"],"通过两个指针一快一慢来限定重复项目":["4.0"],"fast":["4.0"],"console":["5.0","61.3","82.16","82.24","83.22","83.23","93.6","93.7","93.13","93.14","98.4"],"log":["5.0","61.3","82.10","82.16","82.23","82.24","82.25","83.20","83.22","83.23","93.6","93.14","98.4"],"function":["5.0","52.8","84.1","114.1","115.5"],"len1":["5.0"],"len2":["5.0"],"计算递减序列的长度":["6.0"],"currentlength":["6.0"],"n":["7.0","103.22"],"left":["7.0","65.4"],"right":["7.0","65.4","74.15"],"ans":["7.0"],"while":["7.0","8.0"],"let":["10.0","82.21","83.7","104.4"],"leftsum":["10.0"],"for":["10.0","25.2","25.3","65.37","65.38","84.2"],"k":["10.0","95.1","103.22"],"length":["10.0","11.0","52.7","83.7","85.0","93.12"],"if":["10.0","11.0","21.2","41.10","61.3","65.35","84.1","116.6","123.1"],"比较左侧数字之和是否等于总和减去左侧数字和当前数字的值":["10.0"],"服务端js运行环境":["12.0"],"txt":["12.0","12.1","62.48"],"以上内容除去webstorm外":["12.0"],"都可以免费获得":["12.0"],"webstorm可以获取免费试用30天的版本":["12.0"],"评估了angular":["12.1"],"而webstorm是从11版本才开始部分支持angular":["12.1"],"2的typescript开发":["12.1"],"是因为要同时评估angular":["12.2"],"而angular":["12.2"],"2必须要在非常新的浏览器上才能正确运行":["12.2"],"目前最新的stable稳定版本":["12.3"],"标志":["12.4","14.1"],"这是使用了淘宝提供的npm镜像服务来安装所需的软件":["12.4"],"这样访问的速度会加快非常多":["12.4"],"如果您优先运行了后面的可选的命令":["12.4"],"那么之前三个命令的此标志项都可以去除":["12.4"],"x的命令和windows类似":["12.4"],"但是前面都加了一个sudo":["12.4"],"用于提权后把这些工具安装到node":["12.4"],"js的公共库中":["12.4"],"安装完成后":["12.4"],"请手动命令确认这几个工具的版本":["12.4"],"如果您安装时不成功":["12.4"],"请先确认node":["12.4"],"js工具的版本是否是最新的":["12.4"],"安装好后":["12.4"],"您的几个工具的版本应该如下":["12.4"],"图2":["13.0"],"创建项目":["13.0"],"用于存放图片文件":["13.1"],"但是":["13.1"],"为什么要把它们放置到":["13.1"],"即可保证目录外的内容不被暴露到网络当中":["13.2"],"另外":["13.2"],"这样设置的主要原因是为了使用git将整个项目都管理起来":["13.2"],"将文档内容拷贝过去":["13.3"],"命令行工具":["13.4"],"文件":["13.5","14.1"],"里面的内容如下":["13.5"],"以上配置文件会告诉":["13.6"],"将文档下载到":["13.6"],"我们将从安装angularjs开始":["14.0"],"也即是angularjs的1":["14.1"],"0版本":["14.1"],"当前的最新版本":["14.1"],"这个额外的标志":["14.1"],"是告诉":["14.1"],"把我们的安装记录放置入":["14.1"],"json":["14.1"],"这样":["14.1","61.32"],"我们以后可以直接通过":["14.1"],"对此项目使用的angularjs或其它库进行更新":["14.1"],"此时":["14.1","50.5","68.7"],"当我们打开":["14.1"],"我们会发现文档中的内容变多了":["14.1"],"我将":["14.2"],"从":["14.2","47.0"],"en":["14.2"],"改为了":["14.2"],"放在head部分的javascript文件":["14.3"],"会在body渲染完毕后才开始执行":["14.3"],"从angularjs工作的特性来看":["14.3"],"ng":["14.4","32.4"],"h1":["14.4","18.1","31.0","41.10"],"如果出现以上结果":["14.5"],"请您按书的前面内容仔细检查您的代码":["14.5"],"world到此结束":["14.5"],"下面我们将进入angularjs的世界":["14.5"],"页面模板获取和植入":["15.0"],"全局事件监听":["15.0"],"如何调试angularjs代码":["15.0"],"如何使用自动化测试工具":["15.0"],"表单":["15.0"],"数据验证":["15.0"],"界面库的引入":["15.0"],"并将表达式进行计算的结果显示在此处":["16.0"],"这也是angularjs最吸引人的特性":["16.0"],"因为它还支持将javascript中的数据显示在此处":["16.0"],"我们将在后面的内容中介绍如何操作":["16.0"],"并且":["16.0","29.0","50.0"],"和":["17.0","25.0","64.6","65.3","65.19","68.15","91.2","108.0"],"如":["17.1","65.15","105.4"],"data":["17.1","23.0"],"如果有读者清楚":["17.2"],"可与我联系以便更新上此段内容":["17.2"],"例如":["17.3","82.18","99.4","110.0"],"div":["17.3","28.0","29.2","30.1","30.7","61.36","83.14"],"声明好":["18.0"],"x":["18.1","23.4","80.0","84.1","93.16","103.21"],"body":["18.1","28.0","30.7","34.0"],"hello":["18.1","65.43","82.20","84.1"],"world":["18.1","19.0","65.43"],"声明放置在":["18.2"],"元素中":["18.2"],"那么angularjs":["18.2"],"只会":["18.2"],"针对":["18.2"],"元素中的内容进行处理":["18.2"],"开发者工具":["18.3"],"中看到报错信息":["18.3"],"以下表达式不会输出任何内容":["19.0"],"因为它在firstctrl之外":["19.0"],"p":["19.0","34.0","49.6","83.10","112.3","116.1"],"下面的内容不会显示":["19.0"],"这里只是为了表明变量命名的约束":["19.3"],"如果可能":["19.3"],"请不要使用拼音命名的变量":["19.3"],"值得注意的是":["19.3"],"之下除了可以传入数据外":["19.3"],"还可以传入其它函数":["19.3"],"比如我们声明一个":["19.3"],"中传入数据后":["19.4"],"通过表达式可以直接调用":["19.4"],"之间共享时":["19.5"],"如果不对数据进行二次封装":["19.5"],"可能会导致数据互相访问不了的情况":["19.5"],"运行结果":["20.0","21.0","25.3"],"图4":["20.0","21.0","22.1","23.2","25.0","25.1"],"value":["20.1","25.4","49.1","51.16"],"按钮":["20.1","48.4"],"click":["20.1"],"点击按钮":["20.1"],"我们即可看到数据通过弹出框显示了出来":["20.1"],"bold":["20.2"],"red":["20.2"],"来调整样式":["20.2"],"hide中的文字":["21.0"],"if为真时界面":["21.0"],"且之后不会使用到":["21.1"],"那么可以使用":["21.1"],"如果之后还可能会显示出来":["21.1"],"等标签中传入参数时":["21.2"],"是不需要双括号":["21.2"],"从源代码可以看出来":["22.0"],"刷新页面后":["22.1"],"让我们点击第一个按钮":["22.1"],"效果如下":["22.1"],"index字段应用效果":["22.1"],"format":["23.0"],"timezone":["23.0"],"将时间转化到对应的格式和时区":["23.0"],"将对象转化为json格式内容输出":["23.0"],"lowercase":["23.0"],"将文本转化为小写":["23.0"],"uppercase":["23.0"],"将文本转化为大写":["23.0"],"jerry":["23.1"],"model":["23.2","24.2"],"运行效果":["23.2","24.2","30.6"],"td":["23.3","23.4"],"in":["23.4","25.3","25.4","30.4","65.37","65.38","112.3"],"list":["23.4"],"filter":["23.4"],"选中后上方文字将变化为粗体":["24.1"],"style中加上bold类":["24.1"],"选中后上方文字将变红":["24.1"],"背景变黄":["24.1"],"style中加上has":["24.1"],"error类":["24.1"],"对应多个来源":["24.3"],"以及多个设定好的样式开关":["24.3"],"此示例就不进行具体的运行效果展示了":["24.3"],"span":["24.4"],"示例文本":["24.4"],"清除样式":["24.5"],"br":["24.5"],"运行页面":["25.0"],"我们可以看到下拉列表中有列表中的五种颜色":["25.0"],"并且选中不同颜色后":["25.0"],"下方方框内的颜色":["25.0"],"会根据选择变化":["25.0"],"options运行效果":["25.0"],"颜色根据选中状态变化":["25.0"],"利用到了":["25.0"],"group":["25.3"],"by":["25.3"],"option":["25.4"],"修改修改代码":["26.0"],"观察具体的运行情况":["26.0"],"class":["27.0","53.3"],"还有一种比较特殊的放置在注释中生效的表达方式":["27.0"],"if等使用方法":["27.1"],"如果您现在再仔细看下它们的使用方法":["27.1"],"但是相信我":["27.2"],"这些付出是非常有价值的":["27.2"],"rel":["28.0","30.7","34.0"],"stylesheet":["28.0","30.7","34.0"],"href":["28.0","30.7"],"style":["28.0","30.7"],"people":["28.2"],"sex":["28.3","115.3"],"具体的效果":["28.3"],"是会去除掉":["28.3"],"eac":["28.4"],"以上三种都可使用":["28.4"],"在javascript中的命名":["29.0"],"与在html对应使用时的名称":["29.0"],"peoplelist":["29.1","30.4"],"peoplelistarray":["29.1"],"作为连接符":["29.5"],"其它的两种符号":["29.5"],"另":["29.6"],"的存在":["29.6"],"可能是针对xhtml的支持":["29.6"],"注意":["29.6","65.46","82.34","83.6","84.5","93.14","98.7","128.1"],"当然是能够并列放置这些directive":["30.0"],"通过传入不同的数据来让directive展示不同的内容":["30.0"],"peopleoneinfo":["30.0"],"html":["30.1","31.2","61.36","62.48","65.7","75.0","81.2"],"中":["30.2","102.2"],"运行效果如下":["30.3"],"info":["30.4","44.3","65.42","81.6","105.6"],"注意这里绑定btn":["30.7"],"btnclick中传入的参数的命名":["30.7"],"同时":["31.0","65.18","65.56"],"我们还要加入一个新的html文档":["31.0"],"为了演示":["31.0"],"我们将新建的文档放置在和index":["31.0"],"html同一个目录":["31.0"],"命名为part":["31.0"],"id":["31.1","65.51","68.18","85.0"],"part":["31.1","31.2"],"即是这部分html代码片段的命名":["31.1"],"使用时":["31.1"],"直接使用":["31.1"],"即可":["31.1"],"这样进行封装":["31.1"],"与函数封装调用的概念类似":["31.1"],"当默认html进行展示时":["31.1"],"运行效果与上面的图片一致":["31.2"],"angularjs会自动将":["32.2"],"绑定到jquery上":["32.2"],"保证在angular":["32.3"],"js之前引入jquery":["32.3"],"controller":["32.4"],"firstctrl":["32.4"],"form":["32.4","33.0"],"鼠标移开了":["32.5"],"运行时":["32.5"],"当鼠标移动到标题上":["32.5"],"则标题文字会变化成":["32.5"],"并加上删除线效果":["32.5"],"当鼠标移开":["32.5"],"则文字会变为":["32.5"],"这段文字是放置在directive中间的":["33.0"],"标签1":["34.0"],"h4":["34.0"],"标题1":["34.0"],"这是第一个标签下的内容":["34.0"],"标签2":["34.0"],"andtoo":["37.1"],"net":["37.1"],"微信":["37.1"],"深入学习angularjs":["37.3","38.0"],"directive":["37.3","38.0"],"制作一个自定义的directive":["37.3","38.0"],"directive的命名和使用规则":["37.3","38.0"],"让directive支持传入数据":["37.3","38.0"],"使用templateurl获取模板":["37.3","38.0"],"让directive动起来":["37.3"],"译":["37.4"],"这本书只有141页":["37.4"],"定价28元":["37.4"],"网站还有折扣":["37.4"],"阅读起来非常轻松":["37.4"],"如果您有编程经验":["37.4"],"我将angularjs作为一个类似于app的载体":["37.5"],"当网站代码在客户端载入完成后":["37.5"],"网络带宽优化":["37.6"],"如果需要扩展":["37.6"],"可以提高机器配置或者增加机器数量":["37.6"],"如果你之前有java或其它后端语言的编程经验":["37.7"],"angularjs是让你快速上手web前端开发的很好的选择":["37.7"],"当时花费了我19美金":["37.8"],"接下来我所做的事情":["37.8"],"就是拿着这个模板的代码":["37.8"],"修改html和增加controller":["37.8"],"service":["37.8"],"调整ui":["37.8"],"router的配置":["37.8"],"最终完成了网站的第一个版本":["37.8"],"花的时间大约是2个月出头":["37.8"],"前端":["37.8"],"后端":["37.8"],"部署调试":["37.8"],"开发工作全部由我一人完成":["37.8"],"虽然我会尽力保证信息的正确性":["37.9"],"但也还请您在阅读的过程中批判的接收信息":["37.9"],"如果有何问题":["37.9"],"不一定会最终成功":["37.10"],"typescript的引入我不好评价":["37.10"],"但是强类型定义和模型化并不太符合我的业务模式":["37.10"],"api一次性获取界面需要的所有数据":["37.10"],"这些数据已经在服务端进行好了类型定义和完整性处理":["37.10"],"本地主要是实现对crud的调用":["37.10"],"综上":["37.10"],"to":["37.11","68.38"],"view":["37.11","50.2"],"a":["37.11","49.5","56.2","112.16"],"copy":["37.11"],"of":["37.11"],"本章总结":["38.0"],"高阶组件来执行":["41.1"],"react是jsx渲染模板":["41.1"],"操作是一个非常昂贵的操作":["41.2"],"很耗费性能":["41.2"],"所以就有了虚拟dom":["41.2"],"虚拟dom是对真实dom的映射":["41.2"],"特性而无需编写类组件":["41.3"],"hooks并没有完全取代生命周期的方法":["41.3"],"但是可以在函数组件中完成类似的功能":["41.3"],"常用的hooks有":["41.3"],"usestate":["41.3","64.8"],"逻辑代码方便复用":["41.4"],"stricemode":["41.5"],"未来的":["41.6"],"react":["41.6","53.2"],"使用":["41.7","65.12","65.56","100.3","127.2"],"pushstate":["41.7","65.19"],"函数可以支持临时储存":["41.7"],"zustand":["41.7"],"jsx是js语法扩展允许在html中写js":["41.8"],"js是原生写法需要通过script标签引入":["41.8"],"的语法糖":["41.9"],"因此使用jsx可以完成的任何事情都可以通过原生js来完成":["41.9"],"something":["41.10"],"went":["41.10"],"反之就是react组件":["41.11"],"两者的区别就是":["41.12"],"fragment可以使用key":["41.12"],"当需要快速地继承已有的html表单元素或访问dom元素时":["41.13"],"可以考虑使用非受控组件":["41.13"],"打包后文件体积比较大":["42.1"],"普通客户端渲染加载所有所需文件的时间较长":["42.1"],"之前的生命周期":["42.2"],"因此有些第三方库会受到影响":["42.2"],"shoulecomponentupdate":["43.1"],"因为标准就这么设计的的":["44.1"],"所以从结构上来说虚拟dom比真实的dom轻量很多":["44.1"],"注":["44.3"],"表示实际的标签":["44.3"],"表示标签内部的属性":["44.3"],"除去key":["44.3"],"消耗一些性能":["44.5"],"所以有可能会比html慢一点":["44.5"],"虚拟dom知识规划了一个最短路径":["44.5"],"都是根据虚拟dom画出响应平台的ui层":["44.6"],"外的功能":["45.0"],"通过熟练掌握高阶组件的概念和使用方式":["45.0"],"我们可以提高代码的可维护性和可读性":["45.0"],"构建更加强壮":["45.0"],"高效的应用程序":["45.0"],"context":["45.1","64.11","108.2"],"它接收一个上下文对象作为参数":["45.1"],"并返回上下文的当前值":["45.1"],"组件嵌套不需要一层一层props传参":["45.1"],"可以直接实现a组件传值到c组件":["45.1"],"创建方法为createcontext":["45.1"],"mycontext":["45.1"],"并且可以保存任何职":["45.2"],"类似于类的实例属性":["45.2"],"变量是决定视图图层渲染的变量":["45.2"],"需要使用usestate":["45.2"],"其它用途则使用":["45.2"],"只支持传入数字":["47.0"],"表示最大支持缓存页面个数":["47.0"],"原理":["47.0"],"组件的实现原理是将被缓存的组件实例存储到一个缓存对象中":["47.0"],"当需要重新渲染这个组件时":["47.0"],"会从缓存中获取到之前的实例":["47.0"],"并将其重新挂载在dom上":["47.0"],"的渲染看":["47.0"],"的渲染":["47.0"],"vue的渲染":["47.0"],"then":["48.0","123.1"],"如果浏览器不支持原生":["48.0"],"则使用":["48.0","49.3"],"script":["48.1"],"全局代码":["48.1"],"settimeout":["48.1"],"一次性定时器":["48.1"],"setinterval":["48.1"],"持续性定时器":["48.1"],"node中的":["48.1"],"setimmediate":["48.1"],"i":["48.1","82.27"],"o":["48.1","103.22"],"ui":["48.1"],"rendering":["48.1"],"在任务队列里没有执行":["48.2"],"所以无法拿到更新后的视图":["48.2"],"然后执行到":["48.2"],"fn":["48.2","84.4"],"添加一个异步任务":["48.2"],"internal":["48.3"],"把回调函数放入回调队列":["48.3"],"try":["48.3","61.21"],"call":["48.3","93.16","98.3","99.4"],"catch":["48.3","61.21"],"e":["48.3","103.22"],"handleerror":["48.3"],"preflushindex":["48.5"],"activepreflushcbspreflushindex":["48.5"],"清空当前活动的任务队列":["48.5"],"递归执行":["48.5"],"直到清空前置任务队列":["48.5"],"再往下执行异步更新队列任务":["48.5"],"这个方法负责执行后置任务队列":["48.5"],"activepostflushcbs":["48.5"],"保存队列中去重后的任务":["48.5"],"deduped":["48.5"],"vue2源码nexttick":["48.6"],"与":["49.1","62.9","62.10"],"引号":["49.1"],"在html":["49.1"],"attribute":["49.1"],"名称中都是不合法的":["49.1"],"例如下面的示例":["49.1"],"这会触发一个编译器警告":["49.1"],"foo":["49.1","49.5","51.4","82.4"],"bar":["49.1","51.4","98.4"],"如果需要传入动态的复杂参数":["49.1"],"推荐使用vue的":["49.1"],"计算属性":["49.1"],"当使用":["49.1"],"内嵌模版":["49.1"],"直接写在html文件里的模版":["49.1"],"需要避免在名称中使用大写字母":["49.1"],"因为浏览器会强制将其转换为小写":["49.1"],"someattr":["49.1"],"上面的例子将会在":["49.1"],"有更高的切换开销":["49.3"],"而":["49.3"],"有更高的初始渲染开销":["49.3"],"因此":["49.3","64.18","112.4"],"如果需要频繁的切换":["49.3"],"activeusers":["49.4"],"或者使用":["49.4"],"标签添加":["49.4"],"来包装":["49.4"],"元素":["49.4"],"xlink":["49.5"],"svg":["49.5"],"special":["49.5"],"修饰符也有专门缩写":["49.5"],"someproperty":["49.5"],"someobject":["49.5"],"等同于":["49.5"],"消息是":["49.6"],"enter":["49.7","68.60"],"onenter":["49.7"],"点击事件将最多触发一次":["49.7"],"对象语法":["49.7"],"mousedown":["49.7"],"mouseup":["49.7"],"监听子组件的自定义事件":["49.7"],"这两个生命周期钩子":["50.0"],"在两者之间执行":["50.0"],"所以在实际开发中":["50.0"],"deactivated":["50.1"],"缓存的组件停用时调用":["50.1"],"之一":["50.2"],"层还未更新":["50.2"],"若在":["50.2"],"中再次修改数据":["50.2"],"不会再次触发更新方法":["50.2"],"updated":["50.2"],"完成":["50.2"],"层更新":["50.2"],"update":["50.2"],"结构已经生成":["50.3"],"但如果在页面加载前完成请求":["50.3"],"则不会出现此情况":["50.3"],"建议对页面内容的改动放在":["50.3"],"组件数据更新之后":["50.4"],"组件实例卸载之前":["50.4"],"组件实例卸载之后":["50.4"],"activated":["50.4"],"keep":["50.4"],"alive":["50.4"],"缓存的组件激活时":["50.4"],"获取最新的值":["50.5"],"onbeforeunmount":["50.5"],"当组件不再被需要时":["50.5"],"将依次执行":["50.5"],"beforeunmount":["50.5"],"unmount":["50.5"],"钩子函数":["50.5"],"beforeunmount钩子函数在组件卸载之前调用":["50.5"],"通常用于处理一些事件监听器或者一些异步任务":["50.5"],"unmounted钩子函数在组件完全被卸载后调用":["50.5"],"组件可以回收内存等资源":["50.5"],"钩子会在组件卸载之前进行":["50.5"],"通常可以用来清除定时器":["50.5"],"取消事件监听器等操作":["50.5"],"定时器示例":["50.5"],"prevfoo":["51.4"],"prevcount":["51.5"],"侦听一个ref":["51.5"],"phone":["51.8"],"age":["51.8","84.9","84.29","106.8","115.3"],"木鱼":["51.8"],"debugger":["51.9"],"只有在第一个await":["51.10"],"之前访问的依赖才会被追踪":["51.10"],"自动追踪所有能够访问到的响应式属性":["51.12"],"这更方便":["51.12"],"而且代码往往更加简洁":["51.12"],"import":["51.13","92.2"],"from":["51.13","53.4"],"vue":["51.13"],"stopwatch":["51.15"],"数据加载后执行某些操作":["51.16"],"时候":["52.1"],"不会影响到":["52.1"],"做了双向绑定":["52.2"],"关系如图":["52.2"],"核心是通过业务逻辑层":["52.3"],"根据指令模版替换数据":["52.4"],"以及绑定相应的更新函数":["52.4"],"将来":["52.5"],"中数据一旦发生变化":["52.5"],"会首先找到对应的":["52.5"],"walk":["52.6"],"keys":["52.6","84.2"],"对元素进行递归遍历":["52.7"],"return":["52.7","61.38","64.9","80.0","89.0","93.13","107.0","116.7","116.8"],"nodetype":["52.7"],"创建dep实例":["52.8"],"obj":["52.8"],"val":["52.8","84.4"],"observe":["52.8"],"const":["52.8","68.7","83.15"],"new":["52.8","90.0","100.1"],"object":["52.8","84.10","104.4","112.9","112.15"],"defineproperty":["52.8","84.5","84.8"],"我们发现":["53.2"],"变得始终是杯子里的内容":["53.2"],"而杯子始终是那个杯子":["53.2"],"spa图示":["53.2"],"header":["53.3"],"最后是":["53.3"],"fmp":["53.3"],"ajax请求数据之后":["53.3"],"首次有效绘制":["53.3"],"就是页面加载差不多了":["53.3"],"但是可能图片还没加载出来":["53.3"],"save":["53.4"],"dev":["53.4"],"config":["53.4"],"js中":["53.4"],"vitecompression":["53.4"],"export":["53.4"],"plugins":["53.4"],"read":["55.3"],"不报错":["56.2"],"返回true":["56.2"],"使用位置":["56.2"],"我们可以通过类型守卫":["56.2"],"instanceof":["56.2"],"操作符这些":["56.2"],"来限制类型范围":["56.2"],"在操作符的加持下":["56.2"],"我们就可以使用":["56.2"],"正常运行":["56.3","83.21"],"bb":["56.3"],"cc":["56.3"],"boolean":["56.3","65.49","83.8","112.8"],"天气不错":["57.1"],"适合骑车":["57.1"],"后续持续更新":["57.2"],"不同类型相互转换有时需要强制转换":["61.1"],"而javascript只有一种类型":["61.1"],"var":["61.1","74.11","74.15","114.1"],"response":["61.3","65.51"],"处理服务器返回的数据":["61.3"],"表示请求失败":["61.4"],"客户端请求的资源没有找到或者不存在":["61.4"],"表示服务器遇到未知错误":["61.4"],"导致无法完成客户端当前请求":["61.4"],"我们也可以理解为这些函数堆栈并不在栈上分配而是在堆上分配":["61.6"],"当在一个函数内定义另外一个函数就会产生闭包":["61.6"],"如果找不到就重新计算":["61.7"],"然后更新缓存并返回值":["61.7"],"如果找到了":["61.7"],"直接返回查找到的值即可":["61.7"],"防止内存泄漏":["61.8"],"及时销毁不再使用的对象或变量":["61.8"],"尤其是大内存占用的对象":["61.8"],"避免循环引用":["61.8"],"确保对象之间的引用关系能够正确断开":["61.8"],"让父元素担当事件监听的职务":["61.9"],"事件委托的原理就是dom元素的时间冒泡":["61.9"],"oul":["61.10"],"document":["61.10","61.13","61.31"],"getelementbyid":["61.10","61.31","61.35"],"ul1":["61.10"],"onclick":["61.10"],"srcelement":["61.11"],"从里到外":["61.12"],"事件委托":["61.12"],"可以在请求头中携带cookie":["61.13"],"本地存储主要用户客户端本地保存数据":["61.13"],"供同一域名下的页面之间共享":["61.13"],"访问方式":["61.13"],"cookie":["61.13"],"通过":["61.13","65.57","82.12"],"解构赋值":["61.16"],"newjson将是被删除后的json对象":["61.16"],"对外提供公共访问方式":["61.17"],"继承":["61.17"],"提高代码复用性":["61.17"],"继承是多态的前提":["61.17"],"指向原函数的显式原型":["61.18"],"函数的":["61.18"],"this指向obj":["61.18"],"获取并发请求中的数据":["61.20"],"语句来捕获异常":["61.21"],"链接":["61.21"],"限制的最大长度是不一样的":["61.22"],"如果需要支持":["61.22"],"ie":["61.22"],"则最大长度为":["61.22"],"请求一般是做增删改操作":["61.23"],"所以必须与数据库交互":["61.23"],"等":["61.24","97.1"],"可以向文档或者文档中的元素添加事件侦听器来预定事件":["61.24"],"如果是":["61.25"],"false":["61.25","84.5"],"表示是在冒泡阶段调用事件处理程序":["61.25"],"apply函数的恶区别":["61.26"],"offsetleft":["61.28"],"还有一点需要注意":["61.28"],"拖拽的时候是绝对定位":["61.28"],"改变的是绝对定位条件下的方向的值":["61.28"],"这时":["61.30","84.5","100.1"],"会释放掉":["61.30"],"函数执行完成之后":["61.31"],"因为":["61.31","98.7"],"计数不为":["61.31"],"这样的相互引用如果大量存在就会导致内存泄漏":["61.31"],"特别是在dom对象中":["61.31"],"也容易存在这种问题":["61.31"],"element":["61.31"],"target":["61.32","68.60"],"receiver":["61.32"],"content":["61.33","62.15","62.21","62.26","62.36"],"f":["61.33","103.22","112.15"],"mypic":["61.35"],"innnerhtml":["61.35"],"img":["61.35","61.36"],"1970年1月1日":["61.37"],"以来的毫秒数":["61.37"],"因此我们可以在":["61.37"],"的原型上定义克隆的方法":["61.37"],"prototype":["61.37","84.1"],"clone":["61.37"],"this":["61.37","64.6","83.20"],"newdate":["61.37"],"fri":["61.37"],"jan":["61.37"],"01":["61.37"],"08":["61.37"],"00":["61.37","130.2"],"gmt":["61.37"],"0800":["61.37"],"对于正则对象":["61.37"],"如果字符串长度为":["61.38"],"直接返回包含该字符的数组":["61.38"],"permutations":["61.38"],"则允许互相访问":["61.40"],"也就是说":["61.40","83.10"],"javascript只能访问和操作自己域下的资源":["61.40"],"在没有明确授权的情况下":["61.41"],"不能读写对方的资源":["61.41"],"即使图片无法显示":["61.42"],"页面上也会腾出图片的空位":["61.42"],"然后继续加载后面的内容":["61.42"],"从而加载时间变快了":["61.42"],"浏览器体验也变好了":["61.42"],"指向事件对象":["61.43"],"方法排序":["61.44"],"然后与相邻的元素比较":["61.44"],"不同则存入新数组":["61.44"],"concat":["61.45"],"返回一个新数组的特性实现拷贝":["61.45"],"用扩展运算符":["61.45"],"原型式继承":["61.47"],"寄生式继承":["61.47"],"阻塞":["61.48"],"的连接方式完全不同":["61.50"],"端口也不同":["61.50"],"http是":["61.50"],"heading":["61.51"],"标签的优化":["61.51"],"alt":["61.51"],"优化":["61.51"],"懒加载对服务器前端有一定的缓解压力的作用":["61.52"],"预加载则是会增加服务器前端的压力":["61.52"],"可以把文件压缩到最小":["62.1"],"是有损压缩":["62.2"],"因此会导致图像细节的损失":["62.2"],"大":["62.3"],"不适合存储真实照片":["62.3","62.4"],"png":["62.4"],"而ie盒模型的宽高指的是":["62.5"],"内容区":["62.5"],"border":["62.7","62.15","74.15"],"缓存":["62.9","62.10"],"冲突":["62.9"],"预加载视频":["62.10"],"mark":["62.12"],"高亮显示":["62.12"],"dialog":["62.12"],"对话框":["62.12"],"必须配合open属性":["62.12"],"embed":["62.12"],"边框图像区域超出边框的量":["62.14"],"repeat":["62.14"],"图像边框是否平铺":["62.14"],"径向渐变":["62.16"],"垂直位移":["62.17"],"模糊半径":["62.17"],"阴影颜色":["62.17"],"perspective":["62.18"],"为":["62.18"],"delay":["62.19"],"count":["62.20","80.0"],"动画播放次数":["62.20"],"但代码比较多":["62.21"],"css":["62.21","62.26","68.54"],"after":["62.21"],"相对于块级元素的祖先元素定位":["62.22"],"当超过设置的阈值之后":["62.22"],"就会变成固定定位":["62.22"],"block":["62.24"],"给父元素添加伪元素":["62.25"],"弹性盒":["62.25"],"父元素":["62.25"],"父元素设置弹性盒":["62.26"],"display":["62.26"],"flex":["62.26"],"网格布局":["62.27"],"查找可以使用的标签":["62.30"],"disabled":["62.30"],"查找禁止使用的标签":["62.30"],"checked":["62.30"],"查找被选中的标签":["62.30"],"selection":["62.30"],"设置选中文本内容的高亮显示":["62.30"],"内联样式的权重":["62.31"],"包含选择器权重":["62.31"],"字体变体":["62.32"],"variant":["62.32"],"字体粗细":["62.32"],"weight":["62.32"],"文本装饰性线条的外观":["62.32"],"或者":["62.33"],"svgsprite":["62.33"],"blockquote":["62.34"],"dir":["62.34"],"frommenu":["62.34"],"可变元素":["62.34"],"根据上下文预警决定该元素为块元素还是内联元素":["62.34"],"内侧添加空白时用":["62.35"],"设置弹性盒子元素在侧轴上的对齐方式":["62.36"],"设置行对齐":["62.36"],"这样直接就是原来的px数值除以10加上em就可以":["62.38"],"缺点":["62.38","65.22","65.23"],"行为":["62.40"],"js":["62.40"],"标准模式":["62.41"],"以浏览器支持的最高标准执行":["62.41"],"混杂模式":["62.41"],"在目标元素完全接受被拖放元素时触发":["62.42"],"dragend":["62.42","70.3"],"关闭后的一些清理操作":["62.43"],"影响的主要也是":["62.43"],"图片懒加载":["62.44"],"移除一些注释内容":["62.44"],"降低关键资源的rtt次数":["62.44"],"离线缓存":["62.45"],"manifest":["62.45"],"离线数据缓存localstorage":["62.45"],"协议的作用是在两个通信应用程序之间提供保密性和数据完整性":["62.48"],"协议有两层协议组成":["62.48"],"记录协议和":["62.48"],"握手协议":["62.48"],"服务器响应请求":["62.48"],"当浏览器到web服务器建立连接后":["62.48"],"浏览器会发送一个初始的":["62.48"],"get请求":["62.48"],"请求目标通常是一个html文件":["62.48"],"服务器收到请求后":["62.48"],"将返回一个":["62.48"],"的响应报文":["62.48"],"内容包括响应头和":["62.48"],"正文":["62.48"],"get":["62.48","104.4","127.3"],"index":["62.48"],"http1":["62.48"],"浏览器解析渲染页面":["62.48"],"浏览器接收到服务端的响应之后":["62.48"],"width":["62.49"],"100px":["62.49"],"height":["62.49"],"1px":["62.49"],"难度不一":["62.50"],"css动画比":["62.50"],"js动画更简单":["62.50"],"性能方面":["62.50"],"js动画在低版本浏览器下表现并不好":["62.50"],"css动画可以做到自然降级":["62.50"],"两者相邻的外边距为一正一负时":["62.51"],"折叠结果是两者相加的和":["62.51"],"类似于redux的工作方式":["64.1"],"uselayouteffect":["64.1"],"但效果在所有dom突变后同步运行":["64.1"],"并提高了应用程序的整体性能":["64.2"],"通过使用虚拟dom":["64.2"],"react提供了一种创建动态和交互式用户界面的方法":["64.2"],"在同一个文件":["64.3"],"数据绑定不一样":["64.3"],"实现了数据双向绑定":["64.3"],"数据流动是单向的在":["64.3"],"state":["64.3","127.3"],"对象需要用":["64.3"],"uncontrolled":["64.4"],"conponent":["64.4"],"type":["64.4"],"text":["64.4"],"ref":["64.4","68.3"],"componentwillupdate":["64.6"],"已经被弃用或替换为替代方法或挂钩":["64.6"],"至于":["64.6"],"它指的是类组件的当前实例":["64.6"],"并对组件的重新渲染进行排队":["64.7"],"该函数还可以接受回调函数作为参数":["64.7"],"setvalue":["64.8"],"cleanup":["64.9"],"除了react":["64.11"],"则最好使用全局状态":["64.12"],"没有匹配的action":["64.13"],"类型":["64.13","112.6","112.7"],"或者不关心这个action的改变":["64.13"],"则":["64.13","98.7"],"在数据工程和数据科学领域被广泛应用":["64.16"],"主要区别在于它们的实现方式":["64.17"],"功能和使用方式":["64.17"],"ajax是一种基于浏览器原生功能的编程技术":["64.17"],"而fetch和axios是专门的两个库":["64.17"],"用于处理http请求":["64.17"],"并提供了更丰富的功能和更简单的api":["64.17"],"hook的调用顺序也就无法确定":["64.18"],"会导致状态更新混乱":["64.18"],"为了确保":["64.18"],"hook的正确性":["64.18"],"childcomponent":["64.19"],"批量更新实际dom":["64.20"],"根据标记的差异":["64.20"],"批量更新实际的dom结构":["64.20"],"以减少重绘和重新排版的dom开销":["64.20"],"减少了重回和重新排版的开销":["64.21"],"增加不必要的复杂性":["65.2"],"状态管理":["65.2"],"在一些复杂的应用中":["65.2"],"随着视图和数据逻辑的增加":["65.2"],"可能会涉及到复杂的状态管理问题":["65.2"],"如果不恰当地管理好状态":["65.2"],"可能会导致应用变得难以理解和维护":["65.2"],"mvvm与mvc的区别":["65.2"],"mvc":["65.2"],"是model":["65.2"],"controller的简写":["65.2"],"即模型":["65.2"],"控制器":["65.2"],"m和v指的意思和mvvm中的m和v意思一样":["65.2"],"c即controller指的是页面业务逻辑":["65.2"],"computed":["65.3"],"space":["65.4","93.11"],"空格键":["65.4"],"up":["65.4","130.2"],"down":["65.4"],"向上":["65.4"],"下":["65.4"],"左":["65.4"],"不能输出真正的":["65.7"],"与模版插值":["65.7"],"直接使用逗号分隔就可以":["65.9"],"那么会对新老节点进行对比":["65.10"],"比较两者":["65.10"],"修改时触发":["65.11"],"中使用":["65.12"],"name":["65.12","65.47","84.9","84.29","90.0","112.5","115.3"],"导航到对应路由":["65.12"],"middleware":["65.13"],"配置代理服务器的中间件":["65.13"],"javascript运行环境":["65.15"],"node":["65.15"],"js服务器端":["65.15"],"location":["65.16"],"b":["65.16","83.21"],"修改":["65.16","98.3"],"事件":["65.18"],"无需向后端发起请求":["65.18"],"浏览器可以监听哈希值的变化":["65.18"],"并按照规则加载相应的代码":["65.18"],"包括":["65.19"],"replacestate":["65.19"],"方法用于修改历史状态":["65.19"],"在hash模式下":["65.20"],"仅hash符号之前的url会被包含在请求中":["65.20"],"后端如果没有覆盖所有路由":["65.20"],"路由参数直接体现在url中":["65.22"],"用户可以直接看到传递的信息":["65.22"],"有限性":["65.22"],"查询参数式可选的":["65.23"],"因此可以选择何时传递它们":["65.23"],"查询参数不像路由参数那么直观":["65.23"],"使用查询参数":["65.24"],"非必要信息":["65.24"],"查询参数通常用于传递可选信息":["65.24"],"点击跳转":["65.27"],"font":["65.29"],"size":["65.29"],"message":["65.30"],"getitem":["65.33"],"token":["65.33","97.6"],"在某个路由独享的守卫":["65.34"],"dashboard":["65.35"],"其它路由配置":["65.35"],"beforeeach":["65.35"],"在进入每个路由前进行身份验证等操作":["65.35"],"custom":["65.36","68.54"],"directives":["65.36"],"item":["65.37","65.38"],"v":["65.38"],"key":["65.38","84.29"],"父组件中使用自定义事件来进行接收":["65.40"],"即等号前面的属性名一致":["65.40","65.41"],"等号后面的属性值可以自定义":["65.40","65.41"],"child":["65.40","65.41"],"takeoverchild":["65.40","65.41"],"msg":["65.42"],"这个效果跟上面示例的结果是一样的":["65.42"],"tip":["65.42"],"就是展示传入的内容":["65.43"],"一只吗喽":["65.44"],"敖润之子":["65.44"],"one":["65.45"],"more":["65.45"],"thing":["65.45"],"warning":["65.46","84.5","91.2","93.14","98.7"],"作用域插槽不能绑定":["65.46"],"属性":["65.46","84.10","115.3"],"因为绑定了":["65.46"],"我是萝北":["65.47"],"默认值为false":["65.49"],"deep":["65.49"],"米哦认知为false":["65.49"],"flush":["65.49","65.50"],"pre":["65.49"],"post":["65.49"],"sync":["65.49"],"默认值为pre":["65.49"],"如果源是对象":["65.50"],"强制深度遍历":["65.50"],"以便在深层级变更时触发回调":["65.50"],"吊证回调函数的刷新时机":["65.50"],"当已不再需要该侦听器时":["65.51"],"副作用清理":["65.51"],"async":["65.51"],"newid":["65.51"],"oldid":["65.51"],"oncleanup":["65.51"],"一条数据影响多条数据的时候":["65.52"],"例如搜索框":["65.52"],"是否支持异步":["65.52"],"history":["65.54"],"在":["65.54","68.13","99.0"],"router":["65.55"],"是vue3中一个重要的新增特性":["65.56"],"它提供了更灵活和可复用的组件逻辑复用方式":["65.56"],"api能够更好地组织和封装组件逻辑":["65.56"],"提高代码的可维护性":["65.56"],"它也有助于更好的利用javascript":["65.56"],"引擎的优化":["65.56"],"使得组件的性能更高效":["65.56"],"自定义渲染器和渲染优化":["65.56"],"但是通过":["65.57"],"mutations来操作":["65.57"],"dispatch":["65.57"],"触发":["65.57"],"也支持载荷":["65.57"],"pinia":["68.1"],"mitt":["68.1"],"上面代码中":["68.3","112.7"],"我们使用了":["68.3"],"函数创建了一个响应式变量count":["68.3"],"初始值为0":["68.3"],"该变量1将用于传递给子组件":["68.3"],"然后再template中":["68.3"],"将":["68.5","98.3"],"变量传递给子组件":["68.5"],"监听子组件自定义事件":["68.5"],"null":["68.7","80.0","84.6","108.4"],"来获取子组件的dom实例":["68.7"],"然后给button绑定了一个点击事件":["68.7"],"该方法用于获取子组件对外暴露的属性和方法":["68.7"],"更改父组件message":["68.9"],"上面这段代码中":["68.9"],"我们定义了一个":["68.9"],"函数":["68.9","82.12"],"它更新了来自父组件的":["68.9"],"值":["68.9"],"通过这样的设置":["68.11"],"当父组件中的":["68.11"],"或":["68.11","99.0","114.2"],"组件中":["68.13"],"当按钮被点击后":["68.13"],"我们使用":["68.13","115.3"],"emit":["68.13"],"方法触发了一个自定义事件":["68.13"],"并传递了一些数据":["68.13"],"action":["68.15"],"bind":["68.19","98.3"],"js配置时深入了解一下":["68.22"],"hooks":["68.23"],"来编写组件":["68.23"],"dom":["68.24","68.54"],"树":["68.24"],"componentdidmount":["68.24"],"组件挂载到":["68.24"],"snapshot":["68.25"],"更新之后立即调用":["68.25"],"通常用于执行副作用操作":["68.25"],"那么大部分生命周期方法都不再适用":["68.26"],"相反":["68.26","120.1"],"可以使用":["68.26","98.3"],"useeffect":["68.26"],"将计算逻辑和函数绑定在一起":["68.32"],"从而在依赖项不变时只计算一次":["68.32"],"react功能组件中的逻辑":["68.35"],"当滚动条位置变化时":["68.36"],"重新计算起始索引和结束索引":["68.36"],"可交互时间":["68.38"],"time":["68.38"],"interactive":["68.38"],"速度指标":["68.38"],"speed":["68.38"],"如果没有分数或得分为":["68.39"],"则很有可能是检测过程发生了错误":["68.39"],"比如网络连接状况异常等":["68.39"],"如果得分能达到":["68.39"],"通过命令行使用":["68.40"],"并且会暴露数据在url中":["68.42"],"由于本地存储是同源策略的一部分":["68.43"],"因此只能在相同源的页面之间进行通信":["68.43"],"storage更适合临时存储会话期间需要传递的数据":["68.44"],"连接":["68.47"],"可以实现双向实时通信":["68.47"],"可以采用以下方法":["68.48"],"请求":["68.49","68.50"],"且存在安全性问题":["68.49"],"并且在安全性方面比":["68.50"],"而客户端则通过与同源服务器通信来解决跨域问题":["68.52"],"通过配置":["68.53"],"在客户端和目标服务器之间建立代理":["68.53"],"可以将前端应用程序拆分为独立的自定义元素":["68.54"],"elements":["68.54"],"影子":["68.54"],"shadow":["68.54"],"模板":["68.54"],"template":["68.54"],"和样式":["68.54"],"通过使用":["68.54"],"可以实现跨框架和跨应用程序的组件复用和集成":["68.54"],"版本控制管理":["68.55"],"所有项目的代码都在同一个版本控制系统中管理":["68.55"],"可以更容易地跟踪和管理代码的变化历史":["68.55"],"这有助于保持代码的可追溯性和可维护性":["68.55"],"减少仓库管理成本":["68.55"],"相比于多个仓库":["68.55"],"可能会导致不一致的结果或不可预期的行为":["68.56"],"如果需要在组件之外的地方进行记忆化计算":["68.56"],"可以考虑将记忆化逻辑提取到一个普通的函数中":["68.56"],"placeholder":["68.60"],"your":["68.60"],"在这个例子中":["68.60"],"我们定义了一个名为":["68.60"],"的自定义":["68.60"],"它接受一个键和初始值作为参数":["68.60"],"并返回一个状态变量和一个用于更新状态变量的函数":["68.60"],"在内部":["68.60"],"该":["68.60"],"当拖动元素被放置在可放置区域内时触发":["70.3"],"用于在拖放操作之间传递数据":["70.4"],"包括拖动元素的数据和效果等":["70.4"],"处理拖动数据":["70.6"],"处理拖动过程中的位置变化等":["70.6"],"api中见不到this的使用":["70.9"],"减少了this指向不明的情况":["70.9"],"如果是小型组件":["70.9"],"shadow属性高级用法":["72.0"],"transform":["74.1","74.6","74.13","74.14","74.15"],"scaley":["74.1","74.14"],"scale":["74.5","74.9","74.13"],"4s":["74.8"],"3s":["74.8","74.15"],"keyframes":["74.9","74.14","74.15"],"translate":["74.11"],"ms":["74.13","74.14","74.15"],"float":["74.14"],"solid":["74.15"],"transparent":["74.15"],"465efb":["74.15"],"rotate":["74.15"],"webkit":["74.15"],"infinite":["74.15"],"ease":["74.15"],"out":["74.15"],"与其使用":["75.0"],"你可以":["75.0"],"更好地使用css级联属性":["75.0"],"使用更具体的规则":["75.0"],"在您选择的元素之前":["75.0"],"增加一个或多个元素":["75.0"],"使选择器变得更加具体":["75.0"],"并获得更高的优先级":["75.0"],"覆盖important":["75.0"],"虽然我们应该尽量避免使用":["75.0"],"但你应该知道如何覆盖important":["75.0"],"加点权重就可以实现":["75.0"],"优先级最高":["75.0"],"但也会被权重高的important所覆盖":["75.0"],"的第一个参数写的是":["80.0"],"那么":["80.0","84.5","98.5"],"指向的是":["80.0"],"window对象":["80.0"],"接下来是":["80.0"],"bind函数也是改变this指向的":["80.0"],"但是不会立即调用":["80.0"],"y":["80.0","84.1","93.16","95.1","112.17"],"这是它们的区别":["80.1"],"根据自己的实际情况来选择使用":["80.1"],"下次当请求北方送到同一个域时":["81.0"],"浏览器会使用":["81.0"],"header通过网络发送cookie":["81.0"],"trim":["81.1"],"cookieparts":["81.1"],"每个域的":["81.2"],"总数不得超过":["81.2"],"左右":["81.2"],"具体限制取决于浏览器":["81.2"],"cookie有几个选项":["81.2"],"其中很多都很重要":["81.2"],"应该设置它":["81.2"],"选项在被列在key":["81.2"],"value之后":["81.2"],"以":["81.2"],"分隔":["81.2"],"像这样":["81.2"],"通常":["81.3"],"我们应该将":["81.3"],"设置为根目录":["81.3"],"之后":["81.4","98.2"],"有cookie":["81.4"],"出于历史原因":["81.4"],"则cookie会被删除":["81.5"],"会在一小时后失效":["81.5"],"javascript":["81.6","114.1"],"worldhello":["82.6"],"两者都等同于":["82.12"],"将一个数组添加到另一个数组的尾部":["82.12"],"arr1":["82.12"],"arr2":["82.12"],"并且不存在由于参数不同而导致的重载":["82.14"],"它的行为非常统一":["82.14"],"undefined":["82.14","84.28","91.1","103.21"],"输出":["82.17","84.9"],"数组空位":["82.18"],"es6中对待数组空位的方式有所改变":["82.18"],"空位指的是数组中某个位置没有任何值":["82.18"],"中的第二个元素是个空位":["82.18"],"在es6之前":["82.18"],"对待数组空位的方式是跳过它们":["82.18"],"不进行任何操作":["82.18"],"propkey":["82.21"],"ig":["82.27"],"flags":["82.27","82.28"],"因为第二次匹配从上一次匹配的结束位置开始":["82.30"],"u":["82.31","112.13"],"symbol":["82.32","112.1","112.6"],"方法":["82.32","100.3"],"相当于":["82.36"],"像箭头函数":["83.0"],"模版字面量":["83.0"],"必须先进行声明":["83.2"],"否则会抛出错误":["83.2"],"is":["83.3"],"not":["83.3"],"defined":["83.3"],"first":["83.5"],"second":["83.5"],"fourth":["83.5"],"fifth":["83.5"],"sixth":["83.5"],"默认值":["83.5"],"解构赋值允许指定默认值":["83.5"],"danger":["83.6"],"如果要将一个已经声明的变量用于解构赋值":["83.6"],"需要注意不能把花括号写在行首":["83.6"],"否则会报错":["83.6"],"syntaxerror":["83.6"],"syntax":["83.6"],"error":["83.6"],"因为javascript会将":["83.6"],"理解成一个代码块":["83.6"],"从而发生语法错误":["83.6"],"正确写法应该是":["83.6"],"解构赋值允许等号左边的模式之中":["83.6"],"len":["83.7","85.0"],"参数值默认是不穿值的":["83.10"],"而是每次重新计算默认值表达式的值":["83.10"],"参数默认值是惰性求值的":["83.10"],"yield":["83.12"],"命令":["83.12"],"因此箭头函数不能用作":["83.12"],"会捕获其所在的上下文的this的值":["83.13"],"这是一个div标签":["83.14"],"templatestring":["83.14"],"sortnumbers":["83.15"],"sort":["83.15"],"参数的写法":["83.15"],"numbers":["83.15"],"result":["83.17"],"foos":["83.21"],"属性名表达式为对象":["83.21"],"keya":["83.21"],"keyb":["83.21"],"三体":["83.22"],"刘慈欣":["83.22"],"当被作为函数调用时":["84.1"],"apply":["84.1","98.3"],"thisbinding":["84.1"],"args":["84.1","112.12","112.13","112.15","112.16"],"当被用作构造函数实例化时":["84.1"],"construct":["84.1"],"fproxy":["84.1"],"实例作为构造函数调用的操作":["84.2"],"比如new":["84.2"],"getownpropertynames":["84.2"],"getownpropertysymbols":["84.2","84.10"],"fnname":["84.4"],"reduce":["84.4"],"window":["84.4","88.0","90.0"],"double":["84.4"],"属性会触发":["84.5"],"第四个参数":["84.5"],"就是指向原始赋值行为所在的对象":["84.5"],"如果目标对象自身的某个属性不可写":["84.5"],"方法将不起作用":["84.5"],"writable":["84.5"],"baz":["84.5"],"每一个":["84.7"],"对象的拦截操作":["84.7"],"删除对象的属性":["84.8"],"john":["84.9","84.29"],"方法获取对象的所有":["84.10"],"symbols":["84.10"],"map键值对是有序的":["84.12"],"插入的顺序决定了键值对的顺序":["84.12"],"中自动移除":["84.14"],"不会造成内存泄漏":["84.15"],"检查键值对":["84.16"],"报苦熬原始类型和对象":["84.17"],"true":["84.18","84.28","84.31","116.10","127.1"],"因此无法迭代":["84.19"],"也无法获取其中的大小或者清空它":["84.19"],"检查值":["84.21"],"就可以完成依次迭代操作":["84.23"],"消费":["84.24"],"上面的示例中":["84.25"],"遍历器生成函数":["84.25"],"返回一个遍历器对象":["84.25"],"即指针对象":["84.25"],"但是并没有对应的数据结构":["84.25"],"或者说":["84.25"],"遍历器对象自己描述了一个数据结构出来":["84.25"],"如果使用":["84.25"],"typescript":["84.25"],"写法":["84.25"],"遍历器接口":["84.25"],"iterable":["84.25"],"对象":["84.26","114.4"],"nodelist对象":["84.26"],"不使用":["84.27"],"配合":["84.27"],"generator函数":["84.27"],"其它场合":["84.28"],"由于数组的遍历会调用遍历器接口":["84.28"],"所以任何接受数组作为参数的场合":["84.28"],"其实都调用了遍历器接口":["84.28"],"可以依次遍历":["84.30"],"强制驼峰法命名":["85.0"],"对象字面量项尾不能有逗号":["85.0"],"逗号前后的空格":["85.0"],"逗号风格":["85.0"],"换行时在行首还是行尾":["85.0"],"循环复杂度":["85.0"],"是否允许计算后的键名什么的":["85.0"],"后面是否允许省略":["85.0"],"this别名":["85.0"],"非派生类不能调用super":["85.0"],"派生类必须调用super":["85.0"],"必须使用":["85.0"],"中的":["85.0"],"switch语句最后必须有default":["85.0"],"对象访问符的位置":["85.0"],"换行的时候在行首还是行尾":["85.0"],"避免不必要的方括号":["85.0"],"文件以单一的换行符结束":["85.0"],"必须使用全等":["85.0"],"函数表达式必须有名字":["85.0"],"函数风格":["85.0"],"规定只能使用函数声明":["85.0"],"函数表达式":["85.0"],"star":["85.0"],"生成器函数":["85.0"],"的前后空格":["85.0"],"guard":["85.0"],"in循环要用if语句过滤":["85.0"],"handle":["85.0"],"err":["85.0"],"处理错误":["85.0"],"变量名长度":["85.0"],"indent":["85.0"],"缩进风格":["85.0"],"声明时必须赋初值":["85.0"],"beforecolon":["85.0"],"aftercolon":["85.0"],"对象字面量中冒号的前后空格":["85.0"],"around":["85.0"],"comment":["85.0"],"行前":["85.0"],"行后备注":["85.0"],"depth":["85.0"],"嵌套块深度":["85.0"],"字符串最大长度":["85.0"],"callbacks":["85.0"],"回调嵌套深度":["85.0"],"params":["85.0","107.0"],"函数最多只能有3个参数":["85.0"],"statements":["85.0"],"函数内最多有几个声明":["85.0"],"cap":["85.0"],"函数名首行大写必须使用new方式调用":["85.0"],"首行小写必须用不带new方式调用":["85.0"],"new时必须加小括号":["85.0"],"newline":["85.0"],"变量声明后是否需要空一行":["85.0"],"createobjecturl":["87.0"],"根据文件url获取文件名":["87.0"],"网页正文全文高":["88.0"],"scrollheight":["88.0"],"网页被卷去的高":["88.0"],"网页被卷去的左":["88.0"],"网页正文部分上":["88.0"],"screentop":["88.0"],"网页正文部分左":["88.0"],"screenleft":["88.0"],"amd是异步":["89.0"],"asynchronously":["89.0"],"方法三":["90.0"],"获取url中的参数":["90.0"],"查询的变量名":["90.0"],"geturlparam":["90.0"],"reg":["90.0"],"regexp":["90.0"],"构造一个含有目标参数的正则表达式对象":["90.0"],"r":["90.0"],"简单来说":["91.1"],"简单对比":["91.2"],"的实现原理类似":["91.2"],"它们都是通过遍历数组":["91.2"],"对数组的每个元素执行特定的函数":["91.2"],"使用过程中的整理":["92.0"],"mment":["92.6"],"获取小时":["92.6"],"hours":["92.6"],"获取分钟":["92.6"],"minutes":["92.6"],"获取秒数":["92.6"],"格式化时分秒":["92.8"],"xx时xx分xx秒":["92.8"],"hh时mm分ss秒":["92.8"],"days":["92.9"],"05":["92.11"],"小时内":["92.12"],"hour":["92.12"],"下周一晚上7点49":["92.13"],"llll":["92.14"],"2019年5月24日星期五晚上7点50分":["92.14"],"endof":["92.15"],"转成时间戳":["92.15"],"否则":["93.1"],"数组索引为0的元素将被作为初始值":["93.1"],"迭代器将从第二个元素开始执行":["93.1"],"在数组中的索引的位置":["93.3"],"则为":["93.3"],"如果数组为空":["93.4"],"没有第一个值可以作为":["93.4"],"输出结果为":["93.8","93.11"],"else":["93.9","116.4","116.5"],"这个方法与":["93.14"],"all":["93.14"],"用例":["93.17"],"接收两个参数":["94.1"],"第一个是要执行的函数":["94.1","94.2"],"第二个是延迟的时间":["94.1"],"第二个是执行之间的时间间隔":["94.2"],"在上述示例中":["94.2"],"函数将每隔一秒执行一次":["94.2"],"累计误差":["94.3"],"由于定时器的执行会受到事件循环机制和系统资源的影响":["94.3"],"定时器的实际执行时间可能会有一些偏差":["94.3"],"方法来取消之前设置的定时器":["94.4"],"次后停止":["94.5"],"translatex":["94.6"],"px":["94.6"],"设置动画执行总时间":["94.6"],"更适合与动画":["94.7"],"因为它能够自动适应浏览器的刷新率":["94.7"],"假设syn":["95.1"],"即发送syn":["95.1"],"ack包":["95.1"],"然后服务端进入syn":["95.1"],"客户端接收到服务端的syn":["95.1"],"ack包之后":["95.1"],"接收端可能还要发送数据":["95.2"],"不能立即关闭服务器端到客户端的数据通道":["95.2"],"所以并不能将服务器端的":["95.2"],"包盒对客户端的":["95.2"],"包合并发送":["95.2"],"只能先确定":["95.2"],"然后服务器等到无需发送数据时候在发送":["95.2"],"所以四次挥手时候必须是四次数据包的交互":["95.2"],"四次挥手结束后":["95.2"],"一般资料或教程都是结合":["96.0"],"将计算机网络按照5层的模型来讲":["96.0"],"5层模型只是为了方便介绍计算机":["96.0"],"sessionid":["97.1"],"的代码":["97.2"],"新版浏览器已经可以防范":["97.2"],"反射型xss的恶意代码存在url里":["97.3"],"dom型xss跟前两种xss攻击的区别":["97.3"],"dom型xss攻击中":["97.3"],"取出和执行恶意代码由浏览器端完成":["97.3"],"向被攻击者发送跨站请求":["97.5"],"利用受害者在被攻击网站已经获取的注册凭证":["97.5"],"绕过后台的用户验证":["97.5"],"token验证csrf防御机制是公认的最适合的方案":["97.6"],"若网站同时存在xss漏洞时候":["97.6"],"都保存在":["97.7"],"cookie里":["97.7"],"会被绑定到该对象上":["98.1"],"在更复杂的嵌套关系中":["98.1"],"指向的是最后一个调用它的对象":["98.1"],"在箭头函数中":["98.1"],"调用":["98.2"],"是在全局":["98.2"],"中执行的":["98.2"],"所以此时的":["98.2"],"指":["98.2"],"向":["98.2"],"语句输出为":["98.3"],"的处理方法":["98.3"],"指向的方法":["98.3"],"指向到o2":["98.3"],"也可以通过修改o2对象中return返回的调用方式":["98.3"],"mike":["98.4"],"基本类型":["98.5"],"仍然指向实例":["98.5"],"输出为123":["98.7"],"因为箭头函数的this无法被修改":["98.7"],"如果把上述代码中的变量a的声明换成const":["98.7"],"输出结果会被改变":["98.7"],"声明的变量是不会被放在全局作用域中":["98.7"],"它有自己的块级作用域":["98.7"],"并访问对":["99.0"],"象上的属性":["99.0"],"然而":["99.0"],"是唯一并且不可变的原始值并且可以用来作为对象属性的键":["99.1"],"如下":["99.1"],"在某些程序语言当中":["99.1"],"也被称作":["99.1"],"原子":["99.1"],"set":["99.3"],"相关联":["99.3"],"以获取或者存储值":["99.3"],"该函数使用一个空的参数列表":["99.3"],"以便有权对值执行访问时":["99.3"],"获取属性值":["99.3"],"使用包含分配值的参数调用的函数":["99.3"],"每当尝试更改指定属性时执行":["99.3"],"tostring":["99.4"],"该方法可以返回一个":["99.4"],"具体类型":["99.4"],"的格式":["99.4"],"的一个实例":["100.0"],"那么它只是一个普通的函数":["100.1"],"p1":["100.1","100.2"],"parent就不是一个普通的函数了":["100.1"],"这就是原型属性":["100.2"],"可以在上面添加原型方法":["100.2"],"那么问题来了":["100.2"],"是如何知道它的原型对象上有这个方法呢":["100.2"],"找到了上一层原型对象":["100.3"],"在这一层找到了":["100.3"],"返回该方法供":["100.3"],"当然如果直到":["100.3"],"上也没有找到":["100.3"],"这个函数就是该对象的构造函数":["100.4"],"通过例子我们可以看到":["100.4"],"的":["100.4","106.3","127.1"],"属性指向了":["100.4"],"就是":["100.4"],"的构造函数":["100.4"],"同样":["100.4"],"这个打印1":["101.0"],"这个a打印2":["101.0"],"这个a打印1":["101.0"],"我们来简单分析一下":["101.0"],"首先":["101.0"],"第一个打印项":["101.0"],"由于全局声明好了":["101.0"],"所以第一个":["101.0"],"打印就为":["101.0"],"虽然在声明变量的前边调用了函数":["101.0"],"但是通过变量的提升":["101.0"],"后面的值会覆盖前面的":["101.0"],"最后一个刚好是":["101.0"],"所以打印结果为":["101.0"],"第二个打印项打印出":["101.0"],"而需要重建的过程叫做回流":["102.1"],"head":["102.2"],"节点":["102.2"],"因为这些节点不会用于呈现":["102.2"],"而且不会影响呈现":["102.2"],"所以不再":["102.2"],"但会包括":["102.2"],"visibility":["102.2"],"hidden":["102.2","124.8"],"则不会被创建":["102.3"],"节点的子类":["102.3"],"clienttop":["102.4"],"调用了":["102.4"],"getcomputedstyle":["102.4"],"或者ie的":["102.4"],"避免多次读取部分布局属性":["102.5"],"同上":["102.5"],"将复杂的节点元素脱离文档流":["102.5"],"这样就会让多次的回流":["102.7"],"重绘变成一次回流重绘":["102.7"],"newnum":["103.4"],"newarr":["103.5"],"sum":["103.8"],"返回的是":["103.16"],"原始值转换":["103.16"],"对于原始值":["103.16"],"例如数字":["103.16"],"布尔值等基本数据类型":["103.16"],"它们有各自的":["103.16"],"元素4对应的下标为":["103.17"],"以此类推":["103.17"],"生成一个数字序列":["103.21"],"因为数组在每个位置都使用":["103.21"],"初始化":["103.21"],"下面的":["103.21"],"d":["103.22"],"g":["103.22"],"h":["103.22"],"j":["103.22"],"l":["103.22"],"m":["103.22","129.2"],"返回":["103.23"],"存在栈中":["104.1"],"深层次的引用类型则是共享内存地址":["104.2"],"扩展运算符实现的复制":["104.3"],"可能不是对象或者普通的值":["104.4"],"如果是函数则不需要深拷贝":["104.4"],"如果是对象的话要进行深拷贝":["104.4"],"cloneobj":["104.4"],"constructor":["104.4"],"找到的是所属类原型上的":["104.4"],"而原型上的":["104.4"],"指向的是当前类的本身":["104.4"],"两个对象指向不同的地址":["104.6"],"pwa的一个基本特性就是":["105.0"],"能够明确地将一些应用程序的资源缓存在设备上":["105.0"],"通过字段":["105.2"],"服务器能够知道是否更新":["105.2"],"大部分web浏览器默认开启协商缓存":["105.2"],"关于浏览器普通刷新和强制刷新的区别":["105.2"],"强制刷新":["105.2"],"会直接从服务器获取最新资源":["105.2"],"且该结果尚未失效":["105.3"],"disk":["105.4"],"磁":["105.4"],"硬盘缓存":["105.4"],"不请求网络":["105.4"],"资源在磁盘中":["105.4"],"一般非脚本会存放在内存中":["105.4"],"css等":["105.4"],"硬盘缓存是直接将缓存写在硬盘文件中":["105.4"],"读取缓存需要对该缓存存放的硬盘文件进行i":["105.4"],"o操作":["105.4"],"然后重新解析该缓存的内容":["105.4"],"读取复杂":["105.4"],"速度比内存缓存慢":["105.4"],"memory":["105.4"],"内存缓存":["105.4"],"资源在内存中":["105.4"],"返回200和请求结果":["105.5"],"则会根据":["105.6"],"的字段值与该资源在服务器的etag值作对比":["105.6"],"两者一致时返回304":["105.6"],"继续使用缓存文件":["105.6"],"不一致则重新返回资源文件":["105.6"],"️":["105.6"],"那么代表该请求的缓存失效":["105.7"],"重新获取请求结果":["105.7"],"在存入到浏览器阿訇":["105.7"],"也可以称":["106.0"],"a是b的超类":["106.0"],"的同时":["106.1"],"也可以重新定义汽车的某些属性":["106.1"],"并重写或覆盖某些属性和方法":["106.1"],"使其获得与":["106.1"],"这个父类不停的属性和方法":["106.1"],"寄生组合式继承":["106.2"],"我们改变了":["106.3"],"会报错":["106.4","112.6"],"可以看到":["106.4"],"父类原型对象中一旦存在父类之前自己定义的方法":["106.4"],"那么子类将无法继承这些方法":["106.4"],"不互相影响":["106.5"],"s3":["106.5"],"正常输出":["106.5"],"gamer":["106.8"],"子类中存在构造函数":["106.8"],"则需要在使用":["106.8"],"之前首先调用":["106.8"],"super":["106.8"],"的语法糖和寄生组合继承的方式基本类似":["106.9"],"tmp":["107.0"],"decodeuricomponent":["107.0"],"获取":["107.0"],"参数对象":["107.0"],"parsequeryparams":["107.0"],"urlstr":["107.0"],"querystartindex":["107.0"],"节流":["108.0"],"throttle":["108.0"],"从上一次到现在":["108.2"],"还剩下多少剩余时间":["108.2"],"arguments":["108.2"],"cleartimeout":["108.2"],"以后只有事件执行后才会再次触发":["108.4"],"频率较高的事件中使用来提高性能":["108.5"],"防抖关注一定事件内连续触发的事件":["108.5"],"只在最后执行一次":["108.5"],"滚动加载":["108.6"],"加载更多或滚到底部监听":["108.6"],"数据资源":["110.0"],"运行服务器的终端叫服务器":["110.0"],"js是一门脚本语言":["110.0"],"脚本语言需要一个解析器":["110.0"],"在客户端":["110.0"],"浏览器的js引擎充当了js的解析器":["110.0"],"而在服务端":["110.0"],"充当了解析器":["110.0"],"o是阻塞形式的":["110.1"],"然而nodejs中":["110.1"],"将异步数据放在任务队列中执行":["110.1"],"从而不阻塞主线程任务的执行":["110.1"],"当异步任务执行完毕后":["110.1"],"在任务队列添加事件":["110.1"],"等待执行":["110.1"],"从而提高了效率":["110.1"],"单线程也就是同一时刻只能做同一件事情":["110.1"],"跨平台":["110.1"],"实现如下":["112.1","112.2","112.12"],"z":["112.2"],"报错":["112.2"],"遍历t的属性名":["112.3"],"对应的属性值":["112.3"],"keyof":["112.3","116.1"],"前面的":["112.4"],"的定义也可以写成下面这样":["112.4"],"可以与":["112.5"],"partial":["112.5"],"结合使用":["112.5"],"将所有属性变成只读的可选属性":["112.5"],"person":["112.5"],"string":["112.5"],"否则不能用作键名":["112.6"],"的实现如下":["112.6","112.10","112.14"],"等号右边的部分":["112.7"],"表示先判断":["112.7"],"是否兼容":["112.7"],"如果是的话就返回":["112.7"],"否则就返回当前类型":["112.7"],"由于":["112.7","112.9"],"则返回never类型":["112.8"],"number":["112.8"],"never":["112.8"],"等同于求":["112.9"],"的交叉类型":["112.9"],"typescript的非空值都是":["112.9"],"的子类型":["112.9"],"所以会返回自身":["112.9"],"returntype":["112.11"],"拿到这两个接口类型":["112.11"],"parat":["112.11"],"typeof":["112.11","116.8"],"returnt":["112.11"],"iresponse":["112.11"],"extends":["112.12","112.13"],"abstract":["112.12"],"infer":["112.13","112.15","112.16"],"t3":["112.14"],"t4":["112.14"],"onfulfilled":["112.15"],"any":["112.15","115.2"],"里面的":["112.17"],"因为根据":["112.17"],"typescript教程":["113.0"],"ruanyifeng":["113.0"],"一周只有七天":["114.0"],"颜色限定在红绿蓝等":["114.0"],"负数":["114.2"],"但后续未赋值的枚举值的步长仍为":["114.2"],"进行递增":["114.2"],"引用之前定义的常数枚举成员":["114.3"],"可以是在不同的枚举类型中定义的":["114.3"],"如果这个成员是在同一个枚举类型中定义的":["114.3"],"可以使用非限定名来引用":["114.3"],"带括号的常数枚举表达式":["114.3"],"一元运算符应用于常数枚举表达式":["114.3"],"二元运算符":["114.3"],"常数枚举表达式做为其一个操作对象":["114.3"],"来声明":["114.4"],"编译结果差异":["114.4"],"在编译时会被删除":["114.4"],"在编译时会生成真实的":["114.4"],"同时在运行时也会存在对应的对象实体":["114.4"],"使用场景差异":["114.4"],"编译结果":["114.5"],"特点":["115.1"],"不是事先定义好类型":["115.1"],"anyarr":["115.2"],"obj1":["115.3"],"张三":["115.3"],"obj2":["115.3"],"男":["115.3"],"obj3":["115.3"],"正常编译":["115.3"],"ts编译报错":["115.3"],"obj3缺少来自obj2的":["115.3"],"两个类型字段":["115.3"],"并且指定":["115.3"],"继承自":["115.3"],"这样就保证了":["115.3"],"unknown":["115.4"],"使用交叉类型混入":["116.1"],"mixin":["116.1"],"类型的含义是遍历传入的泛型":["116.1"],"的所有属性":["116.1"],"并且把它们联合":["116.1"],"产生新的类型对象":["116.1"],"新的类型对象上每个属性的类型是它们在原本类型上的属性":["116.1"],"是泛型类的写法":["116.1"],"另一种写法":["116.1"],"layeggs":["116.2"],"fish":["116.2"],"swim":["116.2"],"getsmallpet":["116.2"],"以便在后续的代码中使用更具体的类型信息":["116.3"],"类型守卫通常有以下几种方式":["116.3"],"之后调用":["116.4"],"类型的方法":["116.4"],"判断体的逻辑是将":["116.5"],"推断为属于":["116.5"],"类型定义的操作函数":["116.6"],"else判断体中是将":["116.6"],"类型推断为":["116.6"],"swom":["116.7"],"合法":["116.9"],"上述示例中":["116.9"],"类型别名":["116.9"],"cat":["116.10"],"animal":["116.10"],"purrs":["116.10"],"因为软件中的对象应该对于扩展是开放的":["116.10"],"但是对于修改是封闭的":["116.10"],"类型没有substr方法":["116.11"],"元组类型在需要固定长度和类型的数组场景下非常有用":["116.11"],"例如表示一对坐标":["116.11"],"表示函数返回多个不同类型的值等":["116.11"],"通过使用元组类型":["116.11"],"但它不是结果":["116.12"],"它是一个类型":["116.12"],"类型中传入了泛型":["116.12"],"是继承于":["116.12"],"或者说arr的类型范围限制在了":["116.12"],"数组":["116.12"],"第三方可以选择根据这个凭据获取相关信息":["118.0"],"识别成功":["118.0"],"示例代码":["118.0"],"请求进行基于生物识别的人脸核身":["118.0"],"idcard":["118.0"],"每个元素都包含一个指向下一个元素的引用":["120.1"],"数组操作":["120.2"],"next":["120.3"],"要转换一个循环链表":["120.5"],"你开始于任意一个节点然后沿着列表的任一方向直到返回开始的节点":["120.5"],"再来看另一种方法":["120.5"],"循环链表可以被视为":["120.5"],"无头无尾":["120.5"],"这种列表很利于节约数据存储缓存":["120.5"],"如果链表中有很多节点":["120.6"],"删除头部节点":["120.6"],"deletehead":["120.6"],"uf":["120.6"],"htis":["120.6"],"doublylinklistnode":["120.6"],"将链表转换为数组":["120.6"],"toarray":["120.6"],"nodes":["120.6"],"splitchunks进行了重新设计":["122.0"],"提供了灵活的选项":["122.0"],"是的代码分割更为强大和易用":["122.0"],"默认配置优化":["122.0"],"默认配置中的一些优化":["122.0"],"使得开箱即用的性能更好":["122.0"],"提高构建性能":["122.0"],"condition":["123.1"],"kind":["123.2"],"代码生成":["123.3"],"将上一步处理好的内容":["123.3"],"转化为新的代码":["123.3"],"表达式":["123.4"],"等等":["123.4"],"语法分析程序":["123.4"],"判断源程序在结构上是否正确":["123.4"],"其作用是将上一步生成的":["123.4"],"减少体积":["124.1"],"多个文件合并":["124.1"],"减少http请求数":["124.1"],"map就是为了解决这个问题才出现的":["124.2"],"不包含原始代码的列信息":["124.4"],"如果包含cheap关键字":["124.4"],"则产生的":["124.4"],"map文件不包含列信息":["124.4"],"也就是说当你在浏览器中点击该代码的位置":["124.4"],"光标只定位到行数":["124.4"],"而不包含具体字符位置":["124.4"],"也不包含loaders的sourcemap":["124.4"],"如果你使用了babel等代码编译工具":["124.4"],"定位到的代码将是经过编译的代码位置":["124.4"],"而不是原始代码":["124.4"],"存在问题":["124.5"],"错误信息只会定义行":["124.5"],"不会定义列":["124.5"],"降低文件精度":["124.5"],"换取文件内容的缩小":["124.5"],"对于经过babel转化后的代码而言":["124.5"],"只能定义到转换后的代码的错误":["124.5"],"不是很利于定位具体项目中的位置":["124.5"],"针对cheap存在的问题":["124.5"],"引出下面的关键字":["124.5"],"但对于":["124.7"],"nosources":["124.8"],"无源代码内容":["124.8"],"另一方面又不会给bundle文件提供注释":["124.9"],"以避免浏览器使用":["124.9"],"unocss英文官网":["126.1"],"中文官网":["126.1"],"更改应用得很干净的路径都会被更新":["127.1"],"对于冲突的路径":["127.1"],"索引文件最多记录三个版本":["127.1"],"如gitmerge":["127.1"],"merge":["127.1"],"而无需进行复杂的合并操作":["127.2"],"同步独立更改":["127.2"],"即使在不同的开发路径上":["127.2"],"也可能存在独立的":["127.2"],"可以通用的代码的更改":["127.2"],"abort":["127.3"],"and":["127.3","128.1"],"back":["127.3"],"before":["127.3"],"打开冲突文件":["127.3"],"手动编辑以解决冲突":["127.3"],"保存修改后":["127.3"],"conflicted":["127.3"],"对所有冲突文件重复上述操作":["127.3"],"gpg":["128.1"],"在页面里添加":["128.1"],"添加成功之后":["128.1"],"在git里输入命令":["128.1"],"com":["128.1"],"验证是否连接成功":["128.1"],"如果提示成功":["128.1"],"那么就可以把自己github远程仓库的代码clone到本地了":["128.1"],"fork别人的github项目":["128.1"],"然后clone项目到本地":["128.1"],"需要手动解决":["129.1"],"下面我们来详细了解一下":["129.1"],"oldbranch":["129.2"],"newbranch":["129.2"],"重命名本地分支":["129.2"],"重命名远程分支":["129.2"],"删除远程待修改分支":["129.2"],"push本地新分支到远程服务器":["129.2"],"git中一些选项解释":["129.2"],"delete":["129.2"],"删除":["129.2"],"如图":["129.3"],"image":["129.3"],"可以看到返回的信息包括更新的文件名":["129.3"],"更新的作者和时间":["129.3"],"以及更新的代码":["129.3"],"19行红色":["129.3"],"本地分支名":["129.4"],"如果远程分支是与当前分支合并":["129.4"],"则冒号后面的部分可以省略":["129.4"],"compression":["130.2"],"using":["130.2"],"threads":["130.2"],"writing":["130.2"],"bytes":["130.2"],"kib":["130.2"],"s":["130.2"],"powered":["130.2"],"现在是重点":["130.3"],"之前的rebase其实只是完成了一半":["130.3"],"由于出现冲突而终止":["130.3"],"现在冲突解决":["130.3"],"可以通过":["130.3"],"继续完成之前的rebase操作":["130.3"],"rebase完成":["130.3"],"再查看一下提交历史":["130.3"],"b2593e6":["130.3"],"提交记录已经是一条完美的直线":["130.3"],"现在切换到主分支master":["130.3"],"将feather分支上的提交合并过来":["130.3"],"我们的改动应该就是增加或者删除":["131.0"],"给别人看开发过程的增量反而太乱":["131.0"],"不要通过rebase对任何已经提交到公共仓库中的commit进行修改":["131.1"],"个人分支除外":["131.1"],"feat":["131.2"],"test":["131.2"],"第一次提交":["131.2"],"第二次提交":["131.2"],"第三次提交":["131.2"],"编辑后":["131.2"],"输入wq保存退出":["131.2"],"会得到如下页面":["131.2"],"保存当前的更改":["132.1"],"然后在不同的分支之间应用更改":["132.1"],"也要可以的":["132.3"],"e695606":["132.4"],"which":["132.4"],"version":["132.4"],"比如应用并删除第二个":["132.8"],"add":["132.10"],"加到git版本控制中":["132.10"],"然后再":["132.10"]},{"0":["12.4","22.1","81.5","84.10","87.0","103.21","108.2","114.5","116.4"],"1":["12.4","23.3","52.7","84.7","84.13","92.12","114.5","130.3","132.5","132.7","132.8"],"2":["12.4","19.0","82.9","84.4","90.0","114.5"],"3":["12.4","20.1","20.2","52.7","84.4","114.5"],"4":["12.4","61.8","82.13","93.13"],"5":["12.4","30.1","61.8","62.49","83.7","92.8","127.1"],"6":["21.0","30.3","61.47","62.27","83.11","83.17","93.6","127.3"],"7":["12.4","30.5","61.51","127.3"],"8":["30.6","103.2"],"9":["82.13","84.6"],"10":["23.2","23.3","31.0","56.2","84.6","93.17","103.2"],"11":["9.0","24.1"],"12":["9.0","24.1","32.4","93.13"],"13":["24.1","32.5"],"14":["24.1","33.0","81.2"],"15":["24.1","33.0","103.8"],"16":["24.2","34.0","93.17"],"17":["24.5"],"19":["81.2","92.7"],"20":["25.2","92.6","92.7","106.8"],"21":["25.3","92.7"],"22":["25.4"],"25":["84.9","103.23"],"26":["51.8","83.23"],"28":["83.23"],"30":["84.6"],"38":["84.6"],"40":["74.8"],"46":["12.2"],"49":["103.23"],"61":["123.2"],"62":["123.2"],"66":["103.19"],"67":["123.2"],"75":["84.7"],"80":["61.50","74.8"],"81":["93.17","103.23"],"99":["82.9"],"100":["83.10"],"101":["83.10"],"111":["61.37"],"123":["49.7"],"179":["74.2"],"240":["93.17"],"256":["93.17"],"443":["61.50"],"503":["61.4"],"1111":["103.13"],"2000":["94.6"],"2038":["81.2"],"5000":["94.5"],"1234567":["51.8"],"else":["2.0","7.0","8.0","65.35","108.2","108.4","116.6","116.8"],"console":["2.0","61.38"],"log":["2.0","61.38","93.7","93.13"],"利用":["3.0","106.8"],"方法":["3.0","84.6"],"获取存储的差值类型的key":["3.0"],"下标":["3.0"],"然后与当遍历的次数k一起返回":["3.0"],"slow":["4.0"],"while":["4.0"],"return":["4.0","6.0","10.0","11.0","48.3","52.8","64.13","87.0","97.4","115.5"],"len":["5.0"],"continue":["5.0"],"更新最长递减序列的信息":["6.0"],"if":["6.0","52.8","56.2","90.0","107.0"],"slice":["6.0","107.0"],"mid":["7.0"],"因此":["12.0","29.6","64.20","83.6","112.7"],"您在学习本书的过程中":["12.0"],"并不需要花费购买任何软件":["12.0"],"另":["12.1"],"使用哪种编辑器更多的是个人的偏好":["12.1"],"如果您有其它喜欢的编辑器":["12.1"],"可以自行选择":["12.1"],"v":["12.2","12.4","103.21","103.22","112.15"],"推荐安装较新的稳定版本":["12.3"],"或者更高":["12.4"],"下面我们将一步一步的完善整个项目的结构":["13.0"],"目录中呢":["13.1"],"通过git版本控制的方式来保证项目代码的完整性和安全性":["13.2"],"具体的git的操作方法就不在本文中叙述了":["13.2"],"如果您不希望bower配置文件这么复杂":["13.5"],"那么可以手工最简化的创建":["13.5"],"最简化bower":["13.5"],"只需要一个":["13.5"],"字段即可让bower好好工作了":["13.5"],"目录中":["13.6"],"bower配置完成后":["13.7"],"如下所示":["14.1"],"name":["14.1","68.18"],"learning":["14.1"],"angularjs":["14.1"],"dependencies":["14.1"],"同时":["14.1","68.11"],"项目中会多出":["14.1"],"目录":["14.1"],"所有的angularjs的文件都在这个目录中存放":["14.1"],"图3":["14.1"],"安装好angularjs后的目录结构":["14.1"],"标明此网站是简体中文的":["14.2"],"同时调整了":["14.2"],"html的基础并不属于本书的范围":["14.2"],"因此不在此细述":["14.2"],"推荐所有的javascript文件都放在body部分引入":["14.3"],"学习它":["14.5"],"理解它":["14.5"],"使用它":["14.5"],"angular":["15.0","68.54"],"material":["15.0"],"案例实践":["15.0"],"登陆":["15.0"],"注册":["15.0"],"权限控制":["15.0"],"如果此处输出的是javascript中的变量":["16.0"],"此处的显示会":["16.0"],"自动":["16.0"],"的随javascript变量的变化而变化":["16.0"],"src":["17.1"],"这些用法的效果都是一样的":["17.1"],"part":["17.3"],"再引用入html页面即可":["18.0"],"这里我们将app":["18.1"],"js引入了进来":["18.1"],"以上代码有两个问题需要注意":["18.1"],"这也是angularjs的核心特性之一":["18.2"],"它让我们的javascript代码有了作用域的概念":["18.2"],"降低了代码之间不期望的一些互相影响":["18.2"],"这个特性我们在后面会大量的使用":["18.2"],"将网页分为多个部分":["18.2"],"并分别交于不同的javascript代码进行管理":["18.2"],"各个部分之间互相独立":["18.2"],"这样即可在网页中实现逻辑复杂的功能":["18.2"],"刷新页面":["19.0"],"我们可以看到运行的效果":["19.0"],"图4":["19.0","20.1","20.2","23.3","24.1","24.2","24.5","25.2","25.3","25.4"],"controller运行结果":["19.0","20.0"],"下面":["19.0","25.0"],"我们再来分析下":["19.0"],"的具体形式":["19.0"],"data":["19.2","61.3","64.3","65.51"],"message":["19.2"],"hello":["19.2"],"onclick":["19.3"],"函数传入":["19.3"],"之后":["19.3"],"可在html页面中调用这个功能":["19.3"],"实现比如按钮点击触发功能的效果":["19.3"],"在使用angularjs的时候":["19.5"],"养成数据二次封装的习惯":["19.5"],"可以避免很多这样的问题":["19.5"],"如果您实际运行代码":["20.0"],"会发现":["20.0","106.3"],"您每输入":["20.0"],"删除一个文字":["20.0"],"改动会马上在上方显示出来":["20.0"],"这就是数据绑定的魅力":["20.0"],"函数中的逻辑":["20.1"],"click运行结果":["20.1","20.2"],"运行效果如下":["20.2"],"if为假时界面":["21.0"],"从上面的例子可以看出":["21.0"],"如果复选框打勾":["21.0"],"则界面只显示了前两行文字":["21.0"],"而取消复选框的打勾":["21.0"],"则显示了最后的一行文字":["21.0"],"这个特性可以用于展示界面上的某些信息或者按钮":["21.0"],"与":["21.2","56.3"],"将参数包裹起来的":["21.2"],"直接将其所在的":["22.0"],"元素根据":["22.0"],"的长度复制了3次":["22.0"],"并将相应的数据填充了进去":["22.0"],"这样":["22.1","30.2"],"我们就可以明确的知道用户点击了哪一行了":["22.1"],"另外":["22.1"],"值得注意的是":["22.1"],"是从":["22.1"],"开始计算的哟":["22.1"],"limitto":["23.0"],"limit":["23.0"],"begin":["23.0"],"截取array从begin位置开始的limit个元素":["23.0"],"expression":["23.0","97.2"],"reverse":["23.0","84.4"],"根据expression的条件对list进行排序":["23.0"],"reverse可选":["23.0"],"设置为true则反过来排":["23.0"],"tom":["23.1"],"自定义filter的运行效果":["23.2"],"如果您期望界面显示的内容进行一些通用的处理":["23.2"],"但是又不希望对原本的数据进行改动":["23.2"],"那么可以考虑自己制作过滤器":["23.2"],"如果我们在输入框中输入t":["23.3"],"则列表中只会显示包含t的项目":["23.3"],"filter用于搜索":["23.3"],"运行效果":["24.1","25.2","31.0","34.0"],"未选中时效果":["24.1"],"ngclass运行效果":["24.1","24.2"],"选中第一个的效果":["24.1"],"选中第二个的效果":["24.1"],"选中第三个的效果":["24.1"],"全部选中的效果":["24.1"],"使用文本作为样式":["24.2"],"请读者自行测试效果":["24.3"],"运行之后":["24.4"],"点击上面的按钮":["24.4"],"则文字放大变红":["24.4"],"点击第二个按钮":["24.4"],"则文本变回原来的样子":["24.4"],"由于动画效果无法通过截图表示":["24.4"],"还请读者自行测试":["24.4"],"pre":["24.5"],"当前样式为":["24.5"],"运行效果为":["24.5"],"style运行效果":["24.5"],"在下一节中":["24.5"],"我们还将看到约束为只设置背景颜色的示例":["24.5"],"的特性":["25.0"],"我们将仔细讲解":["25.0"],"中的语法":["25.0"],"用于显示在下拉框中的名称":["25.0"],"类似于ng":["25.0"],"repeat中的用法":["25.0"],"将colors遍历":["25.0"],"每次遍历的对象命名为color":["25.0"],"options加上空选项":["25.1"],"in":["25.2","104.4","112.2","112.6","132.4"],"options加上group":["25.2"],"可以看到":["25.3","30.6","131.2"],"图中的":["25.3"],"和":["25.3","28.1","44.3","112.9","127.1"],"变为了不可选择的状态":["25.3"],"options加上disable":["25.3"],"br":["25.4"],"当前选中的国家":["25.4"],"运行结果":["25.4","28.0","30.7","33.0"],"请注意列表中显示的值和选中时变量的值的关系":["25.4"],"options传入object作为数据":["25.4"],"但是我目前没有理解其实现意义":["27.0"],"就不在这里介绍了":["27.0"],"如果我们预先定义好了针对这些标签的处理方式":["27.0"],"那么angularjs将可以把这些标签自动的转化成html显示代码":["27.0"],"就会发现它们无一例外的都是directive":["27.1"],"注意这里只加入了一个people的标签":["28.0"],"图5":["28.0","30.1","30.3","30.5","30.6","30.7","31.0","32.4","32.5","33.0","34.0"],"directive运行效果":["28.0"],"这个对象中有两个元素":["28.1"],"中间加入了template中的内容":["28.2"],"这对标签":["28.3"],"如果在restrict中设定了使用方法":["28.4"],"而在html代码中却未按照对应的方法使用":["28.4"],"那么代码将不会生效":["28.4"],"不一样":["29.0"],"然后合并起来":["29.4"],"peoplelistarray":["29.4"],"只是因为历史原因提供了支持":["29.5"],"但是并不推荐使用":["29.5"],"因为有这个条件存在":["29.6"],"请不要给你的directive起data开头的名字":["29.6"],"peopletwoinfo":["30.0"],"这样的功能":["30.0"],"可以通过配置directive的":["30.0"],"scope":["30.0"],"定义实现":["30.0"],"在html代码里":["30.1"],"我们为div元素配置了一个people的属性和一个info属性":["30.1"],"并将firstctrl的":["30.1"],"harry传入给了info":["30.1"],"最终的显示效果如下":["30.1"],"传入数据的directive":["30.1"],"我们就达到了存储数据的效果":["30.2"],"在一个控制器中多个directive":["30.3"],"实现的效果与上一张图片一样":["30.4"],"具体的页面html代码会有差异":["30.4"],"请您自行测试查看":["30.4"],"刷新界面后":["30.5"],"我们可以在输入框中尝试修改":["30.5"],"效果如下":["30.5"],"在directive中修改数据":["30.5"],"在directive中传入字符串":["30.6"],"我们在directive中传入的数据进行的数据修改":["30.6"],"并未反馈到firstctrl中":["30.6"],"form":["30.7","49.1","84.28"],"btn":["30.7"],"在directive中传入函数和数据回传":["30.7"],"p":["31.0","103.22","112.2","112.6","112.11","112.12"],"这里是part":["31.0"],"html中的内容":["31.0"],"templateurl的使用":["31.0"],"是不会显示这段代码的":["31.1"],"而通过":["31.1"],"调用后":["31.1"],"又可以直接展示出来":["31.1"],"注意":["31.1","83.5"],"通过示例我们可以看到":["31.1"],"文档中的":["31.1"],"的优先级高于独立的html文件":["31.1"],"就不重复展示了":["31.2"],"在这里":["32.0","131.2"],"我们最主要的是观察最下方的":["32.0"],"部分":["32.0","129.3"],"我们可以看到":["32.0"],"在这个directive元素中传入的数据":["32.0"],"都可以通过":["32.0"],"获取到":["32.0"],"这也是我们在":["32.0"],"中获取数据的主要方法":["32.0"],"会自动使用jquery来解析界面元素":["32.2"],"我们获取的":["32.2"],"会自动变为jquery对象":["32.2"],"element的使用":["32.4","32.5"],"因为主要是jquery的用法":["32.5"],"更多的实际应用就不在本书中详述了":["32.5"],"如果有兴趣学习jquery":["32.5"],"您可以通过上网搜索或者购买书籍的方式来学习":["32.5"],"transclude的使用":["33.0"],"查看html代码如下":["33.0"],"transclude的效果html":["33.0"],"标题2":["34.0"],"这是第二个标签下的内容":["34.0"],"这里为了将文件整理在一起":["34.0"],"使用了ng":["34.0"],"template的方式":["34.0"],"当点击":["34.0"],"或":["34.0","82.34","114.3"],"时":["34.0","102.4","128.1"],"下方会自动展示对应的内容":["34.0"],"directive之间通讯":["34.0"],"angular仓库":["36.0"],"hharry":["37.1"],"link":["37.3","38.0"],"把directive变为一个容器":["37.3","38.0"],"transclude":["37.3","38.0"],"directive之间互相通讯":["37.3","38.0"],"一个下午就可掌握javascript的基本语法和用法":["37.4"],"同时也可能学会php的语法":["37.4"],"京东特价优惠时我购买了几十本与javascript相关的书籍":["37.4"],"这本是我认为最靠谱的入门书":["37.4"],"再通过api请求获取数据":["37.5"],"幸运的是":["37.6"],"angularjs推荐这么做":["37.6"],"至少对我而言是如此":["37.7"],"从今天来看":["37.8"],"我的做法完全不符合angularjs的最佳实践":["37.8"],"虽然我未在网站中使用jquery等类库":["37.8"],"但是我也同样没有使用angularjs推荐使用的directive方式":["37.8"],"完全没有使用":["37.8"],"这也是我准备在更深入的学习angularjs和重新构建网站的第二版的主要原因":["37.8"],"不管怎么说":["37.8"],"我把东西做出来了":["37.8"],"而且整个网站是可用的":["37.8"],"从程序结构上也是可维护和修改的":["37.8"],"请通过邮件或微信联系我":["37.9"],"联系地址在此页面上方":["37.9"],"我放弃了在新版本的网站中应用angular":["37.10"],"2技术":["37.10"],"而选择继续使用angularjs":["37.10"],"x":["37.10"],"visit":["37.11"],"让directive动起来":["38.0"],"vue是通过拓展html语法进行渲染":["41.1"],"react通过新旧dom的对比得到需要更新的部分dom":["41.2"],"实现数据的增量更新":["41.2"],"useeffect":["41.3"],"usecontext":["41.3"],"等":["41.3","68.54"],"document":["41.5"],"getelementbyid":["41.5"],"root":["41.5"],"版本将添加更多的额外功能":["41.6"],"轻量级状态管理包":["41.7"],"不到1kb":["41.7"],"wrong":["41.10"],"export":["41.10","65.35","65.55","116.1"],"default":["41.10","65.35","65.55"],"但是空标签不可以":["41.12"],"适用于简单的表单场景或需要直接操作dom元素的值得情况":["41.13"],"首页就会有一个很长的加载时间":["42.1"],"conponentdidupdate":["43.1"],"卸载子组件":["43.1"],"componentwillunmount":["43.1"],"ref":["44.3","51.5"],"会形成单独的key名":["44.3"],"表示节点内容":["44.3"],"依次循环":["44.3"],"但是还是得真是的dom去走":["44.5"],"只不过不同平台的画法不太一样":["44.6"],"在实际项目中":["45.0"],"我们可能会遇到各种高阶组件的应用场景":["45.0"],"因此掌握高阶组件的使用方法对于":["45.0"],"react开发来说至关重要":["45.0"],"mycomponent":["45.1","49.7"],"value":["45.1","107.0","112.15","123.2"],"useref特性":["45.2"],"可变的":["45.2"],"持久化":["45.2"],"的渲染是从图中":["47.0"],"render":["47.0"],"阶段开始的":["47.0"],"但keep":["47.0"],"alive的渲染是在patch阶段":["47.0"],"构建组件树":["47.0"],"虚拟dom树":["47.0"],"并将":["47.0"],"vnode":["47.0"],"转换成真正":["47.0"],"dom":["47.0","49.5","62.48","110.0"],"节点的过程":["47.0"],"首次加载被包裹组件时":["47.0"],"componentinstance":["47.0"],"的值是":["47.0"],"undefined":["47.0","82.18","83.9","84.7","84.31","100.3"],"因为":["47.0","106.6"],"组件作为父组件":["47.0"],"它的render函数会优先于被包裹的组件先执行":["47.0"],"后面逻辑不执行":["47.0"],"再次访问被包裹组件时":["47.0"],"的值就是已经缓存的组件的实例":["47.0"],"之后会把上一次的dom插入到父元素中":["47.0"],"alive组件渲染流程":["47.0"],"来模拟":["48.0"],"的行为":["48.0"],"并在回调函数执行前添加一个空的定时器来强制推迟执行":["48.0"],"的交互事件":["48.1"],"promise":["48.1","84.28"],"then":["48.1"],"回调":["48.1"],"mutaionobserver":["48.1"],"nexttick":["48.1"],"async":["48.1"],"await":["48.1","65.51"],"这时的任务队列可以简单理解成这样":["48.2"],"然后同步任务就执行完了":["48.2"],"接着按顺序执行任务队列里的任务":["48.2"],"第一个任务执行就会更新视图":["48.2"],"后面自然而然地就得到更新后的视图了":["48.2"],"如果异步开关是开的":["48.3"],"就关闭":["48.3"],"表示正在执行回调函数":["48.3"],"然后执行回调函数":["48.3"],"如果没有提供回调":["48.3"],"并支持promise":["48.3"],"那么就返回promise":["48.3"],"这里的":["48.3","116.1"],"是让我们在不穿参数的情况下使用的":["48.3"],"具体使用":["48.3"],"sflow":["48.3"],"disable":["48.3"],"time":["48.3"],"如果当店已经有活动的队列":["48.5"],"就添加到执行队列的末尾":["48.5"],"并返回":["48.5"],"赋值为当前活动队列":["48.5"],"排列队列":["48.5"],"postflushindex":["48.5"],"activepostflushcbspostflushindex":["48.5"],"vue3源码nexttick":["48.6"],"的内嵌模版中转换为":["49.1"],"如果组件中拥有":["49.1"],"属性而非":["49.1"],"这段代码将不会工作":["49.1"],"但文件内的模版不受此限制":["49.1"],"修饰符":["49.1"],"modifiers":["49.1"],"修饰符是以点开头的特殊后缀":["49.1"],"表明指令需要以一些特殊的方式被绑定":["49.1"],"prevent":["49.1"],"修饰符会告知":["49.1"],"指令对触发的事件调用":["49.1"],"event":["49.1","65.49"],"preventdefault":["49.1"],"submit":["49.1"],"onsubmit":["49.1"],"较好":["49.3"],"如果在运行时绑定条件很少改变":["49.3"],"则":["49.3"],"更合适":["49.3"],"当在":["49.5"],"内模板使用":["49.5"],"可以驼峰化":["49.5"],"的名称":["49.5"],"例如":["49.5"],"viewbox":["49.5"],"view":["49.5"],"box":["49.5"],"当子组件的":["49.7"],"my":["49.7"],"被触发":["49.7"],"处理函数将被调用":["49.7"],"handlethis":["49.7"],"我们可以简单地把":["50.0"],"理解为":["50.0"],"来使用":["50.0"],"errorcaptured":["50.1","50.4"],"捕获一个来自子孙组件的错误时被调用":["50.1","50.4"],"vue2生命周期":["50.1"],"会再次触发更新方法":["50.2"],"beforedestroy":["50.2"],"实例被销毁前调用":["50.2"],"此时实例属性与方法仍可访问":["50.2"],"destroyed":["50.2"],"完全销毁一个实例":["50.2"],"可清理它与其它实例的连接":["50.2"],"接棒它的全部指令以及事件监听器":["50.2"],"并不能清除dom":["50.2"],"仅仅销毁实例":["50.2"],"生命周期当中":["50.3"],"deactivated":["50.4"],"缓存的组件停用时调用":["50.4"],"vue生命周期":["50.4"],"starttimer":["50.5"],"开始":["50.5"],"stoptimer":["50.5"],"停止":["50.5"],"onunmount":["50.5"],"钩子函数会在组件卸载后运行":["50.5"],"通常用于清理一些资源或取消订阅":["50.5"],"unsubscribe":["50.5"],"取消订阅":["50.5"],"prevbar":["51.4"],"但":["51.12"],"有时其响应性依赖关系会不那么明确":["51.12"],"在vue":["51.13"],"更新后执行":["51.13"],"双向绑定关系":["52.2"],"来进行关联数据与视图":["52.3"],"通知所有":["52.5"],"执行更新函数":["52.5"],"双向绑定原理":["52.5"],"foreach":["52.6","120.6"],"key":["52.6","65.37","104.4"],"definereactive":["52.6"],"test":["52.7"],"get":["52.8"],"target也就是watcher实例":["52.8"],"set":["52.8","104.4"],"newval":["52.8"],"通知dep执行更新方法":["52.8"],"vue":["53.2","68.54"],"都属于":["53.2"],"meaningful":["53.3"],"表示页面的":["53.3"],"主要内容":["53.3"],"开始出现在屏幕上的时间点":["53.3"],"它是我们测量用户加载体验的主要指标":["53.3"],"fmp本质上是通过一个算法来猜测某个时间点可能是":["53.3"],"所以有时候不准":["53.3"],"fmp原理":["53.3"],"捕获fmp的原理":["53.3"],"配置选项":["53.4"],"根据需要进行配置":["53.4"],"外链css":["53.4"],"js文件":["53.4"],"很多时候我们在main":["53.4"],"js中直接import一些ui库或者css文件啥的":["53.4"],"以后可以在index":["53.4"],"通过script外链引入":["53.4"],"这样就不会通过我们的webpack打包":["53.4"],"loading":["53.4"],"首页加一个loading或许是最原始的方法了":["53.4"],"在index":["53.4"],"html里加一个loadingcss效果":["53.4"],"当页面加载完成消失":["53.4"],"function":["55.3","82.20","84.7"],"类型变量":["56.2"],"bb":["56.2","75.0"],"可以正常运行":["56.2"],"typescript中有两个":["56.3"],"顶层类型":["56.3"],"any":["56.3","64.14","84.25","112.1","112.13"],"unknown":["56.3"],"只有一个":["56.3"],"底层类型":["56.3"],"为变量赋值时会自动判断类型并转换":["61.1"],"所以是弱类型语言":["61.1"],"http":["61.3","61.42"],"example":["61.3"],"com":["61.3"],"api":["61.3"],"true":["61.3","82.29","84.1"],"表示服务器请求超时":["61.4"],"表是服务器由于临时的服务器过载或者维护":["61.4"],"无法解决当前请求":["61.4"],"闭包正式可以做到这一点":["61.7"],"因为它不会释放外部的引用":["61.7"],"从而函数内部的值得以保留":["61.7"],"在使用定时器时":["61.8"],"一定要记得及时清除已经失效的定时器":["61.8"],"使用内存分析工具来检测内存泄漏问题":["61.8"],"及时发现和解决潜在问题":["61.8"],"赋值为null":["61.8"],"alert":["61.10"],"利用事件冒泡的原理":["61.10"],"将事件委托给父元素":["61.10"],"代理就是利用事件冒泡的机制把里层需要相拥的事件绑定到外层":["61.12"],"来进行访问和设置":["61.13"],"本地存储通过":["61.13"],"localsorage":["61.13"],"对象进行访问与设置":["61.13"],"newjson":["61.16"],"多态":["61.17"],"是父类或接口定义的引用变量可以指向子嘞或者具体实现类的实例对象":["61.17"],"apply":["61.18","84.7"],"返回结果":["61.18"],"instanceof":["61.18"],"object":["61.18","115.3"],"es6新特性二":["61.21"],"待开发":["61.21"],"2083byte":["61.22"],"若只支持":["61.22"],"chrome":["61.22"],"则最大长度是":["61.22"],"8182byte":["61.22"],"所以不能使用缓存":["61.23"],"ie浏览器只支持事件冒泡":["61.25"],"也可以通过h5的拖放":["61.28"],"drag和drop":["61.28"],"来实现":["61.28"],"释放内存以便在引用垃圾回收的方法":["61.30"],"标记清除":["61.30"],"计数引用":["61.30"],"someobject":["61.31"],"这样就不会有垃圾回收的过程":["61.31"],"即使有属性在user中不存在":["61.32"],"通过user":["61.32"],"id同样也可以这样监听这个属性的变化":["61.32"],"这里需要组合继承":["61.33"],"this":["61.35"],"id":["61.36","75.0"],"onloading":["61.36"],"pattern":["61.37"],"flags":["61.37"],"global":["61.37"],"g":["61.37"],"ignorecase":["61.37"],"multiline":["61.37"],"m":["61.37"],"source":["61.37"],"reg":["61.37"],"newreg":["61.37"],"abc":["61.38","82.7","83.6"],"输出":["61.38","93.6"],"bac":["61.38"],"bca":["61.38"],"acb":["61.38"],"cab":["61.38"],"cba":["61.38"],"不能访问和操作其它域下的资源":["61.40"],"减少":["61.42"],"请求":["61.42"],"合并文件":["61.42"],"合并图片":["61.42"],"includes":["61.44"],"spread":["61.45"],"实现数组":["61.45"],"寄生组合式继承":["61.47"],"这两个关注的是程序在等待调用结果时的状态":["61.48"],"https是":["61.50"],"反向链接":["61.51"],"网站外链优化":["61.51"],"不支持透明度":["62.2"],"表示ie盒子模型":["62.7"],"muted":["62.9","62.10"],"静音模式":["62.9","62.10"],"冲突":["62.10"],"加载插件的标签":["62.12"],"video":["62.12"],"视频标签":["62.12"],"audio":["62.12"],"音频标签":["62.12"],"平铺":["62.14"],"round":["62.14"],"铺满stretch":["62.14"],"拉伸":["62.14"],"转换":["62.17"],"指定什么时候开始切换效果":["62.19"],"direction":["62.20","62.32"],"是否轮流反向播放动画":["62.20"],"display":["62.21"],"block":["62.21"],"visibility":["62.21"],"inherit":["62.22"],"表示元素会继承父级元素的定位属性":["62.22"],"flex":["62.25"],"self":["62.25"],"center":["62.25","62.26"],"justfy":["62.26"],"item":["62.26"],"table":["62.27"],"布局":["62.27"],"只能用于背景色和文本颜色":["62.30"],"not":["62.30"],"否定伪类选择器":["62.30"],"lang":["62.30"],"语言伪类选择器":["62.30"],"包含的所有的权重之和":["62.31"],"decoration":["62.32"],"元素的文本大小写":["62.32"],"transform":["62.32"],"文本方向":["62.32"],"svg精灵图":["62.33"],"button":["62.34"],"del":["62.34"],"iframe":["62.34"],"ins":["62.34"],"justify":["62.36"],"设置弹性盒子元素在主轴上的对齐方式":["62.36"],"屏幕越小的移动设备如果用了":["62.38"],"肯定文字就越小":["62.38"],"就会导致看文章的时候看不清":["62.38"],"中页面是一种比较宽松的像后兼容的方式显示":["62.41"],"在整个拖放操作结束时触发":["62.42"],"实现前两者的优化":["62.44"],"使用":["62.44","84.27","103.16"],"cdn":["62.44"],"渲染":["62.45"],"服务端渲染":["62.45"],"开始渲染解析页面":["62.48"],"浏览器会处理":["62.48"],"并且构建":["62.48"],"树":["62.48"],"处理":["62.48","82.18"],"css":["62.48"],"标记并构建":["62.48"],"cssdom":["62.48"],"将":["62.48","65.57","101.0"],"树和":["62.48"],"树合并成一个渲染树":["62.48"],"根据渲染树来布局":["62.48"],"以计算每个节点的集合信息":["62.48"],"将各个节点渲染到屏幕上":["62.48"],"这样就完成了页面渲染":["62.48"],"传输完成":["62.48"],"tcp四次挥手":["62.48"],"native":["62.48"],"javascript":["62.48","68.25","110.1"],"tcp四层五层与osi七层模型区别":["62.48"],"事件方面":["62.50"],"css动画有天然提供的事件支持":["62.50"],"js动画则没有":["62.50"],"兼容性问题":["62.50"],"css动画存在兼容性问题":["62.50"],"这些hook提供了强大的工具":["64.1"],"用于管理状态":["64.1"],"处理副作用和重新编辑":["64.1"],"react功能组件中的逻辑":["64.1"],"同时确保最佳效率和渲染速度":["64.2"],"setstate":["64.3"],"方法更新状态":["64.3"],"在":["64.3"],"state对象不是必须的":["64.3"],"数据由":["64.3"],"属性在":["64.3"],"对象中管理":["64.3"],"current":["64.4"],"一般来说":["64.5"],"功能组件被认为更简单":["64.5"],"更易于阅读和测试":["64.5"],"建议尽可能使用功能组件":["64.5"],"除非对基于类的组件有特定需求":["64.5"],"它允许访问组件中的属性和方法":["64.6"],"不使用":["64.6"],"因为函数未绑定到特定实例":["64.6"],"该函数讲以前的状态值作为参数":["64.7"],"redux通常作为状态管理库":["64.11"],"返回现有的状态":["64.13"],"特别是在需要处理大量数据和实时数据的场景中具有很高的实用性":["64.16"],"是浏览器原生提供的api":["64.17"],"而axios则是一个第三方库":["64.17"],"可以在浏览器和node":["64.17"],"js中使用":["64.17"],"react需要在编译期间对hook的调用顺序进行静态分析":["64.18"],"从而确保每个hooks对应状态都是稳定的":["64.18"],"因此不能将hook放置在条件语句和循环语句中":["64.18"],"只能在函数组件的顶层作用域中使用hook":["64.18"],"diff算法的优化和实现可以大大影响页面性能和用户体验":["64.20"],"许多前端开发框架和库都致力于改进diff算法":["64.20"],"以提供更高效的ui更新机制":["64.20"],"使用mvc的目的就是将m和v的代码分离":["65.2"],"mvc是单向通信":["65.2"],"也就是view跟model":["65.2"],"必须通过controller来承上启下":["65.2"],"两者区别":["65.2"],"mvc和mvvm其实区别并不大":["65.2"],"都是一种设计思想":["65.2"],"mvc和mvvm的区别并不是vm完全取代了c":["65.2"],"只是在mvc的基础上增加了一层vm":["65.2"],"不过是弱化了c的概念":["65.2"],"viewmodel存在目的在于抽离controller中展示的业务逻辑":["65.2"],"而不是替代controller":["65.2"],"其它视图操作业务等还是应该放在controller中实现":["65.2"],"也就是说mvvm实现的是业务逻辑组件的重用":["65.2"],"使开发更高效":["65.2"],"结构更清晰":["65.2"],"增加代码的复用性":["65.2"],"解决":["65.3"],"右":["65.4"],"系统按键修饰符":["65.4"],"ctrl":["65.4"],"alt":["65.4"],"shift":["65.4"],"meta":["65.4"],"按下对应键位触发":["65.4"],"区别是在页面加载时不显示双花括号":["65.7"],"是否相同":["65.10"],"进行调换位置或删除操作":["65.10"],"导航的同时":["65.12"],"给子路由传递参数":["65.12"],"如果发现没有浏览器的api":["65.15"],"路由强制进入这个模式":["65.15"],"不会刷新页面":["65.16"],"会触发":["65.16"],"hash的改变会自动添加到浏览器历史记录中":["65.16"],"hash值的变化会被浏览器记录":["65.18"],"实现页面的前进和后退功能":["65.18"],"不过":["65.18"],"它在seo中的确有不好的影响":["65.18"],"以及":["65.19"],"forward":["65.19","130.3"],"back":["65.19"],"go":["65.19"],"方法用于切换历史状态":["65.19"],"也不会返回404错误":["65.20"],"路由参数通常只能传递有限数量的信息":["65.22"],"因为它们必须以路径的一部分存在":["65.22"],"因为它们不包含在路径中":["65.23"],"用户不容易传递信息":["65.23"],"不影响访问资源的关键性标识":["65.24"],"auth":["65.35"],"isauthenticated":["65.35"],"login":["65.35"],"未登录时重定向到登录页":["65.35"],"继续导航":["65.35"],"自定义指令主要是为了重用涉及普通元素的底层dom访问逻辑":["65.36"],"content":["65.40","65.41"],"插槽在父子组件关系中放置在子组件中":["65.42"],"插槽的内容是被在父组件中调用时传递过来的":["65.42"],"插槽内容":["65.42"],"插槽内容是在父组件中调用子组件时":["65.42"],"具体要传递给子组件的值":["65.42"],"一般是放在子组件标签里面的":["65.42"],"小小苹果":["65.44"],"具名插槽的顺序是不限制的":["65.44"],"只需要写好模版命好名字":["65.44"],"它就会自动去到它所对应的位置":["65.44"],"成了具名插槽了":["65.46"],"同样具名插槽的":["65.46"],"属性也不会传递给":["65.46"],"这种在父组件作用域中获取到了子组件作用域中的变量":["65.46"],"可以认为作用域插槽":["65.46"],"延伸了子组件数据的作用范围":["65.46"],"所以这类能够借搜参数的插槽就被称为作用域插槽":["65.46"],"ontrack":["65.49","65.50"],"debuggerevent":["65.49"],"ontrigger":["65.49","65.50"],"调试侦听器的依赖":["65.50"],"cancel":["65.51"],"doasyncwork":["65.51"],"当":["65.51"],"变化时候":["65.51"],"cancel将被调用":["65.51"],"取消之前的未完成的请求":["65.51"],"函数不能有异步":["65.52"],"可以":["65.52"],"函数中使用路由器":["65.54"],"综上所述":["65.54"],"是vuerouter的实例":["65.54"],"提供了路由控制器的一些方法和属性":["65.54"],"用于改变url和获取路由相关信息":["65.54"],"而":["65.54","84.2","91.1","91.2","112.9"],"是当前激活的路由对象":["65.54"],"包含了当前url解析得到的信息":["65.54"],"history":["65.55"],"引入了一个新的渲染器api":["65.56"],"使得可以更轻松地构建自定义渲染器":["65.56"],"这使得vue3":["65.56"],"0不仅能够在浏览器中运行":["65.56"],"还可以在服务器":["65.56"],"原生应用等环境中使用":["65.56"],"新的渲染器api也带来了更多的渲染优化":["65.56"],"使得vue3":["65.56"],"在不同环境下都能够高效地工作":["65.56"],"为了解决":["65.57"],"store对象过于臃肿的问题":["65.57"],"分割成":["65.57"],"模块":["65.57"],"通过":["68.3","84.1","131.2"],"的方式将count变量传递给子组件":["68.3"],"就实现了一个最简单的父组件到子组件的数据传递":["68.3"],"上面这段代码中":["68.5"],"在template中":["68.5"],"我们通过":["68.5"],"符号监听子组件自定义事件changeparentcount":["68.5"],"并在父组件中执行名为changeparentcount的方法":["68.5"],"它接收一个params的参数":["68.5"],"然后更新父组件中count变量的值":["68.5"],"点击按钮":["68.7"],"在控制台中可以看到打印出子组件的数据和方法的结果":["68.7"],"总结":["68.7","68.9"],"这种方式之间的通信":["68.7"],"主要是在子组件内部":["68.7"],"将属性和方法暴露出去":["68.7"],"然后再子组件中":["68.7"],"先获取到子组件的dom实例":["68.7"],"然后就可以访问子组件的属性和调用子组件的方法了":["68.7"],"由于":["68.9"],"在父组件中是响应式的":["68.9"],"所以更新后该值将自动反映在父组件的视图中":["68.9"],"我们点击一下按钮":["68.9"],"子组件1和子组件2的值都会被更改":["68.9"],"过使用":["68.9"],"数据能够在父组件和子组件之间进行传递和共享":["68.9"],"实现了跨组件的通信":["68.9"],"发生变化时":["68.11"],"它们会自动更新到子组件中":["68.11"],"当子组件中的":["68.11"],"改变时":["68.11"],"它们会通过":["68.11"],"事件反馈给父组件":["68.11"],"父组件会相应地更新自己的":["68.11"],"这就实现了父子组件之间的双向绑定":["68.11"],"on":["68.13","84.5","85.0"],"方法监听了":["68.13"],"updatename":["68.13"],"事件":["68.13"],"并在回调函数中接收到了传递的数据":["68.13"],"然后我们将接收到的数据赋值给相应的属性":["68.13"],"在模板中展示出来":["68.13"],"通过这种方式":["68.13"],"我们可以在不同的组件中实现通信":["68.13"],"组件可以通过事件总线发送事件和数据":["68.13"],"组件则监听事件并接收到数据进行处理":["68.13"],"来统一管理应用程序的状态和逻辑":["68.15"],"这种方式下生命周期方法被简化了":["68.23"],"后立即调用":["68.24"],"通常用于执行异步操作":["68.24"],"订阅事件等初始化工作":["68.24"],"与其它":["68.25"],"框架进行集成等":["68.25"],"hook":["68.26"],"来代替生命周期方法的功能":["68.26"],"并更新渲染的列表项":["68.36"],"index":["68.38"],"输入延迟估值":["68.38"],"estimated":["68.38"],"input":["68.38"],"latency":["68.38"],"分以上":["68.39"],"则说明网站应用在该方面的评估表现符合最佳实践":["68.39"],"潜在的跨站脚本攻击":["68.49"],"jsonp":["68.50"],"更可靠":["68.50"],"使得客户端无感知地访问目标服务器资源":["68.53"],"框架集成":["68.54"],"集成不同的前端框架":["68.54"],"将不同的前端框架":["68.54"],"react":["68.54"],"集成到同一个应用程序中":["68.54"],"每个团队可以选择它们喜欢的框架来开发它们的部分":["68.54"],"并通过共享数据和通信机制来实现整体应用程序的协同工作":["68.54"],"路由管理":["68.54"],"统一的路由管理":["68.54"],"通过统一的路由管理机制来组织和管理不同前端应用程序的路由":["68.54"],"可以使用路由中间件或服务来实现统一的路由管理":["68.54"],"使得用户能够无缝地在不同的前端应用程序之间进行导航":["68.54"],"维护一个单一的代码仓库可以减少仓库管理的成本":["68.55"],"包括权限管理":["68.55"],"备份和恢复":["68.55"],"仓库迁移等方面":["68.55"],"然后在需要的地方调用该函数":["68.56"],"这样可以确保记忆化计算的行为独立于组件的渲染过程":["68.56"],"同时也更容易进行测试和维护":["68.56"],"并使用":["68.60"],"来监听状态变量的变化":["68.60"],"并将其保存到本地存":["68.60"],"储中":["68.60"],"然后":["68.60"],"我们在":["68.60"],"中使用了这个自定义":["68.60"],"来管理输入框中的文本值":["68.60"],"将其保存到本地存储中":["68.60"],"当拖动操作结束时触发":["70.3"],"可以继续使用options":["70.9"],"也是十分友好的":["70.9"],"shadow属性高级用法":["73.0"],"9deg":["74.2"],"keyframes":["74.8"],"scale":["74.8"],"translate":["74.9","74.15"],"aa":["75.0"],"class":["75.0"],"a":["75.0"],"background":["75.0"],"color":["75.0"],"blue":["75.0"],"id的important会将class的important覆盖掉":["75.0"],"red":["75.0"],"函数体":["80.0"],"没有被调用":["80.0"],"png":["80.0","88.0"],"打印出来的是":["80.0"],"7张三":["80.0"],"同样":["80.0"],"也可以有多个参数":["80.0"],"并且参数可以执行的时候再次添加":["80.0"],"但是要注意的是":["80.0"],"参数是按照形参的顺序进行的":["80.0"],"所以服务器知道是谁发起了请求":["81.0"],"我们还可以使用":["81.0"],"属性从浏览器访问cookie":["81.0"],"path":["81.2"],"expires":["81.2"],"tue":["81.2"],"jan":["81.2"],"03":["81.2"],"07":["81.2"],"gmt":["81.2"],"以使cookie对此网站所有页面可见":["81.3"],"前面有一个点符号":["81.4"],"也以相同的方式工作":["81.4"],"允许从子域访问cookie":["81.4"],"这是一种旧的表示方式":["81.4"],"如果我们需要支持非常旧的浏览器":["81.4"],"那么应该使用它":["81.4"],"总结一下":["81.4"],"通过domain选项的设置":["81.4"],"可以实现允许在子域访问cookie":["81.4"],"删除cookie":["81.5"],"让它立即过期":["81.5"],"property":["81.6"],"accessors":["81.6"],"false":["82.4","82.22","83.6","103.13"],"array":["82.12","84.28","93.3","99.4"],"prototype":["82.12","84.7"],"但在es6中":["82.18"],"空位被视为":["82.18"],"的值":["82.18"],"使用es6的数组方法时":["82.18"],"空位会被当作":["82.18"],"null":["82.30","90.0","115.2","120.3"],"参数变量是默认声明的":["82.34"],"所以不能使用":["82.34"],"let":["82.34"],"再次声明":["82.34"],"解构赋值等":["83.0"],"referenceerror":["83.2"],"️":["83.5"],"es6内部使用严格相等运算符":["83.5"],"来判断一个位置是否有值":["83.5"],"所以":["83.5"],"只有当一个数组成员严格等于":["83.5"],"默认值才会生效":["83.5"],"不放置任何变量名":["83.6"],"可以写出非常古怪的赋值表达式":["83.6"],"但没有实际意义":["83.6"],"由于数组本质是特殊的对象":["83.6"],"因此可以对数组进行对象属性的解构":["83.6"],"length":["83.6","83.15","103.12"],"generator":["83.12"],"函数":["83.12"],"最为自己的this的值":["83.13"],"innerhtml":["83.14"],"bangbang":["83.15"],"rest参数之后不能再有其它参数":["83.15"],"只能是最后一个参数":["83.15"],"否则会报错":["83.15"],"函数的":["83.15"],"属性":["83.15","106.3"],"不包括rest参数":["83.15"],"myobject":["83.21"],"valuea":["83.21"],"valueb":["83.21"],"object类型":["83.21"],"返回":["83.21","93.4","100.3"],"由于被当作函数调用":["84.1"],"所以返回传入的第一个值":["84.1"],"fpaoxy":["84.1"],"操作符被用作构造函数调用":["84.1"],"返回一个对象":["84.1"],"对象的key为value":["84.1"],"值为第二个传入的值":["84.1"],"访问fproxy上的属性":["84.1"],"proxy拦截后判断属性名等于":["84.1"],"修改为返回":["84.1"],"所以为":["84.1"],"foo":["84.1"],"proxy拦截后修改为返回":["84.1"],"循环":["84.2"],"该方法返回目标对象所有自身的属性的属性名":["84.2"],"的返回结果仅包括目标对象自身的可遍历属性":["84.2"],"defineproperties":["84.2"],"propdescs":["84.2"],"n":["84.4"],"pow":["84.4"],"reversetint":["84.4"],"tostring":["84.4"],"split":["84.4"],"join":["84.4"],"reverseint":["84.4"],"代理应当返回一个":["84.5"],"布尔值":["84.5"],"严格模式下":["84.5"],"代理如果没有返回":["84.5"],"就会报错":["84.5"],"use":["84.5"],"strict":["84.5","85.0"],"无论有没有下面这一行":["84.5"],"都会报错":["84.5"],"trap":["84.5"],"returned":["84.5"],"falsish":["84.5"],"for":["84.5","84.28","104.4"],"直接调用":["84.6"],"也会被拦截":["84.6"],"内部调用对应的":["84.7"],"保证原生行为能够正常执行":["84.7"],"添加的工作":["84.7"],"就是将每一个操作输出一行日志":["84.7"],"有了":["84.7"],"对象以后":["84.7"],"很多操作会更易读":["84.7"],"call":["84.7"],"math":["84.7"],"floor":["84.7"],"attributes":["84.8"],"定义对象的属性":["84.8"],"jane":["84.9"],"返回长度":["84.13"],"size":["84.13","84.18"],"返回实例成员总数":["84.18"],"方法返回值的规格可以描述如下":["84.25"],"interface":["84.25"],"symbol":["84.25"],"iterationresult":["84.25"],"boolean":["84.25"],"of":["84.28","107.0"],"map":["84.28","120.6"],"weakmap":["84.28"],"weakset":["84.28"],"比如":["84.28"],"all":["84.28","129.2"],"race":["84.28"],"函数内部的每一个状态":["84.30"],"大括号内是否允许不必要的空格":["85.0"],"shorthand":["85.0"],"强制对象字面量缩写语法":["85.0"],"one":["85.0"],"连续声明":["85.0"],"operator":["85.0"],"assignment":["85.0"],"赋值运算符":["85.0"],"什么的":["85.0"],"换行时运算符在行尾还是行首":["85.0"],"padded":["85.0"],"块语句内行首行尾是否要空行":["85.0"],"prefer":["85.0"],"首选const":["85.0"],"首选展开运算":["85.0"],"reflect":["85.0"],"首选reflect的方法":["85.0"],"quotes":["85.0"],"single":["85.0"],"引号类型":["85.0"],"quote":["85.0"],"props":["85.0"],"对象字面量中的属性名是否强制双引号":["85.0"],"radix":["85.0"],"parseint必须指定第二个参数":["85.0"],"match":["85.0","90.0"],"命名检测":["85.0"],"yield":["85.0"],"生成器函数必须有yield":["85.0"],"语句强制分号结尾":["85.0"],"分号前后空格":["85.0"],"sort":["85.0"],"变量声明时排序":["85.0"],"space":["85.0"],"keywords":["85.0"],"关键字后面是否要空一格":["85.0"],"不以新行开始的块":["85.0"],"前面要不要有空格":["85.0"],"paren":["85.0"],"函数定义时括号前面要不要有空格":["85.0"],"小括号里面要不要有空格":["85.0"],"infix":["85.0"],"ops":["85.0"],"中缀操作符周围要不要有空格":["85.0"],"case后面要不要加空格":["85.0"],"unary":["85.0"],"words":["85.0"],"nonwords":["85.0"],"一元运算符的前":["85.0"],"后要不要加空格":["85.0"],"注释风格不要有空格什么的":["85.0"],"使用严格模式":["85.0"],"isnan":["85.0"],"禁止比较时使用nan":["85.0"],"只能用isnan":["85.0"],"valid":["85.0"],"jsdoc":["85.0"],"jsdoc规则":["85.0"],"typeof":["85.0"],"必须使用合法的typeof的值":["85.0"],"top":["85.0"],"var必须放在作用域顶部":["85.0"],"wrap":["85.0"],"iife":["85.0"],"inside":["85.0"],"立即执行函数表达式的小括号风格":["85.0"],"正则表达式字面量用小括号包起来":["85.0"],"yoda":["85.0"],"禁止尤达条件":["85.0"],"num":["87.0"],"lastindexof":["87.0"],"substring":["87.0"],"把参数和文件名分割开":["87.0"],"decodeuri":["87.0"],"屏幕分辨率的高":["88.0"],"screen":["88.0"],"屏幕分辨率的宽":["88.0"],"屏幕可用工作区高度":["88.0"],"availheight":["88.0"],"屏幕可用工作区宽度":["88.0"],"availwidth":["88.0"],"image":["88.0"],"导入模块的":["89.0"],"因此得名":["89.0"],"一开始被提议的时候":["89.0"],"amd是为前端而做的":["89.0"],"而cjs是后端":["89.0"],"amd语法不如cjs直观":["89.0"],"universal":["89.0"],"definition":["89.0"],"通用模块定义":["89.0"],"在前端和后端都适用":["89.0"],"通用":["89.0"],"因此而得名":["89.0"],"与cjs或amd不同":["89.0"],"umd更像是一种配置多个模块系统的模式":["89.0"],"当使用rollup":["89.0"],"webpack之类的打包器时":["89.0"],"umd通常用作备用模块":["89.0"],"search":["90.0"],"匹配目标参数":["90.0"],"decodeuricomponent":["90.0"],"返回参数值":["90.0"],"是返回一个新的数组":["91.1"],"不会返回值":["91.1"],"实际上返回了":["91.1"],"区别主要在于处理函数返回值的方式不同":["91.2"],"忽略函数的返回值":["91.2"],"则将函数的返回值收集到一个新数组中":["91.2"],"方便以后查阅":["92.0"],"from":["92.2"],"seconds":["92.6"],"获取当前的年月日时分秒":["92.6"],"toarray":["92.6","120.4"],"years":["92.6"],"months":["92.6"],"milliseconds":["92.6"],"toobject":["92.6"],"xxxx":["92.6"],"xx":["92.6"],"格式化时间戳":["92.8"],"以毫秒为单位":["92.8"],"返回值为字符串类型":["92.8"],"24t19":["92.11"],"08":["92.11"],"00":["92.11"],"2019年6月3日":["92.13"],"valueof":["92.15"],"时间戳":["92.15"],"转":["92.15"],"string":["92.15","99.4"],"即索引为1的位置而不是索引0的位置开始":["93.1"],"否则为":["93.3"],"调用了reduce方法的原数组本身":["93.3"],"则会抛出错误":["93.4"],"输出为6":["93.7"],"输出为":["93.13","98.4"],"相似":["93.14"],"但并不完全相同":["93.14"],"方法主要侧重于多个":["93.14"],"并行执行":["93.14"],"并在所有":["93.14"],"都成功时才返回结果":["93.14"],"这个方法则侧重于按顺序执行":["93.14"],"操作":["93.14","127.3"],"并允许处理程序之间的传递结果":["93.14"],"输出为nan":["93.15"],"输出结果为9":["93.16"],"上述示例中":["94.1"],"函数将在延迟一秒后执行":["94.1"],"这是一个常用于执行一次性延迟操作的函数":["94.1"],"适用于需要重复执行的定时任务":["94.2"],"直到被清除或者页面被卸载":["94.2"],"特别是在长时间运行的定时器中":["94.3"],"累计实际误差可能导致定时器执行时间的不确定性":["94.3"],"simulation":["94.5"],"stopped":["94.5"],"anmiate":["94.6"],"启动动画":["94.6"],"并在每一帧中执行":["94.7"],"客户端进入established状态":["95.1"],"并对服务端发送的syn包进行确认":["95.1"],"发送确认包ack":["95.1"],"服务端接收到客户端的ack包之后":["95.1"],"也进入established状态":["95.1"],"至此tcp连接成功":["95.1"],"为什么客户端没有立刻关闭呢":["95.2"],"为了确保第四次挥手的确认消息到达服务端":["95.2"],"如果服务端在规定时间内未收到最后的确认消息":["95.2"],"会冲洗内进行第三次挥手请求断开连接":["95.2"],"客户端重新发送确认消息":["95.2"],"是报文的最长生存时间":["95.2"],"两个":["95.2"],"是在网络中来回两个报文所需要的最长时间":["95.2"],"如果超过了这个时间":["95.2"],"客户端没有重新收到断开连接的请求":["95.2"],"说明四次挥手顺利完成":["95.2"],"可以断开连接了":["95.2"],"网络原理而设计的":["96.0"],"而在实际应用中还是":["96.0"],"osi七层与tcp":["96.0"],"ip四层":["96.0"],"五层的区别":["96.0"],"进而危害数据安全":["97.1"],"的css表达式代码":["97.2"],"属于前端javascript自身的安全漏洞":["97.3"],"其它两种xss都属于服务端的安全漏洞":["97.3"],"x2f":["97.4"],"白名单过滤":["97.4"],"对于现实富文本来说":["97.4"],"不能通过上面的办法来转义所有字符":["97.4"],"因为这样也会把需要的格式也转义掉":["97.4"],"这种情况推荐使用白名单过滤的方法":["97.4"],"达到冒充用户对被攻击网站执行":["97.5"],"某种操作的目的":["97.5"],"token也是空谈":["97.6"],"token验证可以避免":["97.7"],"指向是由外层":["98.1"],"函数或全局":["98.1"],"作用域来决定的":["98.1"],"如果是直接调用":["98.2"],"那么":["98.2"],"指向的是":["98.2"],"对象":["98.2"],"此时打印o2":["98.3"],"此时this指向的":["98.6"],"foo对象":["98.6"],"输出为undefined":["98.7"],"并且":["98.7"],"盛名的变量是块级作用域":["98.7"],"不在window全局对象中":["98.7"],"上访问属性时":["99.0"],"会抛出":["99.0"],"typeerror":["99.0"],"异常":["99.0"],"这需要采用可选链运算符":["99.0"],"atom":["99.1"],"的目的是去创建一个唯一属性键":["99.1"],"保证不会与其它代码中的键产生冲突":["99.1"],"aaa":["99.4"],"就会返回":["99.4"],"isarray":["99.4"],"该方法会返回一个布尔值表示该值是否为数组":["99.4"],"它现在是一个构造函数":["100.1"],"因为通过":["100.1"],"关键字调用了它":["100.1"],"创建了一个parent构造函数的实例":["100.1"],"这就提到了":["100.2"],"proto":["100.2"],"就在":["100.3"],"中寻找":["100.3"],"但是":["100.3"],"obnject":["100.3"],"为null":["100.3"],"所以返回了":["100.3"],"这也就是为什么当访问对象中一个不存在的属性的时候":["100.3"],"undefined了":["100.3"],"然后又验证了":["100.4"],"就是根构造函数":["100.4"],"是因为在函数体内":["101.0"],"赋值给了变量":["101.0"],"由于变量":["101.0"],"在全局中已经声明了":["101.0"],"所以不会报错":["101.0"],"并且打印结果为":["101.0"],"至于第三个打印项":["101.0"],"就是简单的变量的提升了":["101.0"],"由于全局中":["101.0"],"最终的值为":["101.0"],"所以打印结果也为":["101.0"],"总之":["101.0"],"无论作用域中的声明出现在什么地方":["101.0"],"都将在代码本身被执行前首先进行处理":["101.0"],"可以将这个过程形象地想象成所有的声明":["101.0"],"变量和函数":["101.0"],"都会被":["101.0"],"移动":["101.0"],"到各自作用域的最顶端":["101.0"],"这个过程被称为":["101.0"],"的节点":["102.2"],"一旦":["102.2"],"构建完毕后":["102.2"],"浏览器就可以根据":["102.2"],"来绘制页面了":["102.2"],"rander流程":["102.2"],"属性决定该节点创建怎样的渲染器":["102.3"],"引起回流和重绘的原因是页面布局和几何属性发生了改变":["102.3"],"currentstyle":["102.4"],"浏览器为了返回最新值":["102.4"],"降低回流成本":["102.5"],"从下标为3的元素开始查询":["103.1","103.20"],"没有找到返回":["103.1","103.20"],"返回新数组":["103.2"],"数组改变":["103.3"],"注意和map区分":["103.3"],"满足条件的元素返回为一个新的数组":["103.4"],"满足条件的第一个元素":["103.5"],"相当于累加的效果":["103.8"],"可以被直接调用":["103.16"],"会根据规则隐式调用原始值的":["103.16"],"表示从下标为1的元素开始替换":["103.18"],"替换一个元素":["103.18"],"值将是":["103.21"],"i":["103.21"],"q":["103.22"],"r":["103.22","112.10","112.14","112.16"],"s":["103.22"],"t":["103.22"],"u":["103.22"],"w":["103.22"],"y":["103.22"],"hasownproperty":["104.4"],"进行递归判定":["104.4"],"这意味着它们可以在不需要向网络发送请求的情况下而被检索":["105.0"],"跳过强缓存和协商缓存":["105.2"],"普通刷新":["105.2"],"跳过强缓存":["105.2"],"但还是会检查协商缓存":["105.2"],"一般脚本":["105.4"],"字体":["105.4"],"图片会存在内存中":["105.4"],"内存缓存具有":["105.4"],"快速读取":["105.4"],"时效性":["105.4"],"内存缓存会讲编译解析后的文件":["105.4"],"直接存入该进程的内存中":["105.4"],"占据该进程一定的内存资源":["105.4"],"以方便下次运行使用时的快速读取":["105.4"],"一旦进程关闭":["105.4"],"则该进程的内存则会清空":["105.4"],"资源大小数值":["105.4"],"从服务器下载最新资源":["105.4"],"浏览器读取缓存的顺序是":["105.4"],"优先级高于":["105.6"],"同时存在则只有":["105.6"],"生效":["105.6"],"生效则返回304":["105.7"],"继续使用缓存":["105.7"],"blcak":["106.1"],"覆盖继承自父类别上的颜色":["106.1"],"也跟着变化了":["106.3"],"这是因为这两个实例使用的是同一个原型对象":["106.3"],"内存空间是共享的":["106.3"],"相比于第一种原型链继承的方法一":["106.4"],"父类的引用属性不会被共享":["106.4"],"优化了第一种继承方式的弊端":["106.4"],"但是只能继承父类的实例属性和方法":["106.4"],"不能继承原型属性或者方法":["106.4"],"这种方式看起来没什么问题":["106.5"],"也解决了原型链继承和构造函数继承各自存在的问题":["106.5"],"但是从上面的代码可以看到":["106.5"],"执行了两次":["106.5"],"造成了多构造一次的性能开销":["106.5"],"这种继承方式的缺点也很明显":["106.6"],"方法实现的是浅拷贝":["106.6"],"多个实例的引用类型属性指向相同的内存":["106.6","106.7"],"存在篡改的可能":["106.6","106.7"],"其优缺点也很明显":["106.7"],"跟原型式继承一样":["106.7"],"const":["106.8","112.5"],"asuna":["106.8"],"成功访问到父类的方法":["106.8"],"babel":["106.8"],"工具进行转换":["106.8"],"我们会发现":["106.8"],"实际采用的方式也是寄生组合式方式进行继承的":["106.8"],"证明这种方式是比较好的解决继承的方式":["106.8"],"indexof":["107.0"],"querystring":["107.0"],"pairs":["107.0"],"pair":["107.0"],"的方式来减少调用频率":["108.0"],"而函数节流一段时间内只执行一次":["108.5"],"搜索框的搜索联想功能":["108.6"],"解析器其实是一个运行环境":["110.0"],"解析器提供了操作":["110.0"],"bom":["110.0"],"的接口":["110.0"],"而在":["110.0"],"中解析器提供了操作磁盘和文件的接口":["110.0"],"是服务端的":["110.1"],"基于chrome的v8引擎":["110.1"],"是":["110.1"],"的运行环境":["110.1"],"因此没有运行的限制":["110.1"],"与浏览器没有任何关系":["110.1"],"并不会因为ie而产生兼容问题等":["110.1"],"extends":["112.1","112.2","112.6","112.8","112.11","112.14"],"keyof":["112.1","112.2","115.3"],"pick":["112.1"],"exclude":["112.1"],"age":["112.5"],"worker":["112.5"],"张三":["112.5"],"李四":["112.5"],"报错":["112.5","116.2"],"类型是任何其他类型的子类型":["112.7"],"它跟其它类型组成联合类型时候":["112.7"],"可以直接将":["112.7"],"类型从联合类型中":["112.7"],"消掉":["112.7"],"相当于删除兼容的类型":["112.7"],"剩下不兼容的类型":["112.7"],"实现如下":["112.8","112.11"],"不属于":["112.9"],"会返回":["112.9"],"args":["112.10","112.11","112.14"],"infer":["112.10","112.11","112.12","112.14"],"never":["112.13","112.15"],"abstract":["112.14"],"这个对象的":["112.17"],"不包含属性":["112.17"],"的实现就是一个空接口":["112.17"],"若常数枚举表达式求值后为":["114.3"],"nan":["114.3"],"infinity":["114.3"],"则会在编译阶段报错":["114.3"],"所有其它情况的枚举成员被当作是需要计算得出的值":["114.3"],"比普通":["114.4"],"有着更高的性能和更少的内存占用":["114.4"],"但由于其特性限制":["114.4"],"适用于一些特定的场景":["114.4"],"如在需要大量枚举且不需要在运行时访问枚举对象的情况下使用":["114.4"],"普通枚举":["114.4"],"则更灵活":["114.4"],"可以包含计算成员和常量成员":["114.4"],"适用于其它更加灵活的场景":["114.4"],"而是在使用的时候再指定具体类型":["115.1"],"text":["115.2"],"不会出现":["115.3"],"不存在的字段":["115.3"],"ts泛型以及泛型约束":["115.3"],"getdata":["115.3"],"k":["115.3"],"obj":["115.3"],"defaultobj":["115.3"],"的函数":["115.3"],"它的功能是返回目标对象的目标key的值":["115.3"],"关于类型":["115.3"],"我们约定了k的取值范围只能来自终于t的key值":["115.3"],"使用其它的类型会报错":["115.3"],"️注意":["115.4"],"此时定义接口类型时候":["115.4"],"需要传入泛型的类型":["115.4"],"使用泛型混入":["116.1"],"方便之后复用":["116.1"],"mixinuserinfo":["116.1"],"类型的含义是通过调用混合类型":["116.1"],"先将共同的部分iuserbaseinfo类型先混入进去":["116.1"],"整合成新类型":["116.1"],"方便给具体的":["116.1"],"来调用":["116.1"],"irecordconfig":["116.1"],"是把":["116.1"],"整合成一个类型":["116.1"],"减少不必要的类型定义":["116.1"],"最终使用的时候的类型":["116.1"],"recordconfiglist":["116.1"],"pet":["116.2"],"正常运行":["116.2"],"类型中没有这个属性":["116.2"],"tofixed":["116.4"],"这个类型":["116.5"],"之后调用bark方法":["116.5"],"类型":["116.6","116.12"],"fly":["116.7"],"被定义为类型":["116.9"],"的别名":["116.9"],"因此变量":["116.9"],"可以互相赋值":["116.9"],"因为它们实际上都是指向相同的类型":["116.9"],"尽管在代码中看起来好像创建了两个不同的类型":["116.9"],"但在":["116.9"],"视角下":["116.9"],"它们实际上是完全相同的类型":["116.9"],"opens":["116.10"],"new":["116.10"],"window":["116.10"],"你应该尽量去使用接口代替类型别名":["116.10"],"如果无法通过接口来描述一个类型并且需要使用联合类型或元组类型":["116.10"],"这个时候通常会使用类型别名":["116.10"],"可以更好地约束数组的结构":["116.11"],"提高代码的类型安全性":["116.11"],"当访问超出已知索引的元素时":["116.11"],"会返回元组包含的类型的所有联合类型":["116.11"],"我们通过数组解构的语法":["116.12"],"将除去首位字符的元素推断成一个新类型":["116.12"],"如果这个":["116.12"],"存在":["116.12"],"那么就返回这个新类型":["116.12"],"否则就返回":["116.12"],"var":["118.0"],"认证结果":["118.0"],"调用接口":["118.0"],"人脸核验的交互方式":["118.0"],"默认0":["118.0"],"err":["118.0"],"请保持光线充足":["118.0"],"面部正对手机":["118.0"],"且无遮挡":["118.0"],"链表结构":["120.1"],"遍历链表并将节点值以数字形式返回":["120.4"],"result":["120.4"],"push":["120.4"],"假定你在一个列表中有一个对象并且希望所有其它对象迭代在一个非特殊的排列下":["120.5"],"指向整个列表的指针可以被称作":["120.5"],"访问指针":["120.5"],"values":["120.6"],"需要转换为链表的值的数组":["120.6"],"从数组创建链表":["120.6"],"formarray":["120.6"],"将链表转换为字符串":["120.6"],"node":["120.6"],"反转链表":["120.6"],"currnode":["120.6"],"prevnode":["120.6"],"nexnode":["120.6"],"存储下一个节点":["120.6"],"改变当前节点的下一个节点":["120.6"],"是其链接到上一个节点":["120.6"],"将prevnode和currnode节点向前移动一步":["120.6"],"重置头部和尾部节点":["120.6"],"webpack引入了一些性能优化":["122.0"],"包括更快地持久化缓存":["122.0"],"更快地构建速度等":["122.0"],"移除废弃特性":["122.0"],"做未更新":["122.0"],"webpack移除了一些过时的特性和api":["122.0"],"因此再升级时需要注意潜在的破坏性变化":["122.0"],"这样的条件跳转语句":["123.1"],"可以使用带有三个分支的节点来表示":["123.1"],"literal":["123.2"],"raw":["123.2"],"sourcetype":["123.2"],"module":["123.2"],"数据":["123.4"],"根据语法规则转为":["123.4"],"ast":["123.4"],"同时也会去验证语法":["123.4"],"语法有错的话会抛出语法错误":["123.4"],"其它文件编译成javassript":["124.1"],"包含loader的sourcemap":["124.4"],"比如jsx":["124.4"],"babel的sourcemap":["124.4"],"map经过base64编码作为datauri嵌入":["124.4"],"这个配置项比较少见":["124.4"],"处理后的结果":["124.5"],"会保留loader处理前后文件信息的映射":["124.5"],"解决了通过":["124.5"],"关键字导致的无法确定loader处理前源代码的问题":["124.5"],"则会定位到精准代码":["124.7"],"非常快速":["124.8"],"比较快":["124.8"],"快速":["124.8"],"慢":["124.8"],"中等":["124.8"],"比较慢":["124.8"],"hidden":["124.9"],"unocss中文官网":["126.1"],"部分所述":["127.1"],"工作树文件将包括一个冲突的描述":["127.1"],"该描述被通常的冲突标记使用":["127.1"],"括起来":["127.1"],"不做其它修改":["127.1"],"可以迅速将这些有价值的更改推广到其它相关分支":["127.2"],"但是不要进行任何":["127.3"],"或者会结束后续的":["127.3"],"过程":["127.3"],"如果进行":["127.3"],"则提交内容直接应用到当前分支了":["127.3"],"解决完所有冲突后":["127.3"],"继续完成":["127.3"],"pick过程":["127.3"],"如果在解决冲突后决定不再应用次补丁":["127.3"],"可以取消":["127.3"],"如果你想clone别人的github项目到本地":["128.1"],"那么需要通过github先fork别人的项目到自己的github仓库中":["128.1"],"fork完之后":["128.1"],"进入自己的本地的git项目仓库":["128.1"],"firspro":["128.1"],"clone":["128.1"],"githubrepository":["128.1"],"githubrepository输入的是github上fork完项目之后":["128.1"],"点击":["128.1"],"or":["128.1"],"download":["128.1"],"复制的那个ssh的项目地址":["128.1"],"这样就初始化完成":["128.1"],"并且可以自由fork项目了":["128.1"],"的用法":["129.1"],"force的快捷键":["129.2"],"force":["129.2"],"强制":["129.2"],"move":["129.2"],"移动或重命名":["129.2"],"remote":["129.2"],"远程":["129.2"],"所有":["129.2"],"删除":["129.3"],"和绿色":["129.3"],"新增":["129.3"],"我们可以通过这些信息来判断是否产生冲突":["129.3"],"以确定是否将更新merge到当前分支":["129.3"],"next":["129.4"],"再次查看提交历史":["130.2"],"lg":["130.2"],"现在远端master":["130.2"],"远端head":["130.2"],"本地master全部统一":["130.2"],"问题解决":["130.2","130.3"],"方式二":["130.2"],"直接执行":["130.2"],"效果与上面是一致的":["130.2"],"也是最近才发现":["130.2"],"推荐使用":["130.2"],"updating":["130.3"],"fast":["130.3"],"changed":["130.3"],"insertion":["130.3"],"再次查看一下提交历史":["130.3"],"master上也是一条直线了":["130.3"],"最后收个尾":["130.3"],"删除掉feature分支":["130.3"],"d":["130.3"],"deleted":["130.3"],"was":["130.3"],"于是我们可以将feature分支的提交合并后然后再merge到主干这样看起来就清爽多了":["131.0"],"我们需要进入编辑状态":["131.2"],"删掉或者注释掉第二次提交和第三次提交的信息":["131.2"],"这样最终只留下了第一次提交":["131.2"],"输入wq命令保存":["131.2"],"查看一下最终的提交信息":["131.2"],"log提交信息":["131.2"],"现在只留下第一次提交的信息了":["131.2"],"之后就可以正常合并到主分支上了":["131.2"],"但查找时不方便识别":["132.3"],"checked":["132.4"],"就可以了":["132.10"],"如下":["132.10"],"1684753035449":["132.10"]}]'},t={"0.0":{t:"# 一些整理的算法\r",p:`!Algorithm
`,l:"algorithm/index.html",a:"一些整理的算法"},"1.0":{t:"# N数之和\r",p:`
请用算法实现，从给定的无需、不重复的数组A中，取出N个数，使其相加和为M。并给出算法的时间、空间复杂度，如：
var ar ...`,l:"algorithm/N数字之和.html",a:"n数之和"},"2.0":{t:"# 三数之和\r",p:`
给你一个包含n个整数的数组nums，判断nums中是否存在三个元素a,b,c ，使得 a + b + c = 0 ？请你找 ...`,l:"algorithm/三数之和.html",a:"三数之和"},"3.0":{t:"# 两数之和\r",p:`
给定一个整数数组nums和一个目标值 target ，请你在该数组中找出和为目标值的那 两个 整数，并返回它们的数组下标。 ...`,l:"algorithm/两数之和.html",a:"两数之和"},"4.0":{t:"# 删除有序数组中的重复项\r",p:`
给你一个 非严格递增排列 的数组 nums ，请你 原地 删除重复出现的元素，使每个元素 只出现一次 ，返回删除后数组的新 ...`,l:"algorithm/删除有序数组中的重复项.html",a:"删除有序数组中的重复项"},"5.0":{t:"# 合并两个有序数组\r",p:`
给你两个有序整数数组nums1和nums2，请你将nums2合并到nums1中，使num1成为一个有序数组。

说明:
初 ...`,l:"algorithm/合并两个有序数组.html",a:"合并两个有序数组"},"6.0":{t:"# 寻找数组中最长驼峰\r",p:`给定一个纯数字数组，原地生成一个最长驼峰子数组（元素大小从中间向两侧递减）

示例

// 原数组
const arr =  ...`,l:"algorithm/寻找数组中最长驼峰.html",a:"寻找数组中最长驼峰"},"7.0":{t:"# 搜索插入位置\r",p:`
给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引
如果目标值不存在于数组中，返回它将会被按顺序插入的位置

 ...`,l:"algorithm/搜索插入位置.html",a:"搜索插入位置"},"8.0":{t:"# 移除元素\r",p:`
给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于val的元素，并返回移除后数组的新长度。
不要使用 ...`,l:"algorithm/移除元素.html",a:"移除元素"},"9.0":{t:"# 计数器\r",p:`
给定一个整型参数n，请你编写并返回一个counter函数。这个counter函数最初返回n，每次调用它时会返回前一个值加1 ...`,l:"algorithm/计数器.html",a:"计数器"},"10.0":{t:"# 数组中心下标索引\r",p:`
给你一个整数数组nums，请计算数组的中心下标
数组中心下标是数组的一个下标，其左侧所有元素相加的和等于右侧所有元素相加的 ...`,l:"algorithm/计算中心下标索引.html",a:"数组中心下标索引"},"11.0":{t:"# 首位不重复字符索引\r",p:`
给定一个字符串，找到它的第一个不重复的字符，并返回它的索引。如果不存在，则返回 -1。

示例

  let str1 = ...`,l:"algorithm/首位不重复字符索引.html",a:"首位不重复字符索引"},"12.0":{t:"环境的准备\r",p:`======
开发Web网站，使用合适的工具和环境会极大的提升开发的效率。本章将讲述如何准备用于AngularJS项目开发的 ...`,l:"frame/angular/chapter01.html",a:"环境的准备"},"12.1":{t:"WebStorm\r",p:"在过去的开发中，WebStorm一直是我对编辑器的首选。WebStorm是商业化的产品，如果长期使用，需要花钱购买（目前已经 ...",l:"frame/angular/chapter01.html#webstorm",a:"webstorm"},"12.2":{t:"Chrome\r",p:"Chrome浏览器的开发者工具可以极大的方便开发时的调试工作，目前国内大量浏览器也是基于Chrome的开源内核开发，在通用性 ...",l:"frame/angular/chapter01.html#chrome",a:"chrome"},"12.3":{t:"Node.js\r",p:"Node.js在本书中主要的使用用途是运行bower工具，用以安装AngularJS极其相关的库文件。通过官网可以直接下载N ...",l:"frame/angular/chapter01.html#node-js",a:"node-js"},"12.4":{t:"其它工具\r",p:"在安装好Node.js后，可以通过Node.js的npm命令安装最新版本的npm/cnpm/bower(如果已经存在，自动安 ...",l:"frame/angular/chapter01.html#其它工具",a:"其它工具"},"12.5":{t:"其它工具和库\r",p:`其它的工具和库，我们将不再需要从网站上下载安装，直接通过bower在项目内进行下载使用。
`,l:"frame/angular/chapter01.html#其它工具和库",a:"其它工具和库"},"13.0":{t:"# 项目的创建和配置\r",p:"使用WebStorm可以直接创建AngularJS项目，且会自动帮助你配置好项目并自动下载AngularJS等库。但是我们这 ...",l:"frame/angular/chapter02.html",a:"项目的创建和配置"},"13.1":{t:"创建基本的文件结构\r",p:`首先建立一个public目录，并在public目录中建立js、css、img三个目录。如下图所示：
!图2-2 创建目录
大 ...`,l:"frame/angular/chapter02.html#创建基本的文件结构",a:"创建基本的文件结构"},"13.2":{t:"`public`目录设置的意义\r",p:"从字面意思即可理解，public目录是用来存放供外部用户访问的内容的根目录。非public目录下的内容，既是我们不期望用户通 ...",l:"frame/angular/chapter02.html#public-目录设置的意义",a:"public-目录设置的意义"},"13.3":{t:"配置并初始化bower\r",p:"bower的配置可以通过手动创建文件或者命令行的方法来进行。我推荐使用命令行的方式来进行创建，这样可以更好的理解配置生成的文 ...",l:"frame/angular/chapter02.html#配置并初始化bower",a:"配置并初始化bower"},"13.4":{t:"打开命令行工具\r",p:`WebStorm内置了命令行工具（调用系统的命令行功能），在左下角点击Terminal即可启用。
!图2-3 命令行工具
`,l:"frame/angular/chapter02.html#打开命令行工具",a:"打开命令行工具"},"13.5":{t:"初始化bower\r",p:`在命令行下运行bower init，你将会看到如下的若干选项，并会自动的在项目的根目录生成一个bower.json。
注：以 ...`,l:"frame/angular/chapter02.html#初始化bower",a:"初始化bower"},"13.6":{t:"`.bowerrc`配置文件\r",p:"由于我们建立了public目录，并且项目的根目录与网站根目录不同，因此，我们需要新建一个额外的.bowerrc文件，告诉bo ...",l:"frame/angular/chapter02.html#bowerrc-配置文件",a:"bowerrc-配置文件"},"13.7":{t:"配置完成\r",p:`至此，我们对bower的配置已经全部结束！现在项目看起来应该长这个样子：
!图2-4 Bower配置完成后
`,l:"frame/angular/chapter02.html#配置完成",a:"配置完成"},"14.0":{t:"# AngularJS的第一步\r",p:"在前面的章节，我们已经创建好了项目，并配置好了bower工具。本章开始，我们将进入正式的学习使用AngularJS的过程。首 ...",l:"frame/angular/chapter03.html",a:"angularjs的第一步"},"14.1":{t:"在项目中安装AngularJS的基本库\r",p:`AngularJS官网提供了通过Bower安装的命令行，我们需要做的，就是在WebStorm的命令行工具中，运行如下命令：
 ...`,l:"frame/angular/chapter03.html#在项目中安装angularjs的基本库",a:"在项目中安装angularjs的基本库"},"14.2":{t:"建立`index.html`文件\r",p:"在./public目录下建立index.html文件（右键public目录，New &gt; HTML File，然后输入i ...",l:"frame/angular/chapter03.html#建立-index-html-文件",a:"建立-index-html-文件"},"14.3":{t:"引入AngularJS的库文件\r",p:`引入AngularJS库文件很简单，一行HTML语言加入HTML的head部分即可：


注：这里引入的angular.js ...`,l:"frame/angular/chapter03.html#引入angularjs的库文件",a:"引入angularjs的库文件"},"14.4":{t:"第一个程序Hello World\r",p:"是时候来测试下我们是否成功的引入了AngularJS了。我们在&lt;body/&gt;元素中加入一个ng-app=&quo ...",l:"frame/angular/chapter03.html#第一个程序hello-world",a:"第一个程序hello-world"},"14.5":{t:"运行Hello World\r",p:"右键选择index.html，然后选择 run &quot;index.html&quot;，然后你就可以在新打开的浏览器中 ...",l:"frame/angular/chapter03.html#运行hello-world",a:"运行hello-world"},"15.0":{t:"# 学习AngularJS的规划\r",p:`我们已经完成了基本的准备工作，从本章开始，我们将专注于学习和应用AngularJS。
作为一个功能完整的框架，Angular ...`,l:"frame/angular/chapter04.html",a:"学习angularjs的规划"},"16.0":{t:"# 基本表达式\r",p:`在第三章的结尾，我们制作了一个基本的Hello World应用。在其中，我们使用了如下的语法：
&lt;h1&gt;{{&q ...`,l:"frame/angular/chapter04_1.html",a:"基本表达式"},"17.0":{t:"# 引入`ng-include`和模板`ng-template`\r",p:"引入ng-include和模板ng-template是定义和使用HTML代码碎片的功能。用于将HTML切碎分别存储，并根据需 ...",l:"frame/angular/chapter04_10.html",a:"引入-ng-include-和模板-ng-template"},"17.1":{t:"引入`ng-include`\r",p:"当HTML代码过于复杂，或者期望建立单页应用(Single-page Application - SPA)时，需要将部分HT ...",l:"frame/angular/chapter04_10.html#引入-ng-include",a:"引入-ng-include"},"17.2":{t:"其它属性\r",p:`ng-include还有onload和autoscroll的属性。
但是我目前不清楚具体的使用方法和效果，如果有读者清楚，可 ...`,l:"frame/angular/chapter04_10.html#其它属性",a:"其它属性"},"17.3":{t:"模板`ng-template`\r",p:`ng-template用于将多个HTML片段存放于一个HTML文件中。并且可以根据需求分别调用其中的某一个片段。
ng-te ...`,l:"frame/angular/chapter04_10.html#模板-ng-template",a:"模板-ng-template"},"18.0":{t:"# AngularJS初始化`ng-app`\r",p:`本节我们将学习基本的ng-app初始化。
ng-app可以将网页自动初始化为一个AngularJS应用，这样你才能在网页中使 ...`,l:"frame/angular/chapter04_2.html",a:"angularjs初始化-ng-app"},"18.1":{t:"创建一个独立的JavaScript文件，并在HTML中引用\r",p:`在./public/js目录中新建一个app.js文件，并填入如下代码：
var App = angular.module( ...`,l:"frame/angular/chapter04_2.html#创建一个独立的javascript文件-并在html中引用",a:"创建一个独立的javascript文件-并在html中引用"},"18.2":{t:"AngularJS的作用域\r",p:"ng-app标签可以放置在&lt;html&gt;标签或者&lt;body&gt;标签上，也可以放置在HTML页面的任何一个 ...",l:"frame/angular/chapter04_2.html#angularjs的作用域",a:"angularjs的作用域"},"18.3":{t:"引入文件的顺序\r",p:"引入JavaScript文件的顺序是有差异的，如果我们将上面代码的angular.js和app.js文件呼唤，那么网页将不能 ...",l:"frame/angular/chapter04_2.html#引入文件的顺序",a:"引入文件的顺序"},"19.0":{t:"# 控制器`ng-controller`\r",p:"控制器ng-controller是使用AngularJS的核心功能之一。在前一节我们已经了解了作用域的概念，ng-contr ...",l:"frame/angular/chapter04_3.html",a:"控制器-ng-controller"},"19.1":{t:"`ng-controller`详解\r",p:"\r",l:"frame/angular/chapter04_3.html#ng-controller-详解",a:"ng-controller-详解"},"19.2":{t:"JavaScript部分\r",p:`我们先分析ng-controller的JavaScript编码部分
//原有的ng-app声明部分
var App = an ...`,l:"frame/angular/chapter04_3.html#javascript部分",a:"javascript部分"},"19.3":{t:"`function($scope)`详解\r",p:"funtion(){}封装的函数，会被绑定到FirstCtrl上。这个概念相对容易理解，我们需要注意的，是我们在functi ...",l:"frame/angular/chapter04_3.html#",a:""},"19.4":{t:"HTML中调用`ng-controller`中的数据\r",p:`&lt;h1&gt;{{data.message + &quot; World!&quot;}}&lt;/h1&gt;

在 ...`,l:"frame/angular/chapter04_3.html#html中调用-ng-controller-中的数据",a:"html中调用-ng-controller-中的数据"},"19.5":{t:"为什么要额外封装一层\r",p:`在AngularJS中，最简单传入数据的方法其实可以更简单，但是不推荐这样做。
最简单的做法
//JavaScript
$s ...`,l:"frame/angular/chapter04_3.html#为什么要额外封装一层",a:"为什么要额外封装一层"},"20.0":{t:"# 数据绑定data-binding\r",p:"上一节我们介绍了如何将ng-controller的数据显示在HTML当中，但是我们如何在页面中修改这些数据呢？这一步操作也很 ...",l:"frame/angular/chapter04_4.html",a:"数据绑定data-binding"},"20.1":{t:"功能的绑定\r",p:`界面操作里面还有一个重要的功能，就是界面上按钮的与控制器中的函数进行绑定。这个也很容易实现：
App.controller( ...`,l:"frame/angular/chapter04_4.html#功能的绑定",a:"功能的绑定"},"20.2":{t:"更多地方的绑定\r",p:`除了用于显示信息外，数据绑定还可用于其它地方。比如，下面的例子用于根据输入来调整样式：
&lt;!DOCTYPE html& ...`,l:"frame/angular/chapter04_4.html#更多地方的绑定",a:"更多地方的绑定"},"21.0":{t:"# 条件判断 `ng-if` / `ng-show` / `ng-hide`\r",p:`本节我们将学习的是如何通过变量来控制HTML是否显示。
这三个语句具体的用法如下：
在$scope.data中添加flag变 ...`,l:"frame/angular/chapter04_5.html",a:"条件判断-ng-if-ng-show-ng-hide"},"21.1":{t:"`ng-if`与`ng-show`/`ng-hide`的区别\r",p:`虽然效果看起来类似，但ng-if的工作模式与ng-show/ng-hide不一样。
如果使用ng-if来控制元素是否显示，则 ...`,l:"frame/angular/chapter04_5.html#ng-if-与-ng-show-ng-hide-的区别",a:"ng-if-与-ng-show-ng-hide-的区别"},"21.2":{t:"冒号中的表达式\r",p:`例子中使用了data.flag直接作为判断依据，但是以上三个标签都支持传入表达式。
比如以下的表达式都可以作为冒号中的表达方 ...`,l:"frame/angular/chapter04_5.html#冒号中的表达式",a:"冒号中的表达式"},"22.0":{t:"# 重复语句 `ng-repeat`\r",p:`本节将讲述如何使用ng-repeat对一个列表的数据进行遍历并显示出来。
首先，我们准备如下的数据。这是一个包括三个obje ...`,l:"frame/angular/chapter04_6.html",a:"重复语句-ng-repeat"},"22.1":{t:"$index\r",p:"在实际的使用场景中，如果我们使用一个表格来管理信息，那么可能表格的每一行都会有一些对应的操作功能（如编辑、删除）等。那么，我 ...",l:"frame/angular/chapter04_6.html#index",a:"index"},"23.0":{t:"# 过滤器 `filter`\r",p:`过滤器是AngularJS的另一项强大的功能，如果能使用好它，能够帮助我们极大的节省工作量。
以下是几个应用filter的例 ...`,l:"frame/angular/chapter04_7.html",a:"过滤器-filter"},"23.1":{t:"多个filter同时应用\r",p:`AngularJS支持多个filter同时应用，比如以下的例子：
{{ list | orderBy:'name' | js ...`,l:"frame/angular/chapter04_7.html#多个filter同时应用",a:"多个filter同时应用"},"23.2":{t:"创建自己的过滤器\r",p:`自己创建自定义的过滤器也很简单，我们下面尝试自己制作一个将文字全部翻转过来的过滤器。
在app.js中增加如下代码：
//a ...`,l:"frame/angular/chapter04_7.html#创建自己的过滤器",a:"创建自己的过滤器"},"23.3":{t:"通过`filter`进行搜索\r",p:"AngularJS提供了通过filter的搜索功能。当然，这个搜索功能并不是非常常用，因为搜索工作现在一般在服务端完成。如果 ...",l:"frame/angular/chapter04_7.html#通过-filter-进行搜索",a:"通过-filter-进行搜索"},"23.4":{t:"一些值得注意的用法\r",p:`


用法
效果




searchText = &quot;T&quot;
搜索所有字段


searchText =  ...`,l:"frame/angular/chapter04_7.html#一些值得注意的用法",a:"一些值得注意的用法"},"24.0":{t:"# 样式选择器 `ng-class`/`ng-style`\r",p:"\r",l:"frame/angular/chapter04_8.html",a:"样式选择器-ng-class-ng-style"},"24.1":{t:"`ng-class`\r",p:`通过ng-class，我们可以对界面元素的css样式进行控制。下面，让我们通过示例来看看功能如何实现：

此示例来源于官网的 ...`,l:"frame/angular/chapter04_8.html#ng-class",a:"ng-class"},"24.2":{t:"动态化的样式输入\r",p:"在上方的示例中，我们是针对提前设定好的样式进行是否生效的判断。除了这种使用方式，ng-class还支持直接传入字符串的方式进 ...",l:"frame/angular/chapter04_8.html#动态化的样式输入",a:"动态化的样式输入"},"24.3":{t:"结合两种模式的应用示例\r",p:`这两种模式也可以结合使用，示例如下：
&lt;p ng-class=&quot;[data.style, {orange:  ...`,l:"frame/angular/chapter04_8.html#结合两种模式的应用示例",a:"结合两种模式的应用示例"},"24.4":{t:"CSS动画效果应用\r",p:`我们先在_style.css_中加入css的动画效果代码：
.base-class {
    transition:all ...`,l:"frame/angular/chapter04_8.html#css动画效果应用",a:"css动画效果应用"},"24.5":{t:"`ng-style`\r",p:`ng-style提供的功能比ng-class要少一些，只支持样式的传入。我们可以使用以下两种模式：
&lt;span ng- ...`,l:"frame/angular/chapter04_8.html#ng-style",a:"ng-style"},"25.0":{t:"# 下拉列表选项 `ng-options`\r",p:"在学习了ng-repeat过后，我们其实已经可以用循环的方式实现下拉列表的选项。但是，AngularJS提供了ng-opti ...",l:"frame/angular/chapter04_9.html",a:"下拉列表选项-ng-options"},"25.1":{t:"增加未选中的选项\r",p:`在很多时候，我们期望能有一个没选中的选项。我们可以通过手动的方式添加这个选项：
&lt;select ng-model=&q ...`,l:"frame/angular/chapter04_9.html#增加未选中的选项",a:"增加未选中的选项"},"25.2":{t:"按组排列`group by`\r",p:`ng-options也支持按组排列数据，使用group by语法，下面我们看看例子：
首先，我们在列表中增加类型字段：
$s ...`,l:"frame/angular/chapter04_9.html#按组排列-group-by",a:"按组排列-group-by"},"25.3":{t:"禁用某些选项`disable when`\r",p:`ng-options还可以通过disable when语法来设置选项是否可选，同样的，我们需要在列表中先新增字段：
注意，以 ...`,l:"frame/angular/chapter04_9.html#禁用某些选项-disable-when",a:"禁用某些选项-disable-when"},"25.4":{t:"将对象作为参数传入\r",p:`在上面的例子中，我们传入的是一个列表array。ng-options也支持以对象object的方式传入数据：
使用objec ...`,l:"frame/angular/chapter04_9.html#将对象作为参数传入",a:"将对象作为参数传入"},"26.0":{t:"# 本章总结\r",p:`在本章中，我们学习了AngularJS的基本用法。掌握了这些用法，相信大家对于AngularJS已经有了基本的了解。
我建议 ...`,l:"frame/angular/chapter04_summary.html",a:"本章总结"},"27.0":{t:"# 深入学习AngularJS - Directive\r",p:`在前一章中，我们学习了AngularJS的基本用法。从本章开始，我们将学习&quot;深入&quot;一些的部分。
本章将介 ...`,l:"frame/angular/chapter05.html",a:"深入学习angularjs-directive"},"27.1":{t:"Directive在系统中的使用\r",p:`其实，Directive作为AngularJS的基本特性，我们已经在前面大量的学习和使用了它。
在第四章中我们学习的ng-a ...`,l:"frame/angular/chapter05.html#directive在系统中的使用",a:"directive在系统中的使用"},"27.2":{t:"学习Directive的路程\r",p:"本章我们将从最基本的自定义Directive开始，逐渐深入的学习Directive的特性和高级使用方法。由于Directiv ...",l:"frame/angular/chapter05.html#学习directive的路程",a:"学习directive的路程"},"28.0":{t:"# 制作一个自定义的Directive\r",p:`下面我们将制作我们的第一个自定义Directive。让我们对app.js和index.html进行一些修改：
//app.j ...`,l:"frame/angular/chapter05_1.html",a:"制作一个自定义的directive"},"28.1":{t:"代码分析\r",p:`以下这段代码用于声明一个Directive：
App.directive(&quot;people&quot;, funct ...`,l:"frame/angular/chapter05_1.html#代码分析",a:"代码分析"},"28.2":{t:"`template`\r",p:"template相对比较容易理解，在运行网页时，HTML对应的标签，将被替换成对应的内容。我们这里看看替换后实际的HTML代 ...",l:"frame/angular/chapter05_1.html#template",a:"template"},"28.3":{t:"用替换而不是插入的方式应用Directive\r",p:"如果在配置Directive时，加入replace : true（与restrict和template同级别），则可以让An ...",l:"frame/angular/chapter05_1.html#用替换而不是插入的方式应用directive",a:"用替换而不是插入的方式应用directive"},"28.4":{t:"`restrict`\r",p:`restrict是告诉AngularJS，这个Directive应该如何使用。
下面这个表格，总结了restrict可能有的 ...`,l:"frame/angular/chapter05_1.html#restrict",a:"restrict"},"29.0":{t:"# Directive的命名和使用规则\r",p:"在前一节中，我们创建了一个名为&quot;people&quot;的Directive。并且通过 &lt;people&gt ...",l:"frame/angular/chapter05_2.html",a:"directive的命名和使用规则"},"29.1":{t:"命名规则\r",p:"AngularJS要求Directive的命名使用驼峰式语法，也就是从第二个单词开始，每个单词的首字母大写，并且不使用连接符 ...",l:"frame/angular/chapter05_2.html#命名规则",a:"命名规则"},"29.2":{t:"使用规则\r",p:`在HTML代码中，使用的是连接符的形式，下面我们对比看看命名和使用的对应字符串：



命名
使用




people
p ...`,l:"frame/angular/chapter05_2.html#使用规则",a:"使用规则"},"29.3":{t:"为什么会有这种差异\r",p:`命名和用法不同的核心原因，是因为HTML对大小写不敏感，而JavaScript对大小写敏感。
为了保证HTML和JavaSc ...`,l:"frame/angular/chapter05_2.html#为什么会有这种差异",a:"为什么会有这种差异"},"29.4":{t:"怎么实现的？\r",p:`AngularJS在解析HTML时，会将名称取出（如people-list-array)，并进行一下两个方面的处理：

去除 ...`,l:"frame/angular/chapter05_2.html#怎么实现的",a:"怎么实现的"},"29.5":{t:"连接符\r",p:`在前面的讲解中，我们讲解示例时，使用的连接符全部都为减号。但实际上，AngularJS支持的连接符有:



符号
示例

 ...`,l:"frame/angular/chapter05_2.html#连接符",a:"连接符"},"29.6":{t:"为什么要先去除`data-/x-`部分\r",p:"data-/x- 存在的原因是需要符合HTML5标准。如果你使用HTML5验证器来验证我们之前的代码，你可能会看到如下结果( ...",l:"frame/angular/chapter05_2.html#为什么要先去除-data-x-部分",a:"为什么要先去除-data-x-部分"},"30.0":{t:"# 让Directive支持传入数据\r",p:"在第一节中，我们使用的Directive，可以直接获取并显示控制器中的数据（人的名称和性别）。但是，如果我们有多个人的信息需 ...",l:"frame/angular/chapter05_3.html",a:"让directive支持传入数据"},"30.1":{t:"Directive的`scope`\r",p:"在之前学习控制器ng-controller的使用过程中，我们使用了$scope功能。$scope用于提供对接HTML和Jav ...",l:"frame/angular/chapter05_3.html#directive的-scope",a:"directive的-scope"},"30.2":{t:"`scope`中的配置\r",p:`可以看到，在上方的JavaSciprt文件中，我们对scope的定义使用了如下结构：
scope:{
    info: & ...`,l:"frame/angular/chapter05_3.html#scope-中的配置",a:"scope-中的配置"},"30.3":{t:"在一个`ng-ontroller`中放入多个相同的Directive\r",p:`下面，我们在FirstCtrl中增加几个人的数据，并将它们通过Directive显示出来：
//在FirstCtrl中加入如 ...`,l:"frame/angular/chapter05_3.html#在一个-ng-ontroller-中放入多个相同的directive",a:"在一个-ng-ontroller-中放入多个相同的directive"},"30.4":{t:"通过`ng-repeat`和directive一起显示数据\r",p:`知道了如何传入数据，那么我们就可以将Directive的使用和ng-repeat结合起来，实现列表显示数据的效果。
我们先将 ...`,l:"frame/angular/chapter05_3.html#通过-ng-repeat-和directive一起显示数据",a:"通过-ng-repeat-和directive一起显示数据"},"30.5":{t:"在Directive中修改控制器中的数据\r",p:`以上我们看到的示例只是将数据显示了出来，如果我们期望在Directive中修改这些数据如何处理呢？
其实很简单，将templ ...`,l:"frame/angular/chapter05_3.html#在directive中修改控制器中的数据",a:"在directive中修改控制器中的数据"},"30.6":{t:"以只读的方式传入数据\r",p:`除了以等号=直接传入对象之外，Directive也支持直接传入文本，使用@符号。
App.directive(&quot;p ...`,l:"frame/angular/chapter05_3.html#以只读的方式传入数据",a:"以只读的方式传入数据"},"30.7":{t:"在Directive中进行函数回调\r",p:"上面我们介绍了等号=和@符号的使用方法，它们分别对应传入对象和文本。但是，如果我们期望传入一个回调函数呢？这样我们就可以实现 ...",l:"frame/angular/chapter05_3.html#在directive中进行函数回调",a:"在directive中进行函数回调"},"31.0":{t:"# 使用`templateUrl`获取模板\r",p:"有些时候，Directive中的模板template会变得很大，如果仍然放置在定义中，那么可能会造成阅读和修改不方便的情况。 ...",l:"frame/angular/chapter05_4.html",a:"使用-templateurl-获取模板"},"31.1":{t:"`ng-template`\r",p:"除了直接将HTML部件存储为独立的文件，我们也可以直接使用AngularJS提供的ng-template功能。这点在第四章中 ...",l:"frame/angular/chapter05_4.html#ng-template",a:"ng-template"},"31.2":{t:"使用函数获取templateUrl\r",p:`templateUrl的特性与我们在第四章学习的ng-include类似，也支持通过函数来获取最终的url地址。例如：
Ap ...`,l:"frame/angular/chapter05_4.html#使用函数获取templateurl",a:"使用函数获取templateurl"},"32.0":{t:"# 让Directive动起来`link()`\r",p:"在前面几节中，我们都是在学习如何配置Directive。下面，我们将开始学习Directive最灵活的部分，link()函数 ...",l:"frame/angular/chapter05_5.html",a:"让directive动起来-link"},"32.1":{t:"`element`\r",p:`从element被转义成json的文本中很难获取任何实质的信息，但是，这里才是整个Directive中的核心部分。
`,l:"frame/angular/chapter05_5.html#element",a:"element"},"32.2":{t:"`element`与jQuery的关系\r",p:"在Directive中，我们不免需要对页面元素进行操作。为了提供这项功能，AngularJS几乎原版搬运了jQuery操作元 ...",l:"frame/angular/chapter05_5.html#element-与jquery的关系",a:"element-与jquery的关系"},"32.3":{t:"在AngularJS中使用jQuery\r",p:`安装和使用jQuery共有两步：

通过bower安装jQuery

bower install jquery --save ...`,l:"frame/angular/chapter05_5.html#在angularjs中使用jquery",a:"在angularjs中使用jquery"},"32.4":{t:"实际体验`element`的功能\r",p:`我们在引入jQuery后，可以通过如下代码查看效果：

这里需要注意的是，使用jqLite的方法和以下代码中使用的方法是不一 ...`,l:"frame/angular/chapter05_5.html#实际体验-element-的功能",a:"实际体验-element-的功能"},"32.5":{t:"在`element`上绑定鼠标移入移出时的变化效果\r",p:`App.directive(&quot;formDirective&quot;, function () {
    ret ...`,l:"frame/angular/chapter05_5.html#在-element-上绑定鼠标移入移出时的变化效果",a:"在-element-上绑定鼠标移入移出时的变化效果"},"33.0":{t:"# 把Directive变为一个容器`transclude`\r",p:"在前面我们使用到的Directive，都会将包含有Directive的元素整体替换为template中的内容。这样，就让Di ...",l:"frame/angular/chapter05_6.html",a:"把directive变为一个容器-transclude"},"34.0":{t:"# Directive之间互相通讯\r",p:"本节是Directive的高级使用方法之一，通过赋予Directive之间互相通讯的功能，我们可以将部件的抽象化提升到一个更 ...",l:"frame/angular/chapter05_7.html",a:"directive之间互相通讯"},"35.0":{t:"# 本章总结\r",p:"本章讲述的内容是AngularJS的核心内容之一，并且对于之前前端开发经验不足的读者可能会造成一些学习上的困难。但是我建议各 ...",l:"frame/angular/chapter05_summary.html",a:"本章总结"},"36.0":{t:"# Angular1.x 相关知识点\r",p:`Angular1.x相关的文档来自于 learning_angular仓库
learning_angular仓库
`,l:"frame/angular/index.html",a:"angular1-x-相关知识点"},"37.0":{t:"# 学习AngularJS 1.x\r",p:"\r",l:"frame/angular/Introduction.html",a:"学习angularjs-1-x"},"37.1":{t:"Learning AngularJS 1.x\r",p:`本书是我在学习和应用AngularJS 1.x 的过程中的资料梳理。希望能对大家学习AngularJS有一定帮助。
如果您在 ...`,l:"frame/angular/Introduction.html#learning-angularjs-1-x",a:"learning-angularjs-1-x"},"37.2":{t:"本书地址\r",p:`本书使用GitBook和GitHub托管。
GitBook地址：hairui219/learning_angular
Git ...`,l:"frame/angular/Introduction.html#本书地址",a:"本书地址"},"37.3":{t:"章节目录\r",p:`

简介


环境的准备


项目的创建和配置


AngularJS的第一步


学习和使用AngularJS

基本表达 ...`,l:"frame/angular/Introduction.html#章节目录",a:"章节目录"},"37.4":{t:"本书的读者\r",p:"本书会介绍如何应用AngularJS，但是本书不会涉及到JavaScript语法以及HTML和CSS的布局模式。因此，本书对 ...",l:"frame/angular/Introduction.html#本书的读者",a:"本书的读者"},"37.5":{t:"我应用AngularJS的方法\r",p:"在进行前端开发的工作之前，我担任过几年的移动互联网产品经理，设计了几款应用（参与了一小部分的开发工作）。之后我改做应用和手机 ...",l:"frame/angular/Introduction.html#我应用angularjs的方法",a:"我应用angularjs的方法"},"37.6":{t:"这样做的好处\r",p:`这样实现后，我认为主要有以下几个方面的好处：

数据通过API(https)获取，过程并不向用户开放，起到了隐蔽后端服务器的 ...`,l:"frame/angular/Introduction.html#这样做的好处",a:"这样做的好处"},"37.7":{t:"为什么选择AngularJS 1.x\r",p:`对于选择AngularJS，业(zhi)界(hu)其实有一个调侃的说法：

写Java的写不来JavaScript的用Ang ...`,l:"frame/angular/Introduction.html#为什么选择angularjs-1-x",a:"为什么选择angularjs-1-x"},"37.8":{t:"我选择AngularJS的历程\r",p:`
以下内容部分读者可能会感到有些偏激，但是这是对我（一个拥有一些其它编程经验的前端入门者）的心路记录。

2015年初，在准 ...`,l:"frame/angular/Introduction.html#我选择angularjs的历程",a:"我选择angularjs的历程"},"37.9":{t:"为什么写这本书\r",p:"由于业务需要，我准备重新制作网站的v2版本。在这个版本中，会有很多新的功能需求（功能扩大非常多）。因此，完全重构整个网站是可 ...",l:"frame/angular/Introduction.html#为什么写这本书",a:"为什么写这本书"},"37.10":{t:"另：为什么没有选择Angular 2\r",p:"其实在重构时，我优先的选择是Angular 2 &amp; TypeScript。因为它引入了很多新的特性，比如应用了最新的 ...",l:"frame/angular/Introduction.html#另-为什么没有选择angular-2",a:"另-为什么没有选择angular-2"},"37.11":{t:"版权声明 LICENSE\r",p:`署名-非商业性使用 4.0 国际
版权所有 (c) 2016 Harry&lt;harry@andtoo.net&gt;
本 ...`,l:"frame/angular/Introduction.html#版权声明-license",a:"版权声明-license"},"38.0":{t:"# Summary\r",p:`

简介


环境的准备


项目的创建和配置


AngularJS的第一步


学习和使用AngularJS

基本表达 ...`,l:"frame/angular/SUMMARY.html",a:"summary"},"39.0":{t:"# 框架相关",p:"",l:"frame/index.html",a:"框架相关"},"40.0":{t:"# React 相关\r",p:`!React
`,l:"frame/react/index.html",a:"react-相关"},"41.0":{t:"# React一些相关\r",p:"\r",l:"frame/react/react常用特性.html",a:"react一些相关"},"41.1":{t:"React 和 Vue的区别\r",p:`
vue是双向绑定， react是单向数据流
在vue中我们组合不同功能的方式是通过Composition API、mixi ...`,l:"frame/react/react常用特性.html#react-和-vue的区别",a:"react-和-vue的区别"},"41.2":{t:"React 设计思想\r",p:`
组件化

每个组件都符合开放 - 封闭原则， 封闭是针对渲染工作流来说，指的是组件内部的状态都由自身维护，只处理内部渲染逻 ...`,l:"frame/react/react常用特性.html#react-设计思想",a:"react-设计思想"},"41.3":{t:"React生命周期\r",p:`在16.8 hooks版本之前， React的生命周期分为组件挂载阶段、组件更新阶段、组件卸载阶段

挂载

constru ...`,l:"frame/react/react常用特性.html#react生命周期",a:"react生命周期"},"41.4":{t:"React Hooks与 React Class的区别\r",p:`
Hooks更加简洁，并且更贴合原生js写法
业务代码更加聚合
逻辑代码方便复用

`,l:"frame/react/react常用特性.html#react-hooks与-react-class的区别",a:"react-hooks与-react-class的区别"},"41.5":{t:"React的严格模式\r",p:`React的严格模式是在组件外层设置React.scrictMode标签，可以设置到根节点组件外层， 这样可以全局生效。

 ...`,l:"frame/react/react常用特性.html#react的严格模式",a:"react的严格模式"},"41.6":{t:"严格模式优点\r",p:`
识别不安全的生命周期
关于使用过时字符串 ref API 的警告
关于使用废弃的 findDOMNode 方法的警告
检测 ...`,l:"frame/react/react常用特性.html#严格模式优点",a:"严格模式优点"},"41.7":{t:"React 中页面重新加载怎么保留数据\r",p:`这个问题就涉及到了数据持久化， 主要有以下几种实现方式：


Redux
将页面数据储存在Redux中， 在页面重新加载时去 ...`,l:"frame/react/react常用特性.html#react-中页面重新加载怎么保留数据",a:"react-中页面重新加载怎么保留数据"},"41.8":{t:"JSX与JS的区别\r",p:"JSX 是React的语法糖，它允许在html中写js并且不能被浏览器识别， 需要通过webpack、babel之类的变异工 ...",l:"frame/react/react常用特性.html#jsx与js的区别",a:"jsx与js的区别"},"41.9":{t:"React中必须要使用 JSX吗？\r",p:`React中不强制使用JSX。 当不想在构建环境中配置有关JSX编译时候， 不在React中使用JSX会更加方便，
每个JS ...`,l:"frame/react/react常用特性.html#react中必须要使用-jsx吗",a:"react中必须要使用-jsx吗"},"41.10":{t:"React 处理错误边界(Error Boundaries)\r",p:"错误边界是一种React组件， 它能够不过并处理子组件中任何位置出现Javascript的错误，并渲染备用UI， 而不是使整 ...",l:"frame/react/react常用特性.html#react-处理错误边界-error-boundaries",a:"react-处理错误边界-error-boundaries"},"41.11":{t:"React 组件为什么要大写\r",p:"因为JSX语法无法被浏览器所识别， 需要使用Babel去转换为浏览器识别的js， 此时就会有个依据去判断是原生DOM标签还是 ...",l:"frame/react/react常用特性.html#react-组件为什么要大写",a:"react-组件为什么要大写"},"41.12":{t:"React.Fragment\r",p:`React中组件是不允许返回多个节点的， 要想解决这个问题就需要套一层div标签， 但是这样会多增加一个节点，
所以在16. ...`,l:"frame/react/react常用特性.html#react-fragment",a:"react-fragment"},"41.13":{t:"受控组件、非受控组件\r",p:`

受控组件就是组组件的改变受控于数据的变化， 数据变了页面也就变了。 受控组件更合适，数据驱动是React的核心。
当需要 ...`,l:"frame/react/react常用特性.html#受控组件、非受控组件",a:"受控组件、非受控组件"},"42.0":{t:"# SSR相关\r",p:"\r",l:"frame/react/SSR相关.html",a:"ssr相关"},"42.1":{t:"对于SSR的理解\r",p:`

对SEO友好
爬虫获取到的是已经异步执行完成后得到的有数据的HTML


所有模板、图片资源都存储在服务器端


一个H ...`,l:"frame/react/SSR相关.html#对于ssr的理解",a:"对于ssr的理解"},"42.2":{t:"SSR的局限\r",p:`
服务端压力大: 正常是通过客户端去渲染、现在统一到服务端Node去做。 尤其是遇到高并发访问的情况， 会大量占用服务端CP ...`,l:"frame/react/SSR相关.html#ssr的局限",a:"ssr的局限"},"43.0":{t:"# React 组件间的通信\r",p:"\r",l:"frame/react/组件通信.html",a:"react-组件间的通信"},"43.1":{t:"父组件调用子组件\r",p:`⽗组件调⽤⼦组件⽅法
使⽤useImperativeHandle调⽤⼦组件⽅法。
import { useImperativ ...`,l:"frame/react/组件通信.html#父组件调用子组件",a:"父组件调用子组件"},"44.0":{t:"# 虚拟DOM与Diff算法\r",p:"虚拟DOM相当于是在JS和 真实的DOM之间加了一个缓存， 利用DOM Diff算法避免了没有必要的DOM操作， 从而提高性 ...",l:"frame/react/虚拟DOM.html",a:"虚拟dom与diff算法"},"44.1":{t:"结构对比\r",p:`React.createElement和 document.createElement
虚拟DOM是一个对象， 而真实的DO ...`,l:"frame/react/虚拟DOM.html#结构对比",a:"结构对比"},"44.2":{t:"流程对比\r",p:`传统Web应用， 数据的变化会实时地更新到用户界面中， 于是每次数据微小的变化都会引起DOM的重新渲染
在虚拟DOM中， 是 ...`,l:"frame/react/虚拟DOM.html#流程对比",a:"流程对比"},"44.3":{t:"什么是虚拟DOM\r",p:`虚拟DOM是一个对象， 这个对象是由真实的DOM转化而来:
&lt;div className=&quot;Index&qu ...`,l:"frame/react/虚拟DOM.html#什么是虚拟dom",a:"什么是虚拟dom"},"44.4":{t:"虚拟DOM的优势\r",p:"\r",l:"frame/react/虚拟DOM.html#虚拟dom的优势",a:"虚拟dom的优势"},"44.5":{t:"虚拟DOM可以提高效率，开发时不必关注DOM， 只关注业务逻辑\r",p:"性能提升(牢记浏览器在处理DOM时很慢， 处理JS时很快)， 并且虚拟DOM感受到变化的时候是通过局部更新而非整体，从而减少 ...",l:"frame/react/虚拟DOM.html#虚拟dom可以提高效率-开发时不必关注dom-只关注业务逻辑",a:"虚拟dom可以提高效率-开发时不必关注dom-只关注业务逻辑"},"44.6":{t:"超强的兼容性\r",p:`具有浏览器的兼容和跨平台的兼容


React基于虚拟DOM实现了一套自己的事件机制，并且模拟了事件冒泡和捕获的过程， 采取 ...`,l:"frame/react/虚拟DOM.html#超强的兼容性",a:"超强的兼容性"},"45.0":{t:"# 高阶函数HOC(High Order Component)\r",p:`在React中， 高阶组件(HOC) 是一个接收组件作为参数并返回一个新组件的函数。 换句话说， 它是一种组件的
转换器。高 ...`,l:"frame/react/高阶函数.html",a:"高阶函数hoc-high-order-component"},"45.1":{t:"React Hook中常见的高阶函数\r",p:`

useState 高阶函数
useState 是React中最基础的Hook， 用于在函数组件中添加状态。它返回一个数组 ...`,l:"frame/react/高阶函数.html#react-hook中常见的高阶函数",a:"react-hook中常见的高阶函数"},"45.2":{t:"useState 和 useRef的区别\r",p:`两者最大的区别是 useState 用于管理状态，useRef用于操作DOM元素。另外， useState返回的是当前状态
 ...`,l:"frame/react/高阶函数.html#usestate-和-useref的区别",a:"usestate-和-useref的区别"},"46.0":{t:"# Vue 相关\r",p:`!Vue
`,l:"frame/vue/index.html",a:"vue-相关"},"47.0":{t:"# Keep-Alive\r",p:`定义
keepAlive是一个内置组件，它的功能是在多个组件间动态切换时缓存被移除的组件实例，即使被包含的组件保留状态，或者 ...`,l:"frame/vue/keepAlive.html",a:"keep-alive"},"47.1":{t:"引用\r",p:`vue3中keepalive源码
`,l:"frame/vue/keepAlive.html#引用",a:"引用"},"48.0":{t:"# NextTick\r",p:"NextTick 是一个用于在下次 DOM 更新循环结束之后执行回调函数的方法。其内部原理涉及到 Vue.js 的异步更新队 ...",l:"frame/vue/nextTick.html",a:"nexttick"},"48.1":{t:"异步任务队列\r",p:"浏览器中，每个宏任务结束后都会检查微任务队列， 如果有任务则依次执行，当所有微任务执行完成后，才会执行下一个宏任务。 因此可 ...",l:"frame/vue/nextTick.html#异步任务队列",a:"异步任务队列"},"48.2":{t:"Vue2\r",p:`看下面一个例子，比如当DOM内容改变后， 我们需要获取的最新高度
&lt;template&gt;
  &lt;div&gt ...`,l:"frame/vue/nextTick.html#vue2",a:"vue2"},"48.3":{t:"nextTick源码\r",p:`

vue2中nextTick源码 路径： src/core/util/next-tick.js

这段源码分为两个部分，  ...`,l:"frame/vue/nextTick.html#nexttick源码",a:"nexttick源码"},"48.4":{t:"Vue3\r",p:`vue3的例子如下：
&lt;template&gt;
  &lt;div ref=&quot;test&quot;&gt; ...`,l:"frame/vue/nextTick.html#vue3",a:"vue3"},"48.5":{t:"Vue3 nextTick源码\r",p:`
源码地址： packages/runtime-core/src/sheduler.ts

const resolvedPr ...`,l:"frame/vue/nextTick.html#vue3-nexttick源码",a:"vue3-nexttick源码"},"48.6":{t:"引用\r",p:`一次弄懂 Vue2 和 Vue3 的 nextTick 实现原理
vue2源码nextTick
vue3源码nextTick ...`,l:"frame/vue/nextTick.html#引用",a:"引用"},"49.0":{t:"# Vue 指令\r",p:"\r",l:"frame/vue/vue指令.html",a:"vue-指令"},"49.1":{t:"定义\r",p:"vue指令（Directives）是一种特殊的标记，用于在模板中以声明式的方式将某些行为应用到DOM上。指令以 v- 开头， ...",l:"frame/vue/vue指令.html#定义",a:"定义"},"49.2":{t:"常见的vue指令\r",p:`!常见vue指令
`,l:"frame/vue/vue指令.html#常见的vue指令",a:"常见的vue指令"},"49.3":{t:"**`v-show`/`v-if`**\r",p:`v-show与 v-if的区别


v-if
v-if是‘真实’的条件渲染， 因为它确保了在切换时， 条件区块内的事件监听和 ...`,l:"frame/vue/vue指令.html#v-show-v-if",a:"v-show-v-if"},"49.4":{t:"**`v-for`**\r",p:`基于原始数据多次渲染元素或模板块。

期望绑定值类型: Array | Object | Number | String | ...`,l:"frame/vue/vue指令.html#v-for",a:"v-for"},"49.5":{t:"**`v-bind`**\r",p:`动态地绑定一个或多个attribute， 也可以是组件的prop参数。


修饰符

.camel 将短横线命名的attri ...`,l:"frame/vue/vue指令.html#v-bind",a:"v-bind"},"49.6":{t:"**`v-model`**\r",p:`用于在表单控件或者组件上创建双向数据绑定.


修饰符

.lazy 监听change事件而不是input
.number将 ...`,l:"frame/vue/vue指令.html#v-model",a:"v-model"},"49.7":{t:"**`v-on`**\r",p:`指令用于监听 DOM 事件。


修饰符

.stop 调用 event.stopPropagation()
.preven ...`,l:"frame/vue/vue指令.html#v-on",a:"v-on"},"50.0":{t:"# Vue生命周期\r",p:`vue2 的生命周期与 vue3 的声明是有所区别的，
vue2 的生命周期主要是：

beforeCreate
creat ...`,l:"frame/vue/vue生命周期.html",a:"vue生命周期"},"50.1":{t:"Vue2\r",p:`


生命周期钩子
描述




beforeCreate
组件实例被创建之初


createed
组件实例已被完全创建
 ...`,l:"frame/vue/vue生命周期.html#vue2",a:"vue2"},"50.2":{t:"具体分析\r",p:`

beforeCreate -&gt; created
初始化 vue 实例，进行数据观测


created
完成数据观 ...`,l:"frame/vue/vue生命周期.html#具体分析",a:"具体分析"},"50.3":{t:"题外话：数据请求在created和mouted的区别\r",p:`created是在组件实例一旦创建完成的时候立刻调用，这时候页面dom节点并未生成；
mounted是在页面dom节点渲染完 ...`,l:"frame/vue/vue生命周期.html#题外话-数据请求在created和mouted的区别",a:"题外话-数据请求在created和mouted的区别"},"50.4":{t:"Vue3\r",p:`在 Vue3 中， 除了 setup()替代了 created 和 beforeCreate 之外，
beforeMount ...`,l:"frame/vue/vue生命周期.html#vue3",a:"vue3"},"50.5":{t:"具体功能\r",p:`

setup
setup 函数是一个全新的组件选项，它是 Composition API 的核心，用于初始化组件实例
se ...`,l:"frame/vue/vue生命周期.html#具体功能",a:"具体功能"},"51.0":{t:"# watch 和 watchEffect的区别\r",p:`!Vue侦听器
`,l:"frame/vue/watch和watchEffect的区别.html",a:"watch-和-watcheffect的区别"},"51.1":{t:"watch\r",p:`侦听一个或多个响应式数据源， 并在数据源变化时调用所给的回调函数

watch() 默认是懒侦听的， 即仅在侦听源发生变化时 ...`,l:"frame/vue/watch和watchEffect的区别.html#watch",a:"watch"},"51.2":{t:"watch参数\r",p:`watch有三个参数： 侦听器的源, 执行的回调函数, 调整回调函数的操作
`,l:"frame/vue/watch和watchEffect的区别.html#watch参数",a:"watch参数"},"51.3":{t:"第一个参数(侦听器的源)\r",p:`
一个函数， 返回一个值
一个ref
一个响应式对象
或是由以上类型的值组成的数组

`,l:"frame/vue/watch和watchEffect的区别.html#第一个参数-侦听器的源",a:"第一个参数-侦听器的源"},"51.4":{t:"第二个参数(发生变化时要调用的回调函数)\r",p:"这个回调函数接收三个参数， 新值、旧值、 以及一个用于注册副作用清理的回调函数， 该回调函数会在副作用下一次重新执行前调用， ...",l:"frame/vue/watch和watchEffect的区别.html#第二个参数-发生变化时要调用的回调函数",a:"第二个参数-发生变化时要调用的回调函数"},"51.5":{t:"第三个参数(watch属性值)\r",p:`第三个参数是可选的， 是一个对象：

immediate: 在侦听器创建时立即触发回调。 第一次调用时的旧值是 undefi ...`,l:"frame/vue/watch和watchEffect的区别.html#第三个参数-watch属性值",a:"第三个参数-watch属性值"},"51.6":{t:"watchEffect\r",p:`立即运行一个函数，同时响应式的追踪其依赖， 并在依赖更改时重新执行
`,l:"frame/vue/watch和watchEffect的区别.html#watcheffect",a:"watcheffect"},"51.7":{t:"watchEffect参数\r",p:`watchEffect有两个参数, 第一个参数是数据发生变化时执行的回调函数， 第二个参数是watchEffect的属性
`,l:"frame/vue/watch和watchEffect的区别.html#watcheffect参数",a:"watcheffect参数"},"51.8":{t:"第一个参数\r",p:`当监听的值发生变化时， 会自动再次执行以下回调函数
watchEffect(() =&gt; {
  // 监听 objDa ...`,l:"frame/vue/watch和watchEffect的区别.html#第一个参数",a:"第一个参数"},"51.9":{t:"第二个参数\r",p:"第二个参数是一个可选的对象， 支持 flush 和 onTrack / onTrigger 选项， 功能和 watch 相同 ...",l:"frame/vue/watch和watchEffect的区别.html#第二个参数",a:"第二个参数"},"51.10":{t:"停止监听\r",p:`const stop = watchEffect(() =&gt; {})

// 当不再需要此侦听器时
stop()

: ...`,l:"frame/vue/watch和watchEffect的区别.html#停止监听",a:"停止监听"},"51.11":{t:"watch和 watchEffect\r",p:"\r",l:"frame/vue/watch和watchEffect的区别.html#watch和-watcheffect",a:"watch和-watcheffect"},"51.12":{t:"区别\r",p:`watch 和watchEffect 都能响应式地执行有副作用的回调。 它们之间的最要区别是追踪响应式依赖的方式：


wa ...`,l:"frame/vue/watch和watchEffect的区别.html#区别",a:"区别"},"51.13":{t:"访问 Vue更新之后的DOM\r",p:"在vue2.x中使用nextTick， 在vue3中， watch/watchEffect 指明 flush 'post'选 ...",l:"frame/vue/watch和watchEffect的区别.html#访问-vue更新之后的dom",a:"访问-vue更新之后的dom"},"51.14":{t:"小技巧\r",p:"\r",l:"frame/vue/watch和watchEffect的区别.html#小技巧",a:"小技巧"},"51.15":{t:"关闭监听器\r",p:`手动停止一个侦听器， 请调用 watch 或 watchEffect 返回的函数
const stopWatchEffect ...`,l:"frame/vue/watch和watchEffect的区别.html#关闭监听器",a:"关闭监听器"},"51.16":{t:"异步数据加载\r",p:`如果需要等待一些异步数据，你可以使用条件式地侦听逻辑
// 需要异步请求得到的数据
const data = ref(nul ...`,l:"frame/vue/watch和watchEffect的区别.html#异步数据加载",a:"异步数据加载"},"52.0":{t:"# Vue 双向绑定原理\r",p:"\r",l:"frame/vue/双向绑定.html",a:"vue-双向绑定原理"},"52.1":{t:"单向绑定\r",p:"单向绑定非常简单， 就是把 Model绑定到View, 当我们用JavaScript 代码更新Model时， View就会自 ...",l:"frame/vue/双向绑定.html#单向绑定",a:"单向绑定"},"52.2":{t:"双向绑定\r",p:"双向绑定就是在单向绑定的基础上， 通过修改视图View, Model也会更新, 例如在用户填写表单时， View的状态被更新 ...",l:"frame/vue/双向绑定.html#双向绑定",a:"双向绑定"},"52.3":{t:"双向绑定原理\r",p:`双向数据绑定由三部分组成

数据层(Model): 应用的数据以及业务逻辑
视图层(View): 应用的展示效果，各类UI组 ...`,l:"frame/vue/双向绑定.html#双向绑定原理",a:"双向绑定原理"},"52.4":{t:"ViewModel\r",p:`ViewModel的主要职责：

数据变化后更新视图
视图变化后更新数据

还有两个主要部分组成

监听器(Observer ...`,l:"frame/vue/双向绑定.html#viewmodel",a:"viewmodel"},"52.5":{t:"实现\r",p:`以 Vue 为例，先看看双向绑定的流程：

new Vue() 首先执行初始化，对data执行响应化处理，这个过程发生在监听 ...`,l:"frame/vue/双向绑定.html#实现",a:"实现"},"52.6":{t:"代码实现\r",p:`先来一个构造函数，执行初始化，对 data 执行响应化处理
class Vue {
  constructor(option ...`,l:"frame/vue/双向绑定.html#代码实现",a:"代码实现"},"52.7":{t:"编译 Compile\r",p:`对每个元素节点的指令进行扫描跟解析，根据指令模版替换数据，以及绑定相应的更新函数
!COmpile结构
class Comp ...`,l:"frame/vue/双向绑定.html#编译-compile",a:"编译-compile"},"52.8":{t:"依赖收集\r",p:"视图中会用到 data 中某 key 这称为依赖，同一个 key 可能会出现多次，每次都需要收集出来用一个 Watcher来 ...",l:"frame/vue/双向绑定.html#依赖收集",a:"依赖收集"},"52.9":{t:"来源\r",p:`vue双向绑定
`,l:"frame/vue/双向绑定.html#来源",a:"来源"},"53.0":{t:"# Vue 首页白屏问题以及解决方案\r",p:"\r",l:"frame/vue/首页白屏.html",a:"vue-首页白屏问题以及解决方案"},"53.1":{t:"首页加载白屏的原因\r",p:`在谈论首页白屏问题之前，先了解一下SPA
`,l:"frame/vue/首页白屏.html#首页加载白屏的原因",a:"首页加载白屏的原因"},"53.2":{t:"SPA\r",p:"SPA(single-page application), 翻译过来就是单页面应用。 SPA是一种网络应用程序或者网站的模型 ...",l:"frame/vue/首页白屏.html#spa",a:"spa"},"53.3":{t:"SPA 加载过程\r",p:`

首先是 HTML 也就是 FP阶段

FP(全称 First Paint， 翻译为 首次绘制) 是时间线上的第一个时间点 ...`,l:"frame/vue/首页白屏.html#spa-加载过程",a:"spa-加载过程"},"53.4":{t:"解决方案\r",p:`

预渲染
预渲染就是webpack打包的时候渲染,通过无头浏览器

无头浏览器: 打包的时候，可以把index.html的 ...`,l:"frame/vue/首页白屏.html#解决方案",a:"解决方案"},"54.0":{t:"主要记录了工作中遇到的问题、积累的知识点\r",p:`工程师应该怎样学习
`,l:"guide/home.html",a:"主要记录了工作中遇到的问题、积累的知识点"},"55.0":{t:"# 231204 ~ 231208\r",p:"\r",l:"guide/weekly/231204-231208.html",a:"_231204-231208"},"55.1":{t:"23-12-06\r",p:`设计一个函数让两个数字相加，但不得使用+或者其它运算符
输入 a = 1 b = 2
输出 3

const getSum  ...`,l:"guide/weekly/231204-231208.html#_23-12-06",a:"_23-12-06"},"55.2":{t:"23-12-08\r",p:"\r",l:"guide/weekly/231204-231208.html#_23-12-08",a:"_23-12-08"},"55.3":{t:"`import` 和 `require` 区别\r",p:`

来源不同
import/export 来源于ECM(ES6)
require/exports 来源于CommonJS

 ...`,l:"guide/weekly/231204-231208.html#import-和-require-区别",a:"import-和-require-区别"},"56.0":{t:"# 231211-231215\r",p:"\r",l:"guide/weekly/231211-231215.html",a:"_231211-231215"},"56.1":{t:"23-12-13 ❄️\r",p:"\r",l:"guide/weekly/231211-231215.html#_23-12-13-❄️",a:"_23-12-13-❄️"},"56.2":{t:"Typescript中`any`与`unknown`\r",p:`

any
any类型表示没有任何限制，该类型的变量可以赋予任意类型的值。
一旦设置为any类型， TypeScript 实 ...`,l:"guide/weekly/231211-231215.html#typescript中-any-与-unknown",a:"typescript中-any-与-unknown"},"56.3":{t:"Typescript中的`never`类型\r",p:"为了保持与集合论的对应关系，以及类型运算的完整性，TypeScript 还引入了“空类型”的概念，即该类型为空，不包含任何值 ...",l:"guide/weekly/231211-231215.html#typescript中的-never-类型",a:"typescript中的-never-类型"},"57.0":{t:"# 231218-231222\r",p:"\r",l:"guide/weekly/231218-231222.html",a:"_231218-231222"},"57.1":{t:"23-12-18 ☀️\r",p:`更新了面试相关的 HTML CSS 浏览器相关
天气不错， 适合骑车🚴
`,l:"guide/weekly/231218-231222.html#_23-12-18-☀️",a:"_23-12-18-☀️"},"57.2":{t:"23-12-19 🌬\r",p:`更新了面试相关的Javascript相关 40%
更新了ES6新特性(1)  更新了一部分， 后续持续更新
`,l:"guide/weekly/231218-231222.html#_23-12-19-🌬",a:"_23-12-19-🌬"},"57.3":{t:"23-12-20 🌬\r",p:`更新了面试相关的Javascript相关 100%
更新了面试相关的Vue相关 30%
`,l:"guide/weekly/231218-231222.html#_23-12-20-🌬",a:"_23-12-20-🌬"},"57.4":{t:"23-12-21 🌞\r",p:`更新了 原型与原型链相关
`,l:"guide/weekly/231218-231222.html#_23-12-21-🌞",a:"_23-12-21-🌞"},"59.0":{t:"# 小程序相关\r",p:"\r",l:"interview/applet.html",a:"小程序相关"},"59.1":{t:"小程序的优势\r",p:"\r",l:"interview/applet.html#小程序的优势",a:"小程序的优势"},"59.2":{t:"小程序的页面构成（4 个文件）\r",p:"\r",l:"interview/applet.html#小程序的页面构成-4-个文件",a:"小程序的页面构成-4-个文件"},"59.3":{t:"小程序的生命周期\r",p:"\r",l:"interview/applet.html#小程序的生命周期",a:"小程序的生命周期"},"59.4":{t:"小程序如何请求数据\r",p:"\r",l:"interview/applet.html#小程序如何请求数据",a:"小程序如何请求数据"},"59.5":{t:"如何提高小程序的首屏加载时间\r",p:"\r",l:"interview/applet.html#如何提高小程序的首屏加载时间",a:"如何提高小程序的首屏加载时间"},"59.6":{t:"请简述你经常使用的小程序的组件\r",p:"\r",l:"interview/applet.html#请简述你经常使用的小程序的组件",a:"请简述你经常使用的小程序的组件"},"59.7":{t:"Wxss 与 css 的区别请简述\r",p:"\r",l:"interview/applet.html#wxss-与-css-的区别请简述",a:"wxss-与-css-的区别请简述"},"59.8":{t:"小程序如何实现响应式\r",p:"\r",l:"interview/applet.html#小程序如何实现响应式",a:"小程序如何实现响应式"},"59.9":{t:"怎么优化小程序\r",p:"\r",l:"interview/applet.html#怎么优化小程序",a:"怎么优化小程序"},"59.10":{t:"小程序如何显示用户头像与用户名\r",p:"\r",l:"interview/applet.html#小程序如何显示用户头像与用户名",a:"小程序如何显示用户头像与用户名"},"59.11":{t:"请谈谈小程序的双向绑定和 vue 的异同\r",p:"\r",l:"interview/applet.html#请谈谈小程序的双向绑定和-vue-的异同",a:"请谈谈小程序的双向绑定和-vue-的异同"},"59.12":{t:"小程序中传参是怎么传的\r",p:"\r",l:"interview/applet.html#小程序中传参是怎么传的",a:"小程序中传参是怎么传的"},"59.13":{t:"和 vue 类比介绍\r",p:"\r",l:"interview/applet.html#和-vue-类比介绍",a:"和-vue-类比介绍"},"59.14":{t:"说一下微信小程序的适配问题\r",p:"\r",l:"interview/applet.html#说一下微信小程序的适配问题",a:"说一下微信小程序的适配问题"},"59.15":{t:"小程序页面间有哪些传递数据的方法？\r",p:"\r",l:"interview/applet.html#小程序页面间有哪些传递数据的方法",a:"小程序页面间有哪些传递数据的方法"},"59.16":{t:"你是怎么封装微信小程序的数据请求的\r",p:"\r",l:"interview/applet.html#你是怎么封装微信小程序的数据请求的",a:"你是怎么封装微信小程序的数据请求的"},"59.17":{t:"小程序跳转页面的方式\r",p:"\r",l:"interview/applet.html#小程序跳转页面的方式",a:"小程序跳转页面的方式"},"59.18":{t:"微信小程序如何跳转到其它小程序\r",p:"\r",l:"interview/applet.html#微信小程序如何跳转到其它小程序",a:"微信小程序如何跳转到其它小程序"},"59.19":{t:"小程序加载过慢的解决方式",p:"",l:"interview/applet.html#小程序加载过慢的解决方式",a:"小程序加载过慢的解决方式"},"60.0":{t:"# 前端基础 （HTML/JS/CSS/浏览器）",p:"",l:"interview/base/index.html",a:"前端基础-html-js-css-浏览器"},"61.0":{t:"# JavaScript 相关\r",p:"\r",l:"interview/base/javascript.html",a:"javascript-相关"},"61.1":{t:"JavaScript的语言特性\r",p:`
运行在客户端浏览器上
不用预编译，直接解析执行代码
弱类型语言，比较灵活
与操作系统无关，跨平台的语言
脚本语言
解释性语 ...`,l:"interview/base/javascript.html#javascript的语言特性",a:"javascript的语言特性"},"61.2":{t:"JavaScript 中的基本数据类型\r",p:`
前端数据类型

`,l:"interview/base/javascript.html#javascript-中的基本数据类型",a:"javascript-中的基本数据类型"},"61.3":{t:"Ajax使用\r",p:"Ajax（Asynchronous JavaScript and XML）是一种使用 JavaScript 和 XML 进行 ...",l:"interview/base/javascript.html#ajax使用",a:"ajax使用"},"61.4":{t:"Ajax请求返回的状态码(常用)\r",p:`


状态码
含义




100
表示客户端应该继续发送请求，是临时响应，用于通知客户端，部分的请求服务器已经接受，但是客 ...`,l:"interview/base/javascript.html#ajax请求返回的状态码-常用",a:"ajax请求返回的状态码-常用"},"61.5":{t:"闭包\r",p:"\r",l:"interview/base/javascript.html#闭包",a:"闭包"},"61.6":{t:"闭包的定义\r",p:`闭包可以简单理解成：定义在一个函数内部的函数， 其中一个内部函数在包含它们的外部函数之外被调用时，就会形成闭包
闭包就是函数 ...`,l:"interview/base/javascript.html#闭包的定义",a:"闭包的定义"},"61.7":{t:"为什么要用\r",p:"匿名自执行函数： 我们知道所有的变量，如果不架上 var 关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局 ...",l:"interview/base/javascript.html#为什么要用",a:"为什么要用"},"61.8":{t:"闭包的特性\r",p:`

闭包的写法一般是函数嵌套函数


可以访问函数外部的变量：闭包可以访问定义它的函数的参数和局部变量，甚至可以访问全局变量 ...`,l:"interview/base/javascript.html#闭包的特性",a:"闭包的特性"},"61.9":{t:"事件委托\r",p:`事件委托就是利用时间冒泡，只制定一个时间处理程序，就可以管理某一些类型的所有事件。 —— 《JS高级程序设计》
事件委托，称 ...`,l:"interview/base/javascript.html#事件委托",a:"事件委托"},"61.10":{t:"事件委托优点\r",p:`

提高整体运行性能
假如现在有有00个li标签，那个li事件都有相同的点击事件，如果使用循环遍历去触发每个li元素上的事件 ...`,l:"interview/base/javascript.html#事件委托优点",a:"事件委托优点"},"61.11":{t:"事件源\r",p:`Event 对象提供了一个属性叫 target， 可以返回事件的目标节点，我们称为事件源。
但这个有兼容性：

标准浏览器使 ...`,l:"interview/base/javascript.html#事件源",a:"事件源"},"61.12":{t:"事件冒泡\r",p:`当一个元素接收到事件的时候，会把接收到事件传递给自己的父级。这种传递分为三个阶段

捕获阶段：从window对象传导到目标节 ...`,l:"interview/base/javascript.html#事件冒泡",a:"事件冒泡"},"61.13":{t:"本地存储与cookie的区别\r",p:`本地存储(Local Storage)和Cookie都是用于在浏览器端存储数据的两种不同的机制，主要有以下区别


存储容量 ...`,l:"interview/base/javascript.html#本地存储与cookie的区别",a:"本地存储与cookie的区别"},"61.14":{t:"ES6新特性(常用)\r",p:`
ES6新特性

`,l:"interview/base/javascript.html#es6新特性-常用",a:"es6新特性-常用"},"61.15":{t:"数组的方法(常用)\r",p:`
常用的数组的方法

`,l:"interview/base/javascript.html#数组的方法-常用",a:"数组的方法-常用"},"61.16":{t:"JSON 新增/删除键值对\r",p:`
新增键值对

let jsonStr = {}
jsonStr.newKey = &quot;newValue&quot; ...`,l:"interview/base/javascript.html#json-新增-删除键值对",a:"json-新增-删除键值对"},"61.17":{t:"面向对象\r",p:"面向对象是一种思想，是基于面向过程而言的，就是说面向对象是将功能等通过对象来实现，将功能封装到对象之中，让对象去实现具体的细 ...",l:"interview/base/javascript.html#面向对象",a:"面向对象"},"61.18":{t:"普通函数与构造函数区别\r",p:`
构造函数也是一个普通函数，创建方式和普通函数一样，但是构造函数习惯首字母大写
调用方式不一样，普通函数直接调用，构造函数要 ...`,l:"interview/base/javascript.html#普通函数与构造函数区别",a:"普通函数与构造函数区别"},"61.19":{t:"原型与原型链\r",p:`
原型与原型链

`,l:"interview/base/javascript.html#原型与原型链",a:"原型与原型链"},"61.20":{t:"Promise\r",p:`

链接（ES6新特性二）// 待开发


解决问题
回调地狱， 代码难以维护， 常常第一个的函数的输出是第二个函数的输入这 ...`,l:"interview/base/javascript.html#promise",a:"promise"},"61.21":{t:"async函数\r",p:"Async函数其实是 generatior函数和promise的语法糖， async就是将generator函数的 *换为  ...",l:"interview/base/javascript.html#async函数",a:"async函数"},"61.22":{t:"GET 请求传参长度误区\r",p:`误区
我们经常说 get 请求参数的大小存在限制， 而post请求的参数大小是无限制的。 实际上HTTP协议从未规定 GET ...`,l:"interview/base/javascript.html#get-请求传参长度误区",a:"get-请求传参长度误区"},"61.23":{t:"GET 请求和 POST 请求在缓存方面的区别\r",p:`GET 请求 一般是做查询操作， 是一个查找的过程， 可以不用每次都与数据库连接， 因此 GET 请求更适合请求缓存；
PO ...`,l:"interview/base/javascript.html#get-请求和-post-请求在缓存方面的区别",a:"get-请求和-post-请求在缓存方面的区别"},"61.24":{t:"事件流\r",p:"HTML 和 Javascript 的交互是通过事件驱动来实现的， 例如鼠标点击事件 onclick, 页面滚动事件 ons ...",l:"interview/base/javascript.html#事件流",a:"事件流"},"61.25":{t:"事件流定义\r",p:`事件流描述的是从页面中接收事件的顺序， DOM二级事件流包括几个阶段： 事件捕获阶段、处于目标阶段、 事件冒泡阶段


ad ...`,l:"interview/base/javascript.html#事件流定义",a:"事件流定义"},"61.26":{t:"改变this指针的指向函数(`call`、`apply`,`bind`)区别\r",p:`
call、bind、apply函数的恶区别

`,l:"interview/base/javascript.html#改变this指针的指向函数-call-、-apply-bind-区别",a:"改变this指针的指向函数-call-、-apply-bind-区别"},"61.27":{t:"JavaScript 中 clientHeight、scrollHeight、offsetHeight区别\r",p:`
具体可见 JS中的元素尺寸与布局信息

`,l:"interview/base/javascript.html#javascript-中-clientheight、scrollheight、offsetheight区别",a:"javascript-中-clientheight、scrollheight、offsetheight区别"},"61.28":{t:"拖拽功能的实现\r",p:"首先是三个事件: mousedown、 mousemove、 mouseup, 当鼠标点击按下的时候， 需要一个tag来标记 ...",l:"interview/base/javascript.html#拖拽功能的实现",a:"拖拽功能的实现"},"61.29":{t:"JavaScript的垃圾回收机制\r",p:"\r",l:"interview/base/javascript.html#javascript的垃圾回收机制",a:"javascript的垃圾回收机制"},"61.30":{t:"必要性\r",p:"由于字符串、对象和数组没有固定大小， 所以当它们大小已知时，才能够对它们进行动态的存储分配。JavaScript程序每次创建 ...",l:"interview/base/javascript.html#必要性",a:"必要性"},"61.31":{t:"常见的垃圾回收方式\r",p:`

标记清除
这是最常见的垃圾回收的方式，当变量进入环境时，就标记这个变量为进入环境， 从逻辑上来讲， 永远不能释放进入环境 ...`,l:"interview/base/javascript.html#常见的垃圾回收方式",a:"常见的垃圾回收方式"},"61.32":{t:"JavaScript监听对象属性的改变\r",p:`在ES5中， 我们可以通过Object.defineProperty来实现已有属性的监听：
Object.definepro ...`,l:"interview/base/javascript.html#javascript监听对象属性的改变",a:"javascript监听对象属性的改变"},"61.33":{t:"手动实现一个 `bind` 函数\r",p:`
原理： 通过 apply 或者 call 方法来实现。

Function.prototype.bind = functi ...`,l:"interview/base/javascript.html#手动实现一个-bind-函数",a:"手动实现一个-bind-函数"},"61.34":{t:"怎么控制一次加载一张图片，加载完后再加载下一张\r",p:"\r",l:"interview/base/javascript.html#怎么控制一次加载一张图片-加载完后再加载下一张",a:"怎么控制一次加载一张图片-加载完后再加载下一张"},"61.35":{t:"方法1\r",p:`var obj = new Image();
obj.src = 'http://www.phpernote.com/upl ...`,l:"interview/base/javascript.html#方法1",a:"方法1"},"61.36":{t:"方法2\r",p:`var obj=new Image();
obj.src='http://www.phpernote.com/uploadf ...`,l:"interview/base/javascript.html#方法2",a:"方法2"},"61.37":{t:"JavaScript 对象的深度克隆\r",p:"通过递归可以简单实现对象的深度克隆，但是这种方法不管是 ES6 还是 ES5 实现, 都有同样的缺陷， 就是只能实现特定的  ...",l:"interview/base/javascript.html#javascript-对象的深度克隆",a:"javascript-对象的深度克隆"},"61.38":{t:"JavaScript 全排列\r",p:`全排列是一种对给定字符串中的字符进行重新排列的操作，生成所有可能的排列组合。
function permutate(str) ...`,l:"interview/base/javascript.html#javascript-全排列",a:"javascript-全排列"},"61.39":{t:"跨域问题\r",p:"\r",l:"interview/base/javascript.html#跨域问题",a:"跨域问题"},"61.40":{t:"为什么会出现跨域\r",p:"在前后端分离的模式下，前后端的域名是不一致的， 此时就会发生跨域访问问题。在请求过程中我们想要发送/接收数据一般都是 POS ...",l:"interview/base/javascript.html#为什么会出现跨域",a:"为什么会出现跨域"},"61.41":{t:"同源策略\r",p:"是由 NetScape 提出的一个著名的安全策略。所谓的同源，指的是协议、域名、端口相同，浏览器处于安全方面考虑，只允许本域 ...",l:"interview/base/javascript.html#同源策略",a:"同源策略"},"61.42":{t:"减少页面加载时间\r",p:`
优化压缩图片
图片格式的选择(GIF:提供颜色较少，可以用在一些对颜色要求不高的地方)
优化CSS(压缩合并 CSS， 如 ...`,l:"interview/base/javascript.html#减少页面加载时间",a:"减少页面加载时间"},"61.43":{t:"this 指向\r",p:`在JavaScript中， this通常指向的是我们正在执行的函数本身，或者是指向该函数所属的对象
全局this -&gt; ...`,l:"interview/base/javascript.html#this-指向",a:"this-指向"},"61.44":{t:"数组去重\r",p:`
使用indexOf()/lastIndexOf() 方法
ES6的 Set结构 Array.form(new Set(ar ...`,l:"interview/base/javascript.html#数组去重",a:"数组去重"},"61.45":{t:"深拷贝与浅拷贝\r",p:`
手写深拷贝

深拷贝：指针赋值，并且内容拷贝 JSON.parse(JSON.stringify())不仅适用于数组还适用 ...`,l:"interview/base/javascript.html#深拷贝与浅拷贝",a:"深拷贝与浅拷贝"},"61.46":{t:"For循环与Map循环有什么区别\r",p:`
For循环 遍历对象自身和继承可枚举的属性，也就是说会包括那些在原型链上的属性
Map循环方法不会对空数组进行检测， ma ...`,l:"interview/base/javascript.html#for循环与map循环有什么区别",a:"for循环与map循环有什么区别"},"61.47":{t:"类的继承\r",p:`创建类有三种方法：

使用 function 和 this 关键字
原型方法 使用 prototype 和 this 关键字 ...`,l:"interview/base/javascript.html#类的继承",a:"类的继承"},"61.48":{t:"同步与异步的区别/阻塞与非阻塞区别\r",p:`同步(阻塞的)
异步(非阻塞)
比如：
同步，咱两在一起上班，到吃饭时间了，我去喊你一起吃饭，你很忙，我就坐着等你忙完再一起 ...`,l:"interview/base/javascript.html#同步与异步的区别-阻塞与非阻塞区别",a:"同步与异步的区别-阻塞与非阻塞区别"},"61.49":{t:"重绘和回流\r",p:`
重绘与回流

`,l:"interview/base/javascript.html#重绘和回流",a:"重绘和回流"},"61.50":{t:"HTTP HTTPS\r",p:`

HTTP
HTTP叫做超文本传输协议， 是互联网应用最广泛的一种网络协议
信息是明文传输
HTTP 基于 请求-响应 的 ...`,l:"interview/base/javascript.html#http-https",a:"http-https"},"61.51":{t:"如何对网站的文件和资源进行优化\r",p:`
文件合并(目的是减少 http 请求)
文件压缩(目的是减少文件下载体积)
使用 CDN 托管资源
使用缓存
gizp 压 ...`,l:"interview/base/javascript.html#如何对网站的文件和资源进行优化",a:"如何对网站的文件和资源进行优化"},"61.52":{t:"预加载与懒加载的区别\r",p:`预加载是指在页面加载完成之前，提前讲所需资源下载，之后使用的时候从缓存中调用；
懒加载是延迟加载，按照一定的条件活着需求，等 ...`,l:"interview/base/javascript.html#预加载与懒加载的区别",a:"预加载与懒加载的区别"},"61.53":{t:"防抖与节流\r",p:`
防抖与节流

`,l:"interview/base/javascript.html#防抖与节流",a:"防抖与节流"},"61.54":{t:"XSS 与 CSRF\r",p:`
XSS攻击与CSRF攻击

`,l:"interview/base/javascript.html#xss-与-csrf",a:"xss-与-csrf"},"62.0":{t:"# HTML CSS 浏览器\r",p:"\r",l:"interview/base/native.html",a:"html-css-浏览器"},"62.1":{t:"常用的图片的格式有哪些\r",p:`常用的图片格式有jpeg、png、gif, 比较流行的是jpeg格式, 可以把文件压缩到最小
`,l:"interview/base/native.html#常用的图片的格式有哪些",a:"常用的图片的格式有哪些"},"62.2":{t:"`jpeg`\r",p:`JPEG 是一种有损压缩格式,适合存储照片和复杂的图像,可以在文件大小和图像质量之间取得平衡
优点:文件大小相对较小,支持高 ...`,l:"interview/base/native.html#jpeg",a:"jpeg"},"62.3":{t:"`png`\r",p:`PNG 是一种无损压缩格式,适合存储图标、简单图形和带有透明度的图像。
优点:支持透明度、无损压缩；适合存储简单图形和带有透 ...`,l:"interview/base/native.html#png",a:"png"},"62.4":{t:"`gif`\r",p:`GIF 是一种支持动画和简单图形的格式,同时也支持透明度。
优点:支持动画、透明度；适合存储简单的动画图像。
缺点:色彩表现 ...`,l:"interview/base/native.html#gif",a:"gif"},"62.5":{t:"CSS的盒模型\r",p:"盒模型是一个盛放内容的容器, 它由四部分组成 元素的具体内容content、 内边距padding、边框border、外边距 ...",l:"interview/base/native.html#css的盒模型",a:"css的盒模型"},"62.6":{t:" 标准盒模型\r",p:`!标准盒模型
`,l:"interview/base/native.html#标准盒模型",a:"标准盒模型"},"62.7":{t:"IE盒模型\r",p:`!标准盒模型

css3中引入了box-sizing属性,box-sizing:content-box 表示标准盒子模型,b ...`,l:"interview/base/native.html#ie盒模型",a:"ie盒模型"},"62.8":{t:"视频/音频标签的使用\r",p:"\r",l:"interview/base/native.html#视频-音频标签的使用",a:"视频-音频标签的使用"},"62.9":{t:'视频标签 `<video src=""></video>`\r',p:`属性:



属性名称
功能




src
需要播放的视频地址


width
视频区域的宽度


height
视频区域 ...`,l:"interview/base/native.html#视频标签-video-src-video",a:"视频标签-video-src-video"},"62.10":{t:'音频标签`<audio> <source src="" type=""></source> </audio>`\r',p:`属性



属性名称
功能




src
需要播放的视频地址


type
视频类型, 支持ogg、mp3 wav


a ...`,l:"interview/base/native.html#音频标签-audio-source-src-type-source-audio",a:"音频标签-audio-source-src-type-source-audio"},"62.11":{t:"HTML5新增的内容\r",p:`
语义化标签
表单类型
表单元素
表单属性
表单事件
多媒体标签

`,l:"interview/base/native.html#html5新增的内容",a:"html5新增的内容"},"62.12":{t:"新增的语义化标签\r",p:`优点

提升可访问性
利于seo优化
结构清晰,利于维护

种类



标签名
标签作用




header
页面头部

 ...`,l:"interview/base/native.html#新增的语义化标签",a:"新增的语义化标签"},"62.13":{t:"CSS3新增特性\r",p:"\r",l:"interview/base/native.html#css3新增特性",a:"css3新增特性"},"62.14":{t:"`border`边框\r",p:`


属性名称
功能




border-radios
添加圆角


border-shadow
边框添加阴影 (水平位移 ...`,l:"interview/base/native.html#border-边框",a:"border-边框"},"62.15":{t:"`background`背景\r",p:`


属性名称
功能




background-size
背景图片尺寸


background-origin
规定ba ...`,l:"interview/base/native.html#background-背景",a:"background-背景"},"62.16":{t:"`gradient`渐变\r",p:`


属性名称
功能




linear-gradient
线性渐变


radial-gradient
径向渐变



`,l:"interview/base/native.html#gradient-渐变",a:"gradient-渐变"},"62.17":{t:"`word`文本效果\r",p:`


属性名称
功能




word-break
定义如何换行


word-wrap
允许长的内容可以自动换行


te ...`,l:"interview/base/native.html#word-文本效果",a:"word-文本效果"},"62.18":{t:"`transform`转换\r",p:`


属性名称
功能




transform
应用于 2D3D 转换,可以将元素旋转,缩放,移动,倾斜


transf ...`,l:"interview/base/native.html#transform-转换",a:"transform-转换"},"62.19":{t:"`transition`过渡\r",p:`


属性名称
功能




transition-proprety
过渡属性名


transition-duration ...`,l:"interview/base/native.html#transition-过渡",a:"transition-过渡"},"62.20":{t:"`animation`动画\r",p:`


属性名称
功能




animation-name
为@keyframes 动画名称


animation-dur ...`,l:"interview/base/native.html#animation-动画",a:"animation-动画"},"62.21":{t:"清除浮动(`float`)\r",p:`
当设置浮动属性时,并且父元素没有设置高度时, 父元素会出现高度塌陷问题



给父元素单独定义高度
这个方法简单快速, 代 ...`,l:"interview/base/native.html#清除浮动-float",a:"清除浮动-float"},"62.22":{t:"定位属性`position`\r",p:`
reactive: 相对定位,不脱离文档流,相对于自身定位
absolute: 绝对定位,脱离文档流,相对于父级定位
fi ...`,l:"interview/base/native.html#定位属性-position",a:"定位属性-position"},"62.23":{t:"元素居中\r",p:"\r",l:"interview/base/native.html#元素居中",a:"元素居中"},"62.24":{t:"水平居中\r",p:`
子父元素宽度固定,子元素设置margin: auto 并且子元素不能设置浮动(float)。否则居中失效
子父元素款素固定 ...`,l:"interview/base/native.html#水平居中",a:"水平居中"},"62.25":{t:"垂直居中\r",p:`
设置子元素和父元素的行高一样
子元素设置为行内块,再加 vertical-align:middle
已知父元素高度,子元素 ...`,l:"interview/base/native.html#垂直居中",a:"垂直居中"},"62.26":{t:"水平垂直居中\r",p:`

子元素相对于父元素绝对定位,子元素top、left设置 50%,子元素的margin-left和margin-top减去 ...`,l:"interview/base/native.html#水平垂直居中",a:"水平垂直居中"},"62.27":{t:"三栏布局方式两边固定, 中间自适应\r",p:`
margin 负值法：左右两栏均左浮动, 左右两栏采用负的margin值。中间栏被宽度为100%的浮动元素包起来
自身浮动 ...`,l:"interview/base/native.html#三栏布局方式两边固定-中间自适应",a:"三栏布局方式两边固定-中间自适应"},"62.28":{t:"浏览器显示小于12px的文字\r",p:`
可以添加谷歌私有属性webkit-text-size-adjust:none
使用 -webkit-transform:s ...`,l:"interview/base/native.html#浏览器显示小于12px的文字",a:"浏览器显示小于12px的文字"},"62.29":{t:"CSS选择器\r",p:"\r",l:"interview/base/native.html#css选择器",a:"css选择器"},"62.30":{t:"种类\r",p:`


选择器
功能





后代选择器



元素选择器


.
类名选择器


#
id选择器


*
通配符选择器

 ...`,l:"interview/base/native.html#种类",a:"种类"},"62.31":{t:"优先级(权重)\r",p:`


选择器
权重




元素选择器
1


伪元素选择器
1


class选择器
10


伪类选择器
10


属性 ...`,l:"interview/base/native.html#优先级-权重",a:"优先级-权重"},"62.32":{t:"可继承属性\r",p:`


类型
属性




所有元素
visibility和cursor


块级元素
text-indent和text-al ...`,l:"interview/base/native.html#可继承属性",a:"可继承属性"},"62.33":{t:"图片加载缓慢问题\r",p:`
图片懒加载, 在图片未可视区域加一个滚动条事件, 判断图片位置与浏览器顶端和页面的距离, 如果前者小于后者, 优先加载
使 ...`,l:"interview/base/native.html#图片加载缓慢问题",a:"图片加载缓慢问题"},"62.34":{t:"行内元素/块级元素\r",p:"行内元素: 相邻的行内元素会排列在同一行, 不会独占一行 设置宽高无效 span、a、br I em img input s ...",l:"interview/base/native.html#行内元素-块级元素",a:"行内元素-块级元素"},"62.35":{t:"margin与padding使用场景\r",p:`margin: 外边距 自身边框到另一个边框之间的距离
padding: 内边距 自身边距到自身内容之间的距离
当需要在 b ...`,l:"interview/base/native.html#margin与padding使用场景",a:"margin与padding使用场景"},"62.36":{t:"`flex`属性\r",p:`原理： 通过给父盒子添加 flex 属性, 来控制子盒子的位置和排列方式



属性名
功能




flex-direct ...`,l:"interview/base/native.html#flex-属性",a:"flex-属性"},"62.37":{t:"标签的禁用\r",p:`添加disable属性
`,l:"interview/base/native.html#标签的禁用",a:"标签的禁用"},"62.38":{t:"`px`、`rem`、`em`区别\r",p:`

px
绝对长度单位, 像素 px 是相对于显示器屏幕分辨率来说的


em
相对长度单位, 相对于当前对象内文本的字体尺 ...`,l:"interview/base/native.html#px-、-rem-、-em-区别",a:"px-、-rem-、-em-区别"},"62.39":{t:"媒体查询\r",p:`媒体查询扩展了 media 属性, 就是根据不同的媒体类型设置不同的css样式, 达到自适应的目的。
`,l:"interview/base/native.html#媒体查询",a:"媒体查询"},"62.40":{t:"网页的三层结构\r",p:`结构(html 或 xhtm 标记语言) 表现(css 样式表) 行为(js)
`,l:"interview/base/native.html#网页的三层结构",a:"网页的三层结构"},"62.41":{t:"DOCTYPE 作用\r",p:"DOCTYPE 是 HTML5 中的文档声明, 通过它可以告诉浏览器, 使用哪一个 HTML 的版本标准来解析文档, 如果没 ...",l:"interview/base/native.html#doctype-作用",a:"doctype-作用"},"62.42":{t:"HTML5 `drag`API\r",p:`


属性
功能




dragstart
事件主体是被拖放元素, 在开始拖放被拖放元素时触发


darg
事件主体是被 ...`,l:"interview/base/native.html#html5-drag-api",a:"html5-drag-api"},"62.43":{t:"浏览器性能优化 🌍\r",p:`如何让页面能够更快地显示和响应， 这里分为三个阶段

加载阶段：发出请求到网页渲染完成的这段过程，这里影响和优化的主要是网络 ...`,l:"interview/base/native.html#浏览器性能优化-🌍",a:"浏览器性能优化-🌍"},"62.44":{t:"加载阶段的优化\r",p:`加载阶段能做的主要优化：


减少关键资源个数

例如把css和js改为内联形式，关键资源比如原来有3个就减少到1个了
变成 ...`,l:"interview/base/native.html#加载阶段的优化",a:"加载阶段的优化"},"62.45":{t:"交互阶段的优化\r",p:`交互阶段的优化，其实就是说 优化渲染进程中渲染帧的速度，帧的速度决定了交互的流畅性

大部分情况下，生成一个新的帧，是由 J ...`,l:"interview/base/native.html#交互阶段的优化",a:"交互阶段的优化"},"62.46":{t:"回流和重绘\r",p:`
回流和重绘

`,l:"interview/base/native.html#回流和重绘",a:"回流和重绘"},"62.47":{t:"浏览器缓存机制\r",p:`
浏览器缓存

`,l:"interview/base/native.html#浏览器缓存机制",a:"浏览器缓存机制"},"62.48":{t:"浏览器输入网址到页面渲染的全过程\r",p:`

用户输入URL
用户在输入URL时候，浏览器会根据URL的协议， 在这段内容上加伤协议合成合法的URL， 按下回车后，导 ...`,l:"interview/base/native.html#浏览器输入网址到页面渲染的全过程",a:"浏览器输入网址到页面渲染的全过程"},"62.49":{t:"如何画一条0.5px的线\r",p:`
采用 meta viewport的方式

&lt;meta name=&quot;viewport&quot; conte ...`,l:"interview/base/native.html#如何画一条0-5px的线",a:"如何画一条0-5px的线"},"62.50":{t:"关于 JS动画和CSS3动画的差异\r",p:"渲染县城分为main thread 和 compositor thread, 如果css动画只改变 transfoem 和  ...",l:"interview/base/native.html#关于-js动画和css3动画的差异",a:"关于-js动画和css3动画的差异"},"62.51":{t:"双边距重叠(外边距折叠)\r",p:`多个相邻(兄弟或者父子关系)普通流的块级元素垂直方向的 margin 会重叠， 重叠结果为：

两者相邻的外边距皆为正数时： ...`,l:"interview/base/native.html#双边距重叠-外边距折叠",a:"双边距重叠-外边距折叠"},"63.0":{t:"# 框架相关",p:"",l:"interview/frame/index.html",a:"框架相关"},"64.0":{t:"# React相关\r",p:"\r",l:"interview/frame/react.html",a:"react相关"},"64.1":{t:"常用的React Hook\r",p:`

useState
用于管理功能组件中的状态


useEffect
用于在功能组件中执行副作用，例如获取数据或订阅事件
 ...`,l:"interview/frame/react.html#常用的react-hook",a:"常用的react-hook"},"64.2":{t:"什么是虚拟DOM\r",p:"虚拟DOM是React中的一个概念， 其中创建了实际DOM(文档对象模型)的轻量级虚拟表示。 它是一种用于优化web应用程序 ...",l:"interview/frame/react.html#什么是虚拟dom",a:"什么是虚拟dom"},"64.3":{t:"Vue 与 react 区别\r",p:`相同点：
都支持服务器渲染
都有虚拟 dom，组件化开发，通过 props 参数进行父子组件数据的传递，都实现 webcom ...`,l:"interview/frame/react.html#vue-与-react-区别",a:"vue-与-react-区别"},"64.4":{t:"受控组件和非受控组件的区别\r",p:`受控组件的与非受控组件之间的区别在于它们如何管理和更新其状态。
受控组件是状态通过React控制的组件， 组件接收其当前值并 ...`,l:"interview/frame/react.html#受控组件和非受控组件的区别",a:"受控组件和非受控组件的区别"},"64.5":{t:"基于类的 React 组件和函数式组件有什么区别\r",p:`基于类的组件和函数组件之间的主要区别在于它们的定义方式以及它们的使用方法
React.Component基于类的组件被定义为 ...`,l:"interview/frame/react.html#基于类的-react-组件和函数式组件有什么区别",a:"基于类的-react-组件和函数式组件有什么区别"},"64.6":{t:"组件的生命周期方法是什么\r",p:`生命周期方法是一种挂接到组件生命周期不通阶段的方法，允许你在特定时间执行特定的代码。



生命周期
功能




cons ...`,l:"interview/frame/react.html#组件的生命周期方法是什么",a:"组件的生命周期方法是什么"},"64.7":{t:"使用 `useState` 有什么特点\r",p:`useState 返回一个状态值和一个用于更新它的函数
const [value, setValue] = useState ...`,l:"interview/frame/react.html#使用-usestate-有什么特点",a:"使用-usestate-有什么特点"},"64.8":{t:"使用 `useEffect` 有什么特点\r",p:`useEffect钩子允许在功能组件中执行副作用
突变、订阅、计时器、日志记录和其它副作用不允许在称为React 渲染阶段的 ...`,l:"interview/frame/react.html#使用-useeffect-有什么特点",a:"使用-useeffect-有什么特点"},"64.9":{t:"如何跟踪功能组件的卸载\r",p:`通常 useEffect 创建需要在组件离开屏幕之前清理或重置的资源，例如订阅或计时器标识符。
为此 传递给useEffec ...`,l:"interview/frame/react.html#如何跟踪功能组件的卸载",a:"如何跟踪功能组件的卸载"},"64.10":{t:"React 中的道具(props)是什么\r",p:`Props 是从父级传递给组件的数据。 Props是固定的， 不能被更改
// Parent component
const ...`,l:"interview/frame/react.html#react-中的道具-props-是什么",a:"react-中的道具-props-是什么"},"64.11":{t:"什么是State管理器，曾与哪些库相连\r",p:"状态管理器是帮助管理应用程序状态的工具或库。它提供了一个集中式存储或容器，用于存储和管理可由应用程序中的不同组件访问和更新的 ...",l:"interview/frame/react.html#什么是state管理器-曾与哪些库相连",a:"什么是state管理器-曾与哪些库相连"},"64.12":{t:"在哪些状态下可以使用本地状态，何时应该使用全局状态\r",p:"如果本地状态仅在一个组件中使用，并且没有后计划将其传递给其它区组件，则建议使用本地状态。本地状态也用于表示列表中单个项的组件 ...",l:"interview/frame/react.html#在哪些状态下可以使用本地状态-何时应该使用全局状态",a:"在哪些状态下可以使用本地状态-何时应该使用全局状态"},"64.13":{t:"Redux 的 reducer 是什么，它需要哪些参数\r",p:"reducer是一个纯函数，它将状态和动作作为参数。在 reducer 内部， 我们跟踪接收到的动作的类型，并根据它修改状态 ...",l:"interview/frame/react.html#redux-的-reducer-是什么-它需要哪些参数",a:"redux-的-reducer-是什么-它需要哪些参数"},"64.14":{t:"什么是 action , 如何更改Redux的状态\r",p:`Action是一个简单的 JavaScript 对象， 它必须具有类型字段
{
  type: 'SOME_TYPE'
}
 ...`,l:"interview/frame/react.html#什么是-action-如何更改redux的状态",a:"什么是-action-如何更改redux的状态"},"64.15":{t:"Redux 实现了哪种模式\r",p:"Redux实现了 Flux 模式 这是一种可以预测的应用程序状态管理模式，它通过引入单向数据流和应用程序状态的集中存储来帮助 ...",l:"interview/frame/react.html#redux-实现了哪种模式",a:"redux-实现了哪种模式"},"64.16":{t:"简述 Flux 思想\r",p:"Flux 是一种用于数据处理的编程模型，它旨在处理流式数据和大规模数据集。 Flux 提供了一种功能强大且灵活的方式来处理数 ...",l:"interview/frame/react.html#简述-flux-思想",a:"简述-flux-思想"},"64.17":{t:"Axios Fetch 和 Ajax区别\r",p:`这三者都是用于发起网络请求的工具或技术，但它们有一些区别：


Ajax


Ajax(Asyncchronous Java ...`,l:"interview/frame/react.html#axios-fetch-和-ajax区别",a:"axios-fetch-和-ajax区别"},"64.18":{t:"React Hooks 为什么不能放在if 和 for 里\r",p:"React Hooks是 React16.8版本新增的特性它可以让函数组件既有类组件的状态和生命周期管理能力。再使用 Rea ...",l:"interview/frame/react.html#react-hooks-为什么不能放在if-和-for-里",a:"react-hooks-为什么不能放在if-和-for-里"},"64.19":{t:"React 组件之间的数据传递\r",p:`
Props

最常见的一种方式是通过 props 将数据从父组件传递到子组件。父组件可以将数据作为属性传递给子组件，并且子 ...`,l:"interview/frame/react.html#react-组件之间的数据传递",a:"react-组件之间的数据传递"},"64.20":{t:"Diff 算法\r",p:"Diff算法是一种用于比较两个数据结构(通常是树或数组)之间的差异的算法。在前端开发中，Diff算法通常用于虚拟DOM的比较 ...",l:"interview/frame/react.html#diff-算法",a:"diff-算法"},"64.21":{t:"为什么虚拟 DOM 会提高性能\r",p:"虚拟DOM没有立即更新真的DOM，是先把DOM结构抽象成DOM树，通过比较两棵虚拟DOM树 找出差异，并标记需要更新节点和操 ...",l:"interview/frame/react.html#为什么虚拟-dom-会提高性能",a:"为什么虚拟-dom-会提高性能"},"64.22":{t:"何为高阶组件(higher order component)？\r",p:`
高阶函数

`,l:"interview/frame/react.html#何为高阶组件-higher-order-component",a:"何为高阶组件-higher-order-component"},"65.0":{t:"# Vue\r",p:"\r",l:"interview/frame/vue.html",a:"vue"},"65.1":{t:"vue的核心\r",p:`Vue是一套构建用户界面的渐进式、自底向上增量开发的 MVVM 模型的框架， vue的核心只关注视图层
`,l:"interview/frame/vue.html#vue的核心",a:"vue的核心"},"65.2":{t:"核心思想\r",p:`
数据驱动(视图内容随着数据的改变而改变)
组件话(可以增加代码复用性、可维护性、可测试性，提高了开发效率， 方便重复使用， ...`,l:"interview/frame/vue.html#核心思想",a:"核心思想"},"65.3":{t:"Vue中的单项数据流\r",p:`父级 prop 的更新都会向下流动到子组件中，每次父组件发生更新，子组件所有的 prop 都会刷新为最新的值
数据从父组件传 ...`,l:"interview/frame/vue.html#vue中的单项数据流",a:"vue中的单项数据流"},"65.4":{t:"Vue中常用的修饰符\r",p:`


修饰符
功能




修饰符



.lazy
改变后触发，光标离开 input 输入框的时候值才会改变


.num ...`,l:"interview/frame/vue.html#vue中常用的修饰符",a:"vue中常用的修饰符"},"65.5":{t:"`v-text`、`}`、`v-html`区别\r",p:`
`,l:"interview/frame/vue.html#",a:""},"65.6":{t:"` }`\r",p:`模版插值{ { } } 将数据解析成纯文本，并不能显示输出 html
`,l:"interview/frame/vue.html#",a:""},"65.7":{t:"`v-text`\r",p:"v-text 指令操作网页元素的恶纯文本内容，与 {{}}等价， 只是 v-text叫指令， {{}}叫模版插值 {{}}是 ...",l:"interview/frame/vue.html#v-text",a:"v-text"},"65.8":{t:"`v-html`\r",p:`v-html可以渲染输出 html
`,l:"interview/frame/vue.html#v-html",a:"v-html"},"65.9":{t:"`v-on`是否可以绑定多个方法\r",p:`可以的， 如果绑定多个事件，可以使用键值对形式：事件类型: 事件名；
如果绑定的是多个相同事件， 直接使用逗号分隔就可以
`,l:"interview/frame/vue.html#v-on-是否可以绑定多个方法",a:"v-on-是否可以绑定多个方法"},"65.10":{t:"Vue `v-for`循环中 `key`的作用\r",p:"设置的 key 是保证唯一性， Vue在执行时，会对节点进行检查，如果没有key值，那么vue检查到这里有 DOM 节点，就 ...",l:"interview/frame/vue.html#vue-v-for-循环中-key-的作用",a:"vue-v-for-循环中-key-的作用"},"65.11":{t:"计算属性(`computed`)\r",p:`计算属性是用来声明式地描述一个值依赖了其它的值，当它依赖的这个值发生改变时，就更新 DOM
当在模版中把数据绑定到一个计算属 ...`,l:"interview/frame/vue.html#计算属性-computed",a:"计算属性-computed"},"65.12":{t:"Vue中跳转路由的方式\r",p:`Vue中路由跳转的方式有两种，分别是 声明式 和 编程式
用 js 方式进行跳转的叫做编程式导航 this.$router. ...`,l:"interview/frame/vue.html#vue中跳转路由的方式",a:"vue中跳转路由的方式"},"65.13":{t:"Vue 跨域解决方案\r",p:`
后台更改header
使用 http-proxy-middleware (配置代理服务器的中间件)

`,l:"interview/frame/vue.html#vue-跨域解决方案",a:"vue-跨域解决方案"},"65.14":{t:"Vue 生命周期\r",p:`
vue生命周期

`,l:"interview/frame/vue.html#vue-生命周期",a:"vue-生命周期"},"65.15":{t:"Vue 路由的实现\r",p:`vue路由有三种模式，分别是 hash、history、abstract

hash:  使用 URL的 hash值来做路由 ...`,l:"interview/frame/vue.html#vue-路由的实现",a:"vue-路由的实现"},"65.16":{t:"基本原理\r",p:"useRouter() 中的 push 和 replace 是手动调用内部路径切换方法 transitionTo，go、ba ...",l:"interview/frame/vue.html#基本原理",a:"基本原理"},"65.17":{t:"Vue 路由模式 hash 和 history\r",p:"\r",l:"interview/frame/vue.html#vue-路由模式-hash-和-history",a:"vue-路由模式-hash-和-history"},"65.18":{t:"hash\r",p:`hash 模式是用 createWebHashHistory() 创建的
import { createRouter, cr ...`,l:"interview/frame/vue.html#hash",a:"hash"},"65.19":{t:"history\r",p:`history就是 HTML5模式， 使用createWebHistory()创建 HTML5 模式，推荐使用这个模式
im ...`,l:"interview/frame/vue.html#history",a:"history"},"65.20":{t:"两者区别\r",p:`

History模式优势
pushState() 设置的新URL可以与当前URL同源的URL，而 Hash只能修改#的部分 ...`,l:"interview/frame/vue.html#两者区别",a:"两者区别"},"65.21":{t:"Vue 路由传参的两种方式，params 和 query方式与区别\r",p:"\r",l:"interview/frame/vue.html#vue-路由传参的两种方式-params-和-query方式与区别",a:"vue-路由传参的两种方式-params-和-query方式与区别"},"65.22":{t:"路由参数(params)\r",p:"路由参数通常用于标识性的信息，如资源ID、用户ID等，它们直接包含在路由的路径中，这些参数作为路径的一部分，提供了对特定资源 ...",l:"interview/frame/vue.html#路由参数-params",a:"路由参数-params"},"65.23":{t:"查询参数(query)\r",p:"查询参数适合用于传递非标识性信息，如筛选条件、搜索关键字、分页信息等，它们不包含在路由的路径中，而是作为键值对附加到URL后 ...",l:"interview/frame/vue.html#查询参数-query",a:"查询参数-query"},"65.24":{t:"何时使用\r",p:`

params
标识性信息：当需要传递标识性信息，如用户ID，帖子ID等，使用路由参数更合适
确保信息直接可见：如果希望用 ...`,l:"interview/frame/vue.html#何时使用",a:"何时使用"},"65.25":{t:"Vue 数据绑定的几种方式\r",p:"\r",l:"interview/frame/vue.html#vue-数据绑定的几种方式",a:"vue-数据绑定的几种方式"},"65.26":{t:"插值(interpolation)\r",p:`插值是最基本的数据绑定方式之一，使用双大括号{{}}将变量插入到模版中


&lt;template&gt;
  &lt;p ...`,l:"interview/frame/vue.html#插值-interpolation",a:"插值-interpolation"},"65.27":{t:"绑定属性(Binding Attributes)\r",p:`使用 v-bind 指令可以将一个变量的值绑定到HTML元素属性上


&lt;template&gt;
  &lt;div ...`,l:"interview/frame/vue.html#绑定属性-binding-attributes",a:"绑定属性-binding-attributes"},"65.28":{t:"动态类绑定(Dynamic Class Binding)\r",p:`使用v-bind:class可以根据条件动态绑定类名


&lt;template&gt;
  &lt;div v-bind ...`,l:"interview/frame/vue.html#动态类绑定-dynamic-class-binding",a:"动态类绑定-dynamic-class-binding"},"65.29":{t:"动态样式绑定(Dynamic Style Binding)\r",p:`使用 v-bind:style 可以根据条件动态绑定样式


&lt;template&gt;
  &lt;div&gt;
 ...`,l:"interview/frame/vue.html#动态样式绑定-dynamic-style-binding",a:"动态样式绑定-dynamic-style-binding"},"65.30":{t:"表单输入绑定(Form input Binding)\r",p:`使用v-model 可以实现表单输入和数据的双向绑定


&lt;template&gt;
&lt;form&gt;
  & ...`,l:"interview/frame/vue.html#表单输入绑定-form-input-binding",a:"表单输入绑定-form-input-binding"},"65.31":{t:"事件绑定(Event Binding)\r",p:`使用 v-on 可以将 DOM 事件绑定到 Vue 实例中的方法。


&lt;template&gt;
  &lt;but ...`,l:"interview/frame/vue.html#事件绑定-event-binding",a:"事件绑定-event-binding"},"65.32":{t:"Vue 的路由钩子函数/路由守卫有哪些\r",p:"\r",l:"interview/frame/vue.html#vue-的路由钩子函数-路由守卫有哪些",a:"vue-的路由钩子函数-路由守卫有哪些"},"65.33":{t:"全局路由钩子(Global Before Guards)\r",p:`beforeEach(to. from, next) 在路由改变前触发，常用于全局的身份验证检查等
const router ...`,l:"interview/frame/vue.html#全局路由钩子-global-before-guards",a:"全局路由钩子-global-before-guards"},"65.34":{t:"路由独享守卫(Per-Route Guards)\r",p:`beforeEnter(to, from, next)：在某个路由独享的守卫。
`,l:"interview/frame/vue.html#路由独享守卫-per-route-guards",a:"路由独享守卫-per-route-guards"},"65.35":{t:"组件内守卫(In-Component Guards)\r",p:`beforeRouteEnter(to, from, next)：在路由进入的时候，但是在组件渲染之前被调用。
before ...`,l:"interview/frame/vue.html#组件内守卫-in-component-guards",a:"组件内守卫-in-component-guards"},"65.36":{t:"Vue 中如何自定义指令\r",p:"vue中， 除了内置的一些列指令(如v-model和 v-show)之外， 还可以注册自定义的指令(Custom Direc ...",l:"interview/frame/vue.html#vue-中如何自定义指令",a:"vue-中如何自定义指令"},"65.37":{t:"组成\r",p:`一个自定义指令是由一个包含类似组件生命周期钩子的对象来定义，钩子函数会接收到指令所绑定元素作为其参数


&lt;templ ...`,l:"interview/frame/vue.html#组成",a:"组成"},"65.38":{t:"setup标签版本\r",p:`setup标签版本传递数据的方法还是跟函数版本一致，只是写法上有所不同：
父组件


&lt;template&gt;
   ...`,l:"interview/frame/vue.html#setup标签版本",a:"setup标签版本"},"65.39":{t:"子组件传递给父组件参数\r",p:"\r",l:"interview/frame/vue.html#子组件传递给父组件参数",a:"子组件传递给父组件参数"},"65.40":{t:"setup函数 子组件传参版本\r",p:`子组件传值

setup函数中 context 的 emit 用于传递事件给父组件
第一个参数要为传递的参数名，第二个参数为 ...`,l:"interview/frame/vue.html#setup函数-子组件传参版本",a:"setup函数-子组件传参版本"},"65.41":{t:"setup标签 子组件传参版本\r",p:`子组件


&lt;template&gt;
  &lt;div class=&quot;box&quot;&gt;
    ...`,l:"interview/frame/vue.html#setup标签-子组件传参版本",a:"setup标签-子组件传参版本"},"65.42":{t:"Vue 插槽(slot)\r",p:"简单来说就是子组件中的提供给父组件使用的一个坑位，用&lt;slot&gt;&lt;/slot&gt;表示， 父组件可以在这 ...",l:"interview/frame/vue.html#vue-插槽-slot",a:"vue-插槽-slot"},"65.43":{t:"默认内容\r",p:`在父组件中没有提供任何插槽内容的时候， 我们是可以为子组件的插槽指定默认内容的， 比如:
子组件
&lt;template& ...`,l:"interview/frame/vue.html#默认内容",a:"默认内容"},"65.44":{t:"具名插槽\r",p:"很多时候一个插槽满足不了需求， 需要多个插槽，于是就有了具名插槽， 比如带有name属性的插槽&lt;slot name=& ...",l:"interview/frame/vue.html#具名插槽",a:"具名插槽"},"65.45":{t:"动态插槽\r",p:"动态插槽就是插槽名变成了变量的形式，我们可以随时修改这个变量从而展示不同的效果。它的写法是v-slot:[变量名] 或者缩写 ...",l:"interview/frame/vue.html#动态插槽",a:"动态插槽"},"65.46":{t:"作用域插槽\r",p:`插槽也可以像组件传递 props 那样， 在slot标签绑定属性从而传递给父组件中的插槽内容
子组件
&lt;templat ...`,l:"interview/frame/vue.html#作用域插槽",a:"作用域插槽"},"65.47":{t:"具名作用域插槽\r",p:`具名作用域插槽接收参数的方式是通过template的标签的指令v-slot的值获取的
&lt;!-- 父组件 --&gt;
 ...`,l:"interview/frame/vue.html#具名作用域插槽",a:"具名作用域插槽"},"65.48":{t:"Vue watch\r",p:`vue watch 用于侦听一个或者多个响应式数据源，并在数据源变化时调用所给的回调函数
`,l:"interview/frame/vue.html#vue-watch",a:"vue-watch"},"65.49":{t:"类型\r",p:`// 侦听单个来源
function watch&lt;T&gt;(
  source: WatchSource&lt;T& ...`,l:"interview/frame/vue.html#类型",a:"类型"},"65.50":{t:"详细信息\r",p:`watch() 默认是懒侦听的， 即仅在侦听起源发生变化时才执行回调函数
第一个参数是侦听器的源，这个源来自以下几种

一个 ...`,l:"interview/frame/vue.html#详细信息",a:"详细信息"},"65.51":{t:"示例\r",p:`
侦听一个 getter 函数

const state = reactive({ count: 0 })
watch(
  ...`,l:"interview/frame/vue.html#示例",a:"示例"},"65.52":{t:"计算属性与watch的区别\r",p:`watch 和 computed 都是 vue2/vue3中用于监听数据变化的属性


功能: computed 是计算属性 ...`,l:"interview/frame/vue.html#计算属性与watch的区别",a:"计算属性与watch的区别"},"65.53":{t:"Vue 首屏加载慢的原因，怎么解决的，白屏时间怎么检测，怎么解决白屏问题\r",p:`
首页白屏

`,l:"interview/frame/vue.html#vue-首屏加载慢的原因-怎么解决的-白屏时间怎么检测-怎么解决白屏问题",a:"vue-首屏加载慢的原因-怎么解决的-白屏时间怎么检测-怎么解决白屏问题"},"65.54":{t:"Vue中 Route 与 router 区别\r",p:`Vue中 Route 与 Router 依然表示路由相关的概念，但它们功能不尽相同


Route(路由)
Route 表示 ...`,l:"interview/frame/vue.html#vue中-route-与-router-区别",a:"vue中-route-与-router-区别"},"65.55":{t:"Vue 路由懒加载（按需加载路由）\r",p:"我们可以使用 defineAsyncComponent 函数来定义异步组件，该函数接收一个返回值为Promise的函数，用于 ...",l:"interview/frame/vue.html#vue-路由懒加载-按需加载路由",a:"vue-路由懒加载-按需加载路由"},"65.56":{t:"Vue3.0 是如何变得更快的？（底层，源码）\r",p:`Vue3在性能上进行了一系列的优化和改进，主要通过以下几个方面实现了更好的性能


Proxy 取代了 Object.def ...`,l:"interview/frame/vue.html#vue3-0-是如何变得更快的-底层-源码",a:"vue3-0-是如何变得更快的-底层-源码"},"65.57":{t:"Vuex\r",p:`!Vuex
Vuex 是一个专门为vue.js应用程序开发的状态管理模式，通过创建一个集中的数据存储，方便程序中的所有组件进 ...`,l:"interview/frame/vue.html#vuex",a:"vuex"},"66.0":{t:"# 面试相关问题\r",p:`!面试相关
`,l:"interview/index.html",a:"面试相关问题"},"68.0":{t:"# 2024-03-20 面试 React\r",p:`&lt;!-- 字节面试  --&gt;
`,l:"interview/weeky/240320.html",a:"_2024-03-20-面试-react"},"68.1":{t:"关于Vue组件通信\r",p:`常用的组件通信方式有以下几种


props


$emit


ref 和 defineExpose


provide  ...`,l:"interview/weeky/240320.html#关于vue组件通信",a:"关于vue组件通信"},"68.2":{t:" ",p:"",l:"interview/weeky/240320.html#",a:""},"68.3":{t:"props\r",p:"&lt;div style=&quot;color:#89DDFF;margin:10px 0&quot;&gt;父组件将数 ...",l:"interview/weeky/240320.html#props",a:"props"},"68.4":{t:" ",p:"",l:"interview/weeky/240320.html#",a:""},"68.5":{t:" $Emit\r",p:"&lt;div style=&quot;color:#89DDFF;margin:10px 0&quot;&gt;子组件通过 ...",l:"interview/weeky/240320.html#emit",a:"emit"},"68.6":{t:" ",p:"",l:"interview/weeky/240320.html#",a:""},"68.7":{t:" ref 和 defineExpose\r",p:`&lt;div style=&quot;color:#89DDFF;margin:10px 0&quot;&gt;
在Vue ...`,l:"interview/weeky/240320.html#ref-和-defineexpose",a:"ref-和-defineexpose"},"68.8":{t:" ",p:"",l:"interview/weeky/240320.html#",a:""},"68.9":{t:"provide 和 inject\r",p:`

&lt;div style=&quot;color:#89DDFF;margin:10px 0&quot;&gt;pro ...`,l:"interview/weeky/240320.html#provide-和-inject",a:"provide-和-inject"},"68.10":{t:" ",p:"",l:"interview/weeky/240320.html#",a:""},"68.11":{t:"v-model\r",p:`&lt;div style=&quot;color:#89DDFF;margin:10px 0&quot;&gt;
v-mo ...`,l:"interview/weeky/240320.html#v-model",a:"v-model"},"68.12":{t:" ",p:"",l:"interview/weeky/240320.html#",a:""},"68.13":{t:"mitt\r",p:`在Vue3中，可以使用第三方库mitt来实现组件之间的通信。
&lt;div style=&quot;color:#89DD ...`,l:"interview/weeky/240320.html#mitt",a:"mitt"},"68.14":{t:" ",p:"",l:"interview/weeky/240320.html#",a:""},"68.15":{t:"Pinia\r",p:"pinia 是一个为 vue3 设计的状态管理库，类似 Vuex 的设计模式，通过定义 store、状态、getter 和  ...",l:"interview/weeky/240320.html#pinia",a:"pinia"},"68.16":{t:"React中遇到过什么坑\r",p:"\r",l:"interview/weeky/240320.html#react中遇到过什么坑",a:"react中遇到过什么坑"},"68.17":{t:"不正确地使用状态更新\r",p:"直接修改状态（state）而不使用 setState 方法会导致不可预测的结果，因为 React 无法检测到状态的更改。正确 ...",l:"interview/weeky/240320.html#不正确地使用状态更新",a:"不正确地使用状态更新"},"68.18":{t:"使用索引作为 key\r",p:"在渲染列表时，将索引作为 React 元素的 key 值可能会导致性能问题和不稳定的 UI 行为。最好使用具有唯一标识的属性 ...",l:"interview/weeky/240320.html#使用索引作为-key",a:"使用索引作为-key"},"68.19":{t:"忘记绑定事件处理程序\r",p:"在类组件中，如果没有将事件处理程序绑定到实例上，可能会导致 this 关键字在事件处理程序中指向 undefined。可以使 ...",l:"interview/weeky/240320.html#忘记绑定事件处理程序",a:"忘记绑定事件处理程序"},"68.20":{t:"忘记在条件渲染中处理 null 或 undefined\r",p:`如果在条件渲染中返回 null 或 undefined，可能会导致 TypeError。请确保在返回之前处理这些情况。
// ...`,l:"interview/weeky/240320.html#忘记在条件渲染中处理-null-或-undefined",a:"忘记在条件渲染中处理-null-或-undefined"},"68.21":{t:"在渲染函数中定义函数\r",p:"在渲染函数中定义新的函数，可能会导致组件重新渲染时创建新的函数实例，影响性能。应该将这些函数提升到组件外部或使用 useCa ...",l:"interview/weeky/240320.html#在渲染函数中定义函数",a:"在渲染函数中定义函数"},"68.22":{t:"SSR中Node的配置消耗的QPS\r",p:`△ SSR之前接触并不深刻， 暂时留个坑  通过Next.js 和 Nuxt.js配置时深入了解一下
`,l:"interview/weeky/240320.html#ssr中node的配置消耗的qps",a:"ssr中node的配置消耗的qps"},"68.23":{t:"React的生命周期\r",p:"在旧版的 React 中，组件生命周期包括三个阶段：挂载阶段（Mounting）、更新阶段（Updating）、卸载阶段（U ...",l:"interview/weeky/240320.html#react的生命周期",a:"react的生命周期"},"68.24":{t:"挂载阶段（Mounting）\r",p:`

constructor()：构造函数，在组件被创建时调用，用于初始化状态（state）或绑定事件处理方法。


stat ...`,l:"interview/weeky/240320.html#挂载阶段-mounting",a:"挂载阶段-mounting"},"68.25":{t:"更新阶段（Updating）\r",p:`

static getDerivedStateFromProps(props, state)：见上文。
shouldCom ...`,l:"interview/weeky/240320.html#更新阶段-updating",a:"更新阶段-updating"},"68.26":{t:"卸载阶段（Unmounting）\r",p:`
componentWillUnmount()：在组件即将被销毁并从 DOM 中移除之前调用，通常用于清理定时器、取消订阅等 ...`,l:"interview/weeky/240320.html#卸载阶段-unmounting",a:"卸载阶段-unmounting"},"68.27":{t:"常用的React Hook 和功能\r",p:"\r",l:"interview/weeky/240320.html#常用的react-hook-和功能",a:"常用的react-hook-和功能"},"68.28":{t:"useState\r",p:`用于管理功能组件中的状态
`,l:"interview/weeky/240320.html#usestate",a:"usestate"},"68.29":{t:"useEffect\r",p:`用于在功能组件中执行副作用，例如获取数据或订阅事件
`,l:"interview/weeky/240320.html#useeffect",a:"useeffect"},"68.30":{t:"useContext\r",p:`用于访问功能组件中React 上下文的值
`,l:"interview/weeky/240320.html#usecontext",a:"usecontext"},"68.31":{t:"useRef\r",p:`用于创建对跨渲染保留的元素或值的可变引用
`,l:"interview/weeky/240320.html#useref",a:"useref"},"68.32":{t:"useCallback\r",p:`缓存回调函数，避免在每次渲染时都创建新的回调函数实例
当回调函数作为prop传递给子组件时，使用 useCallback可以 ...`,l:"interview/weeky/240320.html#usecallback",a:"usecallback"},"68.33":{t:"useMemo\r",p:`用于缓存计算值，类似于 useCallback，但是它缓存的是普通数值而不是回调函数
`,l:"interview/weeky/240320.html#usememo",a:"usememo"},"68.34":{t:"useReducer\r",p:`用于使用reducer函数的管理状态，类似于Redux的工作方式
`,l:"interview/weeky/240320.html#usereducer",a:"usereducer"},"68.35":{t:"useLayoutEffect\r",p:`类似于 useEffect 但效果在所有DOM突变后同步运行
这些Hook提供了强大的工具，用于管理状态，处理副作用和重新编 ...`,l:"interview/weeky/240320.html#uselayouteffect",a:"uselayouteffect"},"68.36":{t:"什么是虚拟滚动\r",p:"虚拟滚动列表通过只渲染可视区域的列表项，当用户滚动时，动态计算可视区域的起始索引，然后只渲染这部分列表项，避免了一次加载大量 ...",l:"interview/weeky/240320.html#什么是虚拟滚动",a:"什么是虚拟滚动"},"68.37":{t:"lightHouse主要使用什么性能指标\r",p:"lighthouse主要是用来做性能检测的工具，主要用于分析网络应用和网页，收集现代性能指标并提供对开发人员最佳实践的意见。 ...",l:"interview/weeky/240320.html#lighthouse主要使用什么性能指标",a:"lighthouse主要使用什么性能指标"},"68.38":{t:"主要检测指标\r",p:`


指标
说明




性能指标（Performance）
[1]


可访问性（Accessibility）
监测页面的 ...`,l:"interview/weeky/240320.html#主要检测指标",a:"主要检测指标"},"68.39":{t:"评分说明\r",p:"经过检测，Lighthouse 会对上述五个维度给出一个的评估得分，分值范围0-100，主要分为三个档次，分别用红黄绿三种颜 ...",l:"interview/weeky/240320.html#评分说明",a:"评分说明"},"68.40":{t:"三种使用方式\r",p:`

使用 chrome 调试面板中的 LightHouse (推荐)


使用 chrome 插件扩展


通过命令行使用  ...`,l:"interview/weeky/240320.html#三种使用方式",a:"三种使用方式"},"68.41":{t:"跨页面通信使用什么方式呢\r",p:`跨页面通信是指在Web开发中，不同页面之间进行数据或消息传递的过程。有几种常用的方式可以实现跨页面通信：
`,l:"interview/weeky/240320.html#跨页面通信使用什么方式呢",a:"跨页面通信使用什么方式呢"},"68.42":{t:"URL 参数传递\r",p:"可以通过URL参数在不同页面之间传递数据。例如，在链接中添加参数，然后在目标页面中读取这些参数。但这种方法适用于传递简单的数 ...",l:"interview/weeky/240320.html#url-参数传递",a:"url-参数传递"},"68.43":{t:"Local Storage\r",p:"HTML5的Local Storage提供了一种在浏览器中存储数据的方法，这些数据在不同页面之间是共享的。通过在一个页面中写 ...",l:"interview/weeky/240320.html#local-storage",a:"local-storage"},"68.44":{t:"Session Storage\r",p:"类似于Local Storage，但是会话存储的数据在会话结束后被清除。与Local Storage相比，Session S ...",l:"interview/weeky/240320.html#session-storage",a:"session-storage"},"68.45":{t:"Cookies\r",p:"通过设置cookie，在不同页面之间传递数据。但是，cookies的容量有限，并且会随着每个HTTP请求发送到服务器，可能会 ...",l:"interview/weeky/240320.html#cookies",a:"cookies"},"68.46":{t:"PostMessage API\r",p:"PostMessage API允许在不同的窗口或iframe之间安全地发送消息。通过在发送消息的窗口中调用postMessa ...",l:"interview/weeky/240320.html#postmessage-api",a:"postmessage-api"},"68.47":{t:"WebSocket\r",p:"WebSocket是一种在客户端和服务器之间进行全双工通信的协议。虽然WebSocket通常用于实时通信，但也可以用于不同页 ...",l:"interview/weeky/240320.html#websocket",a:"websocket"},"68.48":{t:"跨域的方法\r",p:"跨域是指在浏览器中，当一个网页向不同域名、不同端口或不同协议的资源发起请求时，会受到浏览器的同源策略限制，这样的请求就称为跨 ...",l:"interview/weeky/240320.html#跨域的方法",a:"跨域的方法"},"68.49":{t:"JSONP (JSON with Padding)\r",p:"JSONP 是一种利用 &lt;script&gt; 标签的 GET 请求来实现跨域通信的技术。虽然 JSONP 能解决部分 ...",l:"interview/weeky/240320.html#jsonp-json-with-padding",a:"jsonp-json-with-padding"},"68.50":{t:"CORS (Cross-Origin Resource Sharing)\r",p:"CORS 是一种由 W3C 提出的跨域解决方案。通过在服务器端设置相应的 HTTP 头部信息（例如 Access-Contr ...",l:"interview/weeky/240320.html#cors-cross-origin-resource-sharing",a:"cors-cross-origin-resource-sharing"},"68.51":{t:"代理服务器\r",p:"通过在同源服务器上设置代理服务器来转发请求，从而绕过浏览器的跨域限制。当浏览器无法直接访问目标资源时，可以发送请求到同源服务 ...",l:"interview/weeky/240320.html#代理服务器",a:"代理服务器"},"68.52":{t:"使用跨域资源共享 (CORS) 的服务器端代理\r",p:"如果目标服务器支持 CORS，可以使用服务器端代理向目标服务器发起请求，并将结果返回给客户端。这种方法将跨域问题留给了服务器 ...",l:"interview/weeky/240320.html#使用跨域资源共享-cors-的服务器端代理",a:"使用跨域资源共享-cors-的服务器端代理"},"68.53":{t:"JSON Web Token (JWT)\r",p:"可以在请求头中使用 JWT 来进行跨域身份验证。JWT 是一种基于 JSON 的安全传输令牌，可以在不同域之间传递身份验证信 ...",l:"interview/weeky/240320.html#json-web-token-jwt",a:"json-web-token-jwt"},"68.54":{t:"通过iframe标签跨页面通信遇到过什么问题\r",p:"同源策略限制：同源策略会限制在 &lt;iframe&gt; 中加载的页面与父页面之间的通信，除非它们具有相同的协议、域名和 ...",l:"interview/weeky/240320.html#通过iframe标签跨页面通信遇到过什么问题",a:"通过iframe标签跨页面通信遇到过什么问题"},"68.55":{t:"有了解过mono-repo开发方式吗\r",p:"Mono-repo 是指将一个项目的所有代码都存储在一个单独的代码仓库（Repository）中的开发方式。这种开发方式与将 ...",l:"interview/weeky/240320.html#有了解过mono-repo开发方式吗",a:"有了解过mono-repo开发方式吗"},"68.56":{t:"UseMemo可以在其它地方调用么\r",p:"在 React 中，useMemo 是一个自定义 Hook，用于在渲染过程中对值进行记忆（memoization）。useM ...",l:"interview/weeky/240320.html#usememo可以在其它地方调用么",a:"usememo可以在其它地方调用么"},"68.57":{t:"项目中做了哪些性能优化\r",p:"\r",l:"interview/weeky/240320.html#项目中做了哪些性能优化",a:"项目中做了哪些性能优化"},"68.58":{t:"构建工具有什么性能优化\r",p:"\r",l:"interview/weeky/240320.html#构建工具有什么性能优化",a:"构建工具有什么性能优化"},"68.59":{t:"基本数据类型\r",p:`
前端数据类型

`,l:"interview/weeky/240320.html#基本数据类型",a:"基本数据类型"},"68.60":{t:"在项目中有自己实现过Hook吗，举个例子说明\r",p:`import { useState, useEffect } from 'react';

// 自定义 Hook：使用本地 ...`,l:"interview/weeky/240320.html#在项目中有自己实现过hook吗-举个例子说明",a:"在项目中有自己实现过hook吗-举个例子说明"},"69.0":{t:"# 2024-03-22 面试二面 React\r",p:`&lt;!-- 字节二面 --&gt;
`,l:"interview/weeky/240322.html",a:"_2024-03-22-面试二面-react"},"69.1":{t:"Promise.allsettled\r",p:"\r",l:"interview/weeky/240322.html#promise-allsettled",a:"promise-allsettled"},"69.2":{t:"继承方式\r",p:"\r",l:"interview/weeky/240322.html#继承方式",a:"继承方式"},"69.3":{t:"项目中遇到哪些难点\r",p:"\r",l:"interview/weeky/240322.html#项目中遇到哪些难点",a:"项目中遇到哪些难点"},"69.4":{t:"封装一个Tree组件\r",p:"\r",l:"interview/weeky/240322.html#封装一个tree组件",a:"封装一个tree组件"},"69.5":{t:"Vue template 为什么分开写了 最终可以在一起渲染所有页面\r",p:"\r",l:"interview/weeky/240322.html#vue-template-为什么分开写了-最终可以在一起渲染所有页面",a:"vue-template-为什么分开写了-最终可以在一起渲染所有页面"},"69.6":{t:"防抖函数\r",p:"\r",l:"interview/weeky/240322.html#防抖函数",a:"防抖函数"},"69.7":{t:"实现一个Event类 包括 on once trigger remove 方法\r",p:"\r",l:"interview/weeky/240322.html#实现一个event类-包括-on-once-trigger-remove-方法",a:"实现一个event类-包括-on-once-trigger-remove-方法"},"69.8":{t:"适配多端 自适应布局\r",p:"\r",l:"interview/weeky/240322.html#适配多端-自适应布局",a:"适配多端-自适应布局"},"69.9":{t:"Taro如何实现多端适配的\r",p:"\r",l:"interview/weeky/240322.html#taro如何实现多端适配的",a:"taro如何实现多端适配的"},"69.10":{t:"小程序双线程有了解过吗\r",p:"\r",l:"interview/weeky/240322.html#小程序双线程有了解过吗",a:"小程序双线程有了解过吗"},"69.11":{t:"模块化\r",p:"\r",l:"interview/weeky/240322.html#模块化",a:"模块化"},"69.12":{t:"ESModule 和 CommonJS区别",p:"",l:"interview/weeky/240322.html#esmodule-和-commonjs区别",a:"esmodule-和-commonjs区别"},"70.0":{t:"# 24-03-25 面试 Vue\r",p:"\r",l:"interview/weeky/240325.html",a:"_24-03-25-面试-vue"},"70.1":{t:"项目中遇到过什么难点\r",p:"\r",l:"interview/weeky/240325.html#项目中遇到过什么难点",a:"项目中遇到过什么难点"},"70.2":{t:"拖拽的功能实现主要使用的什么API\r",p:"\r",l:"interview/weeky/240325.html#拖拽的功能实现主要使用的什么api",a:"拖拽的功能实现主要使用的什么api"},"70.3":{t:"Drag Events API\r",p:`

dragstart：当拖动操作开始时触发。


drag：在拖动过程中连续触发。


dragenter：当拖动元素进入 ...`,l:"interview/weeky/240325.html#drag-events-api",a:"drag-events-api"},"70.4":{t:"HTML5 Drag and Drop API\r",p:`

draggable 属性：用于设置元素是否可拖动。


dataTransfer 对象：用于在拖放操作之间传递数据，包括 ...`,l:"interview/weeky/240325.html#html5-drag-and-drop-api",a:"html5-drag-and-drop-api"},"70.5":{t:"CSS 属性\r",p:`

cursor：用于指定鼠标悬停在拖动元素上时的光标样式。


user-select：用于指定用户是否可以选择文本。

 ...`,l:"interview/weeky/240325.html#css-属性",a:"css-属性"},"70.6":{t:"JavaScript 编程\r",p:`

通过事件监听器监听拖拽相关事件，如 dragstart、dragover、drop 等。


在事件处理函数中实现拖拽操 ...`,l:"interview/weeky/240325.html#javascript-编程",a:"javascript-编程"},"70.7":{t:"Typescript常用的类型工具\r",p:`
Typescript常用类型工具

`,l:"interview/weeky/240325.html#typescript常用的类型工具",a:"typescript常用的类型工具"},"70.8":{t:"Vuex和Pinia的区别\r",p:"\r",l:"interview/weeky/240325.html#vuex和pinia的区别",a:"vuex和pinia的区别"},"70.9":{t:"option API 和 Composition API 区别\r",p:`

在逻辑组织和逻辑复用方面，Composition API是优于Options API


因为Composition A ...`,l:"interview/weeky/240325.html#option-api-和-composition-api-区别",a:"option-api-和-composition-api-区别"},"71.0":{t:"# 240326\r",p:"\r",l:"interview/weeky/240326.html",a:"_240326"},"71.1":{t:"页面从url到渲染完成发生了什么\r",p:"\r",l:"interview/weeky/240326.html#页面从url到渲染完成发生了什么",a:"页面从url到渲染完成发生了什么"},"71.2":{t:"什么是强缓存 什么是协商缓存\r",p:"\r",l:"interview/weeky/240326.html#什么是强缓存-什么是协商缓存",a:"什么是强缓存-什么是协商缓存"},"71.3":{t:"DNS解析的是什么\r",p:"\r",l:"interview/weeky/240326.html#dns解析的是什么",a:"dns解析的是什么"},"71.4":{t:"性能优化\r",p:"\r",l:"interview/weeky/240326.html#性能优化",a:"性能优化"},"71.5":{t:"React常用的Hook\r",p:"\r",l:"interview/weeky/240326.html#react常用的hook",a:"react常用的hook"},"71.6":{t:"useEffect的副作用指的是什么\r",p:"\r",l:"interview/weeky/240326.html#useeffect的副作用指的是什么",a:"useeffect的副作用指的是什么"},"71.7":{t:"重绘和重排\r",p:"\r",l:"interview/weeky/240326.html#重绘和重排",a:"重绘和重排"},"71.8":{t:"防抖和节流 实现一个防抖函数\r",p:"\r",l:"interview/weeky/240326.html#防抖和节流-实现一个防抖函数",a:"防抖和节流-实现一个防抖函数"},"71.9":{t:"DNS是去哪里获取IP呢\r",p:"\r",l:"interview/weeky/240326.html#dns是去哪里获取ip呢",a:"dns是去哪里获取ip呢"},"71.10":{t:"cookie和 storage区别\r",p:"\r",l:"interview/weeky/240326.html#cookie和-storage区别",a:"cookie和-storage区别"},"71.11":{t:"假如上线遇到一个bug 在命中缓存之前发生， 我们应该去执行什么操作让它获取到最新更新呢\r",p:`
`,l:"interview/weeky/240326.html#假如上线遇到一个bug-在命中缓存之前发生-我们应该去执行什么操作让它获取到最新更新呢",a:"假如上线遇到一个bug-在命中缓存之前发生-我们应该去执行什么操作让它获取到最新更新呢"},"72.0":{t:"# css 拉斯维加斯场馆3D数字动画\r",p:`
实际效果

&lt;TextAnimation/&gt;
&lt;!-- &lt;TextAnimation3D/&gt; ...`,l:"native/css/3D数字动画.html",a:"css-拉斯维加斯场馆3d数字动画"},"73.0":{t:"# CSS box-shdow 示例\r",p:`
实际效果

&lt;BoxShadow/&gt;

原文链接: box-shadow属性高级用法

`,l:"native/css/css-box-shdow.html",a:"css-box-shdow-示例"},"74.0":{t:"# CSS一些加载样式\r",p:`\r
\r
\r`,l:"native/css/css一些加载样式.html",a:"css一些加载样式"},"74.1":{t:"动画效果一\r",p:`&lt;Spinner/&gt;

HTML

&lt;div class=&quot;spinner&quot;&gt;
 ...`,l:"native/css/css一些加载样式.html#动画效果一",a:"动画效果一"},"74.2":{t:"动画效果二\r",p:`&lt;TurnOverCSS/&gt;

HTML

  &lt;div class=&quot;turn-over&qu ...`,l:"native/css/css一些加载样式.html#动画效果二",a:"动画效果二"},"74.3":{t:"动画效果三\r",p:`&lt;ScaleCSS/&gt;

HTML

  &lt;div class=&quot;scale-style&quo ...`,l:"native/css/css一些加载样式.html#动画效果三",a:"动画效果三"},"74.4":{t:"动画效果四\r",p:`&lt;CubeRotation/&gt;

HTML

  &lt;div class=&quot;cube-roate& ...`,l:"native/css/css一些加载样式.html#动画效果四",a:"动画效果四"},"74.5":{t:"动画效果五\r",p:`&lt;DotRoate/&gt;

HTML

  &lt;div class=&quot;dot-rotate&quot ...`,l:"native/css/css一些加载样式.html#动画效果五",a:"动画效果五"},"74.6":{t:"动画效果六\r",p:`&lt;ScaleLoading/&gt;

HTML

  &lt;div class=&quot;scale-loadi ...`,l:"native/css/css一些加载样式.html#动画效果六",a:"动画效果六"},"74.7":{t:"动画效果七\r",p:`&lt;GradientRotate/&gt;

HTML

  &lt;div class=&quot;gradient- ...`,l:"native/css/css一些加载样式.html#动画效果七",a:"动画效果七"},"74.8":{t:"动画效果八\r",p:`&lt;CircleLoading/&gt;

HTML

&lt;div class=&quot;circle&quot; ...`,l:"native/css/css一些加载样式.html#动画效果八",a:"动画效果八"},"74.9":{t:"动画样式九\r",p:`&lt;Diverge/&gt;

HTML

&lt;template&gt;
  &lt;div class=&quot ...`,l:"native/css/css一些加载样式.html#动画样式九",a:"动画样式九"},"74.10":{t:"动画效果十\r",p:`&lt;RotationContraction/&gt;

HTML

&lt;template&gt;
  &lt;div ...`,l:"native/css/css一些加载样式.html#动画效果十",a:"动画效果十"},"74.11":{t:"动画效果11 旋转收缩\r",p:`&lt;Contraction/&gt;

HTML

&lt;template&gt;
  &lt;div class=& ...`,l:"native/css/css一些加载样式.html#动画效果11-旋转收缩",a:"动画效果11-旋转收缩"},"74.12":{t:"动画效果12 动态位置\r",p:`&lt;Moving/&gt;

HTML

&lt;template&gt;
  &lt;div class=&quot; ...`,l:"native/css/css一些加载样式.html#动画效果12-动态位置",a:"动画效果12-动态位置"},"74.13":{t:"动画效果13\r",p:`&lt;RiceRotate/&gt;

HTML

&lt;template&gt;
  &lt;div class=&q ...`,l:"native/css/css一些加载样式.html#动画效果13",a:"动画效果13"},"74.14":{t:"动画效果14\r",p:`&lt;MusicDance/&gt;

HTML

&lt;template&gt;
  &lt;div class=&q ...`,l:"native/css/css一些加载样式.html#动画效果14",a:"动画效果14"},"74.15":{t:"动画效果15\r",p:`&lt;TriangleBloom/&gt;

HTML

&lt;template&gt;
  &lt;div class ...`,l:"native/css/css一些加载样式.html#动画效果15",a:"动画效果15"},"75.0":{t:"# CSS权重规则\r",p:`

优先级
浏览器通过优先级来判断哪些属性值与一个元素最为相关，从而在该元素上应用这些属性值。优先级是基于不同种类选择器组成 ...`,l:"native/css/css权重规则.html",a:"css权重规则"},"76.0":{t:"# CSS背景动画\r",p:`
实际效果

&lt;BackgroundDemo/&gt;

代码块



&lt;template&gt;
  &lt; ...`,l:"native/css/css背景动画.html",a:"css背景动画"},"77.0":{t:"# 方块跳动动画\r",p:`
实际效果

&lt;BlockBounce/&gt;

原文链接：CSS 实现跳动的方块动画

`,l:"native/css/css跳动方块.html",a:"方块跳动动画"},"78.0":{t:"# 一些原生CSS样式与概念\r",p:`!CSS
`,l:"native/css/index.html",a:"一些原生css样式与概念"},"79.0":{t:"# 炫目动画\r",p:`&lt;DazzlingCss/&gt;
`,l:"native/css/炫目动画.html",a:"炫目动画"},"79.1":{t:"代码实现\r",p:`  &lt;template&gt;
    &lt;div class=&quot;partial-container&q ...`,l:"native/css/炫目动画.html#代码实现",a:"代码实现"},"80.0":{t:"# JS中call apply bind 的区分\r",p:`在原生js中会有三个很常见的函数，call,apply,bind
它们的作用就是改变当前函数的this指针，
但是细微来说它 ...`,l:"native/javascript/call-apply-bind的区别.html",a:"js中call-apply-bind-的区分"},"80.1":{t:"总结\r",p:"call和apply都是改变上下文中的this并立即执行这个函数，bind方法可以让对应的函数想什么时候调就什么时候调用，并 ...",l:"native/javascript/call-apply-bind的区别.html#总结",a:"总结"},"81.0":{t:"# Cookie (document.cookie)\r",p:`cookie是直接存储在浏览器的一小串数据， 它们是HTTP协议的一部分，由 [RFC 6265][1] 规范定义。
Coo ...`,l:"native/javascript/cookie参数.html",a:"cookie-document-cookie"},"81.1":{t:"从document.cookie中读取\r",p:`你的浏览器是否存储了本网站的任何cookie？ 让我们来看看：
// 在javascript.info 我们使用谷歌分析来统 ...`,l:"native/javascript/cookie参数.html#从document-cookie中读取",a:"从document-cookie中读取"},"81.2":{t:"写入document.cookie\r",p:`我们可以写入document.cookie。但这不是一个数据属性， 它是一个[访问器][2]。对其的赋值操作会被特殊处理。
 ...`,l:"native/javascript/cookie参数.html#写入document-cookie",a:"写入document-cookie"},"81.3":{t:"path\r",p:`
path=/mypath

url路径前缀必须是绝对路径。它使得该路径下的页面可以访问该cookie。默认为当前路径。
如 ...`,l:"native/javascript/cookie参数.html#path",a:"path"},"81.4":{t:"domain\r",p:`
domain=site.com
domain控制了可访问cookie的域。但是在实际中，有一些限制。 我们无法设置任何域。 ...`,l:"native/javascript/cookie参数.html#domain",a:"domain"},"81.5":{t:"expires  max-age\r",p:"默认情况下， 如果一个cookie没有设置这两个参数中的任何一个， 那么在关闭浏览器后，它就会消失。此类cookie被称为“ ...",l:"native/javascript/cookie参数.html#expires-max-age",a:"expires-max-age"},"81.6":{t:"secure\r",p:`
secure
cookiey应该只能被通过https传输。

`,l:"native/javascript/cookie参数.html#secure",a:"secure"},"82.0":{t:"# ES6 数据类型的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html",a:"es6-数据类型的扩展"},"82.1":{t:"字符串类型的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html#字符串类型的扩展",a:"字符串类型的扩展"},"82.2":{t:"模版字符串\r",p:`使用反引号(\`)包裹的字符串, 支持多行文本和嵌入表达式
const name = 'world'
const str =  ...`,l:"native/javascript/ES6数据类型的扩展.html#模版字符串",a:"模版字符串"},"82.3":{t:"模版标签函数\r",p:`允许定义自定义的字符串处理函数,以处理模版字符串
const customTag = (strings, ...values ...`,l:"native/javascript/ES6数据类型的扩展.html#模版标签函数",a:"模版标签函数"},"82.4":{t:"`String.prototype.includes()`\r",p:`判断字符串是否包含指定字符, 返回布尔值
const str = 'hello world'

console.log(st ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-includes",a:"string-prototype-includes"},"82.5":{t:"`String.prototype.startWith()`/`String.prototype.endWith()`\r",p:`判断字符串是否以指定的字符开始/结束, 返回布尔值
const str = 'hello world'

// 开始
con ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-startwith-string-prototype-endwith",a:"string-prototype-startwith-string-prototype-endwith"},"82.6":{t:"`String.propotype.repeat()`\r",p:`将字符串指定次数，返回新的字符串
const str = 'hello world'

console.log(str.re ...`,l:"native/javascript/ES6数据类型的扩展.html#string-propotype-repeat",a:"string-propotype-repeat"},"82.7":{t:"`String.prototype.fromCodePoint()`\r",p:`根据给定的码点创建一个字符串，它可以将一个或者多个码点转换为相应的字符
console.log(String.formCod ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-fromcodepoint",a:"string-prototype-fromcodepoint"},"82.8":{t:"`String.prototype.raw()`\r",p:`用于获取一个模版字符串的原始字符串形式，忽略其中的转义字符
const path = 'C:\\\\Users\\\\hhh\\\\Do ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-raw",a:"string-prototype-raw"},"82.9":{t:"`String.prototype.codePointAt()`\r",p:`用于返回指定位置的字符的码点
const str = 'abc'

console.log(str.codePointAt( ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-codepointat",a:"string-prototype-codepointat"},"82.10":{t:"`String.prototype.normalize()`\r",p:`用于将字符串的Unicode 标准化形式，它主要用于处理 Unicode 字符串的表达形式
const str = 'c\\u ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-normalize",a:"string-prototype-normalize"},"82.11":{t:"数组类型的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html#数组类型的扩展",a:"数组类型的扩展"},"82.12":{t:"扩展运算符(`...`)\r",p:`扩展运算符类似 rest 参数的逆运算， 将一个数组转为用逗号分隔的参数序列
console.log(...[1, 2, 3 ...`,l:"native/javascript/ES6数据类型的扩展.html#扩展运算符",a:"扩展运算符"},"82.13":{t:"`Array.prototype.from`\r",p:"该方法用于将两类对象转为真正的数组：类似数组的对象（array-like object）和可遍历（iterable）的对象（ ...",l:"native/javascript/ES6数据类型的扩展.html#array-prototype-from",a:"array-prototype-from"},"82.14":{t:"`Array.prototype.of`\r",p:`根据传入的参数创建一个新数组
const arr = Array.of(1, 2, 3)
console.log(arr)  ...`,l:"native/javascript/ES6数据类型的扩展.html#array-prototype-of",a:"array-prototype-of"},"82.15":{t:"`Array.prototype.find()`、`Array.prototype.findIndex()`\r",p:`find() 方法 返回数组中满足条件的第一个元素
findIndex()方法 返回数组中满足条件的第一个元素的索引
//  ...`,l:"native/javascript/ES6数据类型的扩展.html#array-prototype-find-、-array-prototype-findindex",a:"array-prototype-find-、-array-prototype-findindex"},"82.16":{t:"`Array.prototype.fill()`\r",p:`使用固定值填充一个数组中从起始索引（默认为 0）到终止索引（默认为 array.length）内的全部元素
const ar ...`,l:"native/javascript/ES6数据类型的扩展.html#array-prototype-fill",a:"array-prototype-fill"},"82.17":{t:"`Array.prototype.copyWithin()`\r",p:`用于将数组中的一部分元素复制到指定位置，覆盖原有的元素
const arr = [1, 2, 3, 4, 5]
arr.co ...`,l:"native/javascript/ES6数据类型的扩展.html#array-prototype-copywithin",a:"array-prototype-copywithin"},"82.18":{t:"`Array.prototype.keys()`、`Array.prototype.values()`、`Array.prototype.entries()`\r",p:"ES6 提供三个新的方法——entries()，keys()和values()——用于遍历数组。它们都返回一个遍历器对象,  ...",l:"native/javascript/ES6数据类型的扩展.html#array-prototype-keys-、-array-prototype-values-、-array-prototype-entries",a:"array-prototype-keys-、-array-prototype-values-、-array-prototype-entries"},"82.19":{t:"对象类型的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html#对象类型的扩展",a:"对象类型的扩展"},"82.20":{t:"属性的简洁表示法\r",p:`ES6 允许在大括号里面，直接写入变量和函数，作为对象的属性和方法，这样的书写更加简洁
const foo = 'bar'
 ...`,l:"native/javascript/ES6数据类型的扩展.html#属性的简洁表示法",a:"属性的简洁表示法"},"82.21":{t:"属性名表达式\r",p:`Javascript 定义对象的属性， 有两种方法
// 方法一
obj.foo = true

// 方法二
obj['a ...`,l:"native/javascript/ES6数据类型的扩展.html#属性名表达式",a:"属性名表达式"},"82.22":{t:"`Object.is(value1, value2)`\r",p:`用于比较两个值是否相同
与&quot;===&quot;操作符的行为类似，但有两个区别：一是Object.is(NaN, N ...`,l:"native/javascript/ES6数据类型的扩展.html#object-is-value1-value2",a:"object-is-value1-value2"},"82.23":{t:"`Object.assign(target, ...sources)`\r",p:"将一个或多个源对象的属性复制到目标对象中。它返回目标对象。如果多个源对象具有相同的属性，则后面的对象的属性将覆盖前面的对象的 ...",l:"native/javascript/ES6数据类型的扩展.html#object-assign-target-sources",a:"object-assign-target-sources"},"82.24":{t:"`Object.getPrototypeOf(obj)`\r",p:`用于获取对象的原型。它返回指定对象的原型。
const obj = {};
const prototype = Object ...`,l:"native/javascript/ES6数据类型的扩展.html#object-getprototypeof-obj",a:"object-getprototypeof-obj"},"82.25":{t:"`Object.setPrototypeOf(obj, prototype)`\r",p:`用于设置对象的原型。它将指定对象的原型设置为另一个对象或null。
const obj = {};
const protot ...`,l:"native/javascript/ES6数据类型的扩展.html#object-setprototypeof-obj-prototype",a:"object-setprototypeof-obj-prototype"},"82.26":{t:"正则的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html#正则的扩展",a:"正则的扩展"},"82.27":{t:"`RegExp构造函数的扩展`\r",p:"在ES6之前，RegExp构造函数不允许使用第二个参数添加修饰符。在ES6中，如果RegExp构造函数第一个参数是一个正则对 ...",l:"native/javascript/ES6数据类型的扩展.html#regexp构造函数的扩展",a:"regexp构造函数的扩展"},"82.28":{t:"`Flags属性`\r",p:`用于返回正则表达式的修饰符
const regex = /abc/gi;
console.log(regex.flags); ...`,l:"native/javascript/ES6数据类型的扩展.html#flags属性",a:"flags属性"},"82.29":{t:"`u修饰符`\r",p:`用于处理大于\\uFFFF的Unicode字符。
console.log(/^\\S$/.test('𠮷'));// fals ...`,l:"native/javascript/ES6数据类型的扩展.html#u修饰符",a:"u修饰符"},"82.30":{t:"`y修饰符`\r",p:`也称为“粘连”修饰符，用于指定只从目标字符串的当前位置开始匹配
const regex = /abc/y;
console. ...`,l:"native/javascript/ES6数据类型的扩展.html#y修饰符",a:"y修饰符"},"82.31":{t:"`RegExp.prototype.sticky`/`RegExp.prototype.unicode`\r",p:`表示是否有y修饰符/表示是否有u修饰符
console.log(/hello\\d/y.sticky);//true
cons ...`,l:"native/javascript/ES6数据类型的扩展.html#regexp-prototype-sticky-regexp-prototype-unicode",a:"regexp-prototype-sticky-regexp-prototype-unicode"},"82.32":{t:"正则方法调用变更\r",p:"字符串对象的match()、replace()、search()、split()内部调用转为调用RegExp实例对应的Reg ...",l:"native/javascript/ES6数据类型的扩展.html#正则方法调用变更",a:"正则方法调用变更"},"82.33":{t:"函数类型的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html#函数类型的扩展",a:"函数类型的扩展"},"82.34":{t:"基本用法\r",p:`ES6 之前，不能直接为函数的参数指定默认值，只能采用变通的方法。
function func(x, y) {
  y =  ...`,l:"native/javascript/ES6数据类型的扩展.html#基本用法",a:"基本用法"},"82.35":{t:"运算符的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html#运算符的扩展",a:"运算符的扩展"},"82.36":{t:"ES6 新增了一个指数运算符(`**`)\r",p:`2 2 // 4
2 3 // 8

这个运算符的一个特点是右结合，而不是常见的左结合。多个指数运算符连用时，是从最右边开始 ...`,l:"native/javascript/ES6数据类型的扩展.html#es6-新增了一个指数运算符",a:"es6-新增了一个指数运算符"},"83.0":{t:"# ES6新特性(一)(常用)\r",p:"ES是ECMAScript的缩写， 也就是JavaScript的标准化规范，ECMAScript是一种由 Ecma 国际组织 ...",l:"native/javascript/ES6新特性一.html",a:"es6新特性-一-常用"},"83.1":{t:"声明方式 `let`、`const`\r",p:"\r",l:"native/javascript/ES6新特性一.html#声明方式-let-、-const",a:"声明方式-let-、-const"},"83.2":{t:"let\r",p:"let 关键字用于声明一个块级作用域的变量。与 var 关键字的区别在于 let 声明的变量只在其所在的块级作用域中有效，而 ...",l:"native/javascript/ES6新特性一.html#let",a:"let"},"83.3":{t:"const\r",p:"const 关键字是用于声明一个常量，其值在声明后不能再被改变。 const 声明的变量也是块级作用域的，与 let 类似， ...",l:"native/javascript/ES6新特性一.html#const",a:"const"},"83.4":{t:"变量的解构赋值\r",p:"\r",l:"native/javascript/ES6新特性一.html#变量的解构赋值",a:"变量的解构赋值"},"83.5":{t:"数组的解构\r",p:`ES6 允许按照一定的模式，从数组和对象中提取值，对变量进行赋值， 这个过程被称为解构(Destructuring)
基本用 ...`,l:"native/javascript/ES6新特性一.html#数组的解构",a:"数组的解构"},"83.6":{t:"对象的解构\r",p:`
对象的解构与数组有一个重要的不同，数组的元素是按次序排列的，变量的取值由它们的位置决定； 而对象的属性没有次序，变量必须与 ...`,l:"native/javascript/ES6新特性一.html#对象的解构",a:"对象的解构"},"83.7":{t:"字符串的解构\r",p:`字符串也可以解构赋值， 这是因为在解构字符串的时候， 字符串被转化成了一个类数组对象
const [a, b, c, d,  ...`,l:"native/javascript/ES6新特性一.html#字符串的解构",a:"字符串的解构"},"83.8":{t:"数值与布尔值的解构\r",p:`解构赋值时候， 如果等号右边是数值和布尔值， 则先会转换为对象
let { toString: s } = 123
s == ...`,l:"native/javascript/ES6新特性一.html#数值与布尔值的解构",a:"数值与布尔值的解构"},"83.9":{t:"函数的参数的解构\r",p:`function add ([x, y]) {
  return x + y
}
add([1, 2]) // 3

上述示 ...`,l:"native/javascript/ES6新特性一.html#函数的参数的解构",a:"函数的参数的解构"},"83.10":{t:"函数参数默认值\r",p:"ES6 中， 我们可以在函数参数中设置默认值，这意味着如果调用函数的时候没有为参数提供有效值，它们将会使用默认值， 这对简化 ...",l:"native/javascript/ES6新特性一.html#函数参数默认值",a:"函数参数默认值"},"83.11":{t:"箭头函数\r",p:`
箭头函数具有简洁的语法，清晰的上下文，继承外部作用域的arguments等特点， 适合简化代码，避免this指向问题和明确 ...`,l:"native/javascript/ES6新特性一.html#箭头函数",a:"箭头函数"},"83.12":{t:"使用注意点\r",p:`
箭头函数没有自己的this对象
不可以当作构造函数，也就是说， 不可以对箭头函数使用new指令， 否则会抛出错误
不可以使 ...`,l:"native/javascript/ES6新特性一.html#使用注意点",a:"使用注意点"},"83.13":{t:"箭头函数与普通函数的区别\r",p:`
箭头函数是匿名函数，不能作为构造函数， 不能使用new
箭头函数不能绑定 arguments，要用 rest 参数 解决
 ...`,l:"native/javascript/ES6新特性一.html#箭头函数与普通函数的区别",a:"箭头函数与普通函数的区别"},"83.14":{t:"模版字符串\r",p:"模版字符串是ES6中引入的一种新的字符串语法，它允许字符串中插入变量或者表达式，而不需要使用字符串拼接符号。模版字符串使用反 ...",l:"native/javascript/ES6新特性一.html#模版字符串",a:"模版字符串"},"83.15":{t:"扩展操作符\r",p:"扩展操作符用于展开可迭代对象(数组、字符串等)，好比 rest 参数的逆运算，将其元素逐个展开，以便于在函数调用、数组字面量 ...",l:"native/javascript/ES6新特性一.html#扩展操作符",a:"扩展操作符"},"83.16":{t:"展开数组\r",p:`const arr1 = [1, 2, 3]
const arr2 = [...arr1, 4, 5] // [1, 2,  ...`,l:"native/javascript/ES6新特性一.html#展开数组",a:"展开数组"},"83.17":{t:"传递参数给函数\r",p:`
function sum(a, b, c) {
  return a + b + c
}
const numbers =  ...`,l:"native/javascript/ES6新特性一.html#传递参数给函数",a:"传递参数给函数"},"83.18":{t:"浅拷贝数组或对象\r",p:`const arr1 = [1, 2, 3]
const arr2 = [...arr1] // [1, 2, 3]

co ...`,l:"native/javascript/ES6新特性一.html#浅拷贝数组或对象",a:"浅拷贝数组或对象"},"83.19":{t:"对象字面量简化\r",p:"ES6引入了一种更简洁的方式来定义对象字面量，即ES6对象字面量语法。它提供了一种更方便的方法来定义和初始化对象属性。它是E ...",l:"native/javascript/ES6新特性一.html#对象字面量简化",a:"对象字面量简化"},"83.20":{t:"属性的简介表示法\r",p:`ES6中， 可以使用更简洁的语法来定义对象字面量， 还可以直接在对象字面量中定义方法，而不需要使用function关键字
c ...`,l:"native/javascript/ES6新特性一.html#属性的简介表示法",a:"属性的简介表示法"},"83.21":{t:"属性名表达式\r",p:`Javascript中 定义对象的属性， 有两种方法
// 方法一
obj.foo = true

// 方法二(ES6)
 ...`,l:"native/javascript/ES6新特性一.html#属性名表达式",a:"属性名表达式"},"83.22":{t:"类\r",p:"ES6引入了类（class）的概念，使得面向对象的编程变得更加直观和易于理解。类是一种蓝图或模板，用于创建具有相同属性和方法 ...",l:"native/javascript/ES6新特性一.html#类",a:"类"},"83.23":{t:"模块化\r",p:`

模块化是一种组织和管理JavaScript代码的方法，它将代码拆分为独立的模块，每个模块都有自己的作用域和功能。这种方法 ...`,l:"native/javascript/ES6新特性一.html#模块化",a:"模块化"},"84.0":{t:"# ES6新特性(二)(常用)\r",p:"\r",l:"native/javascript/ES6新特性二.html",a:"es6新特性-二-常用"},"84.1":{t:"proxy\r",p:"proxy 用于修改某些操作的默认行为，等同于在语言层面做出修改，所以属于一种 元编程(meta programming), ...",l:"native/javascript/ES6新特性二.html#proxy",a:"proxy"},"84.2":{t:"Proxy handler 支持的拦截操作\r",p:`


操作
功能
返回值




get(target, propKey, receiver)
拦截对象属性的读取，比如 p ...`,l:"native/javascript/ES6新特性二.html#proxy-handler-支持的拦截操作",a:"proxy-handler-支持的拦截操作"},"84.3":{t:"Proxy 实例的方法(常用)\r",p:"\r",l:"native/javascript/ES6新特性二.html#proxy-实例的方法-常用",a:"proxy-实例的方法-常用"},"84.4":{t:"get()\r",p:"get 方法用于拦截某个属性的读取操作，可以接收三个函数，依次为目标对象、属性名和proxy实例本身(严格地说，是操作行为所 ...",l:"native/javascript/ES6新特性二.html#get",a:"get"},"84.5":{t:"set()\r",p:"set 方法用来拦截某个属性的赋值操作, 可以接受四个参数，依次为目标对象、属性名、属性值和 Proxy 实例本身，其中最后 ...",l:"native/javascript/ES6新特性二.html#set",a:"set"},"84.6":{t:"apply()\r",p:`apply 方法拦截函数的调用、call 、apply 操作
apply 方法可以接受三个参数， 分别是目标对象、目标对象的 ...`,l:"native/javascript/ES6新特性二.html#apply",a:"apply"},"84.7":{t:"Reflect\r",p:"Reflect 是ES6 中操作对象而提供的新API, 是为了解决在ES6之前使用对象的操作存在一些不一致和不直观的地方，有 ...",l:"native/javascript/ES6新特性二.html#reflect",a:"reflect"},"84.8":{t:"常用方法\r",p:`

Reflect.apply(target, thisArg, args) 调用一个函数，并传入指定的参数


Refle ...`,l:"native/javascript/ES6新特性二.html#常用方法",a:"常用方法"},"84.9":{t:"利用 `Reflect` 和 `Proxy` 实现一个观察者模式\r",p:`// 创建一个观察者对象

class Observer {
  constructor () {
    this.lis ...`,l:"native/javascript/ES6新特性二.html#利用-reflect-和-proxy-实现一个观察者模式",a:"利用-reflect-和-proxy-实现一个观察者模式"},"84.10":{t:"Symbol\r",p:"在 ES6 之前对象属性名都是字符串，这容易造成属性名的冲突。 ES6 引入了一种新的原始数据类型 Symbol, 表示独一 ...",l:"native/javascript/ES6新特性二.html#symbol",a:"symbol"},"84.11":{t:"Map/WeakMap、Set/WeakSet 数据结构\r",p:"\r",l:"native/javascript/ES6新特性二.html#map-weakmap、set-weakset-数据结构",a:"map-weakmap、set-weakset-数据结构"},"84.12":{t:"Map\r",p:"Map是一种键值对的集合(Hash结构)， 它类似于对象， 但有一些不同之处。 Map的键可以是任意类型的值，包括对象和函数 ...",l:"native/javascript/ES6新特性二.html#map",a:"map"},"84.13":{t:"方法\r",p:`


方法
功能




\`\`get()\`
返回键值对


set()
添加键值对， 返回实例


delete()
删除键 ...`,l:"native/javascript/ES6新特性二.html#方法",a:"方法"},"84.14":{t:"WeekMap\r",p:`WeakMap 也是一种键值对的集合，但是只接受对象作为键，不接受其它类型的数据
WeakMap中的键是弱引用的，这意味着如 ...`,l:"native/javascript/ES6新特性二.html#weekmap",a:"weekmap"},"84.15":{t:"应用\r",p:`

存储 DOM 节点： DOM节点被移除时自动释放此成员键，不用担心这些节点从文档移除时会引发内存泄漏


部署私有属性: ...`,l:"native/javascript/ES6新特性二.html#应用",a:"应用"},"84.16":{t:"WeakMap 方法\r",p:`


方法
功能




get()
返回键值对


set()
添加键值对，返回实例


delete()
删除键值对，  ...`,l:"native/javascript/ES6新特性二.html#weakmap-方法",a:"weakmap-方法"},"84.17":{t:"Set\r",p:"Set 是一种不重复值的集合， 类似于数组，但是它的值是唯一的， 不会重复。 Set可以存储任意类型的值，报苦熬原始类型和对 ...",l:"native/javascript/ES6新特性二.html#set",a:"set"},"84.18":{t:"Set 方法\r",p:`|方法|功能|
|add()|添加值， 返回实例|
|delete()| 删除值， 返回布尔值|
|has()|检查值，返回 ...`,l:"native/javascript/ES6新特性二.html#set-方法",a:"set-方法"},"84.19":{t:"WeakSet\r",p:"WeakSet 是一种弱引用集合，它只能存储对象类型的值，并且这些对象是弱引用的，这意味着如果一个对象在 WeakSet 中 ...",l:"native/javascript/ES6新特性二.html#weakset",a:"weakset"},"84.20":{t:"WeakSet应用\r",p:`

储存DOM节点：DOM节点被移除时自动释放此成员键，不用担心这些节点从文档移除时会引发内存泄漏


临时存放一组对象或存 ...`,l:"native/javascript/ES6新特性二.html#weakset应用",a:"weakset应用"},"84.21":{t:"WeakSet  方法\r",p:`|方法|功能|
|add()|添加值， 返回实例|
|delete()| 删除值， 返回布尔值|
|has()|检查值，返回 ...`,l:"native/javascript/ES6新特性二.html#weakset-方法",a:"weakset-方法"},"84.22":{t:"迭代器(Iterator) 和 for...of循环\r",p:"\r",l:"native/javascript/ES6新特性二.html#迭代器-iterator-和-for-of循环",a:"迭代器-iterator-和-for-of循环"},"84.23":{t:"迭代器(Iterator)\r",p:"迭代器(Iterator) 是一种迭代机制，为各种不同的数据结构提供统一的访问机制，任何数据结构只要内部有 Iterator ...",l:"native/javascript/ES6新特性二.html#迭代器-iterator",a:"迭代器-iterator"},"84.24":{t:"迭代器功能\r",p:`
为各种数据结构提供一个统一的、简便的访问接口
使得数据结构成员能够按照某种次序排列
为ES6 创造了一种新的遍历命令 fo ...`,l:"native/javascript/ES6新特性二.html#迭代器功能",a:"迭代器功能"},"84.25":{t:"遍历过程\r",p:`
创建一个指针对象， 指向当前数据结构的起始位置。也就是说，遍历器对象本质上 就是一个指针对象
第一次调用指针对象的 nex ...`,l:"native/javascript/ES6新特性二.html#遍历过程",a:"遍历过程"},"84.26":{t:"原生具备 Iterator 接口的数据结构\r",p:`
Array
Map
Set
String
TypedArray
函数的 arguments 对象
NodeList对象

`,l:"native/javascript/ES6新特性二.html#原生具备-iterator-接口的数据结构",a:"原生具备-iterator-接口的数据结构"},"84.27":{t:"迭代器对象方法\r",p:`|next()| 下一步操作， 返回 { value, done }(必须部署)|
|return()|for-of提前退出 ...`,l:"native/javascript/ES6新特性二.html#迭代器对象方法",a:"迭代器对象方法"},"84.28":{t:"使用场合\r",p:`
解构赋值

对数组和 Set 结构进行解构赋值时， 会默认使用 Symbol.iterator 方法
let set =  ...`,l:"native/javascript/ES6新特性二.html#使用场合",a:"使用场合"},"84.29":{t:"for...of 循环\r",p:"for...of 循环用于遍历可迭代对象(例如数组、字符串、Set、Map 等)， 它会迭代对象的每个元素并执行指定的代码块 ...",l:"native/javascript/ES6新特性二.html#for-of-循环",a:"for-of-循环"},"84.30":{t:"生成器(Generator)\r",p:`Gererator 函数在语法上， 可以把它理解成一个状态及， 内部封装了多个状态
执行 Generator 函数会返回一个 ...`,l:"native/javascript/ES6新特性二.html#生成器-generator",a:"生成器-generator"},"84.31":{t:"特征\r",p:`
function 关键字与函数名之间有一个星号
函数体内部使用 yield 表达式， 定义不同的内部状态

functio ...`,l:"native/javascript/ES6新特性二.html#特征",a:"特征"},"85.0":{t:"# Eslint 的一些配置命令\r",p:`{  
  &quot;env&quot;: {  
    &quot;browser&quot;: true,  
   ...`,l:"native/javascript/eslint常见配置.html",a:"eslint-的一些配置命令"},"86.0":{t:"# 一些Javascript基础知识与方法\r",p:`!JavaScript
`,l:"native/javascript/index.html",a:"一些javascript基础知识与方法"},"87.0":{t:"# JS下载文件\r",p:`
a标签直接下载

data = data.replace(/\\\\/g, '/');
var aLink = documen ...`,l:"native/javascript/JS下载文件.html",a:"js下载文件"},"88.0":{t:"# JS中的元素尺寸与布局信息\r",p:`

Attributes
offsetWidth：代表了元素的宽度，包括边框和填充，但不是边距；
offsetHeight： ...`,l:"native/javascript/JS中的元素尺寸与布局信息.html",a:"js中的元素尺寸与布局信息"},"89.0":{t:"# JS模块化\r",p:`JavaScript的 ESM AMD UMD CJS

ESM


​ESM代表ES模块，是Javascript提出的实现 ...`,l:"native/javascript/js模块化.html",a:"js模块化"},"90.0":{t:"# JS解析URL参数\r",p:`
方法一

let url = &quot;https: //zhidao.baidu.com/question/17684 ...`,l:"native/javascript/JS解析URL参数.html",a:"js解析url参数"},"91.0":{t:"# Array.map与Array.forEach的区别\r",p:"\r",l:"native/javascript/map与forEach的区别.html",a:"array-map与array-foreach的区别"},"91.1":{t:"定义\r",p:`

Array.map: map() 方法创建一个新数组，这个新数组由原数组中的每个元素都调用一次提供的函数后的返回值组成。 ...`,l:"native/javascript/map与forEach的区别.html#定义",a:"定义"},"91.2":{t:"简单实现\r",p:`

map
function myMap(array, callback) {
  const result  = [];
 ...`,l:"native/javascript/map与forEach的区别.html#简单实现",a:"简单实现"},"92.0":{t:"# MomentJS\r",p:`MomentJS
moment.js是一个轻量级的JavaScript时间库，它方便了日常开发中对时间的操作，提高了开发效率 ...`,l:"native/javascript/moment使用.html",a:"momentjs"},"92.1":{t:"一、引入moment.js\r",p:"\r",l:"native/javascript/moment使用.html#一、引入moment-js",a:"一、引入moment-js"},"92.2":{t:"1.Node.js方式引入\r",p:`（1）安装

npm install moment  
//或者
yarn add moment


（2）引入
// re ...`,l:"native/javascript/moment使用.html#_1-node-js方式引入",a:"_1-node-js方式引入"},"92.3":{t:"2.浏览器方式引入\r",p:`

`,l:"native/javascript/moment使用.html#_2-浏览器方式引入",a:"_2-浏览器方式引入"},"92.4":{t:"二、设定moment区域为中国\r",p:`// require 方式
require('moment/locale/zh-cn')
moment.locale('zh ...`,l:"native/javascript/moment使用.html#二、设定moment区域为中国",a:"二、设定moment区域为中国"},"92.5":{t:"三、使用\r",p:"\r",l:"native/javascript/moment使用.html#三、使用",a:"三、使用"},"92.6":{t:"1.获取时间\r",p:`（1）获取当前时间
//获取当前时间
moment()

（2）获取今天0时0分0秒
//获取今天0时0分0秒
moment ...`,l:"native/javascript/moment使用.html#_1-获取时间",a:"_1-获取时间"},"92.7":{t:"2.设置时间\r",p:`（1）设置年份
//设置年份
moment().year(2019)
moment().set('year', 2019)
 ...`,l:"native/javascript/moment使用.html#_2-设置时间",a:"_2-设置时间"},"92.8":{t:"3.格式化时间\r",p:`


格式代码
说明
返回值例子




M
数字表示的月份，没有前导零
1到12


MM
数字表示的月份，有前导零
01 ...`,l:"native/javascript/moment使用.html#_3-格式化时间",a:"_3-格式化时间"},"92.9":{t:"4.比较时间\r",p:`（1）获取两个日期之间的时间
//获取两个日期之间的时间
let start_date = moment().subtrac ...`,l:"native/javascript/moment使用.html#_4-比较时间",a:"_4-比较时间"},"92.10":{t:"5.转化为JavaScript原生Date对象\r",p:`//转化为JavaScript原生Date对象
moment().toDate()
new Date(moment())

`,l:"native/javascript/moment使用.html#_5-转化为javascript原生date对象",a:"_5-转化为javascript原生date对象"},"92.11":{t:"6.日期格式化输出实例\r",p:`//日期格式化输出实例
moment().format('MMMM Do YYYY, h:mm:ss a'); // 五月  ...`,l:"native/javascript/moment使用.html#_6-日期格式化输出实例",a:"_6-日期格式化输出实例"},"92.12":{t:"7.相对时间 输出实例\r",p:"moment(&quot;20111031&quot;, &quot;YYYYMMDD&quot;).fromNow();  ...",l:"native/javascript/moment使用.html#_7-相对时间-输出实例",a:"_7-相对时间-输出实例"},"92.13":{t:"8.日历时间输出实例\r",p:`moment().subtract(10, 'days').calendar(); // 2019年5月14日

momen ...`,l:"native/javascript/moment使用.html#_8-日历时间输出实例",a:"_8-日历时间输出实例"},"92.14":{t:"9.多语言支持输出实例\r",p:`moment().format('L');    // 2019-05-24

moment().format('l');  ...`,l:"native/javascript/moment使用.html#_9-多语言支持输出实例",a:"_9-多语言支持输出实例"},"92.15":{t:"10.其它输出实例\r",p:`moment().format(&quot;YYYY-MM-DD&quot;) //格式化显示当前时间
//上一个月的1号
 ...`,l:"native/javascript/moment使用.html#_10-其它输出实例",a:"_10-其它输出实例"},"93.0":{t:"# Array.reduce 方法的使用场景\r",p:"\r",l:"native/javascript/reduce方法的使用场景.html",a:"array-reduce-方法的使用场景"},"93.1":{t:"功能\r",p:`Array.prototype.reduce 方法泛用性很强, 这个方法功能主要是对数组中每个元素执
行一个提供的reduc ...`,l:"native/javascript/reduce方法的使用场景.html#功能",a:"功能"},"93.2":{t:"参数值\r",p:`reduce方法主要接收两个参数， 一个是执行操作的回调函数， 一个初始值(可选)。
`,l:"native/javascript/reduce方法的使用场景.html#参数值",a:"参数值"},"93.3":{t:"回调函数\r",p:"回调函数是数组中每个元素执行的函数， 其返回值将作为下一次调用回调函数时的 accumulator 参数。对于最后一次调用， ...",l:"native/javascript/reduce方法的使用场景.html#回调函数",a:"回调函数"},"93.4":{t:"initialValue\r",p:"第一次调用回调函数初始化 accumulator的值。 如果指定了 initialValue， 则回调函数从数组中第一个元素 ...",l:"native/javascript/reduce方法的使用场景.html#initialvalue",a:"initialvalue"},"93.5":{t:"使用场景\r",p:"\r",l:"native/javascript/reduce方法的使用场景.html#使用场景",a:"使用场景"},"93.6":{t:"一维数组求和\r",p:`const arr: number[] = [0, 1, 2, 3];
// acc: 表示的是累加器 accumulato ...`,l:"native/javascript/reduce方法的使用场景.html#一维数组求和",a:"一维数组求和"},"93.7":{t:"累加对象数组里的值\r",p:`reduce方法不仅可以求纯数字数组的和， 针对对象数组里的值也可以求和
type Item = {x : number } ...`,l:"native/javascript/reduce方法的使用场景.html#累加对象数组里的值",a:"累加对象数组里的值"},"93.8":{t:"展平嵌套数组\r",p:`const arr: [number, number] = [[0, 1], [2, 3], [4, 5]]
const s ...`,l:"native/javascript/reduce方法的使用场景.html#展平嵌套数组",a:"展平嵌套数组"},"93.9":{t:"统计对象中值出现的次数\r",p:`const names: string[] = ['陈大', '李二', '张三', '朱四', '王五', '张三']
c ...`,l:"native/javascript/reduce方法的使用场景.html#统计对象中值出现的次数",a:"统计对象中值出现的次数"},"93.10":{t:"按属性对对象进行分组\r",p:`type Item = { name: string, age: number }
const objArr: Item[] ...`,l:"native/javascript/reduce方法的使用场景.html#按属性对对象进行分组",a:"按属性对对象进行分组"},"93.11":{t:"使用扩展运算符和 `initialValue` 连接包含在对象数组中的数组\r",p:`type Item = {
  name: string;
  books: string[];
  age: number ...`,l:"native/javascript/reduce方法的使用场景.html#使用扩展运算符和-initialvalue-连接包含在对象数组中的数组",a:"使用扩展运算符和-initialvalue-连接包含在对象数组中的数组"},"93.12":{t:"数组去重\r",p:`:::info 备注
可以使用 Set 和 Array.from()来实现同样的效果， 如const arr = Array ...`,l:"native/javascript/reduce方法的使用场景.html#数组去重",a:"数组去重"},"93.13":{t:"使用 reduce() 来替代 .filer().map()\r",p:`
使用.filter() 和 .map()会遍历数组两次，但是可以使用reduce()只遍历一次并实现相同的效果， 从而更高 ...`,l:"native/javascript/reduce方法的使用场景.html#使用-reduce-来替代-filer-map",a:"使用-reduce-来替代-filer-map"},"93.14":{t:"按顺序运行promise\r",p:`/**
 * 链接一系列 Promise 处理程序。
 *
 * @param {array} arr——一个 Promis ...`,l:"native/javascript/reduce方法的使用场景.html#按顺序运行promise",a:"按顺序运行promise"},"93.15":{t:"在稀疏数组中使用reduce\r",p:`
reduce()会跳过稀疏数组中缺失的元素， 但不会跳过undefined 值

console.log([1, 2, , ...`,l:"native/javascript/reduce方法的使用场景.html#在稀疏数组中使用reduce",a:"在稀疏数组中使用reduce"},"93.16":{t:"非数组对象上调用reduce\r",p:`
reduce()方法读取this的length 属性， 然后访问每个整数索引

const arrLike = {
  l ...`,l:"native/javascript/reduce方法的使用场景.html#非数组对象上调用reduce",a:"非数组对象上调用reduce"},"93.17":{t:"功能性函数管道\r",p:`// 组合使用的构建块
const double = (x) =&gt; 2 x;
const triple = (x) = ...`,l:"native/javascript/reduce方法的使用场景.html#功能性函数管道",a:"功能性函数管道"},"94.0":{t:"# setTimeout与setInterval区别\r",p:`定义：在JavaScript中，setTimeout和setInterval是两个用于执行延迟操作或定期执行代码的函数
`,l:"native/javascript/setTimeout与setInterval.html",a:"settimeout与setinterval区别"},"94.1":{t:"setTimeout\r",p:`全局的 setTimeout() 方法设置一个定时器，一旦定时器到期，就会执行一个函数或指定的代码片段。


语法：setT ...`,l:"native/javascript/setTimeout与setInterval.html#settimeout",a:"settimeout"},"94.2":{t:"setInterval\r",p:`setInterval() 方法重复调用一个函数或执行一个代码片段，在每次调用之间具有固定的时间间隔。


语法：setIn ...`,l:"native/javascript/setTimeout与setInterval.html#setinterval",a:"setinterval"},"94.3":{t:"精度问题\r",p:"尽管setTimeout与setInterval是Javascript中常用的定时器函数，但它们在执行上存在一些精度方面的问 ...",l:"native/javascript/setTimeout与setInterval.html#精度问题",a:"精度问题"},"94.4":{t:"取消调度\r",p:"setTimeout 和 setInterval 都可以通过 clearTimeout 和 clearInterval 方法 ...",l:"native/javascript/setTimeout与setInterval.html#取消调度",a:"取消调度"},"94.5":{t:"利用setTimeout实现一个setInterval\r",p:"  const setIntervalFunctional = (callback: () =&gt; void, dela ...",l:"native/javascript/setTimeout与setInterval.html#利用settimeout实现一个setinterval",a:"利用settimeout实现一个setinterval"},"94.6":{t:"requestAnimationFrame\r",p:"window.requestAnimationFrame() 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前 ...",l:"native/javascript/setTimeout与setInterval.html#requestanimationframe",a:"requestanimationframe"},"94.7":{t:"对比\r",p:`
requestAnimationFrame通常比setTimeout和setinterval更精准， 因为它与浏览器的重绘 ...`,l:"native/javascript/setTimeout与setInterval.html#对比",a:"对比"},"95.0":{t:"# TCP的三次握手与四次挥手\r",p:"\r",l:"native/javascript/TCP三次握手与四次挥手.html",a:"tcp的三次握手与四次挥手"},"95.1":{t:"TCP三次握手\r",p:`这里我们将发出方成为客户端， 接收方成为服务端。 TCP建立连接主要分为三部分， 可简单描述为

客户端向服务端发起TCP请 ...`,l:"native/javascript/TCP三次握手与四次挥手.html#tcp三次握手",a:"tcp三次握手"},"95.2":{t:"TCP四次挥手\r",p:"在数据传输完毕之后会进行TCP四次握手即是TCP连接关闭，TCP需要进行四次挥手的原因在于TCP连接是双全工，即双方通信，每 ...",l:"native/javascript/TCP三次握手与四次挥手.html#tcp四次挥手",a:"tcp四次挥手"},"95.3":{t:"引用\r",p:`Internet通信
`,l:"native/javascript/TCP三次握手与四次挥手.html#引用",a:"引用"},"96.0":{t:"# TCP/IP 四、五层，OSI七层模型区别\r",p:"网络层次可划分为 四层因特网协议栈 和 七层因特网协议栈, 起初网络分层是标准的七层，也就是我们说的 OSI七层模型,参考模 ...",l:"native/javascript/TCP四层五层与OSI七层模型区别.html",a:"tcp-ip-四、五层-osi七层模型区别"},"97.0":{t:"# XSS攻击与 CSRF攻击\r",p:"\r",l:"native/javascript/XSS攻击与CSRF攻击.html",a:"xss攻击与-csrf攻击"},"97.1":{t:"XSS攻击\r",p:"Cross-site Scripting(跨站脚本攻击)简称 XSS，是一种代码注入攻击。攻击者通过在目标网站上注入恶意脚本 ...",l:"native/javascript/XSS攻击与CSRF攻击.html#xss攻击",a:"xss攻击"},"97.2":{t:"常见注入方法\r",p:`
在 HTML 中内嵌的文本中，恶意内容以 Script 标签形成注入
在内联的 JavaScript 中， 拼接的数据突破 ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#常见注入方法",a:"常见注入方法"},"97.3":{t:"XSS 攻击分类\r",p:`根据攻击的来源， XSS攻击可以分为存储行，反射型和DOM型三种

存储型: 即攻击被存储到服务到，常见的是在评论区插入攻击 ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#xss-攻击分类",a:"xss-攻击分类"},"97.4":{t:"防范方法\r",p:`
HttpOnly: 在cookie中设置httponly属性之后，js脚本将无法获取到cookie信息
输入过滤: 一般是 ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#防范方法",a:"防范方法"},"97.5":{t:"CSRF攻击\r",p:"Cross-site request forgery (跨站请求伪造),也被称为one-click attack 或者 se ...",l:"native/javascript/XSS攻击与CSRF攻击.html#csrf攻击",a:"csrf攻击"},"97.6":{t:"防御方法\r",p:`
验证码: 强制用户必须与应用进行交互，才能最终完成请求。此种方式能很好的遏制CSRF，但用户体验较差
Refer Chec ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#防御方法",a:"防御方法"},"97.7":{t:"XSS 和 CSRF 的区别\r",p:`
通常来讲CSRF是由XSS实现的，CSRF时常也被成为XSRF(CSRF实现的方式还可以是直接通过命令行发起请求等)
本质 ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#xss-和-csrf-的区别",a:"xss-和-csrf-的区别"},"97.8":{t:"来源\r",p:`XSS攻击和CSRF攻击
`,l:"native/javascript/XSS攻击与CSRF攻击.html#来源",a:"来源"},"98.0":{t:"# 关于this指向\r",p:"\r",l:"native/javascript/关于this指向.html",a:"关于this指向"},"98.1":{t:"this指向的规律\r",p:`

在函数体中， 非显式或隐式地简单调用函数时，在严格模式下， 函数内的 this 会
被绑定到 undefined 上，  ...`,l:"native/javascript/关于this指向.html#this指向的规律",a:"this指向的规律"},"98.2":{t:"全局环境中的`this`\r",p:`/**
 * 正常模式下 this指向的是 全局window对象
 */
function func1 ():void {
 ...`,l:"native/javascript/关于this指向.html#全局环境中的-this",a:"全局环境中的-this"},"98.3":{t:"上下文对象中调用的`this`\r",p:`interface Student {
  name: string
  fn: () =&gt; Student
}
co ...`,l:"native/javascript/关于this指向.html#上下文对象中调用的-this",a:"上下文对象中调用的-this"},"98.4":{t:"通过bind、call、apply 改变this指向\r",p:`
它们都是用来改变相关函数的 this 指向， 但这个call、apply是直接进行相关函数调用的；bind不会执行相关函数 ...`,l:"native/javascript/关于this指向.html#通过bind、call、apply-改变this指向",a:"通过bind、call、apply-改变this指向"},"98.5":{t:"构造函数和this\r",p:`function Foo() {
  this.bar = 'Lucas'
}

const instance = new  ...`,l:"native/javascript/关于this指向.html#构造函数和this",a:"构造函数和this"},"98.6":{t:"箭头函数中的this\r",p:`
箭头函数的this指向的是由其所属函数或者全局作用域决定的

/**
 * this 出现在 setTimeout的 匿名 ...`,l:"native/javascript/关于this指向.html#箭头函数中的this",a:"箭头函数中的this"},"98.7":{t:"this优先级\r",p:`我们常常把通过 call、bind、apply、new对 this进行绑定的情况称为显示绑定；
根据调用关系确定this指向 ...`,l:"native/javascript/关于this指向.html#this优先级",a:"this优先级"},"99.0":{t:"# 前端数据类型\r",p:"JavaScript 是一种有着动态类型的动态语言。JavaScript 中的变量与任何特定值类型没有任何关联，任何变量都可 ...",l:"native/javascript/前端数据类型.html",a:"前端数据类型"},"99.1":{t:"基本数据类型\r",p:`


类型
typeof返回值
对象包装器




Null
object
不适用


Undefined
undefine ...`,l:"native/javascript/前端数据类型.html#基本数据类型",a:"基本数据类型"},"99.2":{t:"复杂数据类型\r",p:"\r",l:"native/javascript/前端数据类型.html#复杂数据类型",a:"复杂数据类型"},"99.3":{t:"Object\r",p:"在计算机科学中，对象（object）是指内存中的可以被标识符引用的一块区域。在 JavaScript 中，对象是唯一可变的值 ...",l:"native/javascript/前端数据类型.html#object",a:"object"},"99.4":{t:"判断数据类型的方式\r",p:`
typeof 操作符
typeof运算符返回一个字符串，表示操作数的类型

除了 null，所有原始类型都可以使用type ...`,l:"native/javascript/前端数据类型.html#判断数据类型的方式",a:"判断数据类型的方式"},"100.0":{t:"# 原型与原型链\r",p:`!原型与原型链
注：上图中 P1是构造函数 Parent()的一个实例
`,l:"native/javascript/原型与原型链.html",a:"原型与原型链"},"100.1":{t:"前置知识\r",p:`
Javascript中对象分为 函数对象和 普通对象, 每个对象都有 __proto__ 属性, 但是只有函数才会有 pr ...`,l:"native/javascript/原型与原型链.html#前置知识",a:"前置知识"},"100.2":{t:"`prototype`属性\r",p:"prototype是函数独有的属性，从图中可以看到它从一个对象指向另一个对象，代表这个对象是这个函数的原型对象，这个对象也是 ...",l:"native/javascript/原型与原型链.html#prototype-属性",a:"prototype-属性"},"100.3":{t:"`__proto__`属性\r",p:"__proto__属性是对象独有的(包括函数), 从图中我们可以看到__proto__属性是从一个对象指向另一个对象，即从一 ...",l:"native/javascript/原型与原型链.html#proto-属性",a:"proto-属性"},"100.4":{t:"`constructor`属性\r",p:"constructor是对象才有的属性，从图中看到它是从一个对象指向一个函数的。指向的函数就是该对象的构造函数，每个对象都有 ...",l:"native/javascript/原型与原型链.html#constructor-属性",a:"constructor-属性"},"100.5":{t:"引用\r",p:`JavaScript原型&amp;原型链
`,l:"native/javascript/原型与原型链.html#引用",a:"引用"},"101.0":{t:"# 变量的提升\r",p:`关于变量的提升，先看下面一个例子
var x = 5 ;
console.log(x) // 此时打印出来的是5;

var ...`,l:"native/javascript/变量的提升.html",a:"变量的提升"},"102.0":{t:"# 回流与重绘\r",p:"\r",l:"native/javascript/回流与重绘.html",a:"回流与重绘"},"102.1":{t:"`回流（reflow）`\r",p:`回流（reflow）: 当render树（渲染树）中的一部分或者全部因为大小边距等引起结构变化 而需要重建的过程叫做回流
`,l:"native/javascript/回流与重绘.html#回流-reflow",a:"回流-reflow"},"102.2":{t:"`重绘（repaint）`\r",p:"重绘（repaint）:当render 树中的一些元素需要更新属性，而这些属性只是影响元素的外观，风格，而不会影响布局的，比 ...",l:"native/javascript/回流与重绘.html#重绘-repaint",a:"重绘-repaint"},"102.3":{t:"render树\r",p:`render树的节点叫做渲染器； 渲染器在文档解析和dom树创建之后创建，会计算dom节点的样式信息；
如果说元素设置成了d ...`,l:"native/javascript/回流与重绘.html#render树",a:"render树"},"102.4":{t:"何时触发回流和重绘\r",p:`

repaint重绘：

回流(reflow)必定引起重绘(repaint)，重绘可以单独触发
背景色、颜色、字体改变（注 ...`,l:"native/javascript/回流与重绘.html#何时触发回流和重绘",a:"何时触发回流和重绘"},"102.5":{t:"性能优化\r",p:`
尽量避免改变布局属性。如width, height, left, top。
除了transforms或者opacity属性 ...`,l:"native/javascript/回流与重绘.html#性能优化",a:"性能优化"},"102.6":{t:"css\r",p:`
减少选择器的复杂性。
避免逐个修改节点样式，尽量一次性修改，减少style修改所影响元素的数量,使用cssText来替代要 ...`,l:"native/javascript/回流与重绘.html#css",a:"css"},"102.7":{t:"js\r",p:"我们也知道回流的花销也不小，如果每句JS操作都去回流重绘的话，浏览器可能就会受不了。所以很多浏览器都会优化这些操作，浏览器会 ...",l:"native/javascript/回流与重绘.html#js",a:"js"},"103.0":{t:"# 数组常用的方法\r",p:"\r",l:"native/javascript/常用的数组的方法.html",a:"数组常用的方法"},"103.1":{t:"`Array.prototype.indexOf()`\r",p:`该方法返回数组中第一次出现给定元素的下标，如果不存在则返回 -1。
可以传两个参数 第一个参数为需要查找的元素， 第二个是可 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-indexof",a:"array-prototype-indexof"},"103.2":{t:"`Array.prototype.map()`\r",p:`该方法是将数组中的每个元素调用一个提供的函数，结果作为一个新的数组返回，并没有改变原来的数组
  const arr = [ ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-map",a:"array-prototype-map"},"103.3":{t:"`Array.prototype.forEach()`\r",p:`该方法是将数组中的每个元素执行传进提供的函数，没有返回值，直接改变原数组，注意和map方法区分
  const arr =  ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-foreach",a:"array-prototype-foreach"},"103.4":{t:"`Array.prototype.filter()`\r",p:`该方法是将所有元素进行判断，将满足条件的元素生成一个新数组返回
  const arr = [1, 2, 3, 4, 5]
 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-filter",a:"array-prototype-filter"},"103.5":{t:"`Array.prototype.find()`\r",p:`该方法是将所有元素进行判断，并且返回符合条件的第一个元素的值， 否则返回undefined
  const arr = [1 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-find",a:"array-prototype-find"},"103.6":{t:"`Array.prototype.every()`\r",p:`该方法是将所有元素进行判断，如果所有的元素都符合判断条件，则返回true 否则返回false
  const arr = [ ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-every",a:"array-prototype-every"},"103.7":{t:"`Array.prototype.some()`\r",p:`该方法将所有元素进行判断， 如果存在至少一个元素符合判断条件，则返回true, 否则返回false
  const arr  ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-some",a:"array-prototype-some"},"103.8":{t:"`Array.prototype.reduce()`与 `Array.prototype.reduceRight()`\r",p:`该方法是所有元素调用返回函数， 返回值为最后结果， 传入的类型必须为函数类型
两者区别是Array.prototype.re ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-reduce-与-array-prototype-reduceright",a:"array-prototype-reduce-与-array-prototype-reduceright"},"103.9":{t:"`Array.prototype.pop()`\r",p:`该方法是在数组后面删除最后一个元素，并返回删除的元素，该方法改变了数组的长度
const arr = [1,2,3,4,5] ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-pop",a:"array-prototype-pop"},"103.10":{t:"`Array.prototype.push()`\r",p:`该方法是在数组最后一个元素后面添加一个或多个元素， 返回变化后数组长度，并且更改原数组
const arr = [1,2,3 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-push",a:"array-prototype-push"},"103.11":{t:"`Array.prototype.shift()`\r",p:`该方法是会删除掉数组的第一项， 返回数组删除的元素， 并且改变原数组
const arr = [1,2,3,4,5]
arr ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-shift",a:"array-prototype-shift"},"103.12":{t:"`Array.prototype.unshift()`\r",p:`该方法是将一个或者多个元素添加到数组的开头， 返回新数组的长度， 改变原来的数组
  const arr = [1, 2,  ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-unshift",a:"array-prototype-unshift"},"103.13":{t:"`Array.isArray()`\r",p:`该方法是判断目标元素是否为数组，返回布尔值， 这是属于数组原型的方法
  const arr = [1, 2, 3, 4,  ...`,l:"native/javascript/常用的数组的方法.html#array-isarray",a:"array-isarray"},"103.14":{t:"`Array.prototype.concat()`\r",p:`该方法可以讲多个数组拼接成一个数组
const arr = [1,2,3,4]
const arr2 = [5,6,7]
c ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-concat",a:"array-prototype-concat"},"103.15":{t:"`Array.prototype.join()`\r",p:`该方法是将数组中的元素拼接成字符串，拼接格式为join函数传入的参数, 不改变原数组， 并且没有参数时默认为逗号,连接
co ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-join",a:"array-prototype-join"},"103.16":{t:"`Array.prototype.toString()`\r",p:`该方法也是将数组转化为字符串，与join方法不同的是， 拼接格式与函数参数无关，都是以逗号,拼接
const arr = [ ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-tostring",a:"array-prototype-tostring"},"103.17":{t:"`Array.prototype.slice()`\r",p:"该方法传入一个数字， 表示从传入的数字为要处理的元素的下标， 并把小于这个下标对应的元素的元素都删除掉，如果传入负数，则以最 ...",l:"native/javascript/常用的数组的方法.html#array-prototype-slice",a:"array-prototype-slice"},"103.18":{t:"`Array.prototype.splice()`\r",p:`该方法通过移除或者替换已存在的元素和/或添加新元素，并且就地改变一个数组的内容。
最多只支持三个参数


只传入一个参数
这 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-splice",a:"array-prototype-splice"},"103.19":{t:"`Array.prototype.includes()`\r",p:`该方法用来判断一个数组是否包含一个指定的值，如果有则返回true， 否则返回false
  const arr = [1,2 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-includes",a:"array-prototype-includes"},"103.20":{t:"`Array.prototype.flat()`\r",p:`方法创建一个新的数组，并根据指定深度递归地将所有子数组元素拼接到新的数组中。
可以传一个可选参数  指定要提取嵌套数组的结构 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-flat",a:"array-prototype-flat"},"103.21":{t:"`Array.prototype.from()`\r",p:`该方法从可迭代对象或类数组对象创建一个新的浅拷贝的数组实例。


可迭代对象: 例如 Map和 Set 对象， 或者对象是不 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-from",a:"array-prototype-from"},"103.22":{t:"序列生成器(range)\r",p:`// 序列生成器函数（通常称为“range”，例如 Clojure、PHP 等）
const range = (start, ...`,l:"native/javascript/常用的数组的方法.html#序列生成器-range",a:"序列生成器-range"},"103.23":{t:"`Array.prototype.flatMap()`\r",p:"该方法对数组中的每个元素应用给定的回调函数，然后将结果展开一级，返回一个新数组。它等价于在调用 map() 方法后再调用深度 ...",l:"native/javascript/常用的数组的方法.html#array-prototype-flatmap",a:"array-prototype-flatmap"},"104.0":{t:"# 浅拷贝与深拷贝\r",p:"\r",l:"native/javascript/浅拷贝与深拷贝.html",a:"浅拷贝与深拷贝"},"104.1":{t:"数据类型存储\r",p:`Javascript是有两大数据类型：

基本数据类型
引用数据类型

基本数据类型保存在栈内存中；
引用数据类型保存在堆内 ...`,l:"native/javascript/浅拷贝与深拷贝.html#数据类型存储",a:"数据类型存储"},"104.2":{t:"浅拷贝\r",p:`浅拷贝 指的是创建新的数据，这个数据有着原始数据属性值的一份精确复制。
如果属性是基本类型，拷贝的就是基本类型的值，如果属性 ...`,l:"native/javascript/浅拷贝与深拷贝.html#浅拷贝",a:"浅拷贝"},"104.3":{t:"手动实现\r",p:`const shallowClone = (obj) =&gt; {
  const newObj = {};
  for  ...`,l:"native/javascript/浅拷贝与深拷贝.html#手动实现",a:"手动实现"},"104.4":{t:"深拷贝\r",p:`深拷贝开辟一个新的栈，两个对象属性完全相同，但是对应两个不同的地址，修改一个对象的属性， 不会改变另一个对象的属性
!深拷贝 ...`,l:"native/javascript/浅拷贝与深拷贝.html#深拷贝",a:"深拷贝"},"104.5":{t:"区别\r",p:`浅拷贝和深拷贝都创建出一个新的对象，但在复制对象属性的时候，行为就不一样

浅拷贝只复制属性指向某个对象的指针，而不复制对象 ...`,l:"native/javascript/浅拷贝与深拷贝.html#区别",a:"区别"},"104.6":{t:"小结\r",p:`前提为拷贝类型为引用类型的情况下：


浅拷贝是拷贝一层，属性为对象时，浅拷贝是复制，两个对象指向同一个地址


深拷贝是递 ...`,l:"native/javascript/浅拷贝与深拷贝.html#小结",a:"小结"},"104.7":{t:"文章来源\r",p:`面试官：深拷贝浅拷贝的区别？如何实现一个深拷贝？
`,l:"native/javascript/浅拷贝与深拷贝.html#文章来源",a:"文章来源"},"105.0":{t:"# 浏览器缓存\r",p:"当用户打开网站并进行交互时，网站所需的所有资源，包括 HTML、JavaScript、CSS、图片、字体以及应用程序明确请求 ...",l:"native/javascript/浏览器缓存.html",a:"浏览器缓存"},"105.1":{t:"优点\r",p:`
离线操作： 缓存使PWA能够在设备没有网络连接时进行工作
响应速度 即使设备不在线，如果其用户界面是从缓存中获取的， PW ...`,l:"native/javascript/浏览器缓存.html#优点",a:"优点"},"105.2":{t:"浏览器缓存过程\r",p:`!缓存流程
缓存命中机制流程

发送请求，根据请求头的 Expires和 cache-control(强缓存)判断是否命中( ...`,l:"native/javascript/浏览器缓存.html#浏览器缓存过程",a:"浏览器缓存过程"},"105.3":{t:"强缓存\r",p:`强制缓存就是向浏览器缓存查找该请求结果，并根据该结果的缓存规则来决定是否使用该缓存结果的过程，强制缓存的情况主要有三种


 ...`,l:"native/javascript/浏览器缓存.html#强缓存",a:"强缓存"},"105.4":{t:"强缓存规则\r",p:"当浏览器向服务器发送请求时，服务器会将缓存规则放入HTTP响应报文的HTTP头中和请求结果一起返回给浏览器，控制强制缓存的字 ...",l:"native/javascript/浏览器缓存.html#强缓存规则",a:"强缓存规则"},"105.5":{t:"协商缓存\r",p:`协商缓存是强缓存失效后，浏览器携带混存表示向服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程，主要分为两种情况

 ...`,l:"native/javascript/浏览器缓存.html#协商缓存",a:"协商缓存"},"105.6":{t:"协商缓存规则\r",p:"协商缓存的标识也是在响应报文的HTTP头中和请求结果一起返回给浏览器的，控制协商缓存的分别有Last-Modified/If ...",l:"native/javascript/浏览器缓存.html#协商缓存规则",a:"协商缓存规则"},"105.7":{t:"总结\r",p:"强制缓存优先于协商缓存进行， 若强制缓存(Expires和Cache-COntrol)生效则直接使用缓存，若不生效则进行协商 ...",l:"native/javascript/浏览器缓存.html#总结",a:"总结"},"105.8":{t:"引用\r",p:`彻底理解浏览器的缓存机制
浏览器缓存相关
`,l:"native/javascript/浏览器缓存.html#引用",a:"引用"},"106.0":{t:"# 类的继承\r",p:`继承(inheritance)是面向对象软件技术中的一个概念
如果一个类别B '继承自' 另一个类别A，就把这个B称为'A的 ...`,l:"native/javascript/类的继承.html",a:"类的继承"},"106.1":{t:"优点\r",p:`继承可以使得子类有父类别的各种属性和方法，而不需要再次编写相同的代码
在子类别继承父类别的同时，可以重新定义某些属性，并重写 ...`,l:"native/javascript/类的继承.html#优点",a:"优点"},"106.2":{t:"实现方式\r",p:`
原型链继承
构造函数继承(借助call)
组合继承
原型式继承
寄生式继承
寄生组合式继承

`,l:"native/javascript/类的继承.html#实现方式",a:"实现方式"},"106.3":{t:"原型链继承\r",p:"原型链继承是比较常见的继承方式之一， 其中涉及构造函数、原型和实例。三者之间存在着一定的关系，即每一个构造函数都有一个原型对 ...",l:"native/javascript/类的继承.html#原型链继承",a:"原型链继承"},"106.4":{t:"构造函数继承\r",p:`借助call调用 Parent函数
function Parent() {
  this.name = 'parent1'
 ...`,l:"native/javascript/类的继承.html#构造函数继承",a:"构造函数继承"},"106.5":{t:"组合继承\r",p:`前面两种继承方式，各有优缺点，组合继承则是将前面两种继承方式结合继承起来
function Parent () {
  th ...`,l:"native/javascript/类的继承.html#组合继承",a:"组合继承"},"106.6":{t:"原型式继承\r",p:`这里主要借助 Object.create 方法实现普通对象的继承
let parent = {
  name: 'paren ...`,l:"native/javascript/类的继承.html#原型式继承",a:"原型式继承"},"106.7":{t:"寄生式继承\r",p:`寄生式继承在上面的继承基础上进行了优化，利用这个浅拷贝的能力再进行增强，添加一些方法
let parent = {
  na ...`,l:"native/javascript/类的继承.html#寄生式继承",a:"寄生式继承"},"106.8":{t:"寄生组合式继承\r",p:"寄生组合式继承，借助解决普通对象的继承问题的Object.create方法，在前面几种继承方式的优缺点基础上进行改造，这也是 ...",l:"native/javascript/类的继承.html#寄生组合式继承",a:"寄生组合式继承"},"106.9":{t:"总结\r",p:`!类的继承
通过 Object.create 来划分不同的继承方式，最后的寄生组合式继承方式是通过组合继承改造之后的最优的继 ...`,l:"native/javascript/类的继承.html#总结",a:"总结"},"106.10":{t:"文章来源\r",p:`JavaScript如何实现继承
`,l:"native/javascript/类的继承.html#文章来源",a:"文章来源"},"107.0":{t:"# 获取当前页面URL信息\r",p:"假设当前页完整地址是：https://www.example.com:8080/path/to/page.html?id=2 ...",l:"native/javascript/获取当前页面URL信息.html",a:"获取当前页面url信息"},"108.0":{t:"# 防抖与节流\r",p:"防抖与节流本质上是优化高频率代码的一种手段， 如浏览器的 resize、scroll、keypress、 mousemove ...",l:"native/javascript/防抖与节流.html",a:"防抖与节流"},"108.1":{t:"节流(throttle)\r",p:`定义
节流是指程序在n秒内只运行一次，若在这个时间段内重复触发，则只生效一次
`,l:"native/javascript/防抖与节流.html#节流-throttle",a:"节流-throttle"},"108.2":{t:"节流实现方式\r",p:"声明一个变量当标志位，记录当前代码是否在执行，如果正在执行，取消这次方法的执行，直接 retun， 如果有空闲，正常触发方法 ...",l:"native/javascript/防抖与节流.html#节流实现方式",a:"节流实现方式"},"108.3":{t:"防抖(debounce)\r",p:`防抖是指要在n秒后开始执行程序, 若在这个时间段内被重复触发，则重新开始计时
`,l:"native/javascript/防抖与节流.html#防抖-debounce",a:"防抖-debounce"},"108.4":{t:"防抖实现方式\r",p:"需要一个延时定时器来辅助实现，延迟执行需要执行的代码，如果方法多次触发，把上次记录的延迟执行代码用 clearTimeout ...",l:"native/javascript/防抖与节流.html#防抖实现方式",a:"防抖实现方式"},"108.5":{t:"区别\r",p:`相同点

都可以通过 setTimeout 实现
目的都是，降低回调执行频率，节省计算资源

差异

防抖是在一段连续操作结 ...`,l:"native/javascript/防抖与节流.html#区别",a:"区别"},"108.6":{t:"应用场景\r",p:`

防抖

搜索框搜索输入，只需要用户最后一次输入完，再发送请求
手机号、邮箱验证输入检测
窗口大小resize， 只需要在 ...`,l:"native/javascript/防抖与节流.html#应用场景",a:"应用场景"},"108.7":{t:"来源\r",p:`防抖与节流
`,l:"native/javascript/防抖与节流.html#来源",a:"来源"},"109.0":{t:"# Node基础与拓展\r",p:`!Node
`,l:"native/node/index.html",a:"node基础与拓展"},"110.0":{t:"# Node 简介\r",p:`Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。
Node 是一个让 JavaScr ...`,l:"native/node/node简介.html",a:"node-简介"},"110.1":{t:"Node特点\r",p:`

1.非阻塞I/O
在单线程当中,当一段代码运行需要很长时间的时候,, 比如 一个没有终止的递归或者一个没有结束条件的循环 ...`,l:"native/node/node简介.html#node特点",a:"node特点"},"111.0":{t:"# TypeScript 基础文档与类型体操\r",p:`!Typescript
`,l:"native/typescript/index.html",a:"typescript-基础文档与类型体操"},"112.0":{t:"# TypeScript 常用类型工具\r",p:"\r",l:"native/typescript/常用类型工具.html",a:"typescript-常用类型工具"},"112.1":{t:"`Omit< T, K >`\r",p:`Omit&lt; T, K &gt; 用来从对象类型 T 中，删除指定属性 K, 组成一个新的对象返回
  interfac ...`,l:"native/typescript/常用类型工具.html#omit-t-k",a:"omit-t-k"},"112.2":{t:"`Pick< T, K >`\r",p:`Pick&lt; T, K &gt;返回一个新的对象类型，第一个参数T是一个对象类型，第二个参数K是T里面被选定的键名。
i ...`,l:"native/typescript/常用类型工具.html#pick-t-k",a:"pick-t-k"},"112.3":{t:"`Partial< T >`\r",p:`Partial&lt; T &gt;返回一个新类型，将参数类型 T的所有属性变为可选属性
interface A {
  x ...`,l:"native/typescript/常用类型工具.html#partial-t",a:"partial-t"},"112.4":{t:"`Required< T >`\r",p:`Required&lt;T&gt;返回一个新类型，将参数类型T的所有属性变为必选属性。 它与Partial作用刚好相反。
i ...`,l:"native/typescript/常用类型工具.html#required-t",a:"required-t"},"112.5":{t:"`Readonly< T >`\r",p:`Readonly&lt; T &gt;返回一个新类型， 将参数类型T的所有属性变为只读属性
interface A {
   ...`,l:"native/typescript/常用类型工具.html#readonly-t",a:"readonly-t"},"112.6":{t:"`Record< T, K >`\r",p:`Record&lt;T, K&gt;返回一个对象类型，参数K作为键名，参数T作为键值类型。
type T = Record& ...`,l:"native/typescript/常用类型工具.html#record-t-k",a:"record-t-k"},"112.7":{t:"`Exclude< T, U >`\r",p:`Exclude&lt; T, U &gt;用来从联合类型T里面，删除某些类型U，组成一个新的类型返回。
type T1 =  ...`,l:"native/typescript/常用类型工具.html#exclude-t-u",a:"exclude-t-u"},"112.8":{t:"`Extract< T, U >`\r",p:"Extract&lt; T, U &gt;用来从联合类型T中，提取指定类型U,组成一个新类型返回。它与Exclude&lt; ...",l:"native/typescript/常用类型工具.html#extract-t-u",a:"extract-t-u"},"112.9":{t:"`NonNullable< T >`\r",p:"NonNullable&lt; T &gt;用来从联合类型T中删除null类型和 undefined类型，组成一个新类型返回 ...",l:"native/typescript/常用类型工具.html#nonnullable-t",a:"nonnullable-t"},"112.10":{t:"`ReturnType< T >`\r",p:`ReturnType&lt; T &gt;提取函数类型T的返回值类型，作为一个新类型返回
type T1 = ReturnT ...`,l:"native/typescript/常用类型工具.html#returntype-t",a:"returntype-t"},"112.11":{t:"`Parameters< T >`\r",p:`Parameters&lt; T &gt;从函数类型里面提取参数类型，组成一个元组返回
type T1 = Paramete ...`,l:"native/typescript/常用类型工具.html#parameters-t",a:"parameters-t"},"112.12":{t:"`ConstructorParameters< T >`\r",p:`ConstructorParameters&lt; T &gt;提取构造方法T的参数类型，组成一个元祖类型返回
type T ...`,l:"native/typescript/常用类型工具.html#constructorparameters-t",a:"constructorparameters-t"},"112.13":{t:"`ThisParameterType< T >`\r",p:`ThisParameterType&lt; T &gt;提取函数类型中的this参数的类型
function toHex(t ...`,l:"native/typescript/常用类型工具.html#thisparametertype-t",a:"thisparametertype-t"},"112.14":{t:"`InstanceType< T >`\r",p:"InstanceType&lt; T &gt;提取构造函数的返回值的类型（即实例类型），参数T是一个构造函数，等同于构造函数 ...",l:"native/typescript/常用类型工具.html#instancetype-t",a:"instancetype-t"},"112.15":{t:"`Awaited< T >`\r",p:"Awaited&lt; T &gt;用来取出 Promise 的返回值类型，适合用在描述then()方法和await命令的参 ...",l:"native/typescript/常用类型工具.html#awaited-t",a:"awaited-t"},"112.16":{t:"`OmitThisParameter< T >`\r",p:`OmitThisParameter&lt; T &gt;从函数类型中移除this参数。
function toHex(thi ...`,l:"native/typescript/常用类型工具.html#omitthisparameter-t",a:"omitthisparameter-t"},"112.17":{t:"`ThisType< T >`\r",p:"ThisType&lt; T &gt;不返回类型， 只用来跟其他类型组成交叉类型，用来提示Typescript其他类型的th ...",l:"native/typescript/常用类型工具.html#thistype-t",a:"thistype-t"},"113.0":{t:"# 推荐文档\r",p:`

TypeScript入门教程
TypeScript入门教程


现代TypeScript高级教程
现代TypeScrip ...`,l:"native/typescript/推荐文档.html",a:"推荐文档"},"114.0":{t:"# 枚举(Enums)\r",p:`枚举是 TypeScript 中一种特殊的数据类型，允许我们为一组数值设定友好的名字。枚举的定义使用 enum 关键字

枚 ...`,l:"native/typescript/枚举.html",a:"枚举-enums"},"114.1":{t:"基本用法\r",p:`  enum Direction {Up = 1, Down, Left, Right,}

在这个例子中，我们定义了一个名 ...`,l:"native/typescript/枚举.html#基本用法",a:"基本用法"},"114.2":{t:"手动赋值\r",p:`枚举是可以手动赋值的，  并且未手动赋值的枚举值会随着上一项的赋值递增
  enum Direction { Up  = 3 ...`,l:"native/typescript/枚举.html#手动赋值",a:"手动赋值"},"114.3":{t:"常数项和计算所得项\r",p:"枚举的项有两种类型常数项和计算所得项， 上述示例都是为常数项的枚举值， 我们也可以向枚举中添加计算的方式来设置计算所得项的枚 ...",l:"native/typescript/枚举.html#常数项和计算所得项",a:"常数项和计算所得项"},"114.4":{t:"常数枚举\r",p:`常数枚举是使用 const enum 定义的枚举类型
  const enum Directions {
      Up, ...`,l:"native/typescript/枚举.html#常数枚举",a:"常数枚举"},"114.5":{t:"外部枚举\r",p:`外部枚举是使用 declare enum 定义的枚举类型：
declare enum Directions {
    Up ...`,l:"native/typescript/枚举.html#外部枚举",a:"外部枚举"},"115.0":{t:"# TS 泛型\r",p:"\r",l:"native/typescript/泛型.html",a:"ts-泛型"},"115.1":{t:"定义\r",p:"在 TypeScript 中，泛型（Generics）是一种强大的类型工具，它允许我们编写可重用、灵活和类型安全的代码。泛型 ...",l:"native/typescript/泛型.html#定义",a:"定义"},"115.2":{t:"1. 数组泛型(Array Generic)\r",p:"我们在指定一个数组的类型时，可以使用 类型 + 中括号 表示法来定义，例如： number[]来作为数字数组类型，字符串数组 ...",l:"native/typescript/泛型.html#_1-数组泛型-array-generic",a:"_1-数组泛型-array-generic"},"115.3":{t:"2. 函数泛型\r",p:`
函数泛型允许我们编写可以适用多种类型的函数， 提高代码的灵活性和可复用性。

简单的例子
我们可以实现一个函数create ...`,l:"native/typescript/泛型.html#_2-函数泛型",a:"_2-函数泛型"},"115.4":{t:"3. 接口泛型\r",p:`接口泛型允许我们创建可适用于不同类型的接口定义。例如：

基本用法

interface IResponse&lt;T, U ...`,l:"native/typescript/泛型.html#_3-接口泛型",a:"_3-接口泛型"},"115.5":{t:"4. 类泛型\r",p:`与接口类型相似， 泛型也可以用于类的类型定义中
  class GenericNumber&lt;T&gt; {
    z ...`,l:"native/typescript/泛型.html#_4-类泛型",a:"_4-类泛型"},"116.0":{t:"# Typescript中的高级类型\r",p:`!Typescript高级类型
`,l:"native/typescript/高级类型.html",a:"typescript中的高级类型"},"116.1":{t:"交叉类型(Intersection Types): `&`\r",p:`交叉类型是将多个类型合并为同一个类型，这让我们可以把现有的类型叠加到一起成为一种类型， 它包含了所需的所有类型的特性。
:w ...`,l:"native/typescript/高级类型.html#交叉类型-intersection-types",a:"交叉类型-intersection-types"},"116.2":{t:"联合类型(Union Types): `|`\r",p:"联合类型与交叉类型很有关联，但是使用上完全不同。 联合类型会产生一个包含所有类型的选择集的类型，表示一个值的类型是定义的联合 ...",l:"native/typescript/高级类型.html#联合类型-union-types",a:"联合类型-union-types"},"116.3":{t:"类型守卫(Type Guards)\r",p:`类型守卫是一种用于收窄或者断言变量的技术， 通常与联合类型与交叉类型一起使用。
类型守卫可以通过一些条件检查来确定变量的确切 ...`,l:"native/typescript/高级类型.html#类型守卫-type-guards",a:"类型守卫-type-guards"},"116.4":{t:"`typeof`类型守卫\r",p:`使用typeof操作符检查变量类型
const printValue = (value: string | number)  ...`,l:"native/typescript/高级类型.html#typeof-类型守卫",a:"typeof-类型守卫"},"116.5":{t:"`instanceof`类型守卫\r",p:`使用instanceof操作符检查对象是否属于某个类
class Cat {
  meow() {
    console. ...`,l:"native/typescript/高级类型.html#instanceof-类型守卫",a:"instanceof-类型守卫"},"116.6":{t:"自定义类型守卫\r",p:`通过定义一个返回类型谓词的函数， 来自定义一个类型守卫
🫸 类型谓词 的形式是 paramterName is Type这 ...`,l:"native/typescript/高级类型.html#自定义类型守卫",a:"自定义类型守卫"},"116.7":{t:"`in`操作符\r",p:`in操作符可以作为类型细化表达式来使用
对于n in x表达式， 其中n是字符串字面量或字符串字面量类型， 并且x是个联合类 ...`,l:"native/typescript/高级类型.html#in-操作符",a:"in-操作符"},"116.8":{t:"类型别名\r",p:`类型别名， 顾名思义， 就是给一个类型起一个新名字， 但是不会新创建一个类型。
类型别名有时候和接口很相似， 但是可以作用于 ...`,l:"native/typescript/高级类型.html#类型别名",a:"类型别名"},"116.9":{t:"泛型式类型别名\r",p:`同接口一样， 类型别名可以是泛型 - 我们可以添加参数类型并且在别名声明的右侧传入：
type Container&lt;T ...`,l:"native/typescript/高级类型.html#泛型式类型别名",a:"泛型式类型别名"},"116.10":{t:"接口与类型别名\r",p:`类型别名虽然可以和接口一样声明， 但是它们并不同。


接口创建了一个新的名字，可以在其它任何地方使用，但类型别名并不创建新 ...`,l:"native/typescript/高级类型.html#接口与类型别名",a:"接口与类型别名"},"116.11":{t:"元组类型(Tuple)\r",p:`用于表示固定长度和固定类型排列的数组。在元组中，每个位置上的元素都有一个确定的类型
let x: [string, numb ...`,l:"native/typescript/高级类型.html#元组类型-tuple",a:"元组类型-tuple"},"116.12":{t:"infer 关键字\r",p:`表示在extends条件语句中待推断的类型变量，它是从泛型里面进行推断
type ParamType&lt;T&gt; =  ...`,l:"native/typescript/高级类型.html#infer-关键字",a:"infer-关键字"},"116.13":{t:"引用\r",p:`深入理解Typescript
TypeScript手册
这才是真正让你入门Typescript类型体操的文章
`,l:"native/typescript/高级类型.html#引用",a:"引用"},"117.0":{t:"# 一些微信小程序相关问题",p:"",l:"native/weapp/index.html",a:"一些微信小程序相关问题"},"118.0":{t:"# 微信小程序 ---人脸识别\r",p:`微信小程序 ---人脸识别（wx.startFacialRecognitionVerify）


由于人脸核验功能涉及到用户 ...`,l:"native/weapp/微信小程序人脸识别问题.html",a:"微信小程序-人脸识别"},"119.0":{t:"# 数据结构",p:"",l:"structure/index.html",a:"数据结构"},"120.0":{t:"# 链表\r",p:"\r",l:"structure/链表.html",a:"链表"},"120.1":{t:"定义\r",p:"计算机科学中，链表是一种数据结构，是一组由节点组成的集合， 每个节点都有一个指针和指向它的下一个节点, 最后一个指针指向nu ...",l:"structure/链表.html#定义",a:"定义"},"120.2":{t:"特点\r",p:`
链表在添加或移除元素的时候不需要移动其它元素,  这样添加,移除的时间复杂度就为O(1), 而数组在添加或移除元素时，因为 ...`,l:"structure/链表.html#特点",a:"特点"},"120.3":{t:"链表节点\r",p:`链表节点表示链表中的一个元素，它包含一个值和一个指向下一个节点的引用。它的实现可以参考下面代码：
  class Node  ...`,l:"structure/链表.html#链表节点",a:"链表节点"},"120.4":{t:"链表实现\r",p:"链表提供了一系列方法来操作链表， 如开头插入节点(preappend)、末尾插入节点(append)、在指定位置插入节点(i ...",l:"structure/链表.html#链表实现",a:"链表实现"},"120.5":{t:"分类\r",p:`链表分为三种链表: 单向链表, 双向链表, 循环链表


单向链表
一个单向链表包含两个值： 当前节点的值和指向下一个节点的 ...`,l:"structure/链表.html#分类",a:"分类"},"120.6":{t:"双向链表实现\r",p:`
Comparator 比较器

  export default class Comparator {
    /**
  ...`,l:"structure/链表.html#双向链表实现",a:"双向链表实现"},"120.7":{t:"参考资料\r",p:`编程时光
`,l:"structure/链表.html#参考资料",a:"参考资料"},"121.0":{t:"# 构建\r",p:`!Build
`,l:"tools/build/index.html",a:"构建"},"122.0":{t:"# webpack5 主要升级点\r",p:`

持久缓存(Persistent Caching)
webpack5 引入了 更好的持久缓存机制， 利用了更稳定的Hash ...`,l:"tools/build/webpack5主要升级点.html",a:"webpack5-主要升级点"},"123.0":{t:"# AST（Abstract Syntax Tree）抽象语法树\r",p:"\r",l:"tools/build/什么是AST.html",a:"ast-abstract-syntax-tree-抽象语法树"},"123.1":{t:"定义\r",p:"在计算机科学中，抽象语法树（Abstract Syntax Tree，AST），或简称语法树（Syntax tree），是源 ...",l:"tools/build/什么是AST.html#定义",a:"定义"},"123.2":{t:"应用\r",p:"AST(抽象语法树)在代码语法的检查、代码风格的检查、代码的格式化、代码的高亮、代码错误提示、代码自动补全等等场景均有广泛的 ...",l:"tools/build/什么是AST.html#应用",a:"应用"},"123.3":{t:"整体流程\r",p:`

一个完整的编译过程可以分为三个步骤：

Parsing(解析过程): 这个过程要经词法分析、语法分析、构建AST（抽象语 ...`,l:"tools/build/什么是AST.html#整体流程",a:"整体流程"},"123.4":{t:"编译原理\r",p:`首先来看下浏览器的编译原理如下，可以看出来浏览器对js的编译和解释都需要源代码通过 词法分析和 语法分析转换成AST
!编译 ...`,l:"tools/build/什么是AST.html#编译原理",a:"编译原理"},"124.0":{t:"# SourceMap(源映射) 基本信息\r",p:"\r",l:"tools/build/什么是SourceMap.html",a:"sourcemap-源映射-基本信息"},"124.1":{t:"什么是Source Map\r",p:`
Source Map 是一个信息文件，里面储存着位置信息。也就是说，转换后代码的每一个位置所对应的转换前的位置。有了它，出 ...`,l:"tools/build/什么是SourceMap.html#什么是source-map",a:"什么是source-map"},"124.2":{t:"Source Map功能\r",p:"js脚本现在变得很复杂，大部份源码需要转换才能放在浏览器中运行， 随着持续开发所带来的代码量增多，实际运行的代码与开发环境的 ...",l:"tools/build/什么是SourceMap.html#source-map功能",a:"source-map功能"},"124.3":{t:"浏览器中如何使用Source Map\r",p:`
怎么在浏览器中使用sourceMap，chrome浏览器中默认是开启了soruce Map功能。如果被关闭可以手动开启，下 ...`,l:"tools/build/什么是SourceMap.html#浏览器中如何使用source-map",a:"浏览器中如何使用source-map"},"124.4":{t:"Source Map 关键字\r",p:"对于SourceMap而言，我们最常见的，莫过于在webpack的配置项devTools中进行使用, 差不多有二十来种, 但 ...",l:"tools/build/什么是SourceMap.html#source-map-关键字",a:"source-map-关键字"},"124.5":{t:"各个关键字处理示例\r",p:`let a = 1, b
b = a



处理结果

eval 处理后输出结果

eval(&quot;var a = 1 ...`,l:"tools/build/什么是SourceMap.html#各个关键字处理示例",a:"各个关键字处理示例"},"124.6":{t:" ",p:"",l:"tools/build/什么是SourceMap.html#",a:""},"124.7":{t:"`cheap`关键字示例\r",p:"```javascript\n// # sum页面\nconst sum = (a, b) =&gt; { return a + ...",l:"tools/build/什么是SourceMap.html#cheap-关键字示例",a:"cheap-关键字示例"},"124.8":{t:"常见配置项的对比\r",p:`


devtool
构建速度
重新构建速度
生产环境
品质(quality)




(none)
+++[^1]
+++ ...`,l:"tools/build/什么是SourceMap.html#常见配置项的对比",a:"常见配置项的对比"},"124.9":{t:"在项目中的使用\r",p:`

开发环境

我们在开发环境对SourceMap的要求是：快(eval), 信息全面(module)
并且由于代码未压缩， ...`,l:"tools/build/什么是SourceMap.html#在项目中的使用",a:"在项目中的使用"},"125.0":{t:"# 一些CSS相关的工具\r",p:`!CSS
`,l:"tools/css/index.html",a:"一些css相关的工具"},"126.0":{t:"# UnoCss\r",p:"\r",l:"tools/css/unocss.html",a:"unocss"},"126.1":{t:"定义\r",p:"unocss官方定义 是一个具有高性能且极具灵活性的即时原子化 CSS 引擎。它是一个引擎，而非一款框架，因为它并未提供核心 ...",l:"tools/css/unocss.html#定义",a:"定义"},"127.0":{t:"# git cherry-pick 使用\r",p:"\r",l:"tools/git/git-cherry-pick.html",a:"git-cherry-pick-使用"},"127.1":{t:"定义\r",p:"cherry-pick: 翻译为筛选，是git版本控制系统中很重要的一个命令， 它允许你将任意分支上的某个或者某些特定提交( ...",l:"tools/git/git-cherry-pick.html#定义",a:"定义"},"127.2":{t:"使用场景\r",p:`
跨分支移植补丁

假设在开发分支上修复了一个bug， 但尚未准备好合并整个分支。这时， 可以使用git cherry-pi ...`,l:"tools/git/git-cherry-pick.html#使用场景",a:"使用场景"},"127.3":{t:"示例\r",p:`假设是master分支某个提交应用到develop分支上



确保已经切换到了想要应用补丁的目标分支

git check ...`,l:"tools/git/git-cherry-pick.html#示例",a:"示例"},"128.0":{t:"# git 初始化\r",p:`
背景

本地安装了git,同时github也已经申请了账号，想通过git把github上别人的代码clone到本地。
`,l:"tools/git/git-init.html",a:"git-初始化"},"128.1":{t:"操作步骤\r",p:`1.在自己电脑创建本地仓库
第一步， 打开git bash,找一个存放所有git项目的目录。假设git的目录叫gitRepo ...`,l:"tools/git/git-init.html#操作步骤",a:"操作步骤"},"129.0":{t:"# git pull 与 git fetch区别\r",p:"\r",l:"tools/git/git-pull与git-fetch区别.html",a:"git-pull-与-git-fetch区别"},"129.1":{t:"1、简单概括\r",p:`先用一张图来理一下git fetch和git pull的概念：
!image
可以简单的概括为：
git fetch是将远程 ...`,l:"tools/git/git-pull与git-fetch区别.html#_1、简单概括",a:"_1、简单概括"},"129.2":{t:"2、分支的概念\r",p:`在介绍两种方法之前，我们需要先了解一下分支的概念：
分支是用来标记特定代码的提交，每一个分支通过SHA1sum值来标识，所以 ...`,l:"tools/git/git-pull与git-fetch区别.html#_2、分支的概念",a:"_2、分支的概念"},"129.3":{t:"3、git fetch 用法\r",p:`git fetch 命令：
git fetch &lt;远程主机名&gt; //这个命令将某个远程主机的更新全部取回本地

 ...`,l:"tools/git/git-pull与git-fetch区别.html#_3、git-fetch-用法",a:"_3、git-fetch-用法"},"129.4":{t:"4、git pull 用法\r",p:`前面提到，git pull 的过程可以理解为：
git fetch origin master //从远程主机的master ...`,l:"tools/git/git-pull与git-fetch区别.html#_4、git-pull-用法",a:"_4、git-pull-用法"},"130.0":{t:"# git rebase\r",p:"\r",l:"tools/git/git-rebase.html",a:"git-rebase"},"130.1":{t:"git rebase能够将分叉的分支重新合并，下面主要介绍它的两个使用场景\r",p:"\r",l:"tools/git/git-rebase.html#git-rebase能够将分叉的分支重新合并-下面主要介绍它的两个使用场景",a:"git-rebase能够将分叉的分支重新合并-下面主要介绍它的两个使用场景"},"130.2":{t:"场景一：本地与远端同一分支提交历史不一致\r",p:`
方式一

多个人在同一个分支上协作时，出现冲突是很正常的，比如现在有一个项目由我和A一同开发。
我在修复了一个bug以后准 ...`,l:"tools/git/git-rebase.html#场景一-本地与远端同一分支提交历史不一致",a:"场景一-本地与远端同一分支提交历史不一致"},"130.3":{t:"场景二：不同分支之间的合并\r",p:`由于老板突发奇想，要求开发一个新的功能。
先创建一个分支用于开发新功能：
git checkout -b feature
H ...`,l:"tools/git/git-rebase.html#场景二-不同分支之间的合并",a:"场景二-不同分支之间的合并"},"131.0":{t:"# git rebase 合并commit\r",p:`
使用背景

一个repo通常是由一个team中的多个人共同维护，如果需要增加新feature，那么就是一个feature分 ...`,l:"tools/git/git-rebase合并commit.html",a:"git-rebase-合并commit"},"131.1":{t:"rebase 简介\r",p:"git rebase是Git中用于将一个分支的提交应用到另一个分支上的命令。它主要作用是将一个分支上的修改“衍合”(reba ...",l:"tools/git/git-rebase合并commit.html#rebase-简介",a:"rebase-简介"},"131.2":{t:"操作步骤\r",p:"假设我们做了一下三个commit，想把前两个提交也就是 commit 7131a52和 commit 0d11e74合并到c ...",l:"tools/git/git-rebase合并commit.html#操作步骤",a:"操作步骤"},"132.0":{t:"# git stash\r",p:`
git stash 命令的作用是将更改存储在一个临时区域中，使得该工作目录变成一个干净的工作状态， 从而可以去执行其它操作 ...`,l:"tools/git/git-stash的用法总结.html",a:"git-stash"},"132.1":{t:"`git stash` 常用使用场景\r",p:`
正在进行一些工作，但需要在不更改当前分支或提交任何更改的情况下切换到另一个分支或者进行其它操作。
想要推送某个分支但又不想 ...`,l:"tools/git/git-stash的用法总结.html#git-stash-常用使用场景",a:"git-stash-常用使用场景"},"132.2":{t:"常用的 `git stash`命令\r",p:"\r",l:"tools/git/git-stash的用法总结.html#常用的-git-stash-命令",a:"常用的-git-stash-命令"},"132.3":{t:"1. `git stash`\r",p:"直接保存其实是执行了命令 git stash save &quot;保存时的描述&quot;命令 只是要保存的描述为空。 执 ...",l:"tools/git/git-stash的用法总结.html#_1-git-stash",a:"_1-git-stash"},"132.4":{t:"2. `git stash list`\r",p:`git stash list 用于查看执行stash操作的存储列表, 列表格式类似于下面这种格式：
$ git stash  ...`,l:"tools/git/git-stash的用法总结.html#_2-git-stash-list",a:"_2-git-stash-list"},"132.5":{t:"3. `git stash show`\r",p:"显示做了哪些改动，默认show第一个存储,如果要显示其它存贮，后面加 stash@{$num}，比如查看第二个stash详情 ...",l:"tools/git/git-stash的用法总结.html#_3-git-stash-show",a:"_3-git-stash-show"},"132.6":{t:"4. `git stash show -p`\r",p:"显示第一个存储的改动，如果想显示其它存存储，命令：git stash show  stash@{$num}  -p ，比如第 ...",l:"tools/git/git-stash的用法总结.html#_4-git-stash-show-p",a:"_4-git-stash-show-p"},"132.7":{t:"5.`git stash apply`\r",p:"应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即 stash@{0}，如果要使用其它个，git stash ...",l:"tools/git/git-stash的用法总结.html#_5-git-stash-apply",a:"_5-git-stash-apply"},"132.8":{t:"6. `git stash pop`\r",p:"命令恢复之前缓存的工作目录，将缓存堆栈中的对应 stash删除，并将对应修改应用到当前的工作目录下,默认为第一个 stash ...",l:"tools/git/git-stash的用法总结.html#_6-git-stash-pop",a:"_6-git-stash-pop"},"132.9":{t:"7. `git stash drop  stash@`\r",p:`丢弃stash@{$num}存储，从列表中删除这个存储
`,l:"tools/git/git-stash的用法总结.html#num",a:"num"},"132.10":{t:"8. `git stash clear`\r",p:`删除所有缓存的stash

注意：说明:新增的文件，直接执行stash是不会被存储的
!git stash 不保存新建文件
 ...`,l:"tools/git/git-stash的用法总结.html#_8-git-stash-clear",a:"_8-git-stash-clear"},"133.0":{t:"# git 删除分支同步到git仓库\r",p:"\r",l:"tools/git/git删除分支同步到git仓库.html",a:"git-删除分支同步到git仓库"},"133.1":{t:"删除分支\r",p:`git branch -d &lt;branch name&gt;

`,l:"tools/git/git删除分支同步到git仓库.html#删除分支",a:"删除分支"},"133.2":{t:"同步到git仓库上\r",p:`git push origin :&lt;branch name&gt;

`,l:"tools/git/git删除分支同步到git仓库.html#同步到git仓库上",a:"同步到git仓库上"},"134.0":{t:"# git常用操作\r",p:"\r",l:"tools/git/git常用操作.html",a:"git常用操作"},"134.1":{t:"工作流程\r",p:`!git工作流程
`,l:"tools/git/git常用操作.html#工作流程",a:"工作流程"},"135.0":{t:"# 一些git常用操作与命令\r",p:`&lt;!-- !Git --&gt;
!Git
`,l:"tools/git/index.html",a:"一些git常用操作与命令"},"136.0":{t:"# 图片工具",p:"",l:"tools/image/index.html",a:"图片工具"},"137.0":{t:"# 本地图片压缩工具\r",p:`&lt;ImageCompression/&gt;
`,l:"tools/image/图片压缩工具.html",a:"本地图片压缩工具"}},a={previewLength:62,buttonLabel:"搜索",placeholder:"搜索关键词",allow:[],ignore:[]},r={INDEX_DATA:e,PREVIEW_LOOKUP:t,Options:a};export{r as default};
