const e={map:'[{"一些整理的算法":["0.0"],"n数之和":["1.0"],"三数之和":["2.0"],"两数之和":["3.0"],"删除有序数组中的重复项":["4.0"],"合并两个有序数组":["5.0"],"寻找数组中最长驼峰":["6.0"],"搜索插入位置":["7.0"],"移除元素":["8.0"],"计数器":["9.0"],"数组中心下标索引":["10.0"],"首位不重复字符索引":["11.0"],"环境的准备":["12.0"],"webstorm":["12.1"],"chrome":["12.2"],"node":["12.3","63.26","103.0"],"其他工具":["12.4"],"其他工具和库":["12.5"],"项目的创建和配置":["13.0"],"创建基本的文件结构":["13.1"],"public":["13.2"],"配置并初始化bower":["13.3"],"打开命令行工具":["13.4"],"初始化bower":["13.5"],"bowerrc":["13.6"],"配置完成":["13.7"],"angularjs的第一步":["14.0"],"在项目中安装angularjs的基本库":["14.1"],"建立":["14.2"],"引入angularjs的库文件":["14.3"],"第一个程序hello":["14.4"],"运行hello":["14.5"],"学习angularjs的规划":["15.0"],"基本表达式":["16.0"],"引入":["17.0","17.1"],"其他属性":["17.2"],"模板":["17.3"],"angularjs初始化":["18.0"],"创建一个独立的javascript文件":["18.1"],"angularjs的作用域":["18.2"],"引入文件的顺序":["18.3"],"控制器":["19.0"],"ng":["19.1","21.1","24.1","24.5","31.1"],"javascript部分":["19.2"],"html中调用":["19.4"],"为什么要额外封装一层":["19.5"],"数据绑定data":["20.0"],"功能的绑定":["20.1"],"更多地方的绑定":["20.2"],"条件判断":["21.0"],"冒号中的表达式":["21.2"],"重复语句":["22.0"],"index":["22.1"],"过滤器":["23.0"],"多个filter同时应用":["23.1"],"创建自己的过滤器":["23.2"],"通过":["23.3","30.4"],"一些值得注意的用法":["23.4"],"样式选择器":["24.0"],"动态化的样式输入":["24.2"],"结合两种模式的应用示例":["24.3"],"css动画效果应用":["24.4"],"下拉列表选项":["25.0"],"增加未选中的选项":["25.1"],"按组排列":["25.2"],"禁用某些选项":["25.3"],"将对象作为参数传入":["25.4"],"本章总结":["26.0","35.0"],"深入学习angularjs":["27.0"],"directive在系统中的使用":["27.1"],"学习directive的路程":["27.2"],"制作一个自定义的directive":["28.0"],"代码分析":["28.1"],"template":["28.2"],"用替换而不是插入的方式应用directive":["28.3"],"restrict":["28.4"],"directive的命名和使用规则":["29.0"],"命名规则":["29.1"],"使用规则":["29.2"],"为什么会有这种差异":["29.3"],"怎么实现的":["29.4"],"连接符":["29.5"],"为什么要先去除":["29.6"],"让directive支持传入数据":["30.0"],"directive的":["30.1"],"scope":["30.2"],"在一个":["30.3"],"在directive中修改控制器中的数据":["30.5"],"以只读的方式传入数据":["30.6"],"在directive中进行函数回调":["30.7"],"使用":["31.0","87.13"],"使用函数获取templateurl":["31.2"],"让directive动起来":["32.0"],"element":["32.1","32.2"],"在angularjs中使用jquery":["32.3"],"实际体验":["32.4"],"在":["32.5"],"把directive变为一个容器":["33.0"],"directive之间互相通讯":["34.0"],"angular1":["36.0"],"学习angularjs":["37.0"],"learning":["37.1"],"本书地址":["37.2"],"章节目录":["37.3"],"本书的读者":["37.4"],"我应用angularjs的方法":["37.5"],"这样做的好处":["37.6"],"为什么选择angularjs":["37.7"],"我选择angularjs的历程":["37.8"],"为什么写这本书":["37.9"],"另":["37.10"],"summary":["38.0"],"框架相关":["39.0","62.0"],"react":["40.0","41.1","41.2","41.4","41.7","41.10","41.11","41.12","43.0","45.1","63.2","63.4","63.9","63.13","63.15","63.17"],"react一些相关":["41.0"],"react生命周期":["41.3"],"react的严格模式":["41.5"],"严格模式优点":["41.6"],"jsx与js的区别":["41.8"],"react中必须要使用":["41.9"],"受控组件":["41.13"],"ssr相关":["42.0"],"对于ssr的理解":["42.1"],"ssr的局限":["42.2"],"父组件调用子组件":["43.1"],"虚拟dom与diff算法":["44.0"],"结构对比":["44.1"],"流程对比":["44.2"],"什么是虚拟dom":["44.3"],"虚拟dom的优势":["44.4"],"虚拟dom可以提高效率":["44.5"],"超强的兼容性":["44.6"],"高阶函数hoc":["45.0"],"usestate":["45.2"],"vue":["46.0","49.0","51.0","52.0","63.5","64.0","64.10","64.13","64.14","64.15","64.17","64.21","64.25","64.32","64.36","64.42","64.48","64.53","64.55"],"keep":["47.0"],"引用":["47.1","48.6","89.3","93.5","98.8","108.13"],"nexttick":["48.0"],"异步任务队列":["48.1"],"vue2":["48.2","50.1"],"nexttick源码":["48.3"],"vue3":["48.4","48.5","50.4","64.56"],"定义":["49.1","85.1","107.1","112.1","114.1","117.1"],"常见的vue指令":["49.2"],"v":["49.3","49.4","49.5","49.6","49.7","64.7","64.8","64.9"],"vue生命周期":["50.0"],"具体分析":["50.2"],"题外话":["50.3"],"具体功能":["50.5"],"单向绑定":["51.1"],"双向绑定":["51.2"],"双向绑定原理":["51.3"],"viewmodel":["51.4"],"实现":["51.5"],"代码实现":["51.6","73.1"],"编译":["51.7"],"依赖收集":["51.8"],"来源":["51.9","91.8","101.7"],"首页加载白屏的原因":["52.1"],"spa":["52.2","52.3"],"解决方案":["52.4"],"主要记录了工作中遇到的问题":["53.0"],"import":["54.3"],"typescript中":["55.2"],"typescript中的":["55.3"],"小程序相关":["58.0"],"小程序的优势":["58.1"],"小程序的页面构成":["58.2"],"小程序的生命周期":["58.3"],"小程序如何请求数据":["58.4"],"如何提高小程序的首屏加载时间":["58.5"],"请简述你经常使用的小程序的组件":["58.6"],"wxss":["58.7"],"小程序如何实现响应式":["58.8"],"怎么优化小程序":["58.9"],"小程序如何显示用户头像与用户名":["58.10"],"请谈谈小程序的双向绑定和":["58.11"],"小程序中传参是怎么传的":["58.12"],"和":["58.13"],"说一下微信小程序的适配问题":["58.14"],"小程序页面间有哪些传递数据的方法":["58.15"],"你是怎么封装微信小程序的数据请求的":["58.16"],"小程序跳转页面的方式":["58.17"],"微信小程序如何跳转到其他小程序":["58.18"],"小程序加载过慢的解决方式":["58.19"],"前端基础":["59.0"],"javascript":["60.0","60.2","60.27","60.37","60.38"],"javascript的语言特性":["60.1"],"ajax使用":["60.3"],"ajax请求返回的状态码":["60.4"],"闭包":["60.5"],"闭包的定义":["60.6"],"为什么要用":["60.7"],"闭包的特性":["60.8"],"事件委托":["60.9"],"事件委托优点":["60.10"],"事件源":["60.11"],"事件冒泡":["60.12"],"本地存储与cookie的区别":["60.13"],"es6新特性":["60.14","77.0","78.0"],"数组的方法":["60.15"],"json":["60.16"],"面向对象":["60.17"],"普通函数与构造函数区别":["60.18"],"原型与原型链":["60.19","93.0"],"promise":["60.20"],"async函数":["60.21"],"get":["60.22","60.23","78.4"],"事件流":["60.24"],"事件流定义":["60.25"],"改变this指针的指向函数":["60.26"],"拖拽功能的实现":["60.28"],"javascript的垃圾回收机制":["60.29"],"必要性":["60.30"],"常见的垃圾回收方式":["60.31"],"javascript监听对象属性的改变":["60.32"],"手动实现一个":["60.33"],"怎么控制一次加载一张图片":["60.34"],"方法1":["60.35"],"方法2":["60.36"],"跨域问题":["60.39"],"为什么会出现跨域":["60.40"],"同源策略":["60.41"],"减少页面加载时间":["60.42"],"this":["60.43"],"数组去重":["60.44","87.12"],"深拷贝与浅拷贝":["60.45"],"for循环与map循环有什么区别":["60.46"],"类的继承":["60.47","99.0"],"同步与异步的区别":["60.48"],"重绘和回流":["60.49"],"http":["60.50"],"如何对网站的文件和资源进行优化":["60.51"],"预加载与懒加载的区别":["60.52"],"防抖与节流":["60.53","101.0"],"xss":["60.54","91.3","91.7"],"html":["61.0"],"常用的图片的格式有哪些":["61.1"],"jpeg":["61.2"],"png":["61.3"],"gif":["61.4"],"css的盒模型":["61.5"],"标准盒模型":["61.6"],"ie盒模型":["61.7"],"视频":["61.8"],"视频标签":["61.9"],"音频标签":["61.10"],"html5新增的内容":["61.11"],"新增的语义化标签":["61.12"],"css3新增特性":["61.13"],"border":["61.14"],"background":["61.15"],"gradient":["61.16"],"word":["61.17"],"transform":["61.18"],"transition":["61.19"],"animation":["61.20"],"清除浮动":["61.21"],"定位属性":["61.22"],"元素居中":["61.23"],"水平居中":["61.24"],"垂直居中":["61.25"],"水平垂直居中":["61.26"],"三栏布局方式两边固定":["61.27"],"浏览器显示小于12px的文字":["61.28"],"css选择器":["61.29"],"种类":["61.30"],"优先级":["61.31"],"可继承属性":["61.32"],"图片加载缓慢问题":["61.33"],"行内元素":["61.34"],"margin与padding使用场景":["61.35"],"flex":["61.36"],"标签的禁用":["61.37"],"px":["61.38"],"媒体查询":["61.39"],"网页的三层结构":["61.40"],"doctype":["61.41"],"html5":["61.42"],"浏览器性能优化":["61.43"],"加载阶段的优化":["61.44"],"交互阶段的优化":["61.45"],"回流和重绘":["61.46"],"浏览器缓存机制":["61.47"],"浏览器输入网址到页面渲染的全过程":["61.48"],"如何画一条0":["61.49"],"关于":["61.50"],"双边距重叠":["61.51"],"react相关":["63.0"],"fetch":["63.1"],"请简述你对":["63.3"],"请简述虚拟":["63.6"],"对":["63.7"],"调用":["63.8"],"为什么虚拟":["63.10"],"组件的":["63.11"],"shouldcomponentupdate":["63.12"],"何为受控组件":["63.14"],"简述":["63.16"],"应该在":["63.18"],"何为高阶组件":["63.19"],"其他":["63.20"],"typescript":["63.21","63.22","104.0"],"webpack":["63.23"],"请简述":["63.24"],"怎么提升页面性能":["63.25"],"说一下":["63.27"],"commonjs":["63.28"],"git":["63.29","118.0","119.0","120.0","120.1","121.0","122.0","122.1","123.0"],"你的项目比较小为什么还是用":["63.30"],"什么是":["63.31"],"说一下对":["63.32"],"后台传递过来的数据是那些":["63.33"],"谈谈":["63.34"],"vue的核心":["64.1"],"核心思想":["64.2"],"vue中的单项数据流":["64.3"],"vue中常用的修饰符":["64.4"],"计算属性":["64.11"],"vue中跳转路由的方式":["64.12"],"基本原理":["64.16"],"hash":["64.18"],"history":["64.19"],"两者区别":["64.20"],"路由参数":["64.22"],"查询参数":["64.23"],"何时使用":["64.24"],"插值":["64.26"],"绑定属性":["64.27"],"动态类绑定":["64.28"],"动态样式绑定":["64.29"],"表单输入绑定":["64.30"],"事件绑定":["64.31"],"全局路由钩子":["64.33"],"路由独享守卫":["64.34"],"组件内守卫":["64.35"],"组成":["64.37"],"setup标签版本":["64.38"],"子组件传递给父组件参数":["64.39"],"setup函数":["64.40"],"setup标签":["64.41"],"默认内容":["64.43"],"具名插槽":["64.44"],"动态插槽":["64.45"],"作用域插槽":["64.46"],"具名作用域插槽":["64.47"],"类型":["64.49"],"详细信息":["64.50"],"示例":["64.51"],"计算属性与watch的区别":["64.52"],"vue中":["64.54"],"vuex":["64.57"],"面试相关问题":["65.0"],"css":["66.0","67.0","95.6"],"css一些加载样式":["68.0"],"动画效果一":["68.1"],"动画效果二":["68.2"],"动画效果三":["68.3"],"动画效果四":["68.4"],"动画效果五":["68.5"],"动画效果六":["68.6"],"动画效果七":["68.7"],"动画效果八":["68.8"],"动画样式九":["68.9"],"动画效果十":["68.10"],"动画效果11":["68.11"],"动画效果12":["68.12"],"动画效果13":["68.13"],"动画效果14":["68.14"],"动画效果15":["68.15"],"css权重规则":["69.0"],"css背景动画":["70.0"],"方块跳动动画":["71.0"],"一些原生css样式与概念":["72.0"],"炫目动画":["73.0"],"js中call":["74.0"],"总结":["74.1","98.7","99.9"],"cookie":["75.0"],"从document":["75.1"],"写入document":["75.2"],"path":["75.3"],"domain":["75.4"],"expires":["75.5"],"secure":["75.6"],"es6":["76.0","76.36"],"字符串类型的扩展":["76.1"],"模版字符串":["76.2","77.14"],"模版标签函数":["76.3"],"string":["76.4","76.5","76.6","76.7","76.8","76.9","76.10"],"数组类型的扩展":["76.11"],"扩展运算符":["76.12"],"array":["76.13","76.14","76.15","76.16","76.17","76.18","85.0","87.0","96.1","96.2","96.3","96.4","96.5","96.6","96.7","96.8","96.9","96.10","96.11","96.12","96.13","96.14","96.15","96.16","96.17","96.18","96.19","96.20","96.21","96.23"],"对象类型的扩展":["76.19"],"属性的简洁表示法":["76.20"],"属性名表达式":["76.21","77.21"],"object":["76.22","76.23","76.24","76.25","92.3"],"正则的扩展":["76.26"],"regexp构造函数的扩展":["76.27"],"flags属性":["76.28"],"u修饰符":["76.29"],"y修饰符":["76.30"],"regexp":["76.31"],"正则方法调用变更":["76.32"],"函数类型的扩展":["76.33"],"基本用法":["76.34","106.1"],"运算符的扩展":["76.35"],"声明方式":["77.1"],"let":["77.2"],"const":["77.3"],"变量的解构赋值":["77.4"],"数组的解构":["77.5"],"对象的解构":["77.6"],"字符串的解构":["77.7"],"数值与布尔值的解构":["77.8"],"函数的参数的解构":["77.9"],"函数参数默认值":["77.10"],"箭头函数":["77.11"],"使用注意点":["77.12"],"箭头函数与普通函数的区别":["77.13"],"扩展操作符":["77.15"],"展开数组":["77.16"],"传递参数给函数":["77.17"],"浅拷贝数组或对象":["77.18"],"对象字面量简化":["77.19"],"属性的简介表示法":["77.20"],"类":["77.22"],"模块化":["77.23"],"proxy":["78.1","78.2","78.3"],"set":["78.5","78.17","78.18"],"apply":["78.6"],"reflect":["78.7"],"常用方法":["78.8"],"利用":["78.9"],"symbol":["78.10"],"map":["78.11","78.12"],"方法":["78.13"],"weekmap":["78.14"],"应用":["78.15","114.2"],"weakmap":["78.16"],"weakset":["78.19","78.21"],"weakset应用":["78.20"],"迭代器":["78.22","78.23"],"迭代器功能":["78.24"],"遍历过程":["78.25"],"原生具备":["78.26"],"迭代器对象方法":["78.27"],"使用场合":["78.28"],"for":["78.29"],"生成器":["78.30"],"特征":["78.31"],"eslint":["79.0"],"一些javascript基础知识与方法":["80.0"],"js下载文件":["81.0"],"js中的元素尺寸与布局信息":["82.0"],"js模块化":["83.0"],"js解析url参数":["84.0"],"简单实现":["85.2"],"momentjs":["86.0"],"一":["86.1"],"二":["86.4"],"三":["86.5"],"功能":["87.1"],"参数值":["87.2"],"回调函数":["87.3"],"initialvalue":["87.4"],"使用场景":["87.5"],"一维数组求和":["87.6"],"累加对象数组里的值":["87.7"],"展平嵌套数组":["87.8"],"统计对象中值出现的次数":["87.9"],"按属性对对象进行分组":["87.10"],"使用扩展运算符和":["87.11"],"按顺序运行promise":["87.14"],"在稀疏数组中使用reduce":["87.15"],"非数组对象上调用reduce":["87.16"],"settimeout与setinterval区别":["88.0"],"settimeout":["88.1"],"setinterval":["88.2"],"精度问题":["88.3"],"取消调度":["88.4"],"利用settimeout实现一个setinterval":["88.5"],"requestanimationframe":["88.6"],"对比":["88.7"],"tcp的三次握手与四次挥手":["89.0"],"tcp三次握手":["89.1"],"tcp四次挥手":["89.2"],"tcp":["90.0"],"xss攻击与":["91.0"],"xss攻击":["91.1"],"常见注入方法":["91.2"],"防范方法":["91.4"],"csrf攻击":["91.5"],"防御方法":["91.6"],"前端数据类型":["92.0"],"基本数据类型":["92.1"],"复杂数据类型":["92.2"],"判断数据类型的方式":["92.4"],"前置知识":["93.1"],"prototype":["93.2"],"proto":["93.3"],"constructor":["93.4"],"变量的提升":["94.0"],"回流与重绘":["95.0"],"回流":["95.1"],"重绘":["95.2"],"render树":["95.3"],"何时触发回流和重绘":["95.4"],"性能优化":["95.5"],"js":["95.7"],"数组常用的方法":["96.0"],"序列生成器":["96.22"],"浅拷贝与深拷贝":["97.0"],"数据类型存储":["97.1"],"浅拷贝":["97.2"],"手动实现":["97.3"],"深拷贝":["97.4"],"区别":["97.5","101.5"],"小结":["97.6"],"文章来源":["97.7","99.10"],"浏览器缓存":["98.0"],"优点":["98.1","99.1"],"浏览器缓存过程":["98.2"],"强缓存":["98.3"],"强缓存规则":["98.4"],"协商缓存":["98.5"],"协商缓存规则":["98.6"],"实现方式":["99.2"],"原型链继承":["99.3"],"构造函数继承":["99.4"],"组合继承":["99.5"],"原型式继承":["99.6"],"寄生式继承":["99.7"],"寄生组合式继承":["99.8"],"获取当前页面url信息":["100.0"],"节流":["101.1"],"节流实现方式":["101.2"],"防抖":["101.3"],"防抖实现方式":["101.4"],"应用场景":["101.6"],"node基础与拓展":["102.0"],"node特点":["103.1"],"推荐文档":["105.0"],"枚举":["106.0"],"手动赋值":["106.2"],"常数项和计算所得项":["106.3"],"常数枚举":["106.4"],"外部枚举":["106.5"],"ts":["107.0"],"typescript中的高级类型":["108.0"],"交叉类型":["108.1"],"联合类型":["108.2"],"类型守卫":["108.3"],"typeof":["108.4"],"instanceof":["108.5"],"自定义类型守卫":["108.6"],"in":["108.7"],"类型别名":["108.8"],"泛型式类型别名":["108.9"],"接口与类型别名":["108.10"],"元组类型":["108.11"],"infer":["108.12"],"一些微信小程序相关问题":["109.0"],"微信小程序":["110.0"],"数据结构":["111.0"],"链表":["112.0"],"特点":["112.2"],"链表节点":["112.3"],"链表实现":["112.4"],"分类":["112.5"],"双向链表实现":["112.6"],"参考资料":["112.7"],"构建":["113.0"],"ast":["114.0"],"整体流程":["114.3"],"编译原理":["114.4"],"sourcemap":["115.0"],"什么是source":["115.1"],"source":["115.2","115.4"],"浏览器中如何使用source":["115.3"],"各个关键字处理示例":["115.5"],"cheap":["115.7"],"常见配置项的对比":["115.8"],"在项目中的使用":["115.9"],"一些css相关的工具":["116.0"],"unocss":["117.0"],"操作步骤":["118.1","121.2"],"场景一":["120.2"],"场景二":["120.3"],"rebase":["121.1"],"常用的":["122.2"],"num":["122.9"],"删除分支":["123.1"],"同步到git仓库上":["123.2"],"git常用操作":["124.0"],"工作流程":["124.1"],"一些git常用操作与命令":["125.0"],"图片工具":["126.0"],"本地图片压缩工具":["127.0"]},{"0":["2.0","10.0","14.1","64.51","64.56","68.15","79.0","86.7","107.3","112.4","112.6"],"1":["2.0","7.0","8.0","11.0","14.1","15.0","37.0","37.1","37.4","37.6","37.7","37.10","42.2","51.5","52.4","60.18","60.42","60.44","60.51","61.12","61.21","61.24","61.25","61.26","61.27","61.28","61.33","61.48","76.12","76.14","77.5","77.9","77.12","78.25","86.2","86.6","86.7","86.9","89.2","93.1","96.1","96.14","97.4","98.2","98.4","103.1","106.1","107.2","108.10","112.6","115.5","115.8","118.1","119.1","120.2","122.3"],"2":["2.0","3.0","7.0","23.0","37.10","60.18","60.42","61.12","61.25","61.48","75.2","76.12","76.14","77.5","77.9","78.25","79.0","86.3","86.6","86.7","100.0","106.2","107.3","118.1","119.2","122.4"],"3":["6.0","7.0","60.18","76.12","77.5","77.9","78.25","86.6","86.8","106.2","107.4","119.3","120.2","122.5"],"4":["6.0","58.2","76.12","78.25","86.6","86.9","107.5","119.4","122.6"],"5":["6.0","7.0","14.1","76.12","86.10","94.0","122.7"],"6":["7.0","86.11","122.8"],"7":["3.0","6.0","86.12"],"8":["6.0","41.3","86.13","122.10"],"9":["86.14"],"10":["86.13","86.15"],"11":["3.0","86.7"],"12":["54.1"],"14":["6.0"],"15":["3.0"],"18":["100.0"],"21":["87.10"],"23":["54.1","54.2","55.1","56.1","56.2","56.3","56.4"],"50":["61.26"],"100":["60.4"],"123":["77.21"],"200":["78.5"],"1234":["23.0"],"2019":["86.7"],"8080":["100.0"],"231204":["54.0"],"231211":["55.0"],"231218":["56.0"],"algorithm":["0.0"],"请用算法实现":["1.0"],"从给定的无需":["1.0"],"不重复的数组a中":["1.0"],"取出n个数":["1.0"],"给你一个包含":["2.0"],"n":["2.0","5.0","9.0"],"个整数的数组":["2.0"],"nums":["2.0","3.0","4.0","7.0","8.0","10.0"],"判断":["2.0"],"中是否存在三个元素":["2.0"],"a":["2.0","77.5","77.21","78.28","81.0","94.0","97.4","112.6","115.5","119.2","120.2","120.3"],"b":["2.0","77.5","78.28","97.4","112.6","115.5","119.2","120.3"],"c":["2.0","77.5","78.28","97.4","119.2"],"使得":["2.0"],"请你找出所有满足条件且不重复的三元组":["2.0"],"注意":["2.0","25.3"],"答案中不可以包含重复的三元组":["2.0"],"示例":["2.0","3.0","6.0","11.0","78.4","108.2"],"javascript":["2.0","3.0","6.0","7.0","20.1","23.0","28.0","28.1","30.6","30.7","32.0","32.5","43.1","51.6","51.7","60.3","60.33","60.35","60.36","64.18","64.51","75.1","76.3","76.12","76.14","76.21","76.30","76.34","76.36","77.5","77.6","77.9","77.10","77.16","77.17","77.18","77.21","78.1","78.4","78.5","78.6","78.9","78.10","78.28","80.0","81.0","83.0","84.0","85.2","86.4","86.6","86.7","86.9","86.11","86.12","86.13","86.14","86.15","92.0","92.3","93.4","94.0","96.14","96.16","96.22","97.3","97.4","97.5","99.1","99.3","99.4","99.5","99.6","99.7","99.8","101.2","103.0","110.0","112.4","112.6","115.5","115.7"],"给定数组":["2.0"],"给定一个整数数组":["3.0"],"和一个目标值":["3.0"],"target":["3.0","7.0","76.23","78.1","78.2","78.4","78.8"],"请你在该数组中找出和为目标值的那":["3.0"],"两个":["3.0"],"整数":["3.0"],"并返回他们的数组下标":["3.0"],"你可以假设每种输入只会对应一个答案":["3.0"],"但是":["3.0","19.5","25.0","30.0","30.7","37.10"],"你不能重复利用这个数组中同样的元素":["3.0"],"给定":["3.0"],"给你一个":["4.0"],"非严格递增排列":["4.0"],"的数组":["4.0"],"请你":["4.0"],"原地":["4.0","8.0"],"删除重复出现的元素":["4.0"],"使每个元素":["4.0"],"只出现一次":["4.0"],"返回删除后数组的新长度":["4.0"],"元素的":["4.0"],"相对顺序":["4.0"],"应该保持":["4.0"],"一致":["4.0"],"然后返回":["4.0"],"中唯一元素的个数":["4.0"],"考虑":["4.0"],"的唯一元素的数量为":["4.0"],"给你两个有序整数数组":["5.0"],"nums1":["5.0"],"和":["5.0","28.0","30.7","34.0","41.1","45.2","49.1","50.4","50.5","54.3","60.3","61.32","61.50","64.16","64.52","78.6","78.7","78.9","87.12","90.0","91.7","93.1","96.21","98.4","98.6","106.3","112.6","114.4","121.2"],"nums2":["5.0"],"请你将":["5.0"],"合并到":["5.0","121.2"],"中":["5.0","47.0","50.4","50.5","60.27","77.10","92.3","121.2"],"使":["5.0","43.1"],"num1":["5.0"],"成为一个有序数组":["5.0"],"说明":["5.0","86.8"],"初始化":["5.0","50.2","118.0"],"需要合并的元素数量分别为":["5.0"],"m":["5.0","86.8","120.2","120.3"],"你可以假设":["5.0"],"有足够的空间":["5.0"],"空间大小大于或等于":["5.0"],"给定一个纯数字数组":["6.0"],"原地生成一个最长驼峰子数组":["6.0"],"元素大小从中间向两侧递减":["6.0"],"原数组":["6.0"],"const":["6.0","43.1","48.3","48.5","64.51","68.10","68.13","68.15","76.3","76.14","77.16","77.18","79.0","85.2","87.6","87.8","87.9","87.10","87.12","88.5","96.14","96.22","97.3","97.4","97.5","100.0","101.2","106.4","107.3","107.4","112.4","115.7"],"arr":["6.0","76.14","87.6","87.8","87.14","96.14","97.5"],"给定一个排序数组和一个目标值":["7.0"],"在数组中找到目标值":["7.0"],"并返回其索引":["7.0"],"如果目标值不存在于数组中":["7.0"],"返回它将会被按顺序插入的位置":["7.0"],"示例1":["7.0"],"var":["7.0","30.7","60.7","60.35","60.36","60.37","60.38","78.4","78.6","79.0","81.0","94.0","115.5"],"输出":["7.0","100.0"],"示例2":["7.0"],"给你一个数组":["8.0"],"和一个值":["8.0"],"val":["8.0"],"你需要":["8.0"],"移除所有数值等于":["8.0"],"的元素":["8.0"],"并返回移除后数组的新长度":["8.0"],"不要使用额外的数组空间":["8.0"],"你必须仅使用":["8.0"],"o":["8.0","79.0","103.1","112.2"],"额外空间并":["8.0"],"给定一个整型参数":["9.0"],"请你编写并返回一个":["9.0"],"counter":["9.0"],"函数":["9.0","32.0","60.33","64.51","92.3","99.4"],"这个":["9.0"],"给你一个整数数组":["10.0"],"请计算数组的":["10.0"],"中心下标":["10.0"],"数组":["10.0","77.15"],"是数组的一个下标":["10.0"],"其左侧所有元素相加的和等于右侧所有元素相加的和":["10.0"],"如果中心下标位于数组最左端":["10.0"],"那么左侧数之和视为":["10.0"],"因为在下标的左侧不存在元素":["10.0"],"这一点对于中心下标位于数组最右端同样适用":["10.0"],"如果数组有多个中心下标":["10.0"],"应该返回":["10.0"],"最靠近左边":["10.0"],"的那一个":["10.0"],"如果数组不存在中心下标":["10.0"],"给定一个字符串":["11.0"],"找到它的第一个不重复的字符":["11.0"],"并返回它的索引":["11.0"],"如果不存在":["11.0"],"则返回":["11.0"],"开发web网站":["12.0"],"使用合适的工具和环境会极大的提升开发的效率":["12.0"],"本章将讲述如何准备用于angularjs项目开发的环境":["12.0"],"本书将会使用如下工具和库":["12.0"],"在过去的开发中":["12.1"],"webstorm一直是我对编辑器的首选":["12.1"],"webstorm是商业化的产品":["12.1"],"如果长期使用":["12.1"],"需要花钱购买":["12.1"],"chrome浏览器的开发者工具可以极大的方便开发时的调试工作":["12.2"],"目前国内大量浏览器也是基于chrome的开源内核开发":["12.2"],"在通用性上也有保证":["12.2"],"js":["12.3","18.1","23.2","28.0","48.3","68.10","68.13","68.15","103.0"],"在安装好node":["12.4"],"js后":["12.4"],"可以通过node":["12.4"],"js的npm命令安装最新版本的npm":["12.4"],"cnpm":["12.4"],"bower":["12.4","13.5","14.1"],"如果已经存在":["12.4"],"自动安装最新版本":["12.4"],"使用命令如下":["12.4"],"windows上打开cmd":["12.4"],"os":["12.4"],"x上打开terminal":["12.4"],"bash":["12.4","13.5","14.1","118.1"],"windows":["12.4"],"npm":["12.4"],"install":["12.4","14.1"],"g":["12.4","81.0","97.4"],"其他的工具和库":["12.5"],"使用webstorm可以直接创建angularjs项目":["13.0"],"且会自动帮助你配置好项目并自动下载angularjs等库":["13.0"],"首先建立一个":["13.1"],"public":["13.1","13.6","14.2","18.1"],"目录":["13.1"],"目录设置的意义":["13.2"],"从字面意思即可理解":["13.2"],"bower的配置可以通过手动创建文件或者命令行的方法来进行":["13.3"],"webstorm内置了命令行工具":["13.4"],"在命令行下运行":["13.5"],"init":["13.5","97.5","120.3"],"你将会看到如下的若干选项":["13.5"],"并会自动的在项目的根目录生成一个":["13.5"],"json":["13.5","79.0"],"注":["13.5"],"以下的汉字部分都是额外加入的注释":["13.5"],"运行命令":["13.5"],"第一次运行的时候会弹出":["13.5"],"是否愿意提交匿名的统计信息":["13.5"],"随意选择":["13.5"],"may":["13.5"],"anonymously":["13.5"],"report":["13.5"],"usage":["13.5"],"配置文件":["13.6"],"由于我们建立了":["13.6"],"至此":["13.7"],"在前面的章节":["14.0"],"angularjs官网提供了通过bower安装的命令行":["14.1"],"我们需要做的":["14.1"],"就是在webstorm的命令行工具中":["14.1"],"运行如下命令":["14.1"],"angular":["14.1"],"rc":["14.1"],"save":["14.1"],"结果如下所示":["14.1"],"index":["14.2","14.5","28.0","44.3"],"html":["14.2","14.5","18.2","20.2","24.5","28.0","31.1","44.3","52.3","52.4","59.0","60.24","64.8","68.1","68.2","68.3","68.4","68.5","68.6","68.7","68.8","68.9","68.10","68.11","68.12","68.13","68.14","68.15","84.0","91.2","100.0"],"文件":["14.2","24.1","61.48"],"在":["14.2","18.1","21.0","23.2","47.0","50.4","50.5","64.46","78.10","91.2","92.3","107.1","112.2"],"目录下建立":["14.2"],"引入angularjs库文件很简单":["14.3"],"一行html语言加入html的head部分即可":["14.3"],"world":["14.4","14.5","77.10","94.0"],"是时候来测试下我们是否成功的引入了angularjs了":["14.4"],"我们在":["14.4"],"body":["14.4","18.2"],"右键选择":["14.5"],"我们已经完成了基本的准备工作":["15.0"],"从本章开始":["15.0","27.0"],"我们将专注于学习和应用angularjs":["15.0"],"作为一个功能完整的框架":["15.0"],"angularjs提供了一套开发理念和方法":["15.0"],"我们只需要掌握这套理念和方法即可明确如何实现我们需要的功能":["15.0"],"根据我个人的认知":["15.0"],"我设计了如下的学习路线图":["15.0"],"第四章":["15.0"],"基本语法":["15.0"],"在第三章的结尾":["16.0"],"我们制作了一个基本的hello":["16.0"],"world应用":["16.0"],"在其中":["16.0"],"我们使用了如下的语法":["16.0"],"ng":["17.0","17.1","17.2","17.3","18.0","18.2","19.0","19.2","19.4","20.0","21.0","22.0","22.1","24.0","24.2","25.0","25.2","25.3","25.4","30.1","30.3","30.4"],"include":["17.0","17.1"],"当html代码过于复杂":["17.1"],"或者期望建立单页应用":["17.1"],"single":["17.1","52.2"],"page":["17.1","52.2","100.0"],"application":["17.1","52.2"],"spa":["17.1"],"时":["17.1"],"template":["17.3","30.5","31.0","31.1","33.0","47.0","48.2","64.37","64.38","64.41","64.46","64.47","68.9","68.10","68.11","68.12","68.13","68.14","68.15","73.1"],"用于将多个html片段存放于一个html文件中":["17.3"],"app":["18.0","18.1","18.2","20.1","23.2","28.0","28.1","30.6","32.0","32.5"],"并在html中引用":["18.1"],"目录中新建一个":["18.1"],"标签可以放置在":["18.2"],"标签或者":["18.2"],"标签上":["18.2"],"也可以放置在html页面的任何一个标签上":["18.2"],"这里":["18.2"],"引入javascript文件的顺序是有差异的":["18.3"],"controller":["19.0","19.1","19.2","20.0","20.1","30.1","34.0"],"是使用angularjs的核心功能之一":["19.0"],"在前一节我们已经了解了作用域的概念":["19.0"],"则是真正应用作用域来制作功能的核心部分":["19.0"],"应用":["19.0"],"我们先分析":["19.2"],"的javascript编码部分":["19.2"],"funtion":["19.3"],"封装的函数":["19.3"],"会被绑定到":["19.3"],"firstctrl":["19.3","20.1"],"上":["19.3","49.1"],"这个概念相对容易理解":["19.3"],"我们需要注意的":["19.3"],"在angularjs中":["19.5"],"最简单传入数据的方法其实可以更简单":["19.5"],"不推荐这样做":["19.5"],"binding":["20.0","64.27","64.28","64.29","64.31"],"上一节我们介绍了如何将":["20.0"],"的数据显示在html当中":["20.0"],"但是我们如何在页面中修改这些数据呢":["20.0"],"这一步操作也很简单":["20.0"],"我们先直接看看代码吧":["20.0"],"界面操作里面还有一个重要的功能":["20.1"],"就是界面上按钮的与控制器中的函数进行绑定":["20.1"],"这个也很容易实现":["20.1"],"除了用于显示信息外":["20.2"],"数据绑定还可用于其他地方":["20.2"],"比如":["20.2","78.2","78.7","103.1"],"下面的例子用于根据输入来调整样式":["20.2"],"doctype":["20.2"],"if":["21.0","21.1","49.1","49.3","60.38","78.4","78.5","79.0","97.3","98.6","112.6"],"show":["21.0","21.1","49.3"],"hide":["21.0"],"本节我们将学习的是如何通过变量来控制html是否显示":["21.0"],"这三个语句具体的用法如下":["21.0"],"scope":["21.0","30.1","34.0"],"data":["21.0","21.2","29.6","51.6","51.8","81.0"],"与":["21.1","49.3","55.2","58.7","60.54","63.5","63.22","63.23","64.54","76.22","77.3","88.3","96.8","96.16"],"例子中使用了":["21.2"],"flag":["21.2"],"repeat":["22.0","25.0","30.4","76.6"],"本节将讲述如何使用":["22.0"],"对一个列表的数据进行遍历并显示出来":["22.0"],"首先":["22.0","24.1"],"在实际的使用场景中":["22.1"],"如果我们使用一个表格来管理信息":["22.1"],"那么可能表格的每一行都会有一些对应的操作功能":["22.1"],"如编辑":["22.1"],"删除":["22.1"],"等":["22.1","49.1","50.5","78.29","96.22","112.4","114.2"],"那么":["22.1","93.4"],"我们如何在":["22.1"],"filter":["23.0","23.3","87.13","96.4"],"过滤器是angularjs的另一项强大的功能":["23.0"],"如果能使用好它":["23.0"],"能够帮助我们极大的节省工作量":["23.0"],"以下是几个应用":["23.0"],"的例子":["23.0"],"number":["23.0","49.4","60.37","78.5","87.8","87.10","107.3","108.1","112.6"],"显示两位小数":["23.0"],"angularjs支持多个filter同时应用":["23.1"],"比如以下的例子":["23.1"],"自己创建自定义的过滤器也很简单":["23.2"],"我们下面尝试自己制作一个将文字全部翻转过来的过滤器":["23.2"],"中增加如下代码":["23.2"],"进行搜索":["23.3"],"angularjs提供了通过filter的搜索功能":["23.3"],"当然":["23.3"],"这个搜索功能并不是非常常用":["23.3"],"因为搜索工作现在一般在服务端完成":["23.3"],"如果数据量非常小":["23.3"],"用法":["23.4","47.0","119.3","119.4"],"效果":["23.4"],"searchtext":["23.4"],"t":["23.4","48.5","64.49","107.4","108.9","108.12"],"搜索所有字段":["23.4"],"name":["23.4","48.2","64.44","75.1","77.10","78.4","87.10","87.11","97.5","99.5","99.6","108.1"],"class":["24.1","24.4","24.5","49.5","51.6","51.7","64.28","68.1","68.2","68.3","68.4","68.5","68.6","68.7","68.8","68.9","68.10","68.11","68.12","68.13","68.14","68.15","77.22","78.9","79.0","108.5","112.4","112.6"],"通过":["24.1","32.3","60.33","63.5"],"我们可以对界面元素的css样式进行控制":["24.1"],"下面":["24.1","30.3","32.0"],"让我们通过示例来看看功能如何实现":["24.1"],"此示例来源于官网的ngclass介绍界面":["24.1"],"我进行了一些加工":["24.1"],"我们先创建一个":["24.1"],"style":["24.1","24.4","24.5","49.5","64.29","68.3","68.9","68.10","68.11","68.12","68.13","68.15"],"css":["24.1","24.4","61.0","68.2","68.4","68.5","68.7","69.0","72.0","116.0"],"删除线":["24.1"],"strike":["24.1"],"text":["24.1","49.4","64.7"],"decoration":["24.1"],"line":["24.1"],"through":["24.1"],"粗体":["24.1"],"在上方的示例中":["24.2"],"我们是针对提前设定好的样式进行是否生效的判断":["24.2"],"除了这种使用方式":["24.2"],"class还支持直接传入字符串的方式进行样式调整":["24.2"],"这两种模式也可以结合使用":["24.3"],"示例如下":["24.3"],"我们先在":["24.4"],"中加入css的动画效果代码":["24.4"],"base":["24.4","120.3"],"transition":["24.4"],"all":["24.4"],"提供的功能比":["24.5"],"要少一些":["24.5"],"只支持样式的传入":["24.5"],"我们可以使用以下两种模式":["24.5"],"span":["24.5"],"background":["24.5"],"options":["25.0","25.2","25.3","25.4"],"在学习了":["25.0"],"过后":["25.0"],"我们其实已经可以用循环的方式实现下拉列表的选项":["25.0"],"angularjs提供了":["25.0"],"的方法":["25.0"],"让我们能够更轻松的完成这项工作":["25.0"],"官网提供了一个详尽的示例进行演示":["25.0"],"点击打开后滑动到页面最下部进行效果测试":["25.0"],"本节中的内容":["25.0"],"是将官网的内容进行梳理后进行的讲解":["25.0"],"在很多时候":["25.1"],"我们期望能有一个没选中的选项":["25.1"],"我们可以通过手动的方式添加这个选项":["25.1"],"group":["25.2"],"by":["25.2"],"也支持按组排列数据":["25.2"],"使用":["25.2","25.4","30.6","60.44","60.47","64.19","64.28","64.29","64.31","86.5","108.4","108.5"],"disable":["25.3"],"when":["25.3"],"还可以通过":["25.3"],"语法来设置选项是否可选":["25.3"],"同样的":["25.3"],"我们需要在列表中先新增字段":["25.3"],"以下第一列数据并未加上":["25.3"],"在上面的例子中":["25.4"],"我们传入的是一个列表":["25.4"],"array":["25.4","49.4","60.37","79.0","85.1","85.2","87.1","87.12","87.14","107.2"],"也支持以对象":["25.4"],"object":["25.4","49.4","60.32","60.37","64.56","76.13","78.7","79.0","92.1","99.6","99.8"],"的方式传入数据":["25.4"],"在本章中":["26.0"],"directive":["27.0","28.1","32.0","32.5"],"在前一章中":["27.0"],"我们学习了angularjs的基本用法":["27.0"],"我们将学习":["27.0"],"其实":["27.1"],"本章我们将从最基本的自定义directive开始":["27.2"],"下面我们将制作我们的第一个自定义directive":["28.0"],"让我们对":["28.0"],"进行一些修改":["28.0"],"以下这段代码用于声明一个directive":["28.1"],"people":["28.1"],"function":["28.1","32.0","32.5","48.5","60.33","60.37","60.38","60.47","64.49","76.34","77.9","77.10","77.17","78.31","79.0","85.2","99.3","99.5","99.8","112.6"],"return":["28.1","32.0","32.5","48.5","77.9","78.1","79.0","107.3","112.6"],"如果在配置directive时":["28.3"],"加入":["28.3"],"replace":["28.3","64.16","81.0"],"true":["28.3","77.21","79.0","106.2"],"是告诉angularjs":["28.4"],"这个directive应该如何使用":["28.4"],"在前一节中":["29.0"],"我们创建了一个名为":["29.0"],"angularjs要求directive的命名使用":["29.1"],"在html代码中":["29.2"],"使用的是连接符的形式":["29.2"],"下面我们对比看看命名和使用的对应字符串":["29.2"],"命名和用法不同的核心原因":["29.3"],"angularjs在解析html时":["29.4"],"会将名称取出":["29.4"],"如":["29.4","50.5","87.12","95.5","108.1","112.4"],"在前面的讲解中":["29.5"],"我们讲解示例时":["29.5"],"使用的连接符全部都为减号":["29.5"],"x":["29.6","36.0","77.9","94.0"],"部分":["29.6"],"在第一节中":["30.0"],"我们使用的directive":["30.0"],"可以直接获取并显示控制器中的数据":["30.0"],"人的名称和性别":["30.0"],"如果我们有多个人的信息需要显示怎么处理":["30.0"],"这个问题其实非常常见":["30.0"],"因为directive通常是将需要在界面中重复使用的部分抽象出来":["30.0"],"便于一次修改":["30.0"],"多处地方生效":["30.0"],"如博客的评论的列表显示":["30.0"],"在之前学习控制器":["30.1"],"的使用过程中":["30.1"],"我们使用了":["30.1"],"功能":["30.1","61.14","61.18","61.20","61.30","64.4","78.2","78.13","78.18"],"用于提供对接html和javascript对应模块的功能":["30.1"],"中的配置":["30.2"],"可以看到":["30.2"],"在上方的javasciprt文件中":["30.2"],"ontroller":["30.3"],"中放入多个相同的directive":["30.3"],"和directive一起显示数据":["30.4"],"知道了如何传入数据":["30.4"],"那么我们就可以将directive的使用和":["30.4"],"以上我们看到的示例只是将数据显示了出来":["30.5"],"如果我们期望在directive中修改这些数据如何处理呢":["30.5"],"其实很简单":["30.5"],"将":["30.5","78.7"],"中原先显示的数据的部分":["30.5"],"替换为":["30.5","31.0"],"除了以等号":["30.6"],"直接传入对象之外":["30.6"],"directive也支持直接传入文本":["30.6"],"符号":["30.6","30.7"],"上面我们介绍了等号":["30.7"],"符号的使用方法":["30.7"],"它们分别对应传入对象和文本":["30.7"],"如果我们期望传入一个回调函数呢":["30.7"],"这样我们就可以实现如封装一个按钮为一个directive":["30.7"],"然后让它在点击后实现我们期望的功能的效果":["30.7"],"这就需要使用到":["30.7"],"下面我们来看看实际的例子":["30.7"],"这个例子比较复杂":["30.7"],"请仔细分析研读":["30.7"],"templateurl":["31.0"],"获取模板":["31.0"],"有些时候":["31.0"],"directive中的模板":["31.0"],"会变得很大":["31.0"],"如果仍然放置在定义中":["31.0"],"那么可能会造成阅读和修改不方便的情况":["31.0"],"针对这种情况":["31.0"],"我们可以将":["31.0"],"除了直接将html部件存储为独立的文件":["31.1"],"我们也可以直接使用angularjs提供的ng":["31.1"],"template功能":["31.1"],"这点在第四章中也有提到":["31.1"],"这里是一个新的示例":["31.1"],"帮助您对比物理文件和":["31.1"],"文件的优先级":["31.1"],"例如":["31.1","49.1","75.2","91.4","96.21","96.22","107.4","108.10"],"templateurl的特性与我们在第四章学习的ng":["31.2"],"include类似":["31.2"],"link":["32.0"],"在前面几节中":["32.0"],"我们都是在学习如何配置directive":["32.0"],"我们将开始学习directive最灵活的部分":["32.0"],"函数的基本使用方法如下":["32.0"],"formdirective":["32.0","32.5"],"restrict":["32.0"],"从":["32.1","78.7","93.3"],"与jquery的关系":["32.2"],"在directive中":["32.2"],"我们不免需要对页面元素进行操作":["32.2"],"为了提供这项功能":["32.2"],"angularjs几乎原版搬运了jquery操作元素的功能":["32.2"],"他们称之为":["32.2"],"安装和使用jquery共有两步":["32.3"],"element":["32.4","32.5"],"的功能":["32.4"],"我们在引入jquery后":["32.4"],"可以通过如下代码查看效果":["32.4"],"这里需要注意的是":["32.4"],"使用jqlite的方法和以下代码中使用的方法是不一样的":["32.4"],"上绑定鼠标移入移出时的变化效果":["32.5"],"transclude":["33.0"],"在前面我们使用到的directive":["33.0"],"都会将包含有directive的元素整体替换为":["33.0"],"中的内容":["33.0"],"这样":["33.0","112.2"],"就让directive的用途缩减为只能封装最低级别的元素":["33.0"],"但是我们使用的":["33.0"],"本节是directive的高级使用方法之一":["34.0"],"通过赋予directive之间互相通讯的功能":["34.0"],"我们可以将部件的抽象化提升到一个更高的层次":["34.0"],"本节将通过官方网站中一个较复杂的例子来讲解具体的使用方法":["34.0"],"通过directive的配置":["34.0"],"将html中的代码自动抽取为一个tab列表":["34.0"],"点击tab列表中的标题":["34.0"],"则可自动的显示tab中包含的内容":["34.0"],"在javascript代码中":["34.0"],"我们声明了2个directive":["34.0"],"gqtabcontainer":["34.0"],"gqtabcontent":["34.0"],"中加入了":["34.0"],"这项配置":["34.0"],"并封装了":["34.0"],"panes":["34.0"],"用于存储数据":["34.0"],"select":["34.0"],"用于接收界面点击事件":["34.0"],"以及一个":["34.0"],"addpane":["34.0"],"方法用于接收":["34.0"],"本章讲述的内容是angularjs的核心内容之一":["35.0"],"angularjs":["37.1"],"本书使用gitbook和github托管":["37.2"],"简介":["37.3","38.0","103.0","121.1"],"环境的准备":["37.3","38.0"],"项目的创建和配置":["37.3","38.0"],"angularjs的第一步":["37.3","38.0"],"学习和使用angularjs":["37.3","38.0"],"基本表达式":["37.3","38.0"],"本书会介绍如何应用angularjs":["37.4"],"但是本书不会涉及到javascript语法以及html和css的布局模式":["37.4"],"因此":["37.4","75.4"],"本书对读者有一定的前置技术要求":["37.4"],"在进行前端开发的工作之前":["37.5"],"我担任过几年的移动互联网产品经理":["37.5"],"这样实现后":["37.6"],"我认为主要有以下几个方面的好处":["37.6"],"以下内容部分读者可能会感到有些偏激":["37.8"],"但是这是对我":["37.8"],"一个拥有一些其他编程经验的前端入门者":["37.8"],"的心路记录":["37.8"],"2015年初":["37.8"],"在准备通过完全的web方式实现一个b":["37.8"],"s模式的企业服务网站之后":["37.8"],"我开始进行技术方面的准备":["37.8"],"在此之前":["37.8"],"我只有android客户端和php服务端的工作经验":["37.8"],"另外":["37.8"],"我对web的基本开发技能使用过一些":["37.8"],"由于业务需要":["37.9"],"我准备重新制作网站的v2版本":["37.9"],"在这个版本中":["37.9"],"为什么没有选择angular":["37.10"],"其实在重构时":["37.10"],"我优先的选择是angular":["37.10"],"typescript":["37.10","48.3","48.5","55.2","55.3","64.49","68.10","68.13","68.15","85.1","87.6","87.7","87.8","87.9","87.10","87.11","87.14","88.5","100.0","106.1","106.2","106.4","106.5","107.3","107.4","108.4","108.5","108.9","108.11","108.12"],"因为它引入了很多新的特性":["37.10"],"比如应用了最新的es标准":["37.10"],"大量优化了angular工作的效率等等":["37.10"],"下面3个原因导致了我放弃了angular":["37.10"],"2作为新版本网站的技术选择":["37.10"],"我自认为是一个比较追求新技术的人":["37.10"],"但是当我测试angular":["37.10"],"2时":["37.10"],"相关":["40.0","46.0","60.0"],"vue的区别":["41.1"],"设计思想":["41.2"],"组件化":["41.2"],"每个组件都符合开放":["41.2"],"在16":["41.3"],"hooks版本之前":["41.3"],"react的生命周期分为组件挂载阶段":["41.3"],"hooks与":["41.4"],"react的严格模式是在组件外层设置":["41.5"],"react":["41.5","43.1","44.1","63.3","63.5","63.7","63.18","83.0"],"scrictmode":["41.5"],"标签":["41.5"],"识别不安全的生命周期":["41.6"],"关于使用过时字符串":["41.6"],"中页面重新加载怎么保留数据":["41.7"],"这个问题就涉及到了":["41.7"],"数据持久化":["41.7"],"jsx":["41.8","45.1"],"jsx吗":["41.9"],"处理错误边界":["41.10"],"error":["41.10"],"boundaries":["41.10"],"错误边界是一种react组件":["41.10"],"它能够不过并处理子组件中任何位置出现javascript的错误":["41.10"],"并渲染备用ui":["41.10"],"而不是使整个组件数崩溃":["41.10"],"组件为什么要大写":["41.11"],"fragment":["41.12"],"react中组件是不允许返回多个节点的":["41.12"],"非受控组件":["41.13"],"对seo友好":["42.1"],"爬虫获取到的是已经异步执行完成后得到的有数据的html":["42.1"],"组件间的通信":["43.0"],"组件调":["43.1"],"组件":["43.1"],"法":["43.1"],"useimperativehandle":["43.1"],"调":["43.1"],"import":["43.1","45.1","83.0"],"useref":["43.1"],"usestate":["43.1","45.1"],"from":["43.1","64.35","76.13","83.0","87.12","96.21"],"虚拟dom相当于是在js和":["44.0"],"传统web应用":["44.2"],"虚拟dom是一个对象":["44.3"],"这个对象是由真实的dom转化而来":["44.3"],"div":["44.3","48.2","49.4","64.41","68.1","68.2","68.3","68.4","68.5","68.6","68.7","68.8","68.9","68.10","68.11","68.12","68.13","68.14","68.15"],"classname":["44.3"],"开发时不必关注dom":["44.5"],"只关注业务逻辑":["44.5"],"具有浏览器的兼容和跨平台的兼容":["44.6"],"high":["45.0"],"order":["45.0"],"component":["45.0","47.0","64.35"],"在react中":["45.0"],"高阶组件":["45.0"],"hook中常见的高阶函数":["45.1"],"高阶函数":["45.1"],"是react中最基础的hook":["45.1"],"用于在函数组件中添加状态":["45.1"],"它返回一个数组":["45.1"],"包含当前状态":["45.1"],"和更新状态的函数":["45.1"],"这个更新函数可以接收一个新的状态值":["45.1"],"也可以接收一个函数来更新状态":["45.1"],"useref的区别":["45.2"],"两者最大的区别是":["45.2"],"用于管理状态":["45.2"],"alive":["47.0"],"定义":["47.0","64.2","88.0"],"keepalive是一个内置组件":["47.0"],"它的功能是在多个组件间动态切换时缓存被移除的组件实例":["47.0"],"即使被包含的组件保留状态":["47.0"],"或者避免重新渲染":["47.0"],"vue":["47.0","48.2","49.1","49.4","50.2","51.5","51.6","58.11","58.13","63.30","64.37","64.38","64.41","64.46","68.9","68.10","68.11","68.12","68.13","68.14","68.15","73.1","83.0"],"被keep":["47.0"],"alive包含的组件会被缓存":["47.0"],"被":["47.0"],"包含的组件不会被再次初始化":["47.0"],"也就意味着":["47.0"],"不会重走生命周期函数":["47.0"],"但有时候希望缓存的组件能够再次进行渲染":["47.0"],"针对这个问题":["47.0"],"vue3中keepalive源码":["47.1"],"是一个用于在下次":["48.0"],"dom":["48.0","49.1","49.7","63.5","63.6","63.10"],"更新循环结束之后执行回调函数的方法":["48.0"],"其内部原理涉及到":["48.0"],"浏览器中":["48.1"],"每个宏任务结束后都会检查微任务队列":["48.1"],"如果有任务则依次执行":["48.1"],"当所有微任务执行完成后":["48.1"],"才会执行下一个宏任务":["48.1"],"因此可以通过将任务作为微任务添加到微任务队列中":["48.1"],"来确保任务在所有宏任务执行完毕后立即执行":["48.1"],"info":["48.1","75.1","87.12"],"javascript的事件运行机制":["48.1"],"进程与线程":["48.1"],"进程":["48.1"],"看下面一个例子":["48.2"],"比如当dom内容改变后":["48.2"],"我们需要获取的最新高度":["48.2"],"vue2中nexttick源码":["48.3"],"路径":["48.3"],"src":["48.3","48.5","61.9","61.10"],"core":["48.3","48.5"],"util":["48.3"],"next":["48.3","64.35","78.25","78.27"],"tick":["48.3"],"这段源码分为两个部分":["48.3"],"一是判断当前环境能使用的最合适的":["48.3"],"api":["48.3","50.5","61.42"],"并保存异步函数":["48.3"],"二是调用异步函数执行回调队列":["48.3"],"环境判断":["48.3"],"主要是判断用哪个宏任务或微任务":["48.3"],"因为宏任务耗费的时间是大于微任务的":["48.3"],"所以先使用微任务":["48.3"],"判断顺序如下":["48.3"],"promise":["48.3","48.5","64.55","87.14"],"mutationobserver":["48.3"],"setimmediate":["48.3"],"settimeout":["48.3","88.3","88.4"],"export":["48.3","48.5","54.3","112.6"],"let":["48.3","48.5","60.37","77.1","77.3","77.5","77.6","78.1","78.4","78.5","78.28","84.0","97.3","99.6","99.7","107.3","115.5"],"isusingmicrotask":["48.3"],"false":["48.3"],"是否启用微任务开关":["48.3"],"callbacks":["48.3"],"回调队列":["48.3"],"pending":["48.3"],"异步控制开关":["48.3"],"标记是否在执行回调函数":["48.3"],"该方法负责执行队列中的全部回调":["48.3"],"vue3的例子如下":["48.4"],"nexttick源码":["48.5"],"源码地址":["48.5"],"packages":["48.5"],"runtime":["48.5"],"sheduler":["48.5"],"ts":["48.5"],"resolvedpromise":["48.5"],"any":["48.5","55.2","107.3"],"ressolve":["48.5"],"currentflushpromise":["48.5"],"void":["48.5","88.5"],"null":["48.5","92.1","92.4","112.4"],"nexttick":["48.5"],"this":["48.5","74.0","77.12","78.6","78.9","87.16","99.5","112.4","112.6"],"fn":["48.5"],"p":["48.5"],"resolvepromise":["48.5"],"then":["48.5"],"bind":["48.5","49.1","49.5","60.33","74.0"],"可以看出nexttick接受一个函数为参数":["48.5"],"同时会创建一个微任务":["48.5"],"在页面调用":["48.5"],"一次弄懂":["48.6"],"指令":["49.0"],"vue指令":["49.1"],"directives":["49.1"],"是一种特殊的标记":["49.1"],"用于在模板中以声明式的方式将某些行为应用到":["49.1"],"指令以":["49.1"],"v":["49.1","64.10","64.31","64.37","64.45","64.47","68.9","68.10","68.11","68.12","68.13","68.14","68.15"],"开头":["49.1"],"后面跟着指令的名称":["49.1"],"js提供了一些内置的指令":["49.1"],"同时也允许开发者自定义指令":["49.1"],"指令attribute的期望值是一个javascript表达式":["49.1"],"除了极少数个例外":["49.1"],"for":["49.1","49.4","60.37","64.10","68.9","68.10","68.11","68.12","68.13","68.14","68.15","79.0","97.3","107.3"],"on":["49.1","49.7","64.9"],"常见vue指令":["49.2"],"的区别":["49.3"],"基于原始数据多次渲染元素或模板块":["49.4"],"期望绑定值类型":["49.4"],"string":["49.4","60.37","68.15","79.0","87.9","87.10","87.11","100.0","107.4","108.1","112.6"],"iterable":["49.4"],"指令值必须使用特殊语法":["49.4"],"alias":["49.4"],"in":["49.4","60.37","64.35","68.9","68.10","68.11","68.12","68.13","68.14","68.15","97.3"],"expression":["49.4"],"为正在迭代的元素提供一个别名":["49.4"],"item":["49.4","68.9","68.10","68.11","68.12","68.13","68.14","68.15","87.10","87.11"],"items":["49.4"],"动态地绑定一个或多个attribute":["49.5"],"也可以是组件的prop参数":["49.5"],"修饰符":["49.5","49.6","49.7","64.4","76.30"],"camel":["49.5"],"将短横线命名的attribute变更为驼峰式命名":["49.5"],"prop":["49.5","64.3","78.5"],"强制绑定为dom":["49.5"],"property":["49.5"],"attr":["49.5"],"attribute":["49.5"],"用途":["49.5"],"当用于绑定":["49.5"],"或":["49.5","78.2","96.21","112.2"],"支持额外的值类型":["49.5"],"如数组或者对象":["49.5"],"model":["49.6","64.2"],"用于在表单控件或者组件上创建双向数据绑定":["49.6"],"指令用于监听":["49.7"],"事件":["49.7"],"stop":["49.7"],"调用":["49.7","99.4"],"event":["49.7","50.2","60.11","64.31"],"stoppropagation":["49.7"],"prevent":["49.7"],"evemt":["49.7"],"preventdefault":["49.7"],"capture":["49.7"],"在捕获模式中调用事件监听器":["49.7"],"self":["49.7"],"只有事件从元素本身发出菜触发处理函数":["49.7"],"keyalias":["49.7"],"只在某些案件下触发处理函数":["49.7"],"once":["49.7"],"vue2":["50.0"],"的生命周期与":["50.0"],"vue3":["50.0"],"的声明是有所区别的":["50.0"],"的生命周期主要是":["50.0"],"生命周期钩子":["50.1"],"描述":["50.1"],"beforecreate":["50.1","50.2"],"created":["50.2","50.3","50.4"],"实例":["50.2"],"进行数据观测":["50.2"],"完成数据观测":["50.2"],"属性和方法的运算":["50.2"],"watch":["50.2","64.48","64.49","64.50","64.51","64.52"],"事件回调的配置":["50.2"],"可调用":["50.2"],"methods":["50.2"],"数据请求在created和mouted的区别":["50.3"],"是在组件实例一旦创建完成的时候立刻调用":["50.3"],"除了":["50.4","92.4"],"setup":["50.4","50.5"],"替代了":["50.4"],"函数是一个全新的组件选项":["50.5"],"它是":["50.5"],"composition":["50.5"],"的核心":["50.5"],"用于初始化组件实例":["50.5"],"接收两个参数":["50.5"],"props":["50.5","63.5","64.46"],"context":["50.5","64.40"],"其中":["50.5","98.4","98.6"],"是父组件传递给当前组件实例的属性":["50.5"],"而":["50.5"],"属性则包含了一些":["50.5"],"helper":["50.5"],"的方法和组件选项":["50.5"],"attrs":["50.5"],"slots":["50.5"],"emit":["50.5","64.40"],"我们可以使用vue3提供多个工具函数来定义响应式数据":["50.5"],"监听生命周期钩子":["50.5"],"双向绑定原理":["51.0"],"单向绑定非常简单":["51.1"],"就是把":["51.1"],"双向绑定就是在单向绑定的基础上":["51.2"],"通过修改视图":["51.2"],"双向数据绑定由三部分组成":["51.3"],"数据层":["51.3"],"viewmodel的主要职责":["51.4"],"以":["51.5"],"为例":["51.5"],"先看看双向绑定的流程":["51.5"],"new":["51.5","60.18","60.35","60.36","78.1","78.4","78.5","78.9","78.28","120.3"],"先来一个构造函数":["51.6"],"执行初始化":["51.6"],"对":["51.6"],"执行响应化处理":["51.6"],"constructor":["51.6","51.7","78.9","112.4","112.6"],"compile":["51.7"],"对每个元素节点的指令进行扫描跟解析":["51.7"],"根据指令模版替换数据":["51.7"],"以及绑定相应的更新函数":["51.7"],"compile结构":["51.7"],"el":["51.7"],"vm":["51.7"],"视图中会用到":["51.8"],"中某":["51.8"],"key":["51.8","68.9","68.10","68.11","68.12","68.13","68.15","97.3","107.3"],"这称为依赖":["51.8"],"同一个":["51.8"],"可能会出现多次":["51.8"],"每次都需要收集出来用一个":["51.8"],"watcher":["51.8"],"来维护它们":["51.8"],"此过程称为依赖收集":["51.8"],"多个":["51.8"],"需要一个":["51.8"],"dep":["51.8"],"来管理":["51.8"],"需要更新时由":["51.8"],"统一通知":["51.8"],"实现思路":["51.8"],"vue双向绑定":["51.9"],"首页白屏问题以及解决方案":["52.0"],"在谈论首页白屏问题之前":["52.1"],"加载过程":["52.3"],"首先是":["52.3"],"也就是":["52.3"],"fp":["52.3"],"阶段":["52.3"],"全称":["52.3"],"first":["52.3"],"paint":["52.3"],"翻译为":["52.3"],"首次绘制":["52.3"],"是时间线上的第一个时间点":["52.3"],"它代表浏览器第一次向屏幕传输像素的时间":["52.3"],"预渲染":["52.4"],"预渲染就是":["52.4"],"webpack":["52.4","63.24","63.27","114.2","115.4"],"打包的时候渲染":["52.4"],"通过无头浏览器":["52.4"],"无头浏览器":["52.4"],"打包的时候":["52.4"],"可以把index":["52.4"],"html的内容放入浏览器":["52.4"],"但是浏览器是空白的":["52.4"],"然后当进入页面时直接加载这个index":["52.4"],"但没有ajax请求":["52.4"],"获取到预渲染的页面html内容":["52.4"],"然后再放入index":["52.4"],"积累的知识点":["53.0"],"06":["54.1"],"设计一个函数让两个数字相加":["54.1"],"但不得使用":["54.1"],"或者其他运算符":["54.1"],"require":["54.3","86.4","97.4"],"区别":["54.3","61.38","63.5","64.54"],"来源不同":["54.3"],"来源于ecm":["54.3"],"es6":["54.3","60.37","63.28","76.18","76.20","76.34","77.5","77.10","77.21","78.10","79.0"],"exports":["54.3"],"来源于":["54.3"],"commonjs":["54.3","79.0"],"加载时机不同":["54.3"],"unknown":["55.2"],"类型表示没有任何限制":["55.2"],"该类型的变量可以赋予任意类型的值":["55.2"],"一旦设置为":["55.2"],"类型":["55.2","55.3","61.32","92.1","108.1"],"实际上会关闭这个变量的类型检查":["55.2"],"即使有明显的类型错误":["55.2"],"只要句法正确":["55.2"],"都不会报错":["55.2"],"never":["55.3","79.0","108.1"],"为了保持与":["55.3"],"集合论":["55.3"],"的对应关系":["55.3"],"以及类型运算的完整性":["55.3"],"还引入了":["55.3"],"空类型":["55.3"],"运行在客户端浏览器上":["60.1"],"不用预编译":["60.1"],"直接解析执行代码":["60.1"],"中的基本数据类型":["60.2"],"ajax":["60.3","63.34"],"asynchronous":["60.3"],"and":["60.3"],"xml":["60.3"],"是一种使用":["60.3"],"进行异步通信的技术":["60.3"],"它可以在不刷新整个页面的情况下":["60.3"],"通过向服务器发送请求并获取响应数据":["60.3"],"实现动态更新页面内容":["60.3"],"常用":["60.4","60.14","60.15","77.0"],"状态码":["60.4"],"含义":["60.4"],"表示客户端应该继续发送请求":["60.4"],"闭包可以简单理解成":["60.6"],"匿名自执行函数":["60.7"],"我们知道所有的变量":["60.7"],"如果不架上":["60.7"],"闭包的写法一般是函数嵌套函数":["60.8"],"可以访问函数外部的变量":["60.8"],"闭包可以访问定义它的函数的参数和局部变量":["60.8"],"甚至可以访问全局变量":["60.8"],"保存变量的状态":["60.8"],"当函数执行完毕后":["60.8"],"闭包仍然可以访问它所引用的变量":["60.8"],"并且这些变量的值不会被回收":["60.8"],"事件委托就是利用时间冒泡":["60.9"],"提高整体运行性能":["60.10"],"假如现在有有00个li标签":["60.10"],"那个li事件都有相同的点击事件":["60.10"],"如果使用循环遍历去触发每个li元素上的事件":["60.10"],"这将会不断与dom节点进行交互":["60.10"],"当一个元素接收到事件的时候":["60.12"],"本地存储":["60.13"],"local":["60.13"],"storage":["60.13"],"和cookie都是用于在浏览器端存储数据的两种不同的机制":["60.13"],"主要有以下区别":["60.13"],"存储容量":["60.13"],"cookie的存储容量通常比较小":["60.13"],"新增":["60.16"],"删除键值对":["60.16"],"新增键值对":["60.16"],"面向对象是一种思想":["60.17"],"是基于面向过程而言的":["60.17"],"就是说面向对象是将功能等通过对象来实现":["60.17"],"构造函数也是一个普通函数":["60.18"],"创建方式和普通函数一样":["60.18"],"但是构造函数习惯首字母大写":["60.18"],"调用方式不一样":["60.18"],"普通函数直接调用":["60.18"],"构造函数要用关键字":["60.18"],"来调用":["60.18"],"链接":["60.20"],"async函数其实是":["60.21"],"generatior函数和promise的语法糖":["60.21"],"async就是将generator函数的":["60.21"],"请求传参长度误区":["60.22"],"误区":["60.22"],"我们经常说":["60.22"],"请求参数的大小存在限制":["60.22"],"而post请求的参数大小是无限制的":["60.22"],"请求和":["60.23"],"post":["60.23"],"事件流描述的是从页面中接收事件的顺序":["60.25"],"dom二级事件流包括几个阶段":["60.25"],"call":["60.26","60.33","74.0","74.1","78.6","99.4"],"首先是三个事件":["60.28"],"mousedown":["60.28"],"mousemove":["60.28"],"mouseup":["60.28"],"由于字符串":["60.30"],"对象和数组没有固定大小":["60.30"],"所以当他们大小已知时":["60.30"],"才能够对它们进行动态的存储分配":["60.30"],"javascript程序每次创建字符串":["60.30"],"标记清除":["60.31"],"这是最常见的垃圾回收的方式":["60.31"],"当变量进入环境时":["60.31"],"就标记这个变量为":["60.31"],"进入环境":["60.31"],"从逻辑上来讲":["60.31"],"永远不能释放进入环境的变量所占用的内存":["60.31"],"只要执行流程进入相应的环境":["60.31"],"就可以用到它们":["60.31"],"当离开环境时":["60.31"],"就标记离开环境":["60.31"],"在es5中":["60.32"],"我们可以通过":["60.32"],"defineproperty":["60.32","64.56","78.7"],"原理":["60.33","61.36"],"apply":["60.33","74.0","78.8"],"或者":["60.33","83.0","96.18"],"方法来实现":["60.33"],"prototype":["60.33","76.4","76.5","76.7","76.8","76.9","76.10","76.13","76.14","76.15","76.16","76.17","76.18","76.31","87.1","93.3","96.1","96.2","96.3","96.4","96.5","96.6","96.7","96.8","96.9","96.10","96.11","96.12","96.14","96.15","96.16","96.17","96.18","96.19","96.20","96.21","96.23","99.8"],"加载完后再加载下一张":["60.34"],"obj":["60.35","60.36","60.37","76.21","76.24","76.25","77.21","78.1","78.5","97.3"],"image":["60.36"],"对象的深度克隆":["60.37"],"通过递归可以简单实现对象的深度克隆":["60.37"],"但是这种方法不管是":["60.37"],"还是":["60.37"],"es5":["60.37"],"实现":["60.37"],"都有同样的缺陷":["60.37"],"就是只能实现特定的":["60.37"],"的深度复制":["60.37"],"比如数组和函数":["60.37"],"不能实现包装对象":["60.37"],"boolean":["60.37","112.6"],"以及":["60.37"],"date":["60.37"],"对象":["60.37","92.3","96.21"],"regexp":["60.37"],"对象的复制":["60.37"],"深度克隆":["60.37"],"deepclone":["60.37"],"newobj":["60.37","97.3"],"instanceof":["60.37"],"i":["60.37"],"全排列":["60.38"],"全排列是一种对给定字符串中的字符进行重新排列的操作":["60.38"],"生成所有可能的排列组合":["60.38"],"permutate":["60.38"],"str":["60.38","107.4"],"result":["60.38"],"length":["60.38","81.0","107.3","112.4"],"在前后端分离的模式下":["60.40"],"前后端的域名是不一致的":["60.40"],"是由":["60.41"],"优化压缩图片":["60.42"],"图片格式的选择":["60.42"],"gif":["60.42"],"提供颜色较少":["60.42"],"指向":["60.43","74.0"],"indexof":["60.44","96.1"],"手写深拷贝":["60.45"],"深拷贝":["60.45"],"指针赋值":["60.45"],"for循环":["60.46"],"创建类有三种方法":["60.47"],"阻塞与非阻塞区别":["60.48"],"同步":["60.48"],"阻塞的":["60.48"],"重绘与回流":["60.49"],"https":["60.50","84.0","100.0","120.2"],"http叫做超文本传输协议":["60.50"],"是互联网应用最广泛的一种网络协议":["60.50"],"文件合并":["60.51"],"目的是减少":["60.51"],"预加载是指在页面加载完成之前":["60.52"],"常用的图片格式有":["61.1"],"盒模型是一个盛放内容的容器":["61.5"],"它由四部分组成":["61.5"],"元素的具体内容":["61.5"],"content":["61.5"],"标准盒模型":["61.7"],"css3中引入了":["61.7"],"音频标签的使用":["61.8"],"video":["61.9"],"audio":["61.10"],"source":["61.10","64.49","115.1"],"语义化标签":["61.11"],"优点":["61.12"],"提升可访问性":["61.12"],"利于":["61.12"],"seo优化":["61.12"],"边框":["61.14"],"属性名称":["61.14","61.15","61.17","61.18","61.19","61.20"],"radios":["61.14"],"背景":["61.15"],"渐变":["61.16"],"文本效果":["61.17"],"转换":["61.18"],"应用于":["61.18"],"过渡":["61.19"],"动画":["61.20"],"float":["61.21"],"当设置浮动属性时":["61.21"],"并且父元素没有设置高度时":["61.21"],"父元素会出现高度塌陷问题":["61.21"],"给父元素单独定义高度":["61.21"],"这个方法简单快速":["61.21"],"代码量少":["61.21"],"position":["61.22"],"reactive":["61.22","64.51"],"相对定位":["61.22"],"子父元素宽度固定":["61.24"],"设置子元素和父元素的行高一样":["61.25"],"子元素设置为行内块":["61.25"],"再加":["61.25"],"vertical":["61.25"],"子元素相对于父元素绝对定位":["61.26"],"子元素top":["61.26"],"left设置":["61.26"],"子元素的margin":["61.26"],"left和margin":["61.26"],"中间自适应":["61.27"],"margin":["61.27","61.35","68.4"],"负值法":["61.27"],"选择器":["61.30","61.31"],"后代选择器":["61.30"],"元素选择器":["61.30"],"类名选择器":["61.30"],"id选择器":["61.30"],"权重":["61.31"],"属性":["61.32","61.36","61.42","78.5","93.2","93.3","93.4"],"所有元素":["61.32"],"visibility":["61.32"],"cursor":["61.32"],"块级元素":["61.32","61.34"],"图片懒加载":["61.33"],"相邻的行内元素会排列在同一行":["61.34"],"不会独占一行":["61.34"],"通过给父盒子添加":["61.36"],"添加disable属性":["61.37"],"rem":["61.38"],"em":["61.38"],"绝对长度单位":["61.38"],"媒体查询扩展了":["61.39"],"结构":["61.40"],"作用":["61.41"],"drag":["61.42"],"如何让页面能够更快地显示和响应":["61.43"],"这里分为三个阶段":["61.43"],"加载阶段能做的主要优化":["61.44"],"减少关键资源个数":["61.44"],"例如把css和js改为内联形式":["61.44"],"关键资源比如原来有3个就减少到1个了":["61.44"],"其实就是说":["61.45"],"优化渲染进程中渲染帧的速度":["61.45"],"浏览器缓存":["61.47"],"用户输入url":["61.48"],"用户在输入url时候":["61.48"],"浏览器会根据url的协议":["61.48"],"在这段内容上加伤协议合成合法的url":["61.48"],"按下回车后":["61.48"],"导航栏显示加载状态":["61.48"],"当用户输入的是关键字的时候":["61.48"],"浏览器会讲输入内容作为搜索条件":["61.48"],"使用用户的默认设置的搜索引擎来进行搜索":["61.48"],"网络进程处理":["61.48"],"网络进程接收到url请求后会先检查本地缓存":["61.48"],"如果有缓存文件":["61.48"],"则先走缓存":["61.48"],"没有则进行网络请求":["61.48"],"开始":["61.48"],"dns解析":["61.48"],"dns解析的详细过程":["61.48"],"dns翻译过来就是域名系统":["61.48"],"是互联网上作为域名和ip地址相互映射的一个分布式数据库":["61.48"],"因为浏览器不能直接通过域名找到对应服务器的ip地址":["61.48"],"所以需要进行dns解析":["61.48"],"查找到对应ip进行访问":["61.48"],"用户在浏览器中输入域名":["61.48"],"操作系统会先检查浏览器的缓存和本地的":["61.48"],"host":["61.48","100.0"],"是否有这个网址记录":["61.48"],"5px的线":["61.49"],"采用":["61.49"],"meta":["61.49","78.1"],"viewport":["61.49"],"js动画和css3动画的差异":["61.50"],"渲染县城分为":["61.50"],"main":["61.50"],"thread":["61.50"],"compositor":["61.50"],"外边距折叠":["61.51"],"vs":["63.1"],"事件处理":["63.2"],"组件之间的数据传递":["63.4"],"相同点":["63.5","101.5"],"都支持服务器渲染":["63.5"],"都有虚拟":["63.5"],"组件化开发":["63.5"],"参数进行父子组件数据的传递":["63.5"],"都实现":["63.5"],"setstate":["63.8"],"生命周期函数":["63.9"],"状态":["63.11"],"是做什么的":["63.12"],"diff":["63.13"],"中构建组件的方式":["63.15"],"flux":["63.16"],"脚手架":["63.17"],"higher":["63.19"],"是什么":["63.21"],"性能优化有哪些":["63.25"],"使用来做什么的":["63.26"],"如何使用":["63.29"],"cors":["63.31"],"websocked":["63.32"],"vue是一套构建用户界面的渐进式":["64.1"],"数据驱动":["64.2"],"视图内容随着数据的改变而改变":["64.2"],"组件话":["64.2"],"可以增加代码复用性":["64.2"],"可维护性":["64.2"],"可测试性":["64.2"],"提高了开发效率":["64.2"],"方便重复使用":["64.2"],"体现了高内聚低耦合":["64.2"],"details":["64.2"],"mvvm模型":["64.2"],"mvvm":["64.2"],"view":["64.2"],"viewmodel":["64.2"],"是一种前端设计模式":["64.2"],"它将应用程序分为三个部分":["64.2"],"父级":["64.3"],"lazy":["64.4"],"改变后触发":["64.4"],"光标离开":["64.4"],"input":["64.4","64.30","64.37","87.14"],"输入框的时候值才会改变":["64.4"],"模版插值":["64.6"],"循环中":["64.10"],"computed":["64.11","64.52"],"计算属性是用来声明式地描述一个值依赖了其他的值":["64.11"],"vue中路由跳转的方式有两种":["64.12"],"分别是":["64.12","64.15"],"声明式":["64.12"],"跨域解决方案":["64.13"],"生命周期":["64.14"],"路由的实现":["64.15"],"vue路由有三种模式":["64.15"],"userouter":["64.16"],"中的":["64.16","108.1"],"push":["64.16","96.10","120.2"],"是手动调用内部路径切换方法":["64.16"],"transitionto":["64.16"],"路由模式":["64.17"],"模式是用":["64.18"],"createwebhashhistory":["64.18"],"创建的":["64.18"],"history就是":["64.19"],"html5模式":["64.19"],"createwebhistory":["64.19"],"创建":["64.19"],"html5":["64.19"],"history模式优势":["64.20"],"pushstate":["64.20"],"路由传参的两种方式":["64.21"],"params":["64.22","64.24"],"路由参数通常用于标识性的信息":["64.22"],"如资源id":["64.22"],"query":["64.23"],"查询参数适合用于传递非标识性信息":["64.23"],"如筛选条件":["64.23"],"标识性信息":["64.24"],"数据绑定的几种方式":["64.25"],"interpolation":["64.26"],"attributes":["64.27","82.0"],"dynamic":["64.28","64.29"],"form":["64.30"],"的路由钩子函数":["64.32"],"global":["64.33"],"before":["64.33"],"guards":["64.33","64.35"],"beforeeach":["64.33"],"per":["64.34"],"beforerouteenter":["64.35"],"to":["64.35","100.0","120.2","120.3"],"在路由进入的时候":["64.35"],"但是在组件渲染之前被调用":["64.35"],"beforerouteupdate":["64.35"],"在当前路由改变":["64.35"],"中如何自定义指令":["64.36"],"一个自定义指令是由一个包含类似组件生命周期钩子的对象来定义":["64.37"],"钩子函数会接收到指令所绑定元素作为其参数":["64.37"],"focus":["64.37"],"setup标签版本传递数据的方法还是跟函数版本一致":["64.38"],"只是写法上有所不同":["64.38"],"父组件":["64.38"],"子组件传参版本":["64.40","64.41"],"子组件传值":["64.40"],"setup函数中":["64.40"],"的":["64.40","92.0","97.4","103.0","108.1"],"子组件":["64.41","64.46"],"插槽":["64.42"],"slot":["64.42","64.44","64.46"],"简单来说就是子组件中的提供给父组件使用的一个":["64.42"],"坑位":["64.42"],"用":["64.42"],"在父组件中没有提供任何":["64.43"],"插槽内容":["64.43","64.46"],"的时候":["64.43"],"很多时候一个插槽满足不了需求":["64.44"],"需要多个插槽":["64.44"],"于是就有了具名插槽":["64.44"],"比如带有":["64.44"],"属性的插槽":["64.44"],"test":["64.44"],"动态插槽就是插槽名变成了变量的形式":["64.45"],"我们可以随时修改这个变量从而展示不同的效果":["64.45"],"它的写法是":["64.45"],"插槽也可以像组件传递":["64.46"],"那样":["64.46"],"标签绑定属性从而传递给父组件中的":["64.46"],"具名作用域插槽接收参数的方式是通过":["64.47"],"的标签的指令":["64.47"],"侦听单个来源":["64.49"],"watchsource":["64.49"],"callback":["64.49","85.2","88.5"],"默认是懒侦听的":["64.50"],"即仅在侦听起源发生变化时才执行回调函数":["64.50"],"第一个参数是侦听器的源":["64.50"],"侦听一个":["64.51"],"getter":["64.51"],"state":["64.51"],"count":["64.51"],"value":["64.51","75.1","78.5","107.3","108.9","112.4"],"prevalue":["64.51"],"都是":["64.52"],"首屏加载慢的原因":["64.53"],"route":["64.54"],"router":["64.54"],"依然表示路由相关的概念":["64.54"],"但它们功能不尽相同":["64.54"],"路由":["64.54"],"表示应用程序中的一个路由":["64.54"],"路由懒加载":["64.55"],"按需加载路由":["64.55"],"我们可以使用":["64.55"],"defineasynccomponent":["64.55"],"函数来定义异步组件":["64.55"],"该函数接收一个返回值为":["64.55"],"的函数":["64.55","108.6"],"是如何变得更快的":["64.56"],"底层":["64.56"],"源码":["64.56"],"vue3在性能上进行了一系列的优化和改进":["64.56"],"主要通过以下几个方面实现了更好的性能":["64.56"],"proxy":["64.56","78.4","78.5","78.9"],"取代了":["64.56"],"是一个专门为vue":["64.57"],"js应用程序开发的状态管理模式":["64.57"],"通过创建一个集中的数据存储":["64.57"],"方便程序中的所有组件进行访问":["64.57"],"是vue的状态管理工具":["64.57"],"面试相关":["65.0"],"拉斯维加斯场馆3d数字动画":["66.0"],"box":["67.0"],"spinner":["68.1"],"rect1":["68.1"],"rect2":["68.1"],"rect3":["68.1"],"turnovercss":["68.2"],"turn":["68.2"],"over":["68.2"],"width":["68.2","68.4"],"60px":["68.2","68.15"],"scalecss":["68.3"],"scale":["68.3","68.6"],"double":["68.3"],"bounce1":["68.3","68.6"],"cuberotation":["68.4"],"cube":["68.4"],"roate":["68.4"],"cube1":["68.4"],"cube2":["68.4"],"100px":["68.4"],"auto":["68.4"],"dotroate":["68.5"],"dot":["68.5"],"rotate":["68.5","68.7"],"dot1":["68.5"],"dot2":["68.5"],"scaleloading":["68.6"],"loading":["68.6","68.9","68.10","68.11","68.12","68.13","68.14","68.15"],"bounce2":["68.6"],"bounce3":["68.6"],"gradientrotate":["68.7"],"gradient":["68.7"],"circleloading":["68.8"],"circle":["68.8","68.9","68.10","68.11","68.12","68.13","68.15"],"container":["68.8","108.9"],"container1":["68.8"],"circle1":["68.8"],"circle2":["68.8"],"circle3":["68.8"],"circle4":["68.8"],"container2":["68.8"],"diverge":["68.9"],"center":["68.9","68.10","68.11","68.12","68.13","68.14","68.15"],"id":["68.9","68.10","68.11","68.12","68.13","68.15","100.0"],"animation":["68.9","68.10","68.11","68.12","68.13","68.15"],"animationlist":["68.9","68.10","68.11","68.12","68.13","68.14","68.15"],"big":["68.9"],"rotationcontraction":["68.10"],"calss":["68.10"],"旋转收缩":["68.11"],"contraction":["68.11"],"动态位置":["68.12"],"moving":["68.12"],"ricerotate":["68.13"],"musicdance":["68.14"],"trianglebloom":["68.15"],"bottom":["68.15"],"left":["68.15","106.1","106.2","106.4","108.9"],"80px":["68.15"],"translatex":["68.15"],"translatey":["68.15"],"30px":["68.15"],"rotatedeg1":["68.15"],"0deg":["68.15"],"rotatedeg2":["68.15"],"180deg":["68.15"],"40px":["68.15"],"优先级":["69.0"],"浏览器通过优先级来判断哪些属性值与一个元素最为相关":["69.0"],"从而在该元素上应用这些属性值":["69.0"],"优先级是基于不同种类选择器组成的匹配规则":["69.0"],"权重优先级作用":["69.0"],"在同一个元素使用不同的方式":["69.0"],"声明了相同的一条或多条":["69.0"],"规则":["69.0"],"浏览器会通过权重来判断哪一种方式的声明":["69.0"],"与这个元素最为相关":["69.0"],"从而在该元素上应用这个声明方式声明的所有":["69.0"],"优先级就是分配给指定的":["69.0"],"声明的一个权重":["69.0"],"它由":["69.0"],"实际效果":["70.0","71.0"],"backgrounddemo":["70.0"],"代码块":["70.0"],"dazzlingcss":["73.0"],"的区分":["74.0"],"在原生js中会有三个很常见的函数":["74.0"],"他们的作用就是改变当前函数的":["74.0"],"指针":["74.0"],"但是细微来说他们还是有不同的":["74.0"],"改变函数的指向的同时":["74.0"],"立即进行调用":["74.0"],"则是在函数进行调用之前":["74.0"],"就强行给变了":["74.0"],"的指向":["74.0"],"进行前":["74.0"],"它的效果是返回一个函数":["74.0"],"只是给变了":["74.0"],"document":["75.0","75.1","75.2","81.0"],"是直接存储在浏览器的一小串数据":["75.0"],"它们是":["75.0"],"http":["75.0","79.0"],"cookie中读取":["75.1"],"你的浏览器是否存储了本网站的任何cookie":["75.1"],"让我们来看看":["75.1"],"在javascript":["75.1"],"我们使用谷歌分析来统计":["75.1"],"所以应该存一些cookie":["75.1"],"console":["75.1","76.12","78.1","94.0"],"log":["75.1","76.12","78.1","94.0","106.2","120.3","121.2"],"cookie":["75.1","75.2","75.5"],"的值是由":["75.1"],"我们可以写入":["75.2"],"但这不是一个数据属性":["75.2"],"他是一个":["75.2"],"访问器":["75.2"],"对其的赋值操作会被特殊处理":["75.2"],"对于":["75.2","108.7"],"的写入操作只会更新其中提到的cookie":["75.2"],"而不会涉及其他cookie":["75.2"],"mypath":["75.3"],"url路径前缀必须是绝对路径":["75.3"],"site":["75.4","91.1","91.5"],"com":["75.4","79.0","84.0","100.0","120.2"],"domain控制了可访问cookie的域":["75.4"],"但是在实际中":["75.4"],"有一些限制":["75.4"],"我们无法设置任何域":["75.4"],"无法从另一个二级域访问cookie":["75.4"],"other":["75.4"],"永远不会收到在":["75.4"],"max":["75.5"],"age":["75.5","78.5","87.10","100.0"],"默认情况下":["75.5"],"如果一个cookie没有设置这两个参数中的任何一个":["75.5"],"那么在关闭浏览器后":["75.5"],"他就会消失":["75.5"],"此类cookie被称为":["75.5"],"session":["75.5"],"为了让cookie在关闭浏览器后仍然存在":["75.5"],"cookiey应该只能被通过https传输":["75.6"],"数据类型的扩展":["76.0"],"使用反引号":["76.2"],"包裹的字符串":["76.2"],"支持多行文本和嵌入表达式":["76.2"],"允许定义自定义的字符串处理函数":["76.3"],"以处理模版字符串":["76.3"],"includes":["76.4","96.19"],"startwith":["76.5"],"endwith":["76.5"],"propotype":["76.6"],"fromcodepoint":["76.7"],"raw":["76.8"],"用于获取一个模版字符串的原始字符串形式":["76.8"],"忽略其中的转义字符":["76.8"],"codepointat":["76.9"],"用于返回指定位置的字符的码点":["76.9"],"normalize":["76.10"],"扩展运算符类似":["76.12"],"rest":["76.12","77.15"],"参数的逆运算":["76.12","77.15"],"将一个数组转为用逗号分隔的参数序列":["76.12"],"该方法用于将两类对象转为真正的数组":["76.13"],"类似数组的对象":["76.13"],"like":["76.13"],"和可遍历":["76.13"],"of":["76.14","78.29"],"根据传入的参数创建一个新数组":["76.14"],"find":["76.15","96.5","112.4"],"findindex":["76.15"],"fill":["76.16"],"使用固定值填充一个数组中从起始索引":["76.16"],"默认为":["76.16"],"copywithin":["76.17"],"用于将数组中的一部分元素复制到指定位置":["76.17"],"keys":["76.18"],"values":["76.18"],"entries":["76.18"],"提供三个新的方法":["76.18"],"允许在大括号里面":["76.20"],"直接写入变量和函数":["76.20"],"作为对象的属性和方法":["76.20"],"定义对象的属性":["76.21","77.21"],"有两种方法":["76.21","77.21"],"方法一":["76.21","77.21","84.0"],"is":["76.22","78.5","108.6"],"value1":["76.22"],"value2":["76.22"],"用于比较两个值是否相同":["76.22"],"assign":["76.23"],"sources":["76.23"],"将一个或多个源对象的属性复制到目标对象中":["76.23"],"getprototypeof":["76.24"],"setprototypeof":["76.25"],"在es6之前":["76.27","77.23"],"regexp构造函数不允许使用第二个参数添加修饰符":["76.27"],"用于返回正则表达式的修饰符":["76.28"],"用于处理大于":["76.29"],"uffff":["76.29"],"也称为":["76.30"],"粘连":["76.30"],"用于指定只从目标字符串的当前位置开始匹配":["76.30"],"sticky":["76.31"],"字符串对象的":["76.32"],"之前":["76.34"],"不能直接为函数的参数指定默认值":["76.34"],"只能采用变通的方法":["76.34"],"func":["76.34","120.3"],"新增了一个指数运算符":["76.36"],"一":["77.0"],"关键字是用于声明一个常量":["77.3"],"其值在声明后不能再被改变":["77.3"],"声明的变量也是块级作用域的":["77.3"],"允许按照一定的模式":["77.5"],"从数组和对象中提取值":["77.5"],"对变量进行赋值":["77.5"],"这个过程被称为解构":["77.5"],"destructuring":["77.5","79.0"],"基本用法":["77.5","107.4"],"之前赋值的写法":["77.5"],"可以写成这种形式":["77.5"],"上面这种写法属于":["77.5"],"模式匹配":["77.5"],"对象的解构与数组有一个重要的不同":["77.6"],"数组的元素是按次序排列的":["77.6"],"变量的取值由他们的位置决定":["77.6"],"而对象的属性没有次序":["77.6"],"变量必须与属性同名":["77.6"],"才能取到正确的值":["77.6"],"bar":["77.6","79.0"],"foo":["77.6","77.21","78.2","79.0"],"这是foo":["77.6"],"这是bar":["77.6"],"如果解构失败":["77.6"],"变量的值等于":["77.6"],"bar2":["77.6"],"undefined":["77.6"],"如果变量名与属性名不一致":["77.6"],"则必须写成下面这样":["77.6"],"字符串也可以解构赋值":["77.7"],"这是因为在解构字符串的时候":["77.7"],"字符串被转化成了一个类数组对象":["77.7"],"解构赋值时候":["77.8"],"如果等号右边是数值和布尔值":["77.8"],"add":["77.9","78.9","78.18","78.28","120.2","120.3"],"y":["77.9"],"上述示例中":["77.9","107.3"],"我们可以在函数参数中设置默认值":["77.10"],"这意味着如果调用函数的时候没有为参数提供有效值":["77.10"],"它们将会使用默认值":["77.10"],"这对简化函数调用和处理缺少参数时的情况有用":["77.10"],"greet":["77.10"],"箭头函数具有简洁的语法":["77.11"],"清晰的上下文":["77.11"],"继承外部作用域的arguments等特点":["77.11"],"适合简化代码":["77.11"],"箭头函数没有自己的":["77.12"],"箭头函数是匿名函数":["77.13"],"不能作为构造函数":["77.13"],"模版字符串是es6中引入的一种新的字符串语法":["77.14"],"它允许字符串中插入变量或者表达式":["77.14"],"而不需要使用字符串拼接符号":["77.14"],"模版字符串使用反引号":["77.14"],"扩展操作符用于展开可迭代对象":["77.15"],"字符串等":["77.15"],"好比":["77.15"],"将其元素逐个展开":["77.15"],"以便于在函数调用":["77.15"],"数组字面量":["77.15"],"对象字面量中使用":["77.15"],"使用扩展操作符时":["77.15"],"arr1":["77.18"],"es6引入了一种更简洁的方式来定义对象字面量":["77.19"],"es6中":["77.20"],"可以使用更简洁的语法来定义对象字面量":["77.20"],"还可以直接在对象字面量中定义方法":["77.20"],"javascript中":["77.21"],"方法二":["77.21"],"bc":["77.21"],"es6引入了类":["77.22"],"的概念":["77.22"],"使得面向对象的编程变得更加直观和易于理解":["77.22"],"类是一种蓝图或模板":["77.22"],"模块化是一种组织和管理javascript代码的方法":["77.23"],"它将代码拆分为独立的模块":["77.23"],"每个模块都有自己的作用域和功能":["77.23"],"这种方法有助于提高代码的可维护性":["77.23"],"可重用性和可扩展性":["77.23"],"二":["78.0"],"用于修改某些操作的默认行为":["78.1"],"等同于在语言层面做出修改":["78.1"],"所以属于一种":["78.1"],"元编程":["78.1"],"programming":["78.1"],"即对编程语言进行编程":["78.1"],"proxy可以理解成":["78.1"],"在目标对象之前架设一层拦截":["78.1"],"外界对该对象进行访问":["78.1"],"都必须先通过这层拦截":["78.1"],"因此提供了一种机制":["78.1"],"可以对外界的访问进行过滤和改写":["78.1"],"proxy这个词的原意是代理":["78.1"],"用在这里表示由它":["78.1"],"来代理某些操作":["78.1"],"可以翻译为":["78.1"],"代理器":["78.1"],"get":["78.1","78.2","78.13"],"propkey":["78.1","78.2","78.4"],"receiver":["78.1","78.2"],"getting":["78.1"],"reflect":["78.1","78.8","78.9"],"set":["78.1","78.2","78.9","78.13","78.28","78.29","86.7","87.12","96.21"],"handler":["78.2","78.6"],"支持的拦截操作":["78.2"],"操作":["78.2","78.6"],"返回值":["78.2"],"拦截对象属性的读取":["78.2"],"实例的方法":["78.3"],"方法用于拦截某个属性的读取操作":["78.4"],"可以接收三个函数":["78.4"],"依次为目标对象":["78.4","78.5"],"属性名和proxy实例本身":["78.4"],"严格地说":["78.4"],"是操作行为所针对的对象":["78.4"],"其中最后一个参数可选":["78.4","78.5"],"person":["78.4","78.5"],"张三":["78.4","87.9"],"方法用来拦截某个属性的赋值操作":["78.5"],"可以接受四个参数":["78.5"],"属性名":["78.5"],"属性值和":["78.5"],"实例本身":["78.5"],"嘉定":["78.5"],"对象有一个":["78.5"],"该属性应该是一个不大于":["78.5"],"的整数":["78.5"],"那么可以使用":["78.5"],"保证":["78.5"],"的属性值符合要求":["78.5"],"validator":["78.5"],"isinteger":["78.5"],"throw":["78.5"],"typeerror":["78.5"],"the":["78.5"],"not":["78.5"],"an":["78.5"],"integer":["78.5"],"方法拦截函数的调用":["78.6"],"方法可以接受三个参数":["78.6"],"分别是目标对象":["78.6"],"目标对象的上下文对象":["78.6"],"目标对象的参数数组":["78.6"],"是es6":["78.7"],"中操作对象而提供的新api":["78.7"],"是为了解决在es6之前使用对象的操作存在一些不一致和不直观的地方":["78.7"],"有时会抛出错误的问题":["78.7"],"基本特点":["78.7"],"对象的一些明显属于语言内部的方法":["78.7"],"放到":["78.7"],"对象上":["78.7"],"现阶段":["78.7"],"某些方法同时在":["78.7"],"对象上部署":["78.7"],"未来的新方法将只部署在":["78.7"],"也就是说":["78.7","78.25"],"对象上可以拿到语言内部的方法":["78.7"],"修改某些":["78.7"],"方法的返回结果":["78.7"],"让其不会抛出错误":["78.7"],"thisarg":["78.8"],"实现一个观察者模式":["78.9"],"创建一个观察者对象":["78.9"],"observer":["78.9"],"listeners":["78.9"],"添加观察者":["78.9"],"subscribe":["78.9"],"listener":["78.9"],"移除观察者":["78.9"],"unsubscribe":["78.9"],"之前对象属性名都是字符串":["78.10"],"这容易造成属性名的冲突":["78.10"],"引入了一种新的原始数据类型":["78.10"],"表示独一无二的值":["78.10"],"它属于":["78.10"],"weakmap":["78.11","78.14"],"map是一种键值对的集合":["78.12"],"返回键值对":["78.13"],"添加键值对":["78.13"],"返回实例":["78.13","78.18"],"存储":["78.15"],"方法":["78.16","78.18","78.21","78.25","78.28","99.8"],"添加值":["78.18"],"delete":["78.18","112.4"],"储存dom节点":["78.20"],"iterator":["78.22","78.23","78.26","78.28","79.0"],"为各种数据结构提供一个统一的":["78.24"],"创建一个指针对象":["78.25"],"指向当前数据结构的起始位置":["78.25"],"遍历器对象本质上":["78.25"],"就是一个":["78.25"],"指针对象":["78.25"],"第一次调用指针对象的":["78.25"],"可以将指针指向数据结构的第一个成员":["78.25"],"第二次调用指针对象的":["78.25"],"指针就指向数据结构的第二个成员":["78.25"],"不断调用指针对象的":["78.25"],"直到它只想数据结构的结束位置":["78.25"],"下一步操作":["78.27"],"解构赋值":["78.28","79.0"],"对数组和":["78.28"],"结构进行解构赋值时":["78.28"],"会默认使用":["78.28"],"symbol":["78.28"],"循环":["78.29"],"循环用于遍历可迭代对象":["78.29"],"例如数组":["78.29"],"字符串":["78.29"],"map":["78.29","85.1","85.2","87.13","96.2","96.21","115.1","115.3","115.4"],"它会迭代对象的每个元素并执行指定的代码块":["78.29"],"循环遍历数组":["78.29"],"generator":["78.30","79.0"],"gererator":["78.30"],"关键字与函数名之间有一个星号":["78.31"],"函数体内部使用":["78.31"],"yield":["78.31"],"表达式":["78.31"],"定义不同的内部状态":["78.31"],"的一些配置命令":["79.0"],"env":["79.0"],"browser":["79.0"],"node":["79.0","86.2","102.0"],"ecmafeatures":["79.0"],"lambda表达式":["79.0"],"arrowfunctions":["79.0"],"classes":["79.0"],"ruanyifeng":["79.0"],"docs":["79.0"],"函数参数的默认值":["79.0"],"defaultparams":["79.0"],"块级作用域":["79.0"],"允许使用let":["79.0"],"blockbindings":["79.0"],"允许使用模块":["79.0"],"模块内默认严格模式":["79.0"],"modules":["79.0"],"允许字面量定义对象时":["79.0"],"用表达式做属性名":["79.0"],"属性名表达式":["79.0"],"objectliteralcomputedproperties":["79.0"],"允许对象字面量方法名简写":["79.0"],"method":["79.0"],"hello":["79.0","94.0","120.3"],"等同于":["79.0"],"objectliteralshorthandmethods":["79.0"],"对象字面量属性名简写":["79.0"],"baz":["79.0"],"objectliteralshorthandproperties":["79.0"],"rest参数":["79.0"],"restparams":["79.0"],"扩展运算符":["79.0"],"spread":["79.0"],"of循环":["79.0"],"forof":["79.0"],"generators":["79.0"],"模板字符串":["79.0"],"templatestrings":["79.0"],"superinfunctions":["79.0"],"对象的扩展运算符":["79.0"],"experimentalobjectrestspread":["79.0"],"rules":["79.0"],"定义对象的set存取器属性时":["79.0"],"强制定义get":["79.0"],"accessor":["79.0"],"pairs":["79.0"],"指定数组的元素之间要以空格隔开":["79.0"],"后面":["79.0"],"never参数":["79.0"],"之前和":["79.0"],"之后不能带空格":["79.0"],"always参数":["79.0"],"之后必须带空格":["79.0"],"bracket":["79.0"],"spacing":["79.0"],"在块级作用域外访问块内定义的变量是否报错提示":["79.0"],"block":["79.0"],"scoped":["79.0"],"while":["79.0"],"后面的":["79.0"],"必须与if在同一行":["79.0"],"a标签直接下载":["81.0"],"alink":["81.0"],"createelement":["81.0"],"download":["81.0"],"split":["81.0"],"offsetwidth":["82.0"],"代表了元素的宽度":["82.0"],"包括边框和填充":["82.0"],"但不是边距":["82.0"],"offsetheight":["82.0"],"代表了元素的高度":["82.0"],"offsettop":["82.0"],"代表了返回元素的上外缘距离最近采用定位父元素内壁的距离":["82.0"],"如果父元素中没有采用定位的":["82.0"],"则是获取上外边缘距离文档内壁的距离":["82.0"],"offsetleft":["82.0"],"此属性和offsettop的原理是一样的":["82.0"],"只不过方位不同":["82.0"],"scrolltop":["82.0"],"设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离":["82.0"],"javascript的":["83.0"],"esm":["83.0"],"amd":["83.0"],"umd":["83.0"],"cjs":["83.0"],"esm代表es模块":["83.0"],"是javascript提出的实现一个标准模块的系统方案":["83.0"],"类似":["83.0"],"url":["84.0","100.0"],"zhidao":["84.0"],"baidu":["84.0"],"question":["84.0"],"1768422895052400180":["84.0"],"fr":["84.0"],"iks":["84.0"],"word":["84.0"],"slice":["84.0","96.17"],"ie":["84.0"],"gbk":["84.0"],"map与array":["85.0"],"方法创建一个新数组":["85.1"],"这个新数组由原数组中的每个元素都调用一次提供的函数后的返回值组成":["85.1"],"语法":["85.1"],"mymap":["85.2"],"moment":["86.0","86.6","86.7","86.11","86.13","86.14","86.15"],"引入moment":["86.1"],"js方式引入":["86.2"],"设定moment区域为中国":["86.4"],"获取时间":["86.6"],"获取当前时间":["86.6"],"获取今天0时0分0秒":["86.6"],"startof":["86.6"],"day":["86.6"],"获取本周第一天":["86.6"],"周日":["86.6"],"0时0分0秒":["86.6"],"week":["86.6"],"获取本周周一0时0分0秒":["86.6"],"设置时间":["86.7"],"设置年份":["86.7"],"year":["86.7"],"设置月份":["86.7"],"month":["86.7"],"january":["86.7"],"december":["86.7"],"格式化时间":["86.8"],"格式代码":["86.8"],"返回值例子":["86.8"],"数字表示的月份":["86.8"],"没有前导零":["86.8"],"1到12":["86.8"],"mm":["86.8","86.15"],"有前导零":["86.8"],"01到12":["86.8"],"mmm":["86.8"],"三个字母缩写表示的月份":["86.8"],"jan到dec":["86.8"],"mmmm":["86.8"],"月份":["86.8"],"完整的文本格式":["86.8"],"january到december":["86.8"],"q":["86.8"],"比较时间":["86.9"],"获取两个日期之间的时间":["86.9"],"日期格式化输出实例":["86.11"],"format":["86.11","86.14","86.15"],"相对时间":["86.12"],"输出实例":["86.12"],"日历时间输出实例":["86.13"],"subtract":["86.13"],"多语言支持输出实例":["86.14"],"其它输出实例":["86.15"],"yyyy":["86.15"],"dd":["86.15"],"格式化显示当前时间":["86.15"],"reduce":["87.0","87.7","87.13","87.15","87.16","96.8"],"reduce方法主要接收两个参数":["87.2"],"回调函数是数组中每个元素执行的函数":["87.3"],"其返回值将作为下一次调用回调函数时的":["87.3"],"accumulator":["87.3","87.4"],"参数":["87.3"],"对于最后一次调用":["87.3"],"第一次调用回调函数初始化":["87.4"],"的值":["87.4"],"方法不仅可以求纯数字数组的和":["87.7"],"针对对象数组里的值也可以求和":["87.7"],"names":["87.9"],"陈大":["87.9"],"李二":["87.9"],"朱四":["87.9"],"王五":["87.9"],"type":["87.10","87.11","108.3","108.6","108.9","108.12"],"objarr":["87.10"],"alice":["87.10"],"initialvalue":["87.11"],"连接包含在对象数组中的数组":["87.11"],"books":["87.11"],"备注":["87.12"],"可以使用":["87.12","107.2"],"来实现同样的效果":["87.12"],"来替代":["87.13"],"filer":["87.13"],"链接一系列":["87.14"],"处理程序":["87.14"],"param":["87.14","112.6"],"一个":["87.14"],"处理程序列表":["87.14"],"每个处理程序接收前一个处理程序解决的结果并返回另一个":["87.14"],"开始调用":["87.14"],"会跳过稀疏数组中缺失的元素":["87.15"],"但不会跳过":["87.15"],"方法读取":["87.16"],"全局的":["88.1"],"方法设置一个定时器":["88.1"],"一旦定时器到期":["88.1"],"方法重复调用一个函数或执行一个代码片段":["88.2"],"在每次调用之间具有固定的时间间隔":["88.2"],"尽管":["88.3"],"setintervalfunctional":["88.5"],"window":["88.6","100.0"],"告诉浏览器":["88.6"],"你希望执行一个动画":["88.6"],"并且要求浏览器在下次重绘之前调用指定的回调函数更新动画":["88.6"],"该方法需要传入一个回调函数作为参数":["88.6"],"该回调函数会在浏览器下一次重绘之前执行":["88.6"],"requestanimationframe":["88.7"],"这里我们将发出方成为客户端":["89.1"],"接收方成为服务端":["89.1"],"tcp建立连接主要分为三部分":["89.1"],"可简单描述为":["89.1"],"客户端向服务端发起tcp请求":["89.1"],"服务端响应客户端":["89.1"],"同意建立tcp连接":["89.1"],"客户端向服务端最后确认tcp连接建立":["89.1"],"术语":["89.1"],"在数据传输完毕之后会进行tcp四次握手即是tcp连接关闭":["89.2"],"tcp需要进行四次挥手的原因在于tcp连接是双全工":["89.2"],"即双方通信":["89.2"],"每个方向都需要进行单独关闭":["89.2"],"四次挥手详细过程":["89.2"],"最开始的一次挥手":["89.2"],"客户端发起":["89.2"],"fin":["89.2"],"包":["89.2"],"客户端进入":["89.2"],"wait":["89.2"],"internet通信":["89.3"],"ip":["90.0"],"四":["90.0"],"五层":["90.0"],"osi七层模型区别":["90.0"],"网络层次可划分为":["90.0"],"四层因特网协议栈":["90.0"],"csrf攻击":["91.0"],"cross":["91.1","91.5"],"中内嵌的文本中":["91.2"],"恶意内容以":["91.2"],"script":["91.2"],"攻击分类":["91.3"],"根据攻击的来源":["91.3"],"xss攻击可以分为存储行":["91.3"],"httponly":["91.4"],"在cookie中设置httponly属性之后":["91.4"],"js脚本将无法获取到cookie信息":["91.4"],"输入过滤":["91.4"],"一般是用于对于输入格式的检查":["91.4"],"邮箱":["91.4"],"电话号码":["91.4"],"request":["91.5"],"验证码":["91.6"],"强制用户必须与应用进行交互":["91.6"],"csrf":["91.7"],"xss攻击和csrf攻击":["91.8"],"是一种有着":["92.0"],"动态类型":["92.0"],"动态语言":["92.0"],"typeof返回值":["92.1"],"对象包装器":["92.1"],"不适用":["92.1"],"在计算机科学中":["92.3","114.1"],"是指内存中的可以被标识符引用的一块区域":["92.3"],"对象是唯一可变的值":["92.3"],"事实上":["92.3"],"也是具有额外可调用能力的对象":["92.3"],"typeof":["92.4"],"操作符":["92.4","108.7"],"运算符返回一个字符串":["92.4"],"表示操作数的类型":["92.4"],"所有原始类型都可以使用":["92.4"],"运算符进行测试":["92.4"],"javascript中对象分为":["93.1"],"函数对象":["93.1"],"普通对象":["93.1"],"每个对象都有":["93.1"],"proto":["93.1"],"是函数独有的属性":["93.2"],"从图中可以看到它从一个对象指向另一个对象":["93.2"],"属性是对象独有的":["93.3"],"包括函数":["93.3"],"从图中我们可以看到":["93.3"],"属性是从一个对象指向另一个对象":["93.3"],"即从一个对象指向该对象的原型对象":["93.3"],"也可以理解为父对象":["93.3"],"显然它的含义就是告诉我们一个对象原型对象是谁":["93.3"],"中我们可以知道":["93.3"],"parent":["93.3","99.4","99.5","99.6","99.7","99.8"],"上添加的属性方法叫做原型属性和原型方法":["93.3"],"是对象才有的属性":["93.4"],"从图中看到它是从一个对象指向一个函数的":["93.4"],"指向的函数就是该对象的构造函数":["93.4"],"每个对象都有构造函数":["93.4"],"就好比上面的":["93.4"],"p1":["93.4"],"就是一个对象":["93.4"],"的构造函数是谁呢":["93.4"],"javascript原型":["93.5"],"关于变量的提升":["94.0"],"先看下面一个例子":["94.0"],"此时打印出来的是5":["94.0"],"你以为打印的是undefined":["94.0"],"错":["94.0"],"打印的是":["94.0"],"再来看一个例子":["94.0"],"现在你以为它会报错":["94.0"],"不存在的":["94.0"],"reflow":["95.1","95.4"],"repaint":["95.2","95.4"],"当render":["95.2"],"树中的一些元素需要更新属性":["95.2"],"而这些属性只是影响元素的外观":["95.2"],"风格":["95.2"],"而不会影响布局的":["95.2"],"比如background":["95.2"],"的节点叫做":["95.3"],"渲染器":["95.3"],"repaint重绘":["95.4"],"回流":["95.4"],"必定引起":["95.4"],"重绘":["95.4"],"尽量避免改变布局属性":["95.5"],"减少选择器的复杂性":["95.6"],"我们也知道回流的花销也不小":["95.7"],"该方法返回数组中第一次出现给定元素的下标":["96.1"],"如果不存在则返回":["96.1"],"该方法是将数组中的每个元素调用一个提供的函数":["96.2"],"结果作为一个新的数组返回":["96.2"],"foreach":["96.3"],"该方法是将数组中的每个元素执行传进提供的函数":["96.3"],"该方法是将所有元素进行判断":["96.4","96.5","96.6"],"every":["96.6"],"如果所有的元素都符合判断条件":["96.6"],"some":["96.7"],"该方法将所有元素进行判断":["96.7"],"如果存在至少一个元素符合判断条件":["96.7"],"pop":["96.9"],"该方法是在数组后面删除最后一个元素":["96.9"],"该方法是在数组最后一个元素后面添加一个或多个元素":["96.10"],"shift":["96.11"],"该方法是会删除掉数组的第一项":["96.11"],"unshift":["96.12"],"该方法是将一个或者多个元素添加到数组的开头":["96.12"],"返回新数组的长度":["96.12"],"isarray":["96.13"],"该方法是判断目标元素是否为数组":["96.13"],"返回布尔值":["96.13"],"concat":["96.14"],"该方法可以讲多个数组拼接成一个数组":["96.14"],"join":["96.15","96.16"],"该方法是将数组中的元素拼接成字符串":["96.15"],"拼接格式为join函数传入的参数":["96.15"],"tostring":["96.16"],"该方法也是将数组转化为字符串":["96.16"],"方法不同的是":["96.16"],"拼接格式与函数参数无关":["96.16"],"都是以逗号":["96.16"],"拼接":["96.16"],"该方法传入一个数字":["96.17"],"表示从传入的数字为要处理的元素的下标":["96.17"],"并把小于这个下标对应的元素的元素都删除掉":["96.17"],"splice":["96.18"],"该方法通过":["96.18"],"移除":["96.18","112.2"],"替换":["96.18"],"已存在的元素和":["96.18"],"或添加新元素":["96.18"],"并且就地改变一个数组的内容":["96.18"],"该方法用来判断一个数组是否包含一个指定的值":["96.19"],"flat":["96.20"],"方法创建一个新的数组":["96.20"],"并根据指定深度递归地将所有子数组元素拼接到新的数组中":["96.20"],"可以传一个可选参数":["96.20"],"该方法从":["96.21"],"可迭代对象":["96.21"],"类数组对象":["96.21"],"创建一个新的浅拷贝的数组实例":["96.21"],"或者对象是不可迭代的":["96.21"],"表示带有":["96.21"],"range":["96.22"],"序列生成器函数":["96.22"],"通常称为":["96.22"],"clojure":["96.22"],"php":["96.22"],"start":["96.22"],"flatmap":["96.23"],"该方法对数组中的每个元素应用给定的回调函数":["96.23"],"然后将结果展开一级":["96.23"],"返回一个新数组":["96.23"],"它等价于在调用":["96.23"],"javascript是有两大数据类型":["97.1"],"shallowclone":["97.3"],"hasownproperty":["97.3"],"深拷贝开辟一个新的栈":["97.4"],"两个对象属性完全相同":["97.4"],"但是对应两个不同的地址":["97.4"],"修改一个对象的属性":["97.4"],"不会改变另一个对象的属性":["97.4"],"常见的深拷贝方式":["97.4"],"lodash":["97.4"],"clonedeep":["97.4"],"obj1":["97.4","97.5"],"f":["97.4"],"浅拷贝和深拷贝都创建出一个新的对象":["97.5"],"但在复制对象属性的时候":["97.5"],"行为就不一样":["97.5"],"浅拷贝只复制属性指向某个对象的指针":["97.5"],"而不复制对象本身":["97.5"],"新旧对象还是共享同一块内存":["97.5"],"修改对象属性会影响原对象":["97.5"],"浅拷贝":["97.5"],"前提为拷贝类型为引用类型的情况下":["97.6"],"面试官":["97.7"],"当用户打开网站并进行交互时":["98.0"],"网站所需的所有资源":["98.0"],"离线操作":["98.1"],"缓存流程":["98.2"],"缓存命中机制流程":["98.2"],"发送请求":["98.2"],"根据请求头的":["98.2"],"强制缓存就是向浏览器缓存查找该请求结果":["98.3"],"并根据该结果的缓存规则来决定是否使用该缓存结果的过程":["98.3"],"当浏览器向服务器发送请求时":["98.4"],"服务器会将缓存规则放入http响应报文的http头中和请求结果一起返回给浏览器":["98.4"],"控制强制缓存的字段分别是":["98.4"],"expires":["98.4","98.7"],"cache":["98.4"],"control":["98.4"],"的优先级":["98.4"],"比":["98.4"],"优先级高":["98.4"],"是http":["98.4"],"0控制网页缓存的字段":["98.4"],"其值为服务器返回该请求结果缓存的到期时间":["98.4"],"即再次发起该请求时":["98.4"],"协商缓存是缓存失效后":["98.5"],"协商缓存的标识也是在响应报文的http头中和请求结果一起返回给浏览器的":["98.6"],"控制协商缓存的分别有":["98.6"],"last":["98.6"],"modified":["98.6"],"since":["98.6"],"etag":["98.6"],"none":["98.6","115.8"],"match":["98.6"],"强制缓存优先于协商缓存进行":["98.7"],"若强制缓存":["98.7"],"彻底理解浏览器的缓存机制":["98.8"],"继承":["99.0"],"继承可以使得子类有父类别的各种属性和方法":["99.1"],"而不需要再次编写相同的代码":["99.1"],"在子类别继承父类别的同时":["99.1"],"可以重新定义某些属性":["99.1"],"并重写某些方法":["99.1"],"即覆盖父类别的原有属性和方法":["99.1"],"使其获得与父类别不同的功能":["99.1"],"虽然":["99.1"],"不是真正的面相对象语言":["99.1"],"但天生的灵活性":["99.1"],"使应用场景更丰富":["99.1"],"关于继承":["99.1"],"原型链继承":["99.2"],"原型链继承是比较常见的继承方式之一":["99.3"],"其中涉及构造函数":["99.3"],"原型和实例":["99.3"],"三者之间存在着一定的关系":["99.3"],"即每一个构造函数都有一个原型对象":["99.3"],"原型对象又包含一个指向构造函数的指针":["99.3"],"而实例则包含一个原型对象的指针":["99.3"],"借助":["99.4"],"前面两种继承方式":["99.5"],"各有优缺点":["99.5"],"组合继承则是将前面两种继承方式结合继承起来":["99.5"],"这里主要借助":["99.6"],"create":["99.6","99.8"],"方法实现普通对象的继承":["99.6"],"friends":["99.6"],"寄生式继承在上面的继承基础上进行了优化":["99.7"],"利用这个浅拷贝的能力再进行增强":["99.7"],"添加一些方法":["99.7"],"借助解决普通对象的继承问题的":["99.8"],"在前面几种继承方式的优缺点基础上进行改造":["99.8"],"这也是所有继承方式里面相对最优的继承方式":["99.8"],"clone":["99.8"],"child":["99.8"],"这里改用":["99.8"],"就可以减少组合继承中多进行一次构造的过程":["99.8"],"类的继承":["99.9"],"javascript如何实现继承":["99.10"],"假设当前页完整地址是":["100.0"],"www":["100.0"],"example":["100.0"],"path":["100.0"],"获取当前窗口的url":["100.0"],"location":["100.0"],"href":["100.0"],"获取当前窗口的主机名":["100.0"],"端口":["100.0"],"防抖与节流本质上是优化高频率代码的一种手段":["101.0"],"如浏览器的":["101.0"],"throttle":["101.1"],"声明一个变量当标志位":["101.2"],"记录当前代码是否在执行":["101.2"],"如果正在执行":["101.2"],"取消这次方法的执行":["101.2"],"直接":["101.2"],"retun":["101.2"],"如果有空闲":["101.2"],"正常触发方法执行":["101.2"],"时间戳写法":["101.2"],"事件会立即执行":["101.2"],"停止触发后没有办法再次执行":["101.2"],"throttledate":["101.2"],"debounce":["101.3"],"需要一个延时定时器来辅助实现":["101.4"],"延迟执行需要执行的代码":["101.4"],"如果方法多次触发":["101.4"],"把上次记录的延迟执行代码用":["101.4"],"cleartimeout":["101.4"],"清除掉":["101.4"],"重新开始计时":["101.4"],"如果计时完毕":["101.4"],"没有方法来访问触发":["101.4"],"则执行代码":["101.4"],"都可以通过":["101.5"],"防抖":["101.6"],"搜索框搜索输入":["101.6"],"防抖与节流":["101.7"],"是一个基于":["103.0"],"chrome":["103.0"],"v8":["103.0"],"引擎":["103.0"],"运行环境":["103.0"],"非阻塞i":["103.1"],"在单线程当中":["103.1"],"当一段代码运行需要很长时间的时候":["103.1"],"一个没有终止的递归或者一个没有结束条件的循环":["103.1"],"后面的代码处于等待状态":["103.1"],"在浏览器端的表现也就是常常说的浏览器假死":["103.1"],"而在":["103.1"],"基础文档与类型体操":["104.0"],"typescript入门教程":["105.0"],"enums":["106.0"],"enum":["106.1","106.2","106.4","106.5"],"direction":["106.1","106.2"],"up":["106.1","106.2","106.4","106.5"],"down":["106.1","106.2","106.4"],"right":["106.1","106.2","106.4"],"在这个例子中":["106.1"],"我们定义了一个名为":["106.1"],"的枚举":["106.1"],"它有四个成员":["106.1"],"枚举是可以手动赋值的":["106.2"],"并且未手动赋值的枚举值会随着上一项的赋值递增":["106.2"],"conssole":["106.2"],"枚举的项有两种类型":["106.3"],"常数项":["106.3"],"计算所得项":["106.3"],"上述示例都是为常数项的枚举值":["106.3"],"我们也可以向枚举中添加计算的方式来设置":["106.3"],"常数枚举是使用":["106.4"],"定义的枚举类型":["106.4","106.5"],"directions":["106.4","106.5"],"外部枚举是使用":["106.5"],"declare":["106.5"],"泛型":["107.0"],"数组泛型":["107.2"],"generic":["107.2"],"我们在指定一个数组的类型时":["107.2"],"函数泛型":["107.3"],"函数泛型允许我们编写可以适用多种类型的函数":["107.3"],"提高代码的灵活性和可复用性":["107.3"],"简单的例子":["107.3"],"我们可以实现一个函数":["107.3"],"createarray":["107.3"],"他可以创建一个指定长度的数组":["107.3"],"并且将每一项填充一个默认值":["107.3"],"results":["107.3"],"由于不确定填充值":["107.3"],"的类型":["107.3"],"使用了":["107.3"],"类型来指定类型":["107.3"],"并且返回值也是":["107.3"],"类型的数组":["107.3"],"接口泛型":["107.4"],"接口泛型允许我们创建可适用于不同类型的接口定义":["107.4"],"interface":["107.4","108.1"],"iresponse":["107.4"],"u":["107.4"],"num":["107.4"],"newname":["107.4"],"类泛型":["107.5"],"与接口类型相似":["107.5"],"泛型也可以用于类的类型定义中":["107.5"],"typescript高级类型":["108.0"],"intersection":["108.1"],"types":["108.1","108.2"],"交叉类型是将多个类型合并为同一个类型":["108.1"],"这让我们可以把现有的类型叠加到一起成为一种类型":["108.1"],"它包含了所需的所有类型的特性":["108.1"],"wave":["108.1"],"不适用于基本类型":["108.1"],"warning":["108.1"],"关于交叉类型产生":["108.1"],"交叉类型在使用的时候有时候会产生一个新的类型":["108.1"],"一般产生这种情况是两个":["108.1"],"使用交叉类型进行处理":["108.1"],"他们当中都有一个":["108.1"],"的同名属性":["108.1"],"但两个类型不同":["108.1"],"interface1":["108.1"],"是":["108.1","115.4"],"interface2":["108.1"],"属性是":["108.1"],"但没有一个属性的类型即是":["108.1"],"类型又是":["108.1"],"union":["108.2"],"联合类型与交叉类型很有关联":["108.2"],"但是使用上完全不同":["108.2"],"联合类型会产生一个包含所有类型的选择集的类型":["108.2"],"表示一个值的类型是定义的联合类型中的其中一种":["108.2"],"当一个变量希望传入某种类型时":["108.2"],"可以考虑使用联合类型":["108.2"],"当一个值是联合类型对象时":["108.2"],"我们只能访问这个联合类型中的所有类型中的共同成员":["108.2"],"定义常量":["108.2"],"类型守卫":["108.4","108.5"],"操作符检查变量类型":["108.4"],"操作符检查对象是否属于某个类":["108.5"],"通过定义一个返回":["108.6"],"类型谓词":["108.6"],"来自定义一个类型守卫":["108.6"],"的形式是":["108.6"],"paramtername":["108.6"],"操作符可以作为类型细化表达式来使用":["108.7"],"顾名思义":["108.8"],"就是给一个类型起一个新名字":["108.8"],"但是不会新创建一个类型":["108.8"],"同接口一样":["108.9"],"类型别名可以是泛型":["108.9"],"我们可以添加参数类型并且在别名声明的右侧传入":["108.9"],"在类型别名属性中引用自身":["108.9"],"tree":["108.9"],"类型别名虽然可以和接口一样声明":["108.10"],"但是他们并不同":["108.10"],"接口创建了一个新的名字":["108.10"],"可以在其他任何地方使用":["108.10"],"但类型别名并不创建新名字":["108.10"],"错误信息就不会使用别名":["108.10"],"tuple":["108.11"],"用于表示固定长度和固定类型排列的数组":["108.11"],"在元组中":["108.11"],"每个位置上的元素都有一个确定的类型":["108.11"],"关键字":["108.12","115.4"],"表示在":["108.12"],"extends":["108.12"],"条件语句中待推断的类型变量":["108.12"],"它是从泛型里面进行推断":["108.12"],"paramtype":["108.12"],"深入理解typescript":["108.13"],"人脸识别":["110.0"],"wx":["110.0"],"startfacialrecognitionverify":["110.0"],"由于人脸核验功能涉及到用户的敏感":["110.0"],"隐私信息":["110.0"],"因此调用此接口的业务方":["110.0"],"需要满足一定的条件":["110.0"],"申请小程序的人脸识别api":["110.0"],"开通小程序后台的接口权限入口后":["110.0"],"开发者可以登录mp":["110.0"],"weixin":["110.0"],"qq":["110.0"],"com小程序账号":["110.0"],"在设置":["110.0"],"接口能力中":["110.0"],"开通接口能力":["110.0"],"微信开发者工具开发文档":["110.0"],"活体检测":["110.0"],"是否支持人脸识别":["110.0"],"checkissupportfacialrecognition":["110.0"],"计算机科学中":["112.1"],"链表":["112.1","112.2","112.4","112.5"],"添加":["112.2"],"元素的时候不需要移动其他元素":["112.2"],"的时间复杂度就为":["112.2"],"表示链表中的一个元素":["112.3"],"提供了一系列方法来操作链表":["112.4"],"开头插入节点":["112.4"],"preappend":["112.4"],"末尾插入节点":["112.4"],"append":["112.4"],"在指定位置插入节点":["112.4"],"insert":["112.4"],"删除节点":["112.4"],"查找节点":["112.4"],"以下是实现代码":["112.4"],"linkedlist":["112.4"],"head":["112.4","120.3"],"tail":["112.4"],"在链表尾部添加新节点":["112.4"],"分为三种":["112.5"],"单向链表":["112.5"],"双向链表":["112.5"],"comparator":["112.6"],"比较器":["112.6"],"default":["112.6"],"构造函数":["112.6"],"comparefunction":["112.6"],"可以是自定义的比较函数":["112.6"],"该函数可以比较自定义的对象":["112.6"],"compare":["112.6"],"defaultcomparefunction":["112.6"],"默认比较函数":["112.6"],"假设":["112.6"],"是字符串或者数字":["112.6"],"returns":["112.6"],"static":["112.6"],"检查两个变量是否相等":["112.6"],"equal":["112.6"],"检查变量":["112.6"],"是否小于":["112.6"],"lessthan":["112.6"],"编程时光":["112.7"],"build":["113.0"],"abstract":["114.0","114.1"],"抽象语法树":["114.1","114.2"],"ast":["114.2"],"在代码语法的检查":["114.2"],"代码风格的检查":["114.2"],"代码的格式化":["114.2"],"代码的高亮":["114.2"],"代码错误提示":["114.2"],"代码自动补全等等场景均有广泛的应用":["114.2"],"打包编译":["114.2"],"rollup":["114.2"],"babel":["114.2"],"代码风格检查":["114.2"],"jslint":["114.2"],"jshint":["114.2"],"prettier":["114.2"],"错误提示与高亮":["114.2"],"ide":["114.2"],"的错误提示":["114.2"],"格式化":["114.2"],"高亮":["114.2"],"自动补全等":["114.2"],"代码混淆压缩":["114.2"],"uglifyjs2":["114.2"],"一个完整的编译过程可以分为三个步骤":["114.3"],"parsing":["114.3"],"首先来看下浏览器的编译原理如下":["114.4"],"可以看出来浏览器对js的编译和解释都需要源代码通过":["114.4"],"词法分析":["114.4"],"语法分析":["114.4"],"源映射":["115.0"],"map功能":["115.2"],"对于sourcemap而言":["115.4"],"我们最常见的":["115.4"],"莫过于在":["115.4"],"的配置项devtools中进行使用":["115.4"],"差不多有二十来种":["115.4"],"但归根结底":["115.4"],"eval":["115.4","115.5","115.8","115.9"],"处理结果":["115.5"],"处理后输出结果":["115.5"],"关键字示例":["115.7"],"sum页面":["115.7"],"sum":["115.7"],"devtool":["115.8"],"构建速度":["115.8"],"重新构建速度":["115.8"],"生产环境":["115.8"],"品质":["115.8"],"quality":["115.8"],"yes":["115.8"],"打包后的代码":["115.8"],"no":["115.8"],"生成后的代码":["115.8"],"开发环境":["115.9"],"我们在开发环境对sourcemap的要求是":["115.9"],"快":["115.9"],"unocss":["117.1"],"官方定义":["117.1"],"在自己电脑创建本地仓库":["118.1"],"第一步":["118.1"],"打开git":["118.1"],"找一个存放所有git项目的目录":["118.1"],"假设git的目录叫gitrepo":["118.1"],"第二步":["118.1"],"为你要拉取的github项目创建项目文件夹":["118.1"],"在gitrepo目录下输入命令":["118.1"],"shell":["118.1","120.2","120.3","123.1","123.2"],"mkdir":["118.1"],"firstpro":["118.1"],"然后输入命令":["118.1"],"cd":["118.1"],"git初始化设置":["118.1"],"仓库的初始化以及绑定ssh秘钥":["118.1"],"pull":["119.0","119.4"],"简单概括":["119.1"],"先用一张图来理一下":["119.1"],"git":["119.1","119.3","119.4","120.2","120.3","121.2","122.2","122.3","122.4","122.5","122.6","122.7","122.8","122.10","125.0"],"分支的概念":["119.2"],"在介绍两种方法之前":["119.2"],"我们需要先了解一下分支的概念":["119.2"],"分支是用来标记特定代码的提交":["119.2"],"每一个分支通过sha1sum值来标识":["119.2"],"所以对分支的操作是轻量级的":["119.2"],"你改变的仅仅是sha1sum值":["119.2"],"如下图所示":["119.2"],"当前有2个分支":["119.2"],"e属于master分支":["119.2"],"而a":["119.2"],"d":["119.2"],"f属于dev分支":["119.2"],"fetch":["119.3"],"rebase":["120.0","121.0"],"rebase能够将分叉的分支重新合并":["120.1"],"本地与远端同一分支提交历史不一致":["120.2"],"方式一":["120.2"],"多个人在同一个分支上协作时":["120.2"],"出现冲突是很正常的":["120.2"],"比如现在有一个项目由我和a一同开发":["120.2"],"我在修复了一个bug以后准备提交":["120.2"],"howiedeimac":["120.2","120.3"],"ganlin":["120.2"],"howie":["120.2","120.3"],"models":["120.2"],"paper":["120.2"],"go":["120.2","120.3"],"commit":["120.2","120.3","121.2"],"fix":["120.2"],"bug":["120.2"],"master":["120.2","120.3"],"8b76654":["120.2"],"file":["120.2"],"changed":["120.2"],"insertions":["120.2"],"deletions":["120.2"],"现在准备推送到远端":["120.2"],"origin":["120.2"],"gitee":["120.2"],"greenhn":["120.2"],"rejected":["120.2"],"不同分支之间的合并":["120.3"],"由于老板突发奇想":["120.3"],"要求开发一个新的功能":["120.3"],"先创建一个分支用于开发新功能":["120.3"],"checkout":["120.3"],"feature":["120.3"],"switched":["120.3"],"branch":["120.3"],"接下来修改newfunc":["120.3"],"增加新的功能":["120.3"],"并且保存提交":["120.3"],"vim":["120.3"],"newfunc":["120.3"],"现在查看一下提交":["120.3"],"oneline":["120.3"],"graph":["120.3"],"4f58ab8":["120.3"],"94c134b":["120.3"],"现在新功能开发完毕":["120.3"],"需要将它合并的主分支中":["120.3"],"先尝试通过merge合并":["120.3"],"首先切换到master分支":["120.3"],"假设我们做了一下三个commit":["121.2"],"想把前两个提交也就是":["121.2"],"7131a52":["121.2"],"0d11e74":["121.2"],"a2406db":["121.2"],"合并成一个提交":["121.2"],"log信息":["121.2"],"tip":["121.2"],"如果使用":["121.2"],"stash":["122.0","122.1","122.4","122.8","122.10"],"丢弃stash":["122.9"],"clear":["122.10"],"删除分支同步到git仓库":["123.0"],"git工作流程":["124.1"],"imagecompression":["127.0"]},{"0":["3.0","5.0","11.0","23.0","24.4","43.1","45.1","48.3","55.2","60.38","68.4","68.6","68.9","68.13","76.16","78.25","85.2","87.6","87.8","110.0","114.2"],"1":["3.0","5.0","6.0","9.0","10.0","23.0","41.1","43.1","51.8","54.1","60.33","60.37","60.38","61.31","64.13","68.2","68.4","68.12","75.0","75.6","77.16","77.18","78.1","78.29","81.0","84.0","86.15","87.6","87.8","91.3","96.16","96.20","96.21","96.22","96.23","97.5","99.3","99.5","99.8","112.2"],"2":["5.0","6.0","8.0","15.0","37.4","51.8","54.1","60.37","60.44","60.51","61.21","61.26","68.5","76.36","77.12","77.18","78.1","78.29","87.6","87.8","89.2","93.1","96.14","96.16","96.21","97.4","97.5","99.3","99.5","99.8","110.0","115.8"],"3":["5.0","8.0","10.0","15.0","37.4","37.10","51.8","55.2","60.37","60.42","61.12","61.25","61.26","76.14","77.18","78.29","86.7","96.14","96.16","96.21","97.4","97.5","99.3","99.5","99.8","115.8"],"4":["2.0","7.0","15.0","60.18","76.36","78.29","86.7","96.14","96.16","96.21","97.5","106.2"],"5":["5.0","10.0","60.18","86.6","96.14","96.21"],"6":["5.0","10.0","86.6","86.13","96.14"],"7":["7.0","10.0","86.6","96.14","120.3"],"9":["3.0","6.0","79.0"],"10":["6.0"],"11":["107.4"],"12":["6.0","54.2","55.1","56.1","56.2","56.3","56.4"],"13":["6.0"],"15":["86.7"],"18":["64.46","97.3"],"19":["75.5"],"20":["87.10"],"22":["107.4"],"24":["86.14"],"50":["68.10"],"56":["23.0"],"100":["68.10","78.5"],"111":["114.2"],"234":["23.0"],"250":["24.4"],"300":["78.5"],"450":["24.4"],"460":["24.4"],"500":["101.2"],"1234":["96.21"],"2019":["86.14"],"2038":["75.5"],"6265":["75.0"],"231208":["54.0"],"231215":["55.0"],"231222":["56.0"],"20111031":["86.12"],"使其相加和为m":["1.0"],"并给出算法的时间":["1.0"],"空间复杂度":["1.0"],"如":["1.0","60.42"],"javascript":["1.0","4.0","5.0","8.0","10.0","11.0","16.0","18.1","19.0","19.2","19.5","21.0","22.0","23.1","23.2","23.3","24.2","25.0","25.2","25.3","25.4","30.2","30.3","30.5","31.0","31.2","32.4","34.0","52.4","54.1","60.16","60.24","60.32","63.22","64.19","64.54","74.0","75.2","75.4","76.2","76.4","76.5","76.7","76.8","76.9","76.13","76.15","76.17","76.20","76.23","76.28","76.29","77.3","77.7","77.8","77.11","77.22","78.7","78.25","78.29","78.31","91.2","93.3","96.2","96.4","96.9","96.10","96.11","96.12","96.13","96.15","96.17","96.20","96.21","101.4","106.2","114.2","119.2"],"满足要求的三元组集合为":["2.0"],"夹逼原则":["2.0"],"也称为双指针夹逼法":["2.0"],"是一种常用的算法思想":["2.0"],"主要用于解决某些数组或有序列表中的查找":["2.0"],"求解等问题":["2.0"],"该原则基于两个指针在数组或列表中相向而行":["2.0"],"并通过调整指针的位置来逼近目标值或满足特定条件":["2.0"],"在夹逼原则中":["2.0"],"通常需要先对数组或列表进行排序":["2.0"],"以便使用双指针从两端开始向中间移动":["2.0"],"具体步骤如下":["2.0"],"对数组或列表进行排序":["2.0"],"确保元素的顺序满足问题的要求":["2.0"],"初始化两个指针":["2.0"],"因为":["3.0"],"所以返回":["3.0"],"遍历两次求和":["3.0"],"过滤出符合条件的下标拼接成数组":["3.0"],"typescript":["3.0","41.10","47.0","68.9","68.11","68.12","68.14","87.12","87.15","106.0","106.3","107.1","107.5","108.1","108.2","108.6"],"const":["3.0","4.0","5.0","8.0","45.1","68.9","68.11","68.12","68.14","76.2","76.5","76.8","76.9","76.12","76.17","76.20","76.23","76.28","76.30","77.1","77.7","77.11","78.25","83.0","84.0","87.7","87.11","96.2","96.4","96.9","96.10","96.11","96.12","96.13","96.15","96.16","96.21","101.4","108.1","108.2","108.4","112.6","114.2"],"getaddindex":["3.0"],"number":["3.0","45.1","64.4","87.6","87.7","87.9","87.11","88.5","107.2","107.4","108.2","108.4","108.11"],"k":["4.0"],"你需要做以下事情确保你的题解可以被通过":["4.0"],"更改数组":["4.0"],"使":["4.0"],"的前":["4.0"],"个元素包含唯一元素":["4.0"],"并按照它们最初在":["4.0"],"中出现的顺序排列":["4.0"],"的其余元素与":["4.0"],"的大小不重要":["4.0"],"返回":["4.0","10.0","78.27","92.4"],"示例1":["4.0","8.0","10.0"],"来保存":["5.0"],"中的元素":["5.0"],"示例":["5.0","78.6","108.1","114.2"],"输入":["5.0","54.1"],"输出":["5.0","8.0","10.0","11.0","54.1"],"输出数组":["6.0"],"result":["6.0","85.2","120.3"],"数组中不包含2":["7.0"],"插入进去排序后下标为1":["7.0"],"示例3":["7.0"],"修改输入数组":["8.0"],"元素的顺序可以改变":["8.0"],"你不需要考虑数组中超出新长度后面的元素":["8.0"],"并且nums数组变更为":["8.0"],"函数最初返回":["9.0"],"每次调用它时会返回前一个值加":["9.0"],"的值":["9.0"],"var":["10.0","18.1","19.2","28.0","31.0","34.0","60.33","74.0","106.2"],"解释":["10.0"],"中心下标是3":["10.0"],"左侧数之和":["10.0"],"sum":["10.0","77.17"],"let":["11.0","60.16","77.8","77.21","78.25","78.29","85.2","86.9","88.5","101.2","101.4","106.4","106.5","108.11"],"str1":["11.0"],"leetcode":["11.0"],"webstorm":["12.0"],"前端开发":["12.0"],"chrome":["12.0"],"google":["12.0"],"chrome浏览器":["12.0"],"目前已经支持支付宝购买":["12.1"],"价格的话":["12.1"],"如果你是一名专职的前端工作人员":["12.1"],"可以自行购买或者要求公司购买":["12.1"],"个人购买的费用是第一年":["12.1"],"另外":["12.2","45.2"],"chrome上有支持webstorm的插件":["12.2"],"jetbrains":["12.2"],"ide":["12.2"],"js在本书中主要的使用用途是运行bower工具":["12.3"],"用以安装angularjs极其相关的库文件":["12.3"],"registry":["12.4"],"https":["12.4","37.6","75.6"],"taobao":["12.4"],"org":["12.4","79.0"],"我们将不再需要从网站上下载安装":["12.5"],"但是我们这里将创建一个新的空项目":["13.0"],"empty":["13.0"],"project":["13.0"],"并在":["13.1"],"目录中建立":["13.1"],"目录是用来存放供外部用户访问的内容的根目录":["13.2"],"非":["13.2"],"我推荐使用命令行的方式来进行创建":["13.3"],"调用系统的命令行功能":["13.4"],"statistics":["13.5"],"to":["13.5","64.33"],"improve":["13.5"],"the":["13.5","120.2","120.3"],"tool":["13.5"],"over":["13.5","69.0"],"time":["13.5"],"yes":["13.5"],"项目名称":["13.5"],"name":["13.5","25.2","25.3","28.1","30.6","61.20","61.49","74.0","76.2","78.7","99.3","99.4","99.7","99.8","108.9"],"learning":["13.5"],"angularjs":["13.5"],"项目说明":["13.5"],"description":["13.5"],"主文件":["13.5"],"main":["13.5"],"file":["13.5"],"项目的类型":["13.5"],"what":["13.5"],"types":["13.5"],"of":["13.5","120.3"],"modules":["13.5","64.57"],"目录":["13.6"],"并且项目的根目录与网站根目录不同":["13.6"],"因此":["13.6","37.9"],"我们需要新建一个额外的":["13.6"],"我们对":["13.7"],"我们已经创建好了项目":["14.0"],"cached":["14.1"],"git":["14.1","118.1","119.2","121.1","123.1","123.2"],"github":["14.1"],"com":["14.1","60.36"],"右键public目录":["14.2"],"new":["14.2","87.12","112.4"],"html":["14.3","17.1","17.3","20.0","24.3","25.1","30.0","61.40","61.49","91.4","98.0"],"注":["14.3","93.0"],"这里引入的angular":["14.3"],"元素中加入一个ng":["14.4"],"app":["14.4","15.0","19.0","19.2","20.0","20.2","21.0","23.3","24.2","25.0","30.5","30.7","31.0","31.1","32.4","33.0","34.0","37.3","38.0","52.3"],"然后加入一行代码":["14.4"],"hello":["14.4","16.0","20.1","21.0","77.6","77.10","78.31"],"然后选择":["14.5"],"run":["14.5"],"然后你就可以在新打开的浏览器中看到运行的效果":["14.5"],"基本表达式":["15.0"],"angularjs初始化":["15.0","37.3","38.0"],"ng":["15.0","20.2","25.1","30.0","33.0","37.3","38.0"],"控制器":["15.0","37.3","38.0"],"controller":["15.0","19.4","23.3","24.2","33.0","37.3","38.0"],"数据绑定":["15.0","37.3"],"h1":["16.0","32.5"],"world":["16.0","76.34","77.6"],"和模板":["17.0"],"template":["17.0","28.1","28.3","32.5","48.4","49.5","64.40","64.42","70.0"],"需要将部分html打包成独立的文件":["17.1"],"这时候":["17.1"],"我们在引入这个独立html文件时":["17.1"],"可以使用":["17.1"],"功能":["17.1","61.9","61.15","61.17","61.19","61.36","61.42","64.52","78.16","78.21"],"使用方法如下":["17.1"],"直接传入一个网页的地址":["17.1"],"include":["17.2","47.0"],"并且可以根据需求分别调用其中的某一个片段":["17.3"],"的用法如下":["17.3"],"本节我们将学习基本的":["18.0"],"文件":["18.1"],"并填入如下代码":["18.1"],"angular":["18.1","18.3","28.0","30.7","31.0","32.2","34.0"],"module":["18.1","28.0","30.7","31.0","34.0","115.4","115.5","115.8","115.9"],"我们就需要注意angularjs对于":["18.2"],"作用域":["18.2"],"的定义":["18.2"],"我们先通过如下的例子来看看作用域的具体表现":["18.2"],"doctype":["18.2","20.0","30.0","31.1"],"lang":["18.2","20.0","20.2","30.0","31.1"],"如果我们将上面代码的":["18.3"],"和应用":["19.0"],"类似":["19.0","77.3"],"下面我们来尝试创建一个控制器吧":["19.0"],"还是在app":["19.0"],"js中":["19.0"],"我们创建一个控制器":["19.0"],"代码如下":["19.0"],"js":["19.0","21.0","48.0","52.3","54.3","59.0","64.12","68.9","68.11","68.12","68.14","86.0","86.1","115.5"],"详解":["19.1"],"原有的ng":["19.2"],"app声明部分":["19.2"],"是我们在":["19.3"],"function":["19.3","20.1","23.2","28.0","30.5","30.6","30.7","34.0","48.3","74.0","75.1","77.20","78.6","81.0","83.0","84.0","87.14","88.1","88.2","93.1","99.4","99.6","101.2","101.4","107.3","110.0"],"中传入的":["19.3"],"参数":["19.3","47.0","49.1","64.54","77.15","79.0","85.1"],"scope":["19.3","19.5","20.1","22.0","25.0","25.2","25.3","25.4","30.6","30.7","32.0"],"与一般的函数声明时的参数不同":["19.3"],"此处的参数是":["19.3"],"不可随意命名":["19.3"],"中的数据":["19.4"],"最简单的做法":["19.5"],"zh":["20.0","20.2","30.0","31.1"],"data":["20.1","24.5","28.1","78.9","110.0"],"message":["20.1","21.0"],"在":["20.1","22.1","48.0","60.3","64.37","77.14","95.2"],"scope上绑定一个函数":["20.1"],"中添加":["21.0"],"flag":["21.0"],"变量":["21.0"],"设置默认值为":["21.0"],"true":["21.0","34.0","49.7","76.21","77.3","78.5","93.3","96.6","96.7","96.19"],"hide":["21.1"],"的区别":["21.1","91.7"],"虽然效果看起来类似":["21.1"],"但":["21.1"],"直接作为判断依据":["21.2"],"但是以上三个标签都支持传入表达式":["21.2"],"比如以下的表达式都可以作为冒号中的表达方式":["21.2"],"我们准备如下的数据":["22.0"],"这是一个包括三个":["22.0"],"object":["22.0","87.14","92.4","93.1","97.3"],"的":["22.0","30.1","51.8","75.2","87.16","96.23"],"array":["22.0","29.4","60.33","78.25","78.26","96.22","107.3"],"repeat":["22.1"],"中知道是哪一行被点击了呢":["22.1"],"angularjs提供了":["22.1"],"这个字段让我们实现这个功能":["22.1"],"下面":["22.1"],"我们来看看使用":["22.1"],"的例子":["22.1"],"结果":["23.0"],"00":["23.0"],"currency":["23.0"],"人民币":["23.0"],"转化为货币后输出":["23.0"],"保留0位小数":["23.0"],"四舍五入":["23.0"],"结果为":["23.0"],"list":["23.1","29.4","61.32","122.4"],"filter":["23.2"],"reverse":["23.2","112.6"],"几百行以内":["23.3"],"可以考虑使用本功能来筛选结果":["23.3"],"示例如下":["23.3"],"使用上一节的例子":["23.3"],"firstctrl":["23.3","24.1","24.2","30.3","30.4"],"只搜索":["23.4"],"字段包含":["23.4"],"的项目":["23.4"],"last":["23.4","77.6","79.0"],"class":["24.0","64.37","64.38","64.40","64.41","73.1","99.1","107.5"],"bold":["24.1"],"font":["24.1"],"weight":["24.1"],"红色":["24.1"],"red":["24.1","106.3"],"color":["24.1","24.5","68.2","68.4","68.7","68.10","95.2","99.1","106.3"],"错误":["24.1"],"has":["24.1","78.2","78.13","78.18"],"error":["24.1","120.2"],"background":["24.1","68.2","68.4","68.7","68.10"],"yellow":["24.1"],"橙色":["24.1"],"orange":["24.1"],"修改":["24.1","63.2"],"为如下代码":["24.1"],"比如如下示例":["24.2"],"p":["24.3","28.1","32.5","49.1","108.12","122.6"],"cubic":["24.4"],"bezier":["24.4"],"colorinput":["24.5"],"示例文本":["24.5"],"colorinput为":["24.5"],"scope中的对象":["24.5"],"传入文本即可":["24.5"],"styletext":["24.5"],"提供了很多功能用来梳理或筛选下拉列表的选项":["25.0"],"我们将分别学习它们":["25.0"],"首先":["25.0","25.2"],"让我们学习下如何使用":["25.0"],"这里":["25.0"],"我们期望实现的是":["25.0"],"使用下拉列表":["25.0"],"让页面上的一个方块的颜色对应变化":["25.0"],"我们首先配置一个颜色的列表":["25.0"],"并且在":["25.0"],"中存储一个用于保存选中状态的变量":["25.0"],"将它的默认值设置为颜色列表的第一个":["25.0"],"select":["25.1"],"语法":["25.2","88.1","88.2","88.6"],"下面我们看看例子":["25.2"],"我们在列表中增加类型字段":["25.2"],"colors":["25.2","25.3"],"黑色":["25.2"],"disabled":["25.3"],"属性":["25.3","61.9","61.10","87.16","92.3","93.1"],"这是为了表明如果没有这项数据":["25.3"],"默认的":["25.3"],"的操作":["25.3"],"可以选择":["25.3"],"一般是为了简化配置":["25.4"],"比如我们采取如下的配置":["25.4"],"countries":["25.4"],"cn":["25.4"],"中国china":["25.4"],"us":["25.4"],"我们学习了angularjs的基本用法":["26.0"],"掌握了这些用法":["26.0"],"深入":["27.0"],"一些的部分":["27.0"],"本章将介绍angularjs的directive":["27.0"],"有若干angularjs的中文译文将directive翻译为":["27.0"],"指令":["27.0"],"directive作为angularjs的基本特性":["27.1"],"我们已经在前面大量的学习和使用了它":["27.1"],"逐渐深入的学习directive的特性和高级使用方法":["27.2"],"由于directive的特性主要针对展示界面的操作":["27.2"],"directive":["28.0","30.5","30.6","30.7","31.0","34.0"],"people":["28.0","29.0","29.2","29.4","30.5","30.6"],"return":["28.0","30.6","30.7","34.0","60.37","76.12","78.4","78.5","78.6","87.10","87.14","97.3","99.5","99.6","101.2","101.4","115.7"],"restrict":["28.0","28.1","28.3","30.6","30.7","32.5","34.0"],"e":["28.1","34.0","78.7","79.0","119.2"],"姓名":["28.1"],"相对比较容易理解":["28.2"],"在运行网页时":["28.2"],"与":["28.3","63.6","64.7","76.14","77.2","82.0","119.0"],"和":["28.3","44.1","47.0","50.2","60.24","60.47","64.12","74.1","76.13","76.18","77.9","78.22","78.25","87.13","88.4","95.3","98.7","106.1","107.4","119.1"],"同级别":["28.3"],"下面这个表格":["28.4"],"总结了restrict可能有的值":["28.4"],"具体的每种应用方案":["28.4"],"我们将在下一节详解":["28.4"],"的directive":["29.0"],"驼峰式":["29.1"],"命名":["29.2"],"使用":["29.2","50.5","60.3","64.27","64.30","78.10"],"是":["29.3","49.3","55.2","61.41"],"但实际上":["29.5"],"angularjs支持的连接符有":["29.5"],"符号":["29.5"],"存在的原因是需要符合html5标准":["29.6"],"如果你使用html5验证器来验证我们之前的代码":["29.6"],"你可能会看到如下结果":["29.6"],"如果我们按照现在的代码结构":["30.0"],"详见第一节":["30.0"],"期望放置不同的人的信息":["30.0"],"只能采取重复多个控制器的方式":["30.0"],"可能的代码如下":["30.0"],"而directive在默认情况下":["30.1"],"是没有自动绑定一个":["30.1"],"也就是说":["30.1","77.12","94.0"],"在默认情况下":["30.1","75.4"],"directive无法在javascript中接收传入的数据":["30.1"],"因为缺少一个存储信息的载体":["30.1"],"形成我们期望的效果":["30.1"],"但是":["30.1","37.8","78.14"],"我们对scope的定义使用了如下结构":["30.2"],"我们在":["30.3"],"中增加几个人的数据":["30.3"],"并将它们通过directive显示出来":["30.3"],"结合起来":["30.4"],"实现列表显示数据的效果":["30.4"],"我们先将":["30.4"],"的数据变化为一个":["30.4"],"input":["30.5"],"即可":["30.5"],"a":["30.6","30.7","32.0","32.5","49.1","54.1","61.30","61.34","76.21","77.7","77.17","115.7"],"formdirective":["30.7","31.0"],"这里使用":["30.7"],"符号来接受传入的函数":["30.7"],"btnclick":["30.7"],"通过引入外部文件的形式来调用布局":["31.0"],"例如":["31.0","31.2","51.8","60.37","75.4","107.2"],"head":["31.1"],"meta":["31.1"],"charset":["31.1"],"utf":["31.1"],"也支持通过函数来获取最终的url地址":["31.2"],"b":["32.0","54.1","77.7","77.17","115.7"],"c":["32.0","43.1","76.8"],"element":["32.0","78.29"],"attrs":["32.0"],"console":["32.0","74.0","76.3","76.14","76.30","76.34","77.10","87.15","93.4","96.16","97.4","108.5","114.2"],"log":["32.0","74.0","76.3","76.14","76.34","77.10","93.4","96.16","97.4","108.5","114.2"],"json":["32.0","60.45","97.4","114.2"],"jquery":["32.2"],"lite":["32.2"],"jqlite":["32.2"],"angularjs通过jqlite的调用方法":["32.2"],"bower":["32.3"],"安装jquery":["32.3"],"bash":["32.3"],"因为jqlite不支持通过标签方式获取子元素":["32.4"],"如果您有兴趣学习jqlite的使用方法":["32.4"],"并且拥有一定的英文阅读能力":["32.4"],"可以在这里查看官方文档":["32.4"],"标题":["32.5"],"这里是段落文字":["32.5"],"等":["33.0"],"也同样都是directive":["33.0"],"而我们可以在这些元素中":["33.0"],"直接填入html代码":["33.0"],"的调用":["34.0"],"require":["34.0"],"获取的对象作为第四个参数传入":["34.0"],"link":["34.0","61.30"],"函数":["34.0","77.9","77.15","93.4"],"transclude":["34.0"],"注意这里为tabcontainer增加了一个controller":["34.0"],"并引入了":["34.0"],"并且对于之前前端开发经验不足的读者可能会造成一些学习上的困难":["35.0"],"相关知识点":["36.0"],"x":["37.0","37.1","37.7","60.37","76.12","76.34","77.3","77.5","78.28","87.7","108.7","108.11"],"本书是我在学习和应用angularjs":["37.1"],"gitbook地址":["37.2"],"您需要知道和理解html和css布局的方法":["37.4"],"您需要知道javascript的基本语法":["37.4"],"推荐":["37.4"],"您知道一些node":["37.4"],"设计了几款应用":["37.5"],"参与了一小部分的开发工作":["37.5"],"数据通过api":["37.6"],"获取":["37.6"],"对于选择angularjs":["37.7"],"掌握了html":["37.8"],"css的一些应用技巧":["37.8"],"javascript的语法和基本特性方面也通过node":["37.8"],"js在工作中的应用熟悉了":["37.8"],"在网站前端技术准备过程中":["37.8"],"我发现我对dom的操作一窍不通":["37.8"],"即使是购买了若干本入门的书籍":["37.8"],"通过阅读书籍":["37.8"],"我知道了如何通过document":["37.8"],"getelementbyid":["37.8"],"xxx":["37.8"],"或者jquery的":["37.8"],"会有很多新的功能需求":["37.9"],"功能扩大非常多":["37.9"],"发现我电脑上安装的chrome":["37.10"],"v44版本无法运行":["37.10"],"当我下载更新到v47后才能正常运行":["37.10"],"官网介绍v46以上才支持es6":["37.10"],"新版本angular":["37.10"],"2抛弃了controller":["37.10"],"service":["37.10"],"完全用directive":["37.10"],"这点与我的技术构想不符":["37.10"],"即使在我评估angular":["37.10"],"2时已经是beta版本":["37.10"],"但是官网仍然推荐不要将其用于生产环境":["37.10"],"我的网站运行的是对公业务":["37.10"],"且对合作方使用的浏览器有一定的影响能力":["37.10"],"vue是双向绑定":["41.1"],"react是单向数据流":["41.1"],"封闭原则":["41.2"],"封闭是针对渲染工作流来说":["41.2"],"指的是组件内部的状态都由自身维护":["41.2"],"只处理内部渲染逻辑":["41.2"],"组件更新阶段":["41.3"],"组件卸载阶段":["41.3"],"挂载":["41.3"],"constructor":["41.3","77.22","79.0","99.1"],"可以设置到根节点组件外层":["41.5"],"这样可以全局生效":["41.5"],"react的严格模式检查仅在开发模式下运行":["41.5"],"它们并不会影响生产构建":["41.5"],"ref":["41.6","50.5","64.51","120.2"],"api":["41.6"],"主要有以下几种实现方式":["41.7"],"redux":["41.7","63.5"],"将页面数据储存在redux中":["41.7"],"是react的语法糖":["41.8"],"他允许在html中写js并且不能被浏览器识别":["41.8"],"react中不强制使用jsx":["41.9"],"当不想在构建环境中配置有关jsx编译时候":["41.9"],"错误边界在生产环境中非常有用":["41.10"],"可以防止程序因错误而崩溃":["41.10"],"同事还可以帮助开发者定位到错误":["41.10"],"import":["41.10","64.18","64.19","64.55"],"usestate":["41.10"],"useeffect":["41.10"],"因为jsx语法无法被浏览器所识别":["41.11"],"要想解决这个问题就需要套一层div标签":["41.12"],"但是这样会多增加一个节点":["41.12"],"受控组件就是组组件的改变受控于数据的变化":["41.13"],"数据变了页面也就变了":["41.13"],"所有模板":["42.1"],"图片资源都存储在服务器端":["42.1"],"服务端压力大":["42.2"],"正常是通过客户端去渲染":["42.2"],"childrencomponent":["43.1"],"props":["43.1"],"any":["43.1","108.12"],"count":["43.1","45.1","78.1"],"setcount":["43.1","45.1"],"childrenref":["43.1"],"handleclick":["43.1"],"handledelete":["43.1"],"真实的dom之间加了一个缓存":["44.0"],"createelement":["44.1"],"数据的变化会实时地更新到用户界面中":["44.2"],"我是我的胃来食":["44.3"],"ul":["44.3"],"li":["44.3"],"react":["44.3"],"性能提升":["44.5"],"牢记浏览器在处理dom时很慢":["44.5"],"处理js时很快":["44.5"],"react基于虚拟dom实现了一套自己的事件机制":["44.6"],"hoc":["45.0"],"是一个接收组件作为参数并返回一个新组建的函数":["45.0"],"换句话说":["45.0"],"它是一种组件的":["45.0"],"转换器":["45.0"],"from":["45.1","64.18","64.33","96.22"],"counter":["45.1"],"increment":["45.1"],"useref用于操作dom元素":["45.2"],"usestate返回的是当前状态":["45.2"],"和一个更新状态的函数":["45.2"],"而":["45.2","64.20","78.7","112.2"],"useref":["45.2"],"包含的组件":["47.0"],"会多出两个生命周期钩子":["47.0"],"activated":["47.0"],"deactivated":["47.0"],"当":["47.0"],"包含的组件再次渲染的时候触发":["47.0"],"包含的组件销毁的时候触发":["47.0"],"参数类型":["47.0"],"interface":["47.0","108.6","108.9","108.10"],"keepaliveprops":["47.0"],"如果指定":["47.0"],"则只有与":["47.0"],"名称":["47.0"],"匹配的组件才会被缓存":["47.0"],"vue":["48.0","48.4","49.5","64.18","64.28","64.29","64.40","64.43","64.47","70.0"],"的异步更新队列以及浏览器的事件循环机制":["48.0"],"vue2":["48.0","48.6","64.52","64.56"],"process":["48.1"],"资源分配最小单位":["48.1"],"进程是应用的执行实例":["48.1"],"是操作系统进行资源分配和调度的一个独立单位":["48.1"],"如果把计算机cpu必做一个工厂的话":["48.1"],"那么进程就相当于工厂中的车间":["48.1"],"代表cpu所能处理的单个任务":["48.1"],"线程":["48.1"],"thread":["48.1"],"线程是进程内部的一个执行单元":["48.1"],"是被系统独立调度和分派的基本单位":["48.1"],"系统创建好进程后":["48.1"],"在watcher放到队列中后":["48.2"],"然后调用":["48.2"],"nexttick":["48.2"],"响应式派发更新的源码在这一块是这样的":["48.2"],"地址":["48.2"],"src":["48.2","60.35","60.36","115.5"],"core":["48.2"],"flushcallbacks":["48.3"],"重置异步开关":["48.3"],"防止nexttick里有nexttick出现的问题":["48.3"],"所以执行之前就先备份并清空回调队列":["48.3"],"copies":["48.3"],"slice":["48.3","60.33","60.38"],"length":["48.3","48.5","76.16","87.16","96.21","96.22"],"执行任务队列":["48.3"],"for":["48.3","84.0","85.2"],"i":["48.3","61.34","78.6","85.2","96.22","121.2"],"copiesi":["48.3"],"timefunc":["48.3"],"用来保存调用异步任务方法":["48.3"],"判断当前环境是否支持原生":["48.3"],"if":["48.3","48.5","51.7","77.3","78.7","101.2","110.0","112.4"],"typeof":["48.3","60.37"],"undefined":["48.3","78.4","87.15","92.1","94.0","96.5"],"isnative":["48.3"],"保存一个异步任务":["48.3"],"的时候":["48.5","95.2"],"会执行该函数":["48.5"],"把我们的参数":["48.5"],"赋值给p":["48.5"],"在队列的任务完成后":["48.5"],"fn就执行了":["48.5"],"由于加了几个维护队列的方法":["48.5"],"所以执行顺序是这样的":["48.5"],"queuejob":["48.5"],"queueflush":["48.5"],"flushjobs":["48.5"],"nexttick参数的":["48.5"],"这个方法负责维护主任务队列":["48.5"],"接受一个函数做为参数":["48.5"],"为":["48.5","61.20"],"待入队":["48.5"],"任务":["48.5"],"会将参数":["48.5"],"push":["48.5","76.12"],"到":["48.5"],"queue":["48.5"],"队列中":["48.5"],"有唯一性判断":["48.5"],"会在当前宏任务之行结束后":["48.5"],"清空队列":["48.5"],"schedulerjob":["48.5"],"job":["48.5"],"主任务队列为空":["48.5"],"或者":["48.5","49.4"],"有正在执行的任务并且没有在主任务队列中":["48.5"],"不能和当前正在执行任务以及后面带执行任务相同":["48.5"],"includes":["48.5"],"isflushing":["48.5"],"allowrecurse":["48.5"],"slot":["49.1","64.45","64.47"],"一个指令的任务是在其表达式的值变化时对dom进行响应式更新":["49.1"],"seen":["49.1"],"nou":["49.1"],"you":["49.1","120.2"],"see":["49.1"],"me":["49.1"],"arguments":["49.1","60.33","78.6","96.21"],"某些指令有时候需要一个":["49.1"],"在指令名后通过一个冒号隔开作为标识":["49.1"],"例如用":["49.1"],"指令来响应式地更新一个html的attribute":["49.1"],"href":["49.1","81.0"],"url":["49.1","81.0"],"真实":["49.3"],"的条件渲染":["49.3"],"因为他确保了在切换时":["49.3"],"条件区块内的事件监听和子组件都会被销毁与重建":["49.3"],"也可以为索引指定别名":["49.4"],"如果是对象":["49.4"],"则是键值":["49.4"],"index":["49.4","112.4","115.5"],"value":["49.4","78.1","78.2","78.25","78.27","108.4"],"key":["49.4","64.10","68.14","79.0"],"在处理绑定时":["49.5"],"vue会默认利用":["49.5"],"in":["49.5","78.2","78.4","120.3"],"操作服来检查该元素上是否定义了和绑定了key同名的dom":["49.5"],"如果存在同名的":["49.5"],"则vue会将它作为dom":["49.5"],"property的赋值":["49.5"],"而不是作为attribute设置":["49.5"],"当用于组件props绑定时":["49.5"],"所绑定的props必须在子组件中已被正确声明":["49.5"],"当不带参数使用时":["49.5"],"可以用于绑定一个包含了多个":["49.5"],"attribute名称":["49.5"],"绑定值":["49.5"],"对的对象":["49.5"],"绑定":["49.5"],"img":["49.5"],"lazy":["49.6"],"监听":["49.6"],"change":["49.6"],"最多触发一次处理函数":["49.7"],"left":["49.7","60.38","68.4","68.10","68.12","68.13","95.5","106.5"],"只在鼠标左键事件触发处理函数":["49.7"],"right":["49.7","68.10","106.5","108.9"],"只在鼠标右键事件触发处理函数":["49.7"],"middle":["49.7","61.25"],"只在鼠标中键事件触发处理函数":["49.7"],"passive":["49.7"],"通过":["49.7","61.25","64.37","64.54","99.9"],"附加一个dom事件":["49.7"],"事件类型由参数来指定":["49.7"],"表达式可以是一个方法名":["49.7"],"一个内联升明":["49.7"],"如果有修饰符可以省略":["49.7"],"当用于普通元素":["49.7"],"只监听原生dom事件":["49.7"],"当用于自定义元素组件":["49.7"],"则监听子组件出发的自定义事件":["49.7"],"当监听原生dom事件时":["49.7"],"beforecreate":["50.0","50.4"],"created":["50.0"],"beforemount":["50.0","50.1","50.2","50.4"],"mounted":["50.0","50.3","50.4"],"beforeupdate":["50.0"],"updated":["50.0"],"beforedestroy":["50.0"],"组件实例被创建之初":["50.1"],"createed":["50.1"],"组件实例已被完全创建":["50.1"],"中的方法":["50.2"],"访问和修改data数据触发响应式渲染":["50.2"],"dom":["50.2","50.3","61.44","64.31","78.15"],"可通过":["50.2"],"computed":["50.2","50.5","79.0"],"完成数据计算":["50.2"],"此时":["50.2","74.0","94.0","118.1"],"vm":["50.2"],"el":["50.2"],"并没有被创建":["50.2"],"这时候页面":["50.3"],"节点并未生成":["50.3"],"之外":["50.4"],"函数被替换成了":["50.4"],"onbeforemount":["50.4"],"onmounted":["50.4","50.5"],"处理计算属性":["50.5"],"声明事件处理函数等":["50.5"],"这些函数包括":["50.5"],"reactive":["50.5"],"用于创建响应式对象":["50.5"],"用于创建一个单一的响应式值":["50.5"],"用于创建计算属性":["50.5"],"watch":["50.5"],"用于监听响应式数据的变化":["50.5"],"onupdate":["50.5"],"onunmounted":["50.5"],"用于监听生命周期钩子":["50.5"],"torefs":["50.5"],"用于将响应式对象转换为普通对象":["50.5"],"inject":["50.5"],"provide":["50.5"],"用于跨层级组件传递数据":["50.5"],"getcurrentinstance":["50.5"],"用于访问当前组件实例":["50.5"],"函数的优点是可以讲相似的逻辑组织在一起":["50.5"],"便于代码的维护和重用":["50.5"],"此外":["50.5"],"model":["51.1","51.2","51.3"],"绑定到":["51.1"],"view":["51.2"],"应用的数据以及业务逻辑":["51.3"],"数据变化后更新视图":["51.4"],"视图变化后更新数据":["51.4"],"首先执行初始化":["51.5"],"对data执行响应化处理":["51.5"],"这个过程发生在监听器":["51.5"],"observer":["51.5"],"中":["51.5","60.3","79.0","91.2","94.0","103.1","107.1"],"options":["51.6","64.49"],"this":["51.6","51.7","60.47","79.0","99.3","99.4","99.6","99.8","110.0","120.2"],"document":["51.7","52.4","76.12"],"queryselector":["51.7","52.4"],"获取dom":["51.7"],"definereactive":["51.8"],"时为每一个":["51.8"],"创建一个":["51.8"],"实例":["51.8"],"初始化视图时读取某个":["51.8"],"name1":["51.8","97.3"],"watcher1":["51.8"],"由于触发":["51.8"],"getter":["51.8"],"方法":["51.8","60.44","76.15","96.23"],"便将":["51.8"],"添加到":["51.8"],"先了解一下spa":["52.1"],"翻译过劳就是单页面应用":["52.2"],"是一种网络应用程序或者网站的模型":["52.2"],"它通过动态重写当前页面来与用户交互":["52.2"],"这种方法避免了页面之前切换打断用户体验":["52.2"],"也就是页面在屏幕上首次发生视觉变化的时间":["52.3"],"注意":["52.3","95.4","122.10"],"fp不包含默认背景绘制":["52.3"],"但包含非默认的背景绘制":["52.3"],"div":["52.3","64.37","64.38","64.40","64.46","70.0","73.1","76.12"],"id":["52.3","68.14","108.1","108.2","115.5"],"页面在导航后首次呈现出不同于导航前内容的时间点":["52.3"],"有一个东西回来渲染在页面上了":["52.3"],"之后是静态资源":["52.3"],"css":["52.3","58.7","60.42","68.1","68.3","68.6","68.8","68.10","68.11"],"再到cdn":["52.4"],"直接请求html":["52.4"],"相当于把fmp提前到了fp":["52.4"],"其实更像另外一种骨架屏":["52.4"],"少了ajax请求":["52.4"],"但是由于我们这么做智能添加死数据":["52.4"],"而不能把":["52.4"],"ajax":["52.4","63.1"],"请求的数据渲染到页面上":["52.4"],"如何解决呢":["52.4"],"我们可以在app":["52.4"],"vue中":["52.4","64.36"],"直接在script中给对应标签添加数据即可":["52.4"],"工程师应该怎样学习":["53.0"],"编译时加载":["54.3"],"运行时加载":["54.3"],"输出不同":["54.3"],"输出的是值的引用":["54.3"],"引擎对脚本静态分析的时候":["54.3"],"遇到模块加载命令":["54.3"],"就会生成一个只读引用":["54.3"],"等到脚本真正执行时":["54.3"],"再根据这个只读引用":["54.3"],"类型由于跳过了类型检查":["55.2"],"他可以随意赋值":["55.2"],"所以可能会带来变量的污染":["55.2"],"引入的类型":["55.2"],"它代表了一个未知的类型":["55.2"],"类型要求进行类型检查和类型断言":["55.2"],"以便在使用前确定其实际类型":["55.2"],"类型不能够直接使用":["55.2"],"的概念":["55.3","119.1"],"即该类型为空":["55.3"],"不包含任何值":["55.3"],"使用场景":["55.3"],"主要是在一些类型运算中":["55.3"],"保证类型的完整性":["55.3"],"例如在一个联合类型中":["55.3"],"通过类型守卫进行类型范围缩小后":["55.3"],"剩余的情况就是":["55.3"],"个文件":["58.2"],"的异同":["58.11"],"类比介绍":["58.13"],"弱类型语言":["60.1"],"比较灵活":["60.1"],"与操作系统无关":["60.1"],"前端数据类型":["60.2"],"一个完整的ajax请求包括以下步骤":["60.3"],"创建":["60.3"],"xmlhttprequest":["60.3"],"对象":["60.3","64.35","64.54","64.55","77.12"],"对象来发起":["60.3"],"请求":["60.3","60.50","60.51"],"可以通过":["60.3","64.54"],"是临时响应":["60.4"],"用于通知客户端":["60.4"],"部分的请求服务器已经接受":["60.4"],"但是客户端继续发送请求剩余部分":["60.4"],"如果请求已经完成":["60.4"],"就忽略这个响应":["60.4"],"定义在一个函数内部的函数":["60.6"],"其中一个内部函数在包含他们的外部函数之外被调用时":["60.6"],"关键字":["60.7","60.47","77.20"],"则默认的会添加到全局对象的属性上去":["60.7"],"这样的临时变量加入全局对象有很多坏处":["60.7"],"比如":["60.7","60.48","64.43"],"可以作为参数传递":["60.8"],"闭包可以作为参数传递给其他函数":["60.8"],"也可以被其他函数返回":["60.8"],"优点":["60.8"],"变量长期驻扎在内存中":["60.8"],"避免全局变量的污染":["60.8"],"存在私有成员":["60.8"],"缺点":["60.8"],"只制定一个时间处理程序":["60.9"],"访问dom次数越多":["60.10"],"引起浏览器回流和重绘的次数也就越多":["60.10"],"就会延长整个页面的交互时间":["60.10"],"如果委托给父级ul标签":["60.10"],"我们与dom的交互只需要交互一次":["60.10"],"这样就大大减少dom的交互次数":["60.10"],"对象提供了一个属性叫":["60.11"],"target":["60.11","78.6","78.7"],"会把接收到事件传递给自己的父级":["60.12"],"这种传递分为三个阶段":["60.12"],"每个cookie的大小限制为4kb":["60.13"],"因为每个http请求都会携带cookie":["60.13"],"如果过多的cookie数据":["60.13"],"会影响请求性能":["60.13"],"本地存储的容量相对较大":["60.13"],"通常可达到5mb":["60.13"],"这使得本地存储更适合大量数据的本地保存":["60.13"],"常用的数组的方法":["60.15"],"jsonstr":["60.16"],"将功能封装到对象之中":["60.17"],"让对象去实现具体的细节":["60.17"],"这种思想是将数据作为第一位":["60.17"],"这是对数据一种优化":["60.17"],"调用时":["60.18"],"构造函数内部会创建一个新对象":["60.18"],"就是实例":["60.18"],"普通函数不会创建新对象":["60.18"],"构造函数内部的this指向实例":["60.18"],"普通函数内部的this指向调用函数的对象":["60.18"],"如果没有调用":["60.18"],"默认为window":["60.18"],"构造函数默认的返回值就是创建的对象":["60.18"],"es6新特性二":["60.20"],"换为":["60.21"],"async":["60.21"],"将":["60.21","75.1"],"yield":["60.21"],"实际上http协议从未规定":["60.22"],"post":["60.22"],"的请求长度是多少":["60.22"],"对":["60.22"],"请求在缓存方面的区别":["60.23"],"事件捕获阶段":["60.25"],"处于目标阶段":["60.25"],"事件冒泡阶段":["60.25"],"apply":["60.26","74.1","122.7"],"clientheight":["60.27"],"当鼠标点击按下的时候":["60.28"],"需要一个tag来标记此时已经按下了":["60.28"],"可以执行":["60.28"],"数组或者对象时":["60.30"],"解释器都必须分配内存来存储那个实体":["60.30"],"只要像这样动态分配了内存":["60.30"],"最终都要释放这些内存以便它们能够被再用":["60.30"],"否则":["60.30"],"垃圾回收器在运行时会给存储在内存中的变量都加上标记":["60.31"],"所有都加":["60.31"],"然后去掉环境变量中的变量":["60.31"],"以及被环境变量中的变量所引用的变量":["60.31"],"条件行去除标记":["60.31"],"删除所有被标记的变量":["60.31"],"删除的变量无法在":["60.31"],"环境变量中被访问":["60.31"],"所以会被删除":["60.31"],"最后垃圾回收器完成了内存的清除工作":["60.31"],"并回收它们所占用的内存":["60.31"],"计数引用":["60.31"],"来实现已有属性的监听":["60.32"],"user":["60.32","75.2"],"obj":["60.33","74.0","77.6","78.7"],"arg":["60.33","108.12"],"context":["60.33","101.4"],"image":["60.35"],"http":["60.35","60.36","60.51"],"www":["60.36"],"phpernote":["60.36"],"这种方法可以实现一般对象和数组对象的克隆":["60.37"],"arr":["60.37","76.12","78.29","87.10","87.12","96.2","96.4","96.12","96.16","96.21"],"newarr":["60.37"],"y":["60.37","76.12","76.30","76.34","77.5","78.28"],"取字符串的第一个字符作为左侧字符":["60.38"],"rest":["60.38","78.28"],"此时就会发生跨域访问问题":["60.40"],"在请求过程中我们想要发送":["60.40"],"接收数据一般都是":["60.40"],"netscape":["60.41"],"提出的一个著名的安全策略":["60.41"],"可以用在一些对颜色要求不高的地方":["60.42"],"优化css":["60.42"],"压缩合并":["60.42"],"在javascript中":["60.43","88.0"],"this通常指向的是我们正在执行的函数本身":["60.43"],"lastindexof":["60.44"],"es6的":["60.44"],"并且内容拷贝":["60.45"],"parse":["60.45"],"遍历对象自身和继承可枚举的属性":["60.46"],"原型方法":["60.47"],"异步":["60.48"],"非阻塞":["60.48"],"信息是明文传输":["60.50"],"基于":["60.50"],"文件压缩":["60.51"],"提前讲所需资源下载":["60.52"],"csrf":["60.54"],"浏览器":["61.0"],"jpeg":["61.1"],"是一种有损压缩格式":["61.2"],"适合存储照片和复杂的图像":["61.2"],"是一种无损压缩格式":["61.3"],"适合存储图标":["61.3"],"是一种支持动画和简单图形的格式":["61.4"],"同时也支持透明度":["61.4"],"内边距":["61.5"],"padding":["61.5"],"边框":["61.5"],"border":["61.5"],"box":["61.7","64.37","64.38","64.41"],"sizing":["61.7"],"属性名称":["61.9","61.16"],"type":["61.10","87.7","108.1","108.2","114.2"],"表单类型":["61.11"],"结构清晰":["61.12"],"利于维护":["61.12"],"种类":["61.12"],"标签名":["61.12"],"标签作用":["61.12"],"添加圆角":["61.14"],"shadow":["61.14"],"边框添加阴影":["61.14"],"水平位移":["61.14"],"垂直位移":["61.14"],"size":["61.15"],"break":["61.17"],"2d3d":["61.18"],"可以将元素旋转":["61.18"],"缩放":["61.18"],"移动":["61.18"],"但不利于响应式布局":["61.21"],"父级定义":["61.21"],"overflow":["61.21"],"hidden":["61.21"],"zoom":["61.21"],"两个属性":["61.21"],"其中":["61.21","78.25","108.7","121.2"],"不脱离文档流":["61.22"],"相对于自身定位":["61.22"],"absolute":["61.22","68.4","68.10"],"子元素设置margin":["61.24"],"auto":["61.24","61.26","68.1","68.2","68.5","68.6","68.7","68.8","120.3"],"align":["61.25","61.32","68.1","68.5","68.6"],"已知父元素高度":["61.25"],"子元素相对定位":["61.25"],"transform":["61.25"],"top减去各自宽高的一半":["61.26"],"子元素上下左右全为0":["61.26"],"然后设置子元素margin":["61.26"],"左右两栏均左浮动":["61.27"],"左右两栏采用负的margin值":["61.27"],"中间栏被宽度为100":["61.27"],"的浮动元素包起来":["61.27"],"可以添加谷歌私有属性webkit":["61.28"],"text":["61.28","61.32","64.38","68.1","68.5","68.6"],"通配符选择器":["61.30"],"空格":["61.30"],"相邻兄弟选择器":["61.30"],"通用选择器":["61.30"],"visited":["61.30"],"元素选择器":["61.31"],"indent":["61.32"],"列表元素":["61.32"],"style":["61.32","68.14","79.0"],"在图片未可视区域加一个滚动条事件":["61.33"],"判断图片位置与浏览器顶端和页面的距离":["61.33"],"设置宽高无效":["61.34"],"span":["61.34"],"br":["61.34"],"外边距":["61.35"],"自身边框到另一个边框之间的距离":["61.35"],"来控制子盒子的位置和排列方式":["61.36"],"属性名":["61.36"],"像素":["61.38"],"是相对于显示器屏幕分辨率来说的":["61.38"],"相对长度单位":["61.38"],"相对于当前对象内文本的字体尺寸":["61.38"],"media":["61.39"],"html5":["61.41"],"中的文档声明":["61.41"],"dragstart":["61.42"],"事件主体是被拖放元素":["61.42"],"加载阶段":["61.43"],"发出请求到网页渲染完成的这段过程":["61.43"],"变成非关键资源":["61.44"],"如果js代码没有":["61.44"],"操作":["61.44"],"帧的速度决定了交互的流畅性":["61.45"],"大部分情况下":["61.45"],"生成一个新的帧":["61.45"],"有的话就从记录里找到对应ip地址":["61.48"],"完成域名解析":["61.48"],"没有的话接着使用":["61.48"],"tcp":["61.48"],"ip":["61.48"],"参数设置的":["61.48"],"dns":["61.48"],"服务器进行查询":["61.48"],"如果查询的域名包含在本地配置区域资源中":["61.48"],"则返回解析结果":["61.48"],"没有的话再接着检查本地":["61.48"],"服务器是否缓存有该网址的记录":["61.48"],"有的话返回解析结果":["61.48"],"如果还没有":["61.48"],"本地":["61.48"],"服务器会发送查询豹纹到根":["61.48"],"服务器":["61.48"],"在根":["61.48"],"服务器收到报文之后会返回顶级域":["61.48"],"服务器地址":["61.48"],"然后本地":["61.48"],"的方式":["61.49"],"如果css动画只改变":["61.50"],"transfoem":["61.50"],"opacity":["61.50"],"这时整个css动画得以在":["61.50"],"多个相邻":["61.51"],"兄弟或者父子关系":["61.51"],"的理解":["63.3","63.32"],"webcomponent":["63.5"],"规范":["63.5"],"都是数据驱动视图":["63.5"],"都有状态管理":["63.5"],"有":["63.5"],"vuex":["63.5"],"都有支持":["63.5"],"native":["63.5"],"的方案":["63.5"],"组件的理解":["63.7"],"之后发生了什么":["63.8"],"会提高性能":["63.10"],"state":["63.11","64.57"],"原理":["63.13"],"思想":["63.16"],"组件的何处发起":["63.18"],"order":["63.19"],"gulp":["63.23"],"中的":["63.24"],"的打包原理":["63.27"],"模块区别":["63.28"],"常用指令有哪些":["63.29"],"全家桶":["63.30"],"fetch":["63.34","119.1","120.2"],"自底向上增量开发的":["64.1"],"模型":["64.2"],"视图":["64.2"],"和视图模型":["64.2"],"这种设计模式有助于实现前端应用程序的解耦和可维护性":["64.2"],"基本概念":["64.2"],"模型是应用程序的数据部分":["64.2"],"包含了应用程序的数据和业务逻辑":["64.2"],"模型通常通过ajax请求与后端交互":["64.2"],"以获取或更新数据":["64.2"],"视图是用户界面的一部分":["64.2"],"负则呈现模型数据":["64.2"],"视图通常是用":["64.2"],"的更新都会向下流动到子组件中":["64.3"],"每次父组件发生更新":["64.3"],"将输出字符串转化为":["64.4"],"类型":["64.4","107.2"],"trim":["64.4"],"自动过滤用户输入的首尾空格":["64.4"],"事件修饰符":["64.4"],"stop":["64.4","96.22"],"将数据解析成纯文本":["64.6"],"指令操作网页元素的恶纯文本内容":["64.7"],"是否可以绑定多个方法":["64.9"],"的作用":["64.10"],"设置的":["64.10"],"当它依赖的这个值发生改变时":["64.11"],"就更新":["64.11"],"编程式":["64.12"],"用":["64.12"],"vue生命周期":["64.14"],"hash":["64.15","64.17","84.0"],"history":["64.15","64.16"],"abstract":["64.15"],"go":["64.16"],"back":["64.16"],"forward":["64.16"],"方法实际调用的是":["64.16"],"window":["64.16"],"createrouter":["64.18","64.19"],"router":["64.18"],"模式":["64.19"],"推荐使用这个模式":["64.19"],"设置的新url可以与当前url同源的url":["64.20"],"params":["64.21","84.0"],"用户id等":["64.22"],"他们直接包含在路由的路径中":["64.22"],"这些参数作为路径的一部分":["64.22"],"提供了对特定资源的访问":["64.22"],"搜索关键字":["64.23"],"分页信息等":["64.23"],"他们不包含在路由的路径中":["64.23"],"而是作为键值对附加到url后面":["64.23"],"当需要传递标识性信息":["64.24"],"如用户id":["64.24"],"帖子id等":["64.24"],"插值是最基本的数据绑定方式之一":["64.26"],"v":["64.27","64.28","64.29","64.44","78.2"],"bind":["64.28","64.29"],"可以根据条件动态绑定类名":["64.28"],"可以根据条件动态绑定样式":["64.29"],"binding":["64.30"],"on":["64.31","120.3"],"可以将":["64.31"],"事件绑定到":["64.31"],"路由守卫有哪些":["64.32"],"next":["64.33","108.9","112.4"],"在路由改变前触发":["64.33"],"常用于全局的身份验证检查等":["64.33"],"route":["64.34","64.35"],"但是该组件被复用时调用":["64.35"],"beforerouteleave":["64.35"],"导航离开该组件的对应路由时调用":["64.35"],"接收三个参数":["64.35"],"表示要进入的目标路由":["64.35"],"除了内置的一些列指令":["64.36"],"使用组件":["64.37"],"assembly":["64.38"],"用于传递事件给父组件":["64.40"],"第一个参数要为传递的参数名":["64.40"],"第二个参数为传递的值":["64.40"],"button":["64.41"],"click":["64.41","81.0"],"transferparents":["64.41"],"表示":["64.42"],"父组件可以在这个坑位中填充任何模版代码":["64.42"],"然后子组件中":["64.42"],"就会被替换成这些内容":["64.42"],"我们是可以为子组件的插槽指定默认内容的":["64.43"],"子组件":["64.43"],"没有提供":["64.44"],"的插槽":["64.44"],"就被隐式地命名为":["64.44"],"default":["64.44","79.0","83.0"],"在父组件中":["64.44"],"我们可以使用添加了":["64.44"],"变量名":["64.45","77.15"],"或者缩写为":["64.45"],"personname":["64.46"],"malou":["64.46"],"age":["64.46","87.11","97.3"],"父组件":["64.46","64.47"],"的值获取的":["64.47"],"watchcallback":["64.49"],"watchoptions":["64.49"],"stophandle":["64.49"],"侦听多个值":["64.49"],"sources":["64.49"],"这个源来自以下几种":["64.50"],"一个函数":["64.50"],"返回一个值":["64.50"],"一个ref":["64.50"],"一个响应式对象":["64.50"],"侦听一个ref":["64.51"],"侦听多个来源时":["64.51"],"回调函数接收两个数组":["64.51"],"分别对应来源数组中的新值和旧值":["64.51"],"vue3中用于监听数据变化的属性":["64.52"],"是计算属性":["64.52"],"怎么解决的":["64.53"],"它包含有关当前路由状态的信息":["64.54"],"例如路径":["64.54"],"查询等":["64.54"],"在vue3中":["64.54"],"对象可以访问当前路由的信息":["64.54"],"useroute":["64.54"],"函数来获取当前的":["64.54"],"用于加载组件":["64.55"],"在引入组件时候":["64.55"],"我们可以通过":["64.55"],"动态导入组件":["64.55"],"这将返回一个":["64.55"],"表示组件的异步加载":["64.55"],"引入了":["64.56"],"对象来代替":["64.56"],"中使用的":["64.56"],"相对于":["64.56"],"defineproperty具有更强大和灵活的功能":["64.56"],"它能够监控对象的所有属性":["64.56"],"vuex有五个属性":["64.57"],"getters":["64.57"],"mutations":["64.57"],"actions":["64.57"],"数据源存放地":["64.57"],"实际效果":["66.0"],"shdow":["67.0"],"rect4":["68.1"],"rect5":["68.1"],"margin":["68.1","68.2","68.3","68.5","68.6","68.7","68.8"],"50px":["68.1","68.2","68.10","68.15"],"width":["68.1","68.3","68.5","68.6","68.7","68.8","68.10","95.5"],"height":["68.1","68.2","68.3","68.4","68.5","68.7","68.8","68.10","68.11","95.5"],"60px":["68.1","68.3","68.12"],"center":["68.1","68.5","68.6"],"465efb":["68.2","68.4","68.10"],"webkit":["68.2","68.4","68.5"],"animation":["68.2","68.4","68.5","68.14"],"rotateplane":["68.2"],"2s":["68.2","68.9","68.12","68.13"],"infinite":["68.2","68.5"],"ease":["68.2"],"bounce2":["68.3"],"position":["68.3","68.4","68.5","68.8","68.10"],"relative":["68.3","68.4","68.5","68.10"],"100px":["68.3","68.5","68.6","68.7","68.8"],"32px":["68.4"],"30px":["68.4"],"top":["68.4","68.10","68.13"],"cubemove":["68.4"],"90px":["68.5","68.10"],"0s":["68.5","68.12","68.13"],"150px":["68.6"],"40px":["68.7","68.12"],"container3":["68.8"],"20px":["68.8","68.11","68.12","68.15"],"string":["68.9","68.10","68.11","68.12","68.13","68.14","87.12","108.2","108.4","108.11"],"delay":["68.9","68.12","68.13","88.2","88.5","101.2"],"translatex":["68.9","68.11"],"65px":["68.9","68.13"],"translatey":["68.9","68.11"],"3s":["68.9","68.13"],"0px":["68.9","68.13","68.15"],"4s":["68.9","68.12"],"5s":["68.9"],"translatefx":["68.10"],"translatesx":["68.10"],"180px":["68.10"],"float":["68.10"],"300px":["68.10","68.11"],"8s":["68.12"],"6s":["68.12"],"19px":["68.13"],"1s":["68.13"],"111px":["68.13"],"130px":["68.13"],"circle":["68.14"],"70px":["68.15"],"匹配的选择器中的":["69.0"],"每一种选择器类型的":["69.0"],"数值":["69.0"],"决定":["69.0"],"而当优先级与多个":["69.0"],"声明中任意一个声明的优先级相等的时候":["69.0"],"中最后的那个声明将会被应用到元素上":["69.0"],"当同一个元素有多个声明的时候":["69.0"],"优先级才会有意义":["69.0"],"因为每一个直接作用于元素的":["69.0"],"规则总是会接管":["69.0"],"覆盖":["69.0"],"take":["69.0"],"该元素从祖先元素继承而来的规则":["69.0"],"选择器类型":["69.0"],"选择器类型有很多种":["69.0"],"blockbounce":["71.0"],"举个栗子":["74.0"],"张三":["74.0"],"fn":["74.0","101.2"],"这里能打印是因为这里的指向是指向这个obj对象的":["74.0"],"再看一个例子":["74.0"],"协议的一部分":["75.0"],"由":["75.0"],"rfc":["75.0"],"规范定义":["75.0"],"组成":["75.1"],"以":["75.1"],"分隔":["75.1"],"每一个都是独立的cookie":["75.1"],"为了找到一个特定的cookie":["75.1"],"我们可以以":["75.1"],"分开":["75.1"],"然后找到对应名字":["75.1"],"我们可以使用正则表达式或者函数数组来实现":["75.1"],"正则表达式":["75.1"],"parsecookies":["75.1"],"此调用设置了一个名为":["75.2"],"并且值为":["75.2"],"john":["75.2"],"的cookie":["75.2"],"只会更新名称为":["75.2"],"alert":["75.2"],"他使得该路径下的页面可以访问该cookie":["75.3"],"默认为当前路径":["75.3"],"如果一个cookie带有":["75.3"],"设置的cookie":["75.4"],"这是一项安全限制":["75.4"],"为了允许我们将敏感数据存储在应该仅在一个站点上可用的cookie中":["75.4"],"默认情况下":["75.4"],"cookie只有在设置的域下才能被访问到":["75.4"],"请注意":["75.4"],"cookie也不会共享给子域":["75.4"],"forum":["75.4"],"我们可以设置":["75.5"],"或":["75.5"],"选项中的一个":["75.5"],"tue":["75.5"],"jan":["75.5"],"customtag":["76.3"],"strings":["76.3"],"values":["76.3"],"判断字符串是否包含指定字符":["76.4"],"返回布尔值":["76.4","76.5","78.13","78.18"],"判断字符串是否以指定的字符开始":["76.5"],"结束":["76.5"],"将字符串指定次数":["76.6"],"返回新的字符串":["76.6"],"根据给定的码点创建一个字符串":["76.7"],"它可以将一个或者多个码点转换为相应的字符":["76.7"],"path":["76.8"],"str":["76.9","96.21"],"用于将字符串的":["76.10"],"unicode":["76.10","76.31"],"queryselectorall":["76.12"],"代表标签下的所有元素":["76.12"],"该运算符主要用于函数调用":["76.12"],"可以扩展函数参数":["76.12"],"items":["76.12"],"add":["76.12"],"numbers":["76.12","89.1"],"iterable":["76.13"],"的对象":["76.13"],"包括":["76.13","98.0"],"es6":["76.13"],"新增的数据结构":["76.13"],"set":["76.13","78.11"],"map":["76.13","96.23","115.8"],"details":["76.14","77.15"],"返回数组中满足条件的第一个元素":["76.15"],"返回数组中满足条件的第一个元素的索引":["76.15"],"到终止索引":["76.16"],"覆盖原有的元素":["76.17"],"用于遍历数组":["76.18"],"它们都返回一个遍历器对象":["76.18"],"可以用for":["76.18"],"of循环进行遍历":["76.18"],"唯一的区别是":["76.18"],"是对键名的遍历":["76.18"],"这样的书写更加简洁":["76.20"],"foo":["76.20","76.21","77.5","83.0"],"bar":["76.20","77.5","83.0"],"方法二":["76.21"],"bc":["76.21"],"操作符的行为类似":["76.22"],"但有两个区别":["76.22"],"一是object":["76.22"],"nan":["76.22"],"它返回目标对象":["76.23"],"如果多个源对象具有相同的属性":["76.23"],"则后面的对象的属性将覆盖前面的对象的属性":["76.23"],"用于获取对象的原型":["76.24"],"它返回指定对象的原型":["76.24"],"prototype":["76.25","93.1","99.5"],"用于设置对象的原型":["76.25"],"它将指定对象的原型设置为另一个对象或null":["76.25"],"在es6中":["76.27"],"如果regexp构造函数第一个参数是一个正则对象":["76.27"],"的unicode字符":["76.29"],"regex":["76.30"],"abc":["76.30"],"match":["76.32"],"es是ecmascript的缩写":["77.0"],"也就是javascript的标准化规范":["77.0"],"关键字用于声明一个块级作用域的变量":["77.2"],"但值不可变":["77.3"],"只要等号两边的数据格式相同":["77.5"],"左边的变量就会被赋予对应的值":["77.5"],"bar2":["77.5"],"third":["77.5"],"baz":["77.6"],"first":["77.6","78.28","108.1","120.2"],"f":["77.6","119.2"],"l":["77.6","86.14"],"与数组一样":["77.6"],"解构也可以用于嵌套结构的对象":["77.6"],"则先会转换为对象":["77.8"],"的参数表面上是一个数组":["77.9"],"但在传入参数的那一刻":["77.9"],"数组参数就被解构成变量":["77.9"],"对于函数内部的代码来说":["77.9"],"它们能感受到参数就是":["77.9"],"类似数组的map方法的参数也可以被解构":["77.9"],"hhh":["77.10"],"参数变量是默认声明的":["77.10"],"避免this指向问题和明确的参数处理":["77.11"],"但不适合构造函数和需要自己this值的场景":["77.11"],"箭头函数示例":["77.11"],"不可以当作构造函数":["77.12"],"不能使用new":["77.13"],"箭头函数不能绑定":["77.13"],"包围":["77.14","79.0"],"并使用":["77.14"],"语法来插入变量或者表达式":["77.14"],"语法中":["77.14"],"需要在展开的可迭代对象前面加上三个点":["77.15"],"es6中引入":["77.15"],"形式为":["77.15"],"用于获取函数的多余参数":["77.15"],"这样就不需要使用":["77.15"],"arr1":["77.16"],"即es6对象字面量语法":["77.19"],"而不需要使用":["77.20"],"允许字面量定义对象时":["77.21"],"用方法二":["77.21"],"表达式":["77.21","108.7"],"作为对抗的属性名":["77.21"],"即吧表达式放在方括号内":["77.21"],"propkey":["77.21"],"用于创建具有相同属性和方法的对象":["77.22"],"book":["77.22"],"javascript并没有原生的模块化支持":["77.23"],"开发人员通常使用一些第三方库或模式来实现模块化":["77.23"],"例如commonjs和amd":["77.23"],"然而":["77.23"],"es6引入了原生的模块化系统":["77.23"],"通过import和export关键字来实现":["77.23"],"常用":["78.0","78.3"],"setting":["78.1"],"上面代码对一个空对象假设了一层拦截":["78.1"],"重定义了属性的读取":["78.1"],"和设置":["78.1"],"行为":["78.1"],"运行结果为":["78.1"],"上面代码说明":["78.1"],"proxy实际上重载":["78.1"],"overload":["78.1"],"了点运算符":["78.1"],"即用自己的定义覆盖了语言的原始定义":["78.1"],"拦截对象属性的设置":["78.2"],"boolean":["78.2","92.1","108.2"],"拦截":["78.2"],"else":["78.4","79.0","112.4"],"throw":["78.4"],"referenceerror":["78.4"],"prop":["78.4","87.10"],"does":["78.4"],"not":["78.4","120.2"],"exist":["78.4"],"上面代码标识":["78.4"],"如果访问目标对象不存在的属性":["78.4"],"会抛出一个错误":["78.4","78.7"],"如果没有这个拦截函数":["78.4"],"访问不存在的属性":["78.4"],"只会返回":["78.4"],"方法可以被继承":["78.4"],"rangeerror":["78.5"],"seems":["78.5"],"invalid":["78.5"],"对满足条件的":["78.5"],"属性以及其他属性":["78.5"],"直接保存":["78.5"],"young":["78.5"],"报错":["78.5"],"ctx":["78.6"],"args":["78.6","78.8","101.2"],"reflect":["78.6"],"变得合理":["78.7"],"desc":["78.7"],"在无法定义属性时":["78.7"],"则会返回":["78.7"],"false":["78.7","79.0","96.6","96.7","96.19","97.4"],"老写法":["78.7"],"try":["78.7"],"property":["78.7","79.0"],"attributes":["78.7"],"success":["78.7","110.0"],"catch":["78.7"],"failure":["78.7"],"新写法":["78.7"],"调用一个函数":["78.8"],"并传入指定的参数":["78.8"],"construct":["78.8"],"delete":["78.9","78.13"],"通知观察者":["78.9"],"notify":["78.9"],"foreach":["78.9"],"创建一个被观察的对象":["78.9"],"observable":["78.9"],"语言的原生数据类型之一":["78.10"],"是一种独一无二且不可修改的数据类型":["78.10"],"可以用作对象属性的唯一标识符":["78.10"],"它被设计用于创建对象属性的私有成员或者用作常量":["78.10"],"函数可以创建一个":["78.10"],"每次调用":["78.10"],"hash结构":["78.12"],"删除键值对":["78.13"],"检查键值对":["78.13"],"clear":["78.13","78.18"],"清除所有成员":["78.13","78.18"],"也是一种键值对的集合":["78.14"],"是一种不重复值的集合":["78.17"],"删除值":["78.18"],"检查值":["78.18"],"keys":["78.18"],"是一种弱引用集合":["78.19"],"它只能存储对象类型的值":["78.19"],"dom节点被移除时自动释放此成员键":["78.20"],"简便的访问接口":["78.24"],"使得数据结构成员能够按照某种次序排列":["78.24"],"每一次调用":["78.25"],"都会返回数据结构的当前成员的信息":["78.25"],"具体来说":["78.25"],"就是返回一个包含":["78.25"],"done":["78.25"],"两个属性的对象":["78.25"],"属性是当前成员的值":["78.25"],"属性是一个布尔值":["78.25"],"表示是否遍历结束":["78.25"],"makeiterator":["78.25"],"nextindex":["78.25"],"接口的数据结构":["78.26"],"forst":["78.28"],"扩展运算符":["78.28"],"也会调用默认的":["78.28"],"函数在语法上":["78.30"],"可以把它理解成一个状态及":["78.30"],"handlegenerator":["78.31"],"java风格":["79.0"],"brace":["79.0"],"1tbs":["79.0"],"allowsingleline":["79.0"],"双峰驼命名格式":["79.0"],"camelcase":["79.0"],"数组和对象键值对最后一个逗号":["79.0"],"不能带末尾的逗号":["79.0"],"必须带末尾的逗号":["79.0"],"always":["79.0"],"multiline":["79.0"],"多行模式必须带逗号":["79.0"],"单行模式不能带逗号":["79.0"],"comma":["79.0"],"dangle":["79.0"],"控制逗号前后的空格":["79.0"],"before":["79.0"],"after":["79.0"],"控制逗号在行尾出现还是在行首出现":["79.0"],"圈复杂度":["79.0"],"complexity":["79.0"],"以方括号取对象属性时":["79.0"],"后面和":["79.0"],"前面是否需要空格":["79.0"],"可选参数":["79.0"],"强制方法必须返回值":["79.0"],"typescript强类型":["79.0"],"不配置":["79.0"],"consistent":["79.0"],"用于指统一在回调函数中指向this的变量名":["79.0"],"箭头函数中的this已经可以指向外层调用者":["79.0"],"应该没卵用了":["79.0"],"g":["79.0","110.0"],"that":["79.0","120.2"],"指定只能":["79.0"],"that不能指向其他任何值":["79.0"],"this也不能赋值给that以外的其他值":["79.0"],"强制在子类构造函数中用super":["79.0"],"调用父类构造函数":["79.0"],"typescrip的编译器也会提示":["79.0"],"super":["79.0"],"do后面的代码块是否需要":["79.0"],"multi":["79.0"],"只有块中有多行语句时才需要":["79.0"],"line":["79.0"],"但是块中的执行语句只有一行时":["79.0"],"块中的语句只能跟和if语句在同一行":["79.0"],"dosomething":["79.0"],"or":["79.0"],"nest":["79.0"],"如果块中的执行语句只有一行":["79.0"],"执行语句可以零另起一行也可以跟在if语句后面":["79.0"],"保持前后语句的":["79.0"],"一致":["79.0"],"all":["79.0"],"全都需要":["79.0"],"curly":["79.0"],"switch语句强制default分支":["79.0"],"也可添加":["79.0"],"no":["79.0"],"注释取消此次警告":["79.0"],"case":["79.0"],"强制object":["79.0"],"的位置":["79.0"],"号应与属性在同一行":["79.0"],"号应与对象名在同一行":["79.0"],"dot":["79.0"],"location":["79.0"],"强制使用":["79.0"],"号取属性":["79.0"],"allowkeywords":["79.0"],"使用保留字做属性名时":["79.0"],"只能使用":["79.0"],"方式取属性":["79.0"],"allowpattern":["79.0"],"文件跨域后下载":["81.0"],"a标签直接打开文件":["81.0"],"获取页面文件名":["81.0"],"param":["81.0"],"文件url":["81.0"],"downloadurlfile":["81.0"],"scrollleft":["82.0"],"设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离":["82.0"],"scrollwidth":["82.0"],"返回元素的宽度":["82.0"],"包括元素宽度":["82.0"],"内边距和溢出尺寸":["82.0"],"不包括边框和外边距":["82.0"],"无溢出的情况":["82.0"],"clientwidth":["82.0"],"相同":["82.0"],"scrollheigh":["82.0"],"返回元素的高度":["82.0"],"包括元素高度":["82.0"],"与clientheight相同":["82.0"],"mylib":["83.0"],"export":["83.0"],"your":["83.0","120.3"],"funciton":["83.0"],"function1":["83.0"],"function2":["83.0"],"在很多现代浏览器可以使用":["83.0"],"它兼具两方面的优点":["83.0"],"提取url中的解析字符串":["84.0"],"urlparamhash":["84.0"],"h":["84.0","86.11"],"indexof":["84.0"],"split":["84.0"],"foreach的区别":["85.0"],"callbackfn":["85.1"],"thisarg":["85.1"],"为数组中的每个元素执行的函数":["85.1"],"是一个轻量级的javascript时间库":["86.0"],"安装":["86.2"],"shell":["86.2","119.2","119.3","119.4","121.2"],"npm":["86.2"],"浏览器方式引入":["86.3"],"方式":["86.4"],"moment":["86.4","86.9","86.12"],"isoweek":["86.6"],"获取当前月第一天0时0分0秒":["86.6"],"month":["86.6","86.15"],"获取今天23时59分59秒":["86.6"],"endof":["86.6"],"获取本周最后一天":["86.6"],"周六":["86.6"],"23时59分59秒":["86.6"],"设置某个月中的某一天":["86.7"],"date":["86.7","86.9","101.2","120.3"],"设置某个星期中的某一天":["86.7"],"weekday":["86.7"],"设置日期为本周第一天":["86.7"],"周日":["86.7"],"isoweekday":["86.7"],"设置日期为本周周一":["86.7"],"季度":["86.8"],"1到4":["86.8"],"d":["86.8"],"月份中的第几天":["86.8"],"1到31":["86.8"],"dd":["86.8"],"01到31":["86.8"],"星期中的第几天":["86.8"],"数字表示":["86.8"],"0到6":["86.8"],"0表示周日":["86.8"],"6表示周六":["86.8"],"ddd":["86.8"],"三个字母表示星期中的第几天":["86.8"],"sun到sat":["86.8"],"dddd":["86.8"],"星期几":["86.8"],"完整的星期文本":["86.8"],"start":["86.9","114.2"],"subtract":["86.9","86.15"],"weeks":["86.9"],"转化为javascript原生date对象":["86.10"],"mmmm":["86.11"],"do":["86.11","120.2"],"yyyy":["86.11"],"mm":["86.11"],"ss":["86.11"],"yyyymmdd":["86.12"],"fromnow":["86.12"],"days":["86.13"],"calendar":["86.13"],"2019年5月14日":["86.13"],"05":["86.14"],"上一个月的1号":["86.15"],"01":["86.15"],"还是上一个月1号":["86.15"],"方法的使用场景":["87.0"],"reduce":["87.1","87.9","87.10","87.14"],"方法泛用性很强":["87.1"],"这个方法功能主要是对数组中每个元素执":["87.1"],"一个是执行操作的回调函数":["87.2"],"返回值将作为reducd方法的返回值":["87.3"],"这个回调函数支持传入四个参数":["87.3"],"上一次调用":["87.3"],"回调函数的结果":["87.3"],"如果指定了":["87.4"],"则回调函数从数组中第一个元素":["87.4"],"item":["87.7"],"countnames":["87.9"],"acc":["87.9","87.14"],"cur":["87.9"],"counts":["87.9"],"max":["87.10"],"jane":["87.10"],"groupby":["87.10"],"friends":["87.11","99.7"],"anna":["87.11"],"bible":["87.11"],"harry":["87.11"],"myarray":["87.12"],"并且性能更好":["87.12"],"会遍历数组两次":["87.13"],"但是可以使用":["87.13"],"只遍历一次并实现相同的效果":["87.13"],"从而更高效":["87.13"],"链的初始值":["87.14"],"由一系列":["87.14"],"链接而成的":["87.14"],"runpromiseinsequence":["87.14"],"值":["87.15"],"然后访问每个整数索引":["87.16"],"就会执行一个函数或指定的代码片段":["88.1"],"setinterval":["88.3"],"是javascript中常用的定时器函数":["88.3"],"但他们在执行上存在一些精度方面的问题":["88.3"],"intervalid":["88.5"],"callback":["88.6"],"作用":["88.6"],"在浏览器下一次重绘之前执行指定的回调函数":["88.6"],"确保动画在适当的时机更新":["88.6"],"同时也能够有效地减少功耗和提高性能":["88.6"],"通常比":["88.7"],"settimeout":["88.7","101.5"],"含义":["89.1","115.4"],"syn":["89.1"],"同步序列编号":["89.1"],"synchronize":["89.1"],"sequence":["89.1"],"表示向接收方建立tcp连接的请求":["89.1"],"仅在三次握手期间有效":["89.1"],"seq":["89.1"],"状态":["89.2"],"tcp规定":["89.2"],"即使":["89.2"],"包不携带数据":["89.2"],"也要消耗一个序列号":["89.2"],"第二次挥手":["89.2"],"服务端接收到了":["89.2"],"发出确认包":["89.2"],"ack":["89.2"],"并带上自己的序列号":["89.2"],"七层因特网协议栈":["90.0"],"起初网络分层是标准的七层":["90.0"],"也就是我们说的":["90.0"],"osi七层模型":["90.0"],"参考模型是国际标准化组织":["90.0"],"iso":["90.0"],"制定的":["90.0"],"scripting":["91.1"],"跨站脚本攻击":["91.1"],"标签形成注入":["91.2"],"在内联的":["91.2"],"拼接的数据突破了原本的限制":["91.2"],"反射型和dom型三种":["91.3"],"存储型":["91.3"],"即攻击被存储到服务到":["91.3"],"用户名":["91.4"],"密码等等":["91.4"],"按照规定的格式输入":["91.4"],"后端也需要做相同的过滤检查":["91.4"],"因为攻击者完全可以绕过正常输入流程":["91.4"],"直接利用借口向服务器发送设置":["91.4"],"转义html":["91.4"],"如果拼接":["91.4"],"forgery":["91.5"],"跨站请求伪造":["91.5"],"也被称为one":["91.5"],"才能最终完成请求":["91.6"],"此种方式能很好的遏制csrf":["91.6"],"但用户体验较差":["91.6"],"通常来讲csrf是由xss实现的":["91.7"],"中的变量与任何特定值类型没有任何关联":["92.0"],"任何变量都可以被赋予":["92.0"],"和重新赋予":["92.0"],"各种类型的值":["92.0"],"也是一个弱类型语言":["92.0"],"对象可以被看作是一组属性的集合":["92.3"],"用对象字面量语法来定义一个对象时":["92.3"],"会自动初始化一组有限的属性":["92.3"],"然后":["92.3"],"这些属性还可以被添加和移除":["92.3"],"对象属性等价于键值对":["92.3"],"属性键要么是字符串类型":["92.3"],"因此必须使用":["92.4"],"来测试":["92.4"],"instanceof":["92.4"],"但是只有函数才会有":["93.1"],"代表这个对象是这个函数的原型对象":["93.2"],"这个对象也是当前函数所创建的实例的原型对象":["93.2"],"设计之初就是为了实现继承":["93.2"],"让由特定函数创建的所有实例共享属性和方法":["93.2"],"该构造函数的实例都可以访问调用":["93.3"],"那么这个构造函数的原型对象上的属性和方法":["93.3"],"怎么和构造函数的实例联系在一起的呢":["93.3"],"就是通过":["93.3"],"每个对象都有":["93.3"],"该属性指向的就是该对象的原型对象":["93.3"],"p1":["93.3","99.6","99.7"],"ƒ":["93.4"],"parent":["93.4","99.3"],"通过输出可以看到":["93.4"],"很显然":["93.4"],"的构造函数是":["93.4"],"praent":["93.4"],"我们有说过函数也是对象":["93.4"],"原型链":["93.5"],"打印undefined":["94.0"],"就有一个疑问":["94.0"],"怎么会是这样":["94.0"],"不应该报错吗":["94.0"],"经查阅":["94.0"],"此时涉及到":["94.0"],"函数及变量的声明都将被提升到函数的最顶部":["94.0"],"变量可以在使用后声明":["94.0"],"也就是变量可以先使用再声明":["94.0"],"当你声明一个变量时":["94.0"],"变量先会提升到最顶端":["94.0"],"默认为":["94.0"],"第一个例子中":["94.0"],"我们先声明了":["94.0"],"此时提升到顶部的是":["94.0"],"则就叫称为重绘":["95.2"],"每个页面至少需要一次":["95.2"],"回流":["95.2"],"就是在页面第一次加载的时候":["95.2"],"浏览器会使渲染树中受到影响的部分失效":["95.2"],"并重新构造这部分渲染树":["95.2"],"渲染器在":["95.3"],"文档解析":["95.3"],"重绘可以单独触发":["95.4"],"背景色":["95.4"],"颜色":["95.4"],"字体改变":["95.4"],"字体大小":["95.4"],"发生变化时":["95.4"],"避免逐个修改节点样式":["95.6"],"如果每句js操作都去回流重绘的话":["95.7"],"浏览器可能就会受不了":["95.7"],"可以传两个参数":["96.1"],"第一个参数为需要查找的元素":["96.1"],"第二个是可选参数":["96.1"],"表示开始搜索的索引":["96.1"],"从0开始":["96.1"],"会转换为整数":["96.1"],"并没有改变原来的数组":["96.2"],"没有返回值":["96.3"],"直接改变原数组":["96.3"],"注意和map方法区分":["96.3"],"将满足条件的元素生成一个新数组返回":["96.4"],"并且返回符合条件的第一个元素的值":["96.5"],"否则返回":["96.5","96.6","96.7","96.19"],"则返回":["96.6","96.7"],"reduceright":["96.8"],"该方法是所有元素调用返回函数":["96.8"],"返回值为最后结果":["96.8"],"传入的类型必须为函数类型":["96.8"],"并返回删除的元素":["96.9"],"该方法改变了数组的长度":["96.9"],"返回变化后数组长度":["96.10"],"并且更改原数组":["96.10"],"返回数组删除的元素":["96.11"],"并且改变原数组":["96.11"],"改变原来的数组":["96.12"],"这是属于数组原型的方法":["96.13"],"arr2":["96.14"],"不改变原数组":["96.15"],"并且没有参数时默认为逗号":["96.15"],"连接":["96.15"],"如果传入负数":["96.17"],"则以最后一项的下标为":["96.17"],"1开始计算":["96.17"],"并且删除元素":["96.17"],"不会改变原数组":["96.17"],"最多只支持三个参数":["96.18"],"只传入一个参数":["96.18"],"这个参数代表下标":["96.18"],"表示替换掉这个下标元素后面的元素为空":["96.18"],"其实也是删除功能":["96.18"],"传入两个参数":["96.18"],"第一个参数代表下标":["96.18"],"第二个元素代表要删除的数量":["96.18"],"传入三个参数":["96.18"],"如果有则返回":["96.19"],"指定要提取嵌套数组的结构深度":["96.20"],"不传值默认值为":["96.20"],"infinity":["96.20"],"传入这个参数表示提取嵌套数组的所有的结构深度":["96.20"],"属性和索引元素的对象":["96.21"],"函数的":["96.21"],"参数也是累数组对象":["96.21"],"step":["96.22"],"方法后再调用深度为":["96.23"],"flat":["96.23"],"基本数据类型":["97.1"],"指的是创建新的数据":["97.2"],"javascript中":["97.3"],"存在浅拷贝的现象有":["97.3"],"assign":["97.3"],"nature":["97.3"],"smart":["97.3"],"good":["97.3"],"names":["97.3"],"fx":["97.3"],"obj2":["97.4"],"stringify":["97.4"],"obj3":["97.5"],"shallowclone":["97.5"],"浅拷贝方法":["97.5"],"update":["97.5"],"浅拷贝是拷贝一层":["97.6"],"深拷贝浅拷贝的区别":["97.7"],"缓存使pwa能够在设备没有网络连接时进行工作":["98.1"],"expires和":["98.2"],"cache":["98.2","98.7"],"control":["98.2","98.7"],"强缓存":["98.2"],"判断是否命中":["98.2"],"强制缓存的情况主要有三种":["98.3"],"不存在该缓存结果和缓存标识":["98.3"],"如果客户端的事件小于":["98.4"],"时":["98.4"],"直接使用缓存结果":["98.4"],"expires是http":["98.4"],"0的字段":["98.4"],"但是现在浏览器默认使用的是http":["98.4"],"到了http":["98.4"],"已经被":["98.4"],"替代":["98.4"],"原因在于":["98.4"],"控制缓存的原理是使用客户端的事件与服务端返回的时间作对比":["98.4"],"浏览器携带混存表示向服务器发起请求":["98.5"],"的优先级比":["98.6"],"高":["98.6"],"浏览器缓存相关":["98.8"],"inheritance":["99.0"],"是面向对象软件技术中的一个概念":["99.0"],"我们举一个形象的例子":["99.1"],"定义一个类":["99.1"],"叫汽车":["99.1"],"汽车的属性包括颜色":["99.1"],"轮胎":["99.1"],"品牌":["99.1"],"速度":["99.1"],"排气量等等":["99.1"],"car":["99.1"],"构造函数继承":["99.2"],"parent1":["99.3","99.4"],"play":["99.3","99.5","99.8"],"getname":["99.5","99.6","99.7","99.8"],"p2":["99.6","99.7"],"p3":["99.6","99.7"],"person":["99.6","108.9"],"consturctor":["99.8"],"hostname":["100.0"],"获取当前窗口的端口":["100.0"],"port":["100.0"],"resize":["101.0"],"scroll":["101.0"],"keypress":["101.0"],"定义":["101.1"],"oldttme":["101.2"],"now":["101.2"],"newtime":["101.2"],"防抖是指要在n秒后开始执行程序":["101.3"],"debounce":["101.4"],"func":["101.4"],"wait":["101.4"],"timeout":["101.4"],"实现":["101.5"],"目的都是":["101.5"],"只需要用户最后一次输入完":["101.6"],"再发送请求":["101.6"],"是一个让":["103.0"],"运行在服务端的开发平台":["103.0"],"发布于2009年5月":["103.0"],"由ryan":["103.0"],"dahl开发":["103.0"],"实质是对":["103.0"],"v8引擎":["103.0"],"node":["103.1","112.4"],"采用了非阻塞i":["103.1"],"o的机制":["103.1"],"就是说当一个请求所返回的数据需要很长时间":["103.1"],"那么会把这段请求代码放在回调函数中":["103.1"],"当主线程的任务执行完成时":["103.1"],"再去读取放在任务队列的请求的数据":["103.1"],"通过不同地轮询":["103.1"],"event":["103.1"],"loop":["103.1"],"枚举是":["106.0"],"的初始值为":["106.1"],"其余成员的值会自动递增":["106.1"],"我们也可以不设置初始值":["106.1"],"则枚举的成员将以0开始依次递增":["106.1"],"枚举值被赋予从0开始递增的数字":["106.1"],"同时也可以通过枚举值来进行反向映射":["106.1"],"上述示例中":["106.2","107.4"],"我们可以发现":["106.2"],"如果枚举默认递增的值与手动赋值的值重复时":["106.2"],"typescript是注意不到这一点的":["106.2"],"编译结果是这样":["106.2"],"的枚举":["106.3"],"enum":["106.3"],"blue":["106.3"],"green":["106.3"],"常数枚举与普通枚举的区别是":["106.4"],"它会在编译阶段被删除":["106.4"],"并且不能包含计算成员":["106.4"],"down":["106.5"],"中括号":["107.2"],"表示法来定义":["107.2"],"来作为数字数组类型":["107.2"],"虽然编译不会报错":["107.3"],"但我们无法得到确定的返回值的类型":["107.3"],"这个时候":["107.3"],"泛型就派上用场了":["107.3"],"t":["107.3","107.5"],"箭头函数":["107.3"],"我们定义了一个":["107.4"],"的接口":["107.4"],"它接受两个类型参数":["107.4"],"通过指定类型参数为":["107.4"],"我们创建了一个具体的":["107.4"],"genericnumber":["107.5"],"idefaultfirst":["108.1"],"idefaultsecond":["108.1"],"crosstype":["108.1"],"crosstype中的name的类型将为":["108.1"],"具体类型联合":["108.1"],"second":["108.1"],"question":["108.1"],"sstring":["108.1"],"numbher":["108.1"],"getcrossover":["108.1"],"partial":["108.1"],"是typescript的工具类型":["108.1"],"iquestiontype":["108.2"],"这里表示id的类型是布尔值":["108.2"],"它也可以定义为字符串":["108.2"],"数字":["108.2"],"都是可以正常运行的":["108.2"],"guards":["108.3"],"类型守卫是一种用于":["108.3"],"printvalue":["108.4"],"cat":["108.5"],"meow":["108.5"],"这种形式":["108.6"],"必须是来自当前函数签名里的一个参数名":["108.6"],"表示一个类型":["108.6"],"bird":["108.6"],"fly":["108.6"],"void":["108.6"],"n":["108.7","115.5"],"类型别名有时候和接口很相似":["108.8"],"但是可以作用于原始值":["108.8"],"联合类型":["108.8"],"元祖预计其他任何需要手写的类型":["108.8"],"但是不需要给原始类型起别名":["108.8"],"与交叉类型一起使用":["108.9"],"linkedlist":["108.9"],"在下面示例中":["108.10"],"在编辑器中将鼠标悬停在":["108.10"],"interfaceed":["108.10"],"上":["108.10"],"显示它返回的是":["108.10"],"但悬停在":["108.10"],"aliased":["108.10"],"初始化":["108.11"],"在这个条件语句中":["108.12"],"typescript手册":["108.13"],"checkalivetype":["110.0"],"res":["110.0"],"errcode":["110.0"],"errmsg":["110.0"],"ok":["110.0"],"调用人脸识别":["110.0"],"startface":["110.0"],"custname":["110.0"],"replace":["110.0"],"s":["110.0","121.2"],"是一种数据结构":["112.1"],"是一组由节点组成的":["112.1"],"数组":["112.2"],"元素时":["112.2"],"因为需要":["112.2"],"移动其他元素":["112.2"],"来进行":["112.2"],"它包含一个值和一个指向下一个节点的引用":["112.3"],"它的实现可以参考下面代码":["112.3"],"newnode":["112.4"],"在链表指定位置插入新节点":["112.4"],"insertat":["112.4"],"循环链表":["112.5"],"一个":["112.5"],"包含两个值":["112.5"],"当前节点的值":["112.5"],"是否大于":["112.6"],"greaterthan":["112.6"],"是否小于或等于":["112.6"],"lessthanorequal":["112.6"],"greaterthanorequal":["112.6"],"反转比较顺序":["112.6"],"compareoriginal":["112.6"],"syntax":["114.0","114.1"],"tree":["114.1"],"ast":["114.1"],"多端开发框架":["114.2"],"mpvue":["114.2"],"taro":["114.2"],"来源于一个ast转换网站":["114.2"],"astexplorer":["114.2"],"net":["114.2"],"transsyntax":["114.2"],"aa":["114.2"],"转换成":["114.2"],"后":["114.2"],"program":["114.2"],"解析过程":["114.3"],"这个过程要经":["114.3"],"词法分析":["114.3"],"转换成ast":["114.4"],"是计算机科学中将字符序列转换为单词":["114.4"],"token":["114.4"],"序列的过程":["114.4"],"基本信息":["115.0"],"是一个信息文件":["115.1"],"里面储存着位置信息":["115.1"],"js脚本现在变得很复杂":["115.2"],"怎么在浏览器中使用sourcemap":["115.3"],"cheap":["115.4","115.8","115.9"],"inline":["115.4"],"这五种关键字的组合":["115.4"],"webpcak官网的devtool":["115.4"],"devtool中sourcemap关键字配置":["115.4"],"产生":["115.4"],"map文件":["115.4"],"nb":["115.5"],"webpack":["115.5"],"footer":["115.5"],"debugger":["115.7"],"source":["115.8"],"转换后的代码":["115.8"],"仅限行":["115.8"],"信息全面":["115.9"],"并且由于代码未压缩":["115.9"],"我们并不那么在意代码咧信息":["115.9"],"是一个具有高性能且极具灵活性的即时":["117.1"],"原子化":["117.1"],"背景":["118.0"],"初始化git仓库":["118.1"],"当前git":["118.1"],"bash所在目录路径为gitrepo":["118.1"],"输入命令":["118.1"],"init":["118.1"],"会看见本地电脑的目录下会有":["118.1"],"文件夹":["118.1"],"在第一次安装git之后需要初始github的配置信息":["118.1"],"所以接下来要初始化你的github信息":["118.1"],"config":["118.1"],"global":["118.1"],"pull":["119.1"],"master":["119.2"],"dev":["119.2"],"它们的head指针分别指向e和f":["119.2"],"对上述做如下操作":["119.2"],"checkout":["119.2"],"选择or切换到master分支":["119.2"],"命令":["119.3"],"远程主机名":["119.3"],"这个命令将某个远程主机的更新全部取回本地":["119.3"],"如果只想取回特定分支的更新":["119.3"],"前面提到":["119.4"],"的过程可以理解为":["119.4"],"下面主要介绍它的两个使用场景":["120.1"],"failed":["120.2","120.3"],"some":["120.2"],"refs":["120.2"],"hint":["120.2"],"updates":["120.2"],"were":["120.2"],"because":["120.2"],"remote":["120.2"],"contains":["120.2"],"work":["120.2"],"have":["120.2"],"locally":["120.2"],"is":["120.2","120.3"],"usually":["120.2"],"caused":["120.2"],"by":["120.2","120.3"],"another":["120.2"],"repository":["120.2"],"pushing":["120.2"],"same":["120.2"],"may":["120.2"],"want":["120.2"],"integrate":["120.2"],"up":["120.3"],"with":["120.3"],"origin":["120.3"],"直接合并feature分支":["120.3"],"merge":["120.3"],"merging":["120.3"],"conflict":["120.3"],"content":["120.3"],"automatic":["120.3"],"fix":["120.3"],"conflicts":["120.3"],"and":["120.3"],"then":["120.3"],"竟然失败了":["120.3"],"说明我两个分支之前的版本已经不同步了":["120.3"],"需要手动合并冲突":["120.3"],"再提交":["120.3"],"先查看冲突文件":["120.3"],"status":["120.3"],"ahead":["120.3"],"commits":["120.3"],"use":["120.3"],"合并commit":["121.0"],"使用背景":["121.0"],"可以按下":["121.2"],"向下翻看":["121.2"],"oneline":["121.2"],"可以一行展现":["121.2"],"我们使用命令":["121.2"],"rebase":["121.2"],"startpoint":["121.2"],"endpoint":["121.2"],"的意思是":["121.2"],"常用使用场景":["122.1"],"正在进行一些工作":["122.1"],"stash":["122.2","122.3","122.5","122.6","122.7"],"直接保存其实是执行了命令":["122.3"],"show":["122.5","122.6"],"应用某个存储":["122.7"],"pop":["122.8"],"命令恢复之前缓存的工作目录":["122.8"],"将缓存堆栈中的对应":["122.8"],"删除所有缓存的stash":["122.10"],"说明":["122.10"],"新增的文件":["122.10"]},{"0":["8.0","41.12","48.5","61.49","68.1","68.2","75.1","76.12","76.13","84.0","87.7","87.9","96.22","106.1","106.4","115.5"],"1":["1.0","4.0","29.4","30.0","31.1","41.4","45.1","48.5","60.31","61.49","68.6","68.7","68.8","69.0","76.13","76.15","76.17","76.23","79.0","87.9","87.14","87.15","96.2","96.3","96.4","96.5","96.6","96.7","96.9","96.10","96.11","96.12","96.13","96.15","96.17","96.18","106.4"],"2":["4.0","9.0","10.0","11.0","14.5","37.6","41.1","51.5","52.4","61.27","69.0","76.13","76.15","76.17","77.16","87.15","91.3","96.1","96.2","96.4","96.6","96.7","96.9","96.10","96.11","96.12","96.13","96.15","96.17","96.18","96.20","96.22","98.2","103.1","106.4"],"3":["2.0","29.6","52.4","54.1","60.51","61.48","76.15","76.17","76.36","77.16","86.13","87.6","87.8","96.1","96.2","96.4","96.9","96.10","96.11","96.12","96.13","96.15","96.17","96.18","96.20","96.22","106.4","107.3"],"4":["1.0","8.0","10.0","37.4","51.8","61.25","76.15","77.5","77.9","87.8","87.15","96.2","96.12","96.17","96.18","96.20","96.22","115.8"],"5":["15.0","86.7","87.8","96.2","96.18","97.5","110.0","115.8"],"6":["15.0","60.18","86.7","97.5","114.2"],"7":["86.7","86.11","97.5"],"8":["18.2","20.0","20.2","30.0","31.1","76.36","86.6","86.12","120.2"],"9":["86.6"],"10":["68.14","77.3","86.6","108.11"],"11":["10.0","86.6"],"12":["86.7"],"13":["55.1"],"14":["75.5","86.8","120.2"],"16":["41.12"],"17":["114.2"],"18":["56.1"],"19":["56.2"],"20":["56.3","77.3"],"21":["56.4","87.11"],"30":["86.7"],"35":["78.1"],"43":["86.11"],"47":["86.11"],"49":["114.2"],"50":["61.25","68.3","68.11","68.12"],"60":["68.5"],"68":["114.2"],"98":["86.8"],"100":["68.1","68.3","68.6","68.7","68.8","68.9","68.11","68.12","68.13","120.2"],"123":["55.2","76.21","77.8"],"200":["60.4"],"202":["60.4"],"940":["24.4"],"2000":["86.8"],"2014":["86.8"],"2019":["86.11"],"20120620":["86.12"],"var":["1.0","19.0","77.2","78.1","78.25","78.31","106.4","106.5","112.6"],"arr":["1.0","76.15","76.16","76.17","77.9","78.28","87.7","96.1","96.3","96.5","96.6","96.7","96.9","96.10","96.11","96.13","96.15","96.17","96.18","96.19","96.20","96.23"],"一个指向数组或列表的起始位置":["2.0"],"通常是最左侧":["2.0"],"另一个指向数组或列表的结束位置":["2.0"],"通常是最右侧":["2.0"],"在两个指针没有相遇之前":["2.0"],"进行如下操作":["2.0"],"比较指针所指向的元素与目标值或特定条件的关系":["2.0"],"根据比较结果":["2.0"],"调整指针的位置":["2.0"],"如果指针所指向的元素满足条件":["2.0"],"可以得到问题的解":["2.0"],"或进行其他操作":["2.0"],"如果指针所指向的元素不满足条件":["2.0"],"根据问题的要求":["2.0"],"将指针向中间移动一步或多步":["2.0"],"继续移动指针":["2.0"],"直到两个指针相遇":["2.0"],"夹逼原则的核心思想是通过双指针的相向移动":["2.0"],"将问题的解空间逐渐缩小":["2.0"],"直到找到满足条件的解或遍历完所有可能的情况":["2.0"],"夹逼原则常用于解决一些查找问题":["2.0"],"比如在有序数组中查找目标值":["2.0"],"找出数组中三个数的和等":["2.0"],"它的优势在于时间复杂度较低":["2.0"],"通常为":["2.0"],"newarr":["3.0","96.14"],"for":["3.0","60.38","75.1","76.18","78.22","87.13","108.1","120.2"],"let":["3.0","55.2","75.1","76.18","77.10","77.15","86.15","88.6"],"j":["3.0"],"length":["3.0","75.1","76.13","78.25","84.0","85.2","106.3"],"k":["3.0"],"输出":["4.0","78.29"],"解释":["4.0"],"函数应该返回新的长度":["4.0"],"并且原数组":["4.0"],"的前两个元素被修改为":["4.0"],"不需要考虑数组中超出新长度后面的元素":["4.0"],"示例2":["4.0","8.0"],"typescript":["5.0","7.0","9.0","11.0","48.2","54.1","87.16","108.8","108.10"],"getconcatarr":["5.0"],"number":["5.0","7.0","47.0","49.6","54.1","55.3","68.14","89.1","92.1","108.10"],"void":["5.0"],"splice":["5.0","48.5"],"sort":["5.0"],"a":["5.0","30.1","30.5","31.0","32.4","74.0","76.12","76.13","76.18","76.23","77.9","77.11","78.6","78.25","79.0","86.8","86.11","87.12","87.14","97.3"],"b":["5.0","76.12","76.13","76.18","76.23","77.9","77.11","78.25","87.12"],"return":["5.0","23.2","30.1","30.5","31.0","32.4","43.1","45.1","60.18","60.33","68.14","77.17","78.9","78.25","78.27","78.31","84.0","87.9","99.4","99.7","99.8","108.1","110.0"],"如何理解":["6.0"],"首先":["6.0","28.1","30.2"],"我们需要找到数组中最长的驼峰":["6.0"],"但由于这个驼峰数组长度不确定":["6.0"],"但我们可以利用驼峰的性质":["6.0"],"从中间向两边递减":["6.0"],"从数组中间向两边查找最常的递减序列":["6.0"],"为了确保找到的是最长的递减序列":["6.0"],"可以采用贪心算法":["6.0"],"即只要当前元素大于前一个元素":["6.0"],"就将当前元素加入递减序列":["6.0"],"当找到递减序列结束时":["6.0"],"比较当前递减序列的长度与之前记录的最长递减序列的长度":["6.0"],"插入进去排序后下标为4":["7.0"],"求解":["7.0","11.0"],"先将目标值放在数组中":["7.0"],"进行去重和排序":["7.0"],"再进行判断下标":["7.0"],"const":["7.0","11.0","41.10","44.3","51.7","54.1","54.3","55.3","64.18","64.19","64.33","64.54","64.55","75.1","76.4","76.6","76.13","76.15","76.16","76.24","76.25","77.9","77.10","77.14","77.20","77.21","78.5","78.10","81.0","87.16","88.6","96.1","96.3","96.5","96.6","96.7","96.17","96.18","96.19","96.20","108.5","108.9"],"searchinsert":["7.0"],"push":["7.0","64.12","64.23","85.2","99.6","120.3","123.2"],"newnum":["7.0","60.37"],"array":["7.0","30.4","60.44","68.14","93.1"],"from":["7.0","41.5","41.10","64.19","64.54","64.55"],"new":["7.0","60.3","60.37","77.12","78.6","81.0","87.14","96.21","99.3","112.6"],"set":["7.0","12.4","13.5","60.32","60.44","75.0"],"等等":["9.0"],"主要是通过使用闭包函数来保存变量":["9.0"],"防止被全局篡改":["9.0"],"并且保留计数器值":["9.0"],"param":["9.0"],"右侧数之和":["10.0"],"str2":["11.0"],"loveleetcode":["11.0"],"firstuniqchar":["11.0"],"angularjs":["12.0"],"前端js框架":["12.0"],"angular":["12.0","19.0","19.2"],"material":["12.0"],"前端界面框架":["12.0"],"59美金":["12.1"],"我个人认为还是非常超值的":["12.1"],"对比工作效率的提升而言":["12.1"],"另外":["12.1","37.9"],"出于个人习惯":["12.1"],"support":["12.2"],"由于国内网络原因":["12.2"],"chrome浏览器必须要连接至国外路由才能下载":["12.2"],"另外推荐您点击以下链接进行下载":["12.2"],"通过官网可以直接下载node":["12.3"],"js的安装包":["12.3"],"可选":["12.4"],"将npm默认设置从淘宝服务器上获取数据":["12.4"],"config":["12.4"],"直接通过bower在项目内进行下载使用":["12.5"],"然后一步一步的将各个需要的内容填充进来":["13.0"],"这样我们会对使用angularjs开发有一个更好的了解":["13.0"],"在webstorm中":["13.0"],"js":["13.1","18.3","22.1","24.1","41.7","48.2","77.23"],"css":["13.1","31.1","59.0","64.2","68.9","68.12","68.13","98.0","117.1"],"img":["13.1","61.34"],"三个目录":["13.1"],"目录下的内容":["13.2"],"既是我们不期望用户通过网络链接直接可以访问到的内容":["13.2"],"会有哪些内容呢":["13.2"],"产品的文档":["13.2"],"这样可以更好的理解配置生成的文件的内容":["13.3"],"在左下角点击":["13.4"],"does":["13.5"],"this":["13.5","51.8","60.33","63.2","64.12","77.22","92.4","99.1","99.7","101.4"],"package":["13.5"],"expose":["13.5"],"项目的关键字":["13.5"],"keywords":["13.5"],"作者和联系方式":["13.5"],"authors":["13.5"],"harry":["13.5","22.0","23.0","23.3"],"andtoo":["13.5"],"net":["13.5"],"授权方式":["13.5"],"如果您期望这是一个私人项目":["13.5"],"可以输入no":["13.5"],"license":["13.5"],"mit":["13.5"],"项目主页":["13.5"],"homepage":["13.5"],"是否要把当前已经安装的模块设置为项目的依赖项":["13.5"],"文件":["13.6"],"告诉":["13.6"],"bower":["13.7"],"并配置好了bower工具":["14.0"],"validate":["14.1"],"against":["14.1"],"file":["14.2","76.8","120.3"],"然后输入":["14.2"],"点击":["14.2","34.0"],"ok":["14.2","49.7"],"webstorm会自动帮助我们加入基本的html内容":["14.2"],"js是完整的版本":["14.3"],"1m大小":["14.3"],"如下所示":["14.4"],"html":["14.4","18.1","19.5","20.1","21.0","24.1","31.0","52.2","64.2"],"doctype":["14.4"],"图3":["14.5"],"运行index":["14.5"],"如果浏览器没有自动打开":["14.5"],"data":["15.0","19.0","24.1","24.2","24.3","28.0","37.3","38.0","41.7","51.5","64.57"],"binding":["15.0","37.3","38.0"],"条件判断语句":["15.0"],"if":["15.0","37.3","38.0","55.3","68.14","88.6","108.1","108.2"],"show":["15.0"],"hide":["15.0"],"上方的":["16.0"],"和":["16.0","18.3","48.6","55.2","60.28","64.2","64.17","64.21","78.5","88.7","92.0","99.1"],"既是angularjs的基本表达式":["16.0"],"如果angularjs被成功的引入":["16.0"],"那么最终的页面将不会显示双括号":["16.0"],"请注意这里的使用用法":["17.1"],"view":["17.1","51.1","51.3","63.5","64.16"],"part":["17.1","31.0"],"外部有单引号":["17.1"],"div":["17.1","19.5","43.1","48.4","64.28","64.29","64.42","64.43","64.45","64.47","69.0","79.0"],"views":["17.1"],"还有":["17.2"],"onload":["17.2"],"需要将":["17.3"],"script":["17.3"],"的":["17.3","19.3","24.1","49.3","63.5","94.0","112.2","115.4"],"type":["17.3","21.0","25.2","25.3","30.5","30.6","30.7","47.0","61.32","64.49","99.3","99.5","108.8","108.10"],"初始化":["18.0","95.4"],"index":["18.1","24.1","76.18","85.1"],"中引入":["18.1"],"zh":["18.2","86.4"],"head":["18.2","20.0","20.2","24.1","30.0","77.5","112.6"],"meta":["18.2","20.0","20.2","30.0"],"charset":["18.2","20.0","20.2","30.0"],"utf":["18.2","20.0","20.2","30.0"],"网页的标题":["18.2","20.0"],"我们在这里使用了angularjs的基本表达式":["18.2","20.0"],"title":["18.2","20.0","20.2","30.0","31.1","77.22","78.1"],"学习angularjs":["18.2","30.0","31.1"],"module":["19.0","19.2"],"firstctrl":["19.0","25.0","31.0"],"function":["19.0","23.3","24.1","24.2","25.0","30.1","30.4","31.0","32.4","33.0","43.1","48.2","60.32","77.15","91.4","92.4","93.4","97.3","99.7","106.2"],"scope":["19.0","22.1","23.3","24.1","24.2","30.3","30.4","30.5","31.0","32.5"],"message":["19.0","19.5"],"angularjs会解析参数的名称":["19.3"],"并转化为对应的对象传入":["19.3"],"这里使用的":["19.3"],"用于将":["19.3"],"ng":["19.3","24.3","27.1","30.6","30.7"],"controller":["19.3","24.1","25.0","30.4","31.0"],"javascript":["19.4","21.2","22.1","24.1","28.3","30.1","30.4","33.0","41.5","44.3","50.5","51.1","51.8","52.2","54.3","61.43","61.45","64.22","64.23","64.33","64.55","76.6","76.16","76.18","76.24","76.25","76.31","77.14","77.15","77.20","77.23","86.3","86.10","88.6","91.4","92.4","96.1","96.3","96.5","96.6","96.7","96.18","96.19","96.23","98.0","106.4","106.5","112.3"],"h1":["19.4"],"hello":["19.5","60.37","64.42","76.2","76.3","76.4","76.5","76.34","77.7","77.21","78.28","108.11"],"onclick":["20.1","22.1","45.1"],"alert":["20.1","79.0"],"将以下代码放置在firstctrl中":["21.0"],"input":["21.0","30.6","30.7","49.6","61.34"],"checkbox":["21.0"],"model":["21.0","25.1","30.6","30.7","64.30","92.4"],"通过复选框来控制文字是否显示":["21.0"],"的工作模式与":["21.1"],"不一样":["21.1"],"list":["22.0","23.0","23.3","29.2","64.37","64.38"],"name":["22.0","23.0","23.1","23.3","25.0","28.0","30.3","49.4","60.32","64.46","77.14","77.20","78.1","108.8","114.2","118.1"],"tom":["22.0","23.0","99.6"],"jerry":["22.0","99.6"],"下面":["22.0"],"app":["22.1","24.1","28.3","30.0","30.1","30.4","31.2","43.1"],"中":["22.1","48.0","50.0","64.2","108.12","119.2"],"对":["22.1"],"函数进行一些改造":["22.1"],"让他能够获取传入的数据":["22.1"],"json":["23.0","52.4"],"将对象转化为json文本输出":["23.0"],"orderby":["23.1"],"text":["23.2","30.6","30.7","64.37"],"split":["23.2","75.1"],"searchtext":["23.3"],"h":["23.4","78.28"],"搜索":["23.4"],"且":["23.4"],"deleted":["24.1"],"false":["24.1","25.3","34.0","48.5","78.25","108.2"],"important":["24.1"],"并在":["24.1"],"部分将css文件引入":["24.1"],"并加入对应的代码":["24.1"],"style":["24.2","31.1","82.0"],"class":["24.3","51.8","60.17","70.0","112.3"],"5s":["24.4","68.13"],"animate":["24.4","88.6"],"color":["24.4","25.0","25.2","25.3","68.1","68.3","68.6","68.8","68.9"],"red":["24.4","24.5","25.0"],"font":["24.4","68.1"],"size":["24.4","61.28","68.1"],"styletext为样式为":["24.5"],"类型的文本":["24.5"],"通过样式传入":["24.5"],"我们可以直接向元素传入对应的样式":["24.5"],"实现样式动态化的效果":["24.5"],"一个比较主要的用途是向元素传入动态的背景图片":["24.5"],"例子如下":["24.5"],"以下两个示例来自于stackoverflow":["24.5"],"colors":["25.0"],"黑色":["25.0","25.3"],"black":["25.0","25.2","25.3"],"白色":["25.0","25.2","25.3"],"white":["25.0","25.2","25.3"],"红色":["25.0"],"colorchosen":["25.1"],"options":["25.1"],"暗色":["25.2","25.3"],"亮色":["25.3"],"美国united":["25.4"],"states":["25.4"],"uk":["25.4"],"英国united":["25.4"],"kingdom":["25.4"],"gr":["25.4"],"德国germany":["25.4"],"country":["25.4"],"相信大家对于angularjs已经有了基本的了解":["26.0"],"但是我感觉此翻译很难让读者明确其具体的含义和用法":["27.0"],"因此":["27.0"],"我在本书中直接应用了英文名":["27.0"],"angularjs的directive":["27.0"],"从实际用途的理解":["27.0"],"在第四章中我们学习的":["27.1"],"目的是对界面操作的抽象与解耦":["27.2"],"e":["28.0","28.4","77.7","78.28","87.12","120.2"],"template":["28.0","30.6","30.7","49.7","50.2","64.28","64.29","64.31","64.43","64.44","64.45"],"p":["28.0","45.1","48.3","64.29","77.6","78.6"],"姓名":["28.0"],"性别":["28.0","28.1"],"sex":["28.0","28.1","30.6"],"我们将这段代码分拆开逐步讲解":["28.1"],"声明一个directive的基本结构如下":["28.1"],"html对应的标签":["28.2"],"将被替换成对应的内容":["28.2"],"则可以让angularjs用替换的模式应用directive":["28.3"],"directive":["28.3","30.1","31.2","32.4","33.0"],"people":["28.3","29.5","30.1","108.9"],"值":["28.4"],"对应类型":["28.4"],"使用方法":["28.4"],"并且通过":["29.0"],"语法":["29.1"],"也就是从第二个单词开始":["29.1"],"peoplelist":["29.2"],"因为html对大小写不敏感":["29.3"],"并进行一下两个方面的处理":["29.4"],"去除字段的":["29.4"],"x":["29.4","30.0","31.1","77.6","107.3","107.5"],"示例":["29.5","67.0","78.1"],"减号":["29.5"],"黄色背景部分代表不符合标准":["29.6"],"图5":["29.6"],"html5验证结果":["29.6"],"无data前缀":["29.6"],"directive提供了非常简单的定义一个scope的功能":["30.1"],"restrict":["30.1","30.5","31.0","32.4"],"info":["30.1","30.2","30.5"],"在firstctrl中加入如下代码":["30.3"],"anotherperson":["30.3"],"张三":["30.3"],"注意":["30.7","76.12","95.2"],"这里没有加入下方的value模型":["30.7"],"一个用于输入文字的输入框":["30.7"],"绑定到value上":["30.7"],"value":["30.7","49.5","55.3","60.32","64.54","78.9","108.2","112.6"],"br":["30.7"],"提交的按钮":["30.7"],"绑定上方scope的btnclick方法":["30.7"],"注意传入参数的方式和html中具体使用的方式":["30.7"],"link":["31.1","32.5"],"href":["31.1"],"rel":["31.1"],"stylesheet":["31.1"],"formdirective":["31.2","32.4","33.0"],"stringify":["32.0","60.45"],"带有三个参数":["32.0"],"为了更好的了解link函数三个参数的意义":["32.0"],"函数中加上了日志输出的":["32.0"],"被转义成json的文本中很难获取任何实质的信息":["32.1"],"实现了jquery中的大部分常用功能":["32.2"],"也就是":["32.2"],"我们可以在获取了":["32.2"],"参数后":["32.2"],"调用jquery常用的语法":["32.2"],"install":["32.3","86.2"],"attrs":["32.5"],"children":["32.5","41.10"],"bind":["32.5","60.26","64.27"],"这是如何实现的呢":["33.0"],"这就要应用到directive的":["33.0"],"属性":["33.0","61.7","61.39","98.4"],"tab列表中项目被选中":["34.0"],"的处理函数":["34.0"],"pane":["34.0"],"foreach":["34.0","78.13","78.18","87.13"],"selected":["34.0"],"初始化页面时":["34.0"],"但是我建议各位读者好好的掌握本章的内容":["35.0"],"的过程中的资料梳理":["37.1"],"hairui219":["37.2"],"learning":["37.2"],"条件判断":["37.3","38.0"],"js的使用方法":["37.4"],"您知道控制台命令如何使用":["37.4"],"如果您需要对以上某方面内容入门":["37.4"],"之后我改做应用和手机游戏的后端开发":["37.5"],"主要使用php":["37.5"],"在这几年的工作经验中":["37.5"],"过程并不向用户开放":["37.6"],"起到了隐蔽后端服务器的效果":["37.6"],"业":["37.7"],"zhi":["37.7"],"来获取元素和填入代码之类的工作":["37.8"],"但学会基本的语法之后":["37.8"],"我仍然是对于具体如何操作dom来实现具体的功能完全没有头绪":["37.8"],"这是一种什么感觉呢":["37.8"],"就像是在读大学时学习c":["37.8"],"c":["37.8","60.30","76.13","77.7","77.17","87.12"],"java语言":["37.8"],"我们可以手工的去实现一些基本的算法或数据结构":["37.8"],"但是学完了之后":["37.8"],"我们可以直接使用c":["37.8"],"或java制作基于windows的客户端程序了吗":["37.8"],"完全重构整个网站是可以接受的":["37.9"],"我之前只是误打误撞的制作出来一个":["37.9"],"但是我没有信心让所有客户都安装上chrome的最新版本":["37.10"],"与我技术构想不符则是对我本人来说更重要的一个原因":["37.10"],"因为我无法认同angular":["37.10"],"2的优化方向":["37.10"],"同时":["37.10"],"根据我的工作经验来看":["37.10"],"这样革命性的优化通常是内部一群理念不合的人另起炉灶":["37.10"],"结果可能喜忧参半":["37.10"],"不一定会最终成功":["37.10"],"typescript的引入我不好评价":["37.10"],"但是强类型定义和模型化并不太符合我的业务模式":["37.10"],"api一次性获取界面需要的所有数据":["37.10"],"这些数据已经在服务端进行好了类型定义和完整性处理":["37.10"],"本地主要是实现对crud的调用":["37.10"],"综上":["37.10"],"我放弃了在新版本的网站中应用angular":["37.10"],"2技术":["37.10"],"数据绑定":["38.0","64.2"],"在vue中我们组合不同功能的方式是通过composition":["41.1"],"开放是针对组建通信来说":["41.2"],"指的是不同组件可以通过props":["41.2"],"单向数据流":["41.2"],"进行数据交互":["41.2"],"componentwillmount":["41.3"],"react17版本中被移除":["41.3"],"render":["41.3","50.2","52.4"],"componentdidmount":["41.3"],"更新":["41.3","51.8"],"class的区别":["41.4"],"import":["41.5","64.54","115.7"],"的警告":["41.6"],"关于使用废弃的":["41.6"],"在页面重新加载时去获取redux中的数据":["41.7"],"使用webpack构建的项目":["41.7"],"需要通过webpack":["41.8"],"不在react中使用jsx会更加方便":["41.9"],"每个jsx元素只是调用":["41.9"],"errorboundary":["41.10"],"haserror":["41.10"],"sethaserror":["41.10"],"需要使用babel去转换为浏览器识别的js":["41.11"],"所以在":["41.12"],"受控组件更合适":["41.13"],"数据驱动是react的核心":["41.13"],"一个html":["42.1"],"返回所有数据":["42.1"],"减少http请求":["42.1"],"现在统一到服务端node去做":["42.2"],"尤其是遇到高并发访问的情况":["42.2"],"利用dom":["44.0"],"document":["44.1","75.4"],"于是每次数据微小的变化都会引起dom的重新渲染":["44.2"],"vue":["44.3","49.7","52.4","64.19","64.27","64.31","64.44","64.45","64.54","64.57"],"转化后":["44.3"],"并且虚拟dom感受到变化的时候是通过局部更新而非整体":["44.5"],"从而减少非常多的dom操作":["44.5"],"并且模拟了事件冒泡和捕获的过程":["44.6"],"采取事件代理批量更新等方法":["44.6"],"高阶组件通常用于组件之间的复用逻辑":["45.0"],"例如状态管理":["45.0"],"数据获取":["45.0"],"访问控制等等":["45.0"],"hoc一个常见的示例就是react":["45.0"],"button":["45.1","49.5"],"useeffect":["45.1"],"返回的是一个全局可以访问和修改的":["45.2"],"ref":["45.2","48.4"],"对象":["45.2","107.4"],"usestate用于保存和更新组件的状态":["45.2"],"matchpattern":["47.0"],"任何名称与":["47.0"],"exclude":["47.0"],"匹配的组件都不会被缓存":["47.0"],"最多可以缓存多少组件实例":["47.0"],"max":["47.0"],"string":["47.0","55.3","92.1","107.2","107.3","108.9"],"regexp":["47.0","93.1"],"keepalive支持传入三个可选参数":["47.0"],"分别是":["47.0"],"keepalive":["47.0"],"默认会缓存内部的所有组件实例":["47.0"],"但是可以通过":["47.0"],"来定制该行为":["47.0"],"支持传入":["47.0"],"字符串":["47.0","91.2"],"数组或者正则表达式":["47.0"],"的实现原理基于浏览器的异步任务队列和微任务队列":["48.0"],"默认使用微任务":["48.0"],"实际上就启动执行了该进程的主执行线程":["48.1"],"线程则相当于车间里的工人":["48.1"],"一个车间会有多个工人在工作":["48.1"],"所以一个进程可以包含多个线程":["48.1"],"浏览器是多线程的":["48.1"],"所以它可以一次能够处理多个事件":["48.1"],"比如渲染页面":["48.1"],"脚本执行":["48.1"],"事件处理等等":["48.1"],"js则是单线程的":["48.1"],"浏览器只给js分配了一个线程":["48.1"],"执行栈与任务队列":["48.1"],"observer":["48.2"],"scheduler":["48.2"],"export":["48.2","50.5","64.54","77.23","115.7"],"queuewatcher":["48.2"],"watcher":["48.2"],"resolve":["48.3","48.5","87.14"],"执行回调函数":["48.3"],"then":["48.3","87.14"],"flushcallback":["48.3"],"ios":["48.3","110.0"],"中可能会出现一个回调被推入微任务队列":["48.3"],"但是队列没有刷新的情况":["48.3"],"所以用一个空的计时器来强制刷新任务队列":["48.3"],"isios":["48.3"],"noop":["48.3"],"true":["48.3","64.51","78.9","78.25","81.0","106.1"],"else":["48.3","48.5","68.14","78.7"],"isie":["48.3"],"tostring":["48.3","77.8","112.6"],"object":["48.3","78.2","78.4","99.9"],"mutationobserverconstructor":["48.3"],"不支持":["48.3"],"的话":["48.3"],"在支持mutationobserver的非":["48.3"],"ie":["48.3"],"环境下":["48.3"],"如":["48.3","64.36","69.0","86.8"],"flushindex":["48.5"],"currentpreflushparentjob":["48.5"],"可以入队就添加到主任务队列":["48.5"],"id":["48.5","114.2"],"否则就插入到头部":["48.5"],"findinsertionindex":["48.5"],"创建微任务":["48.5"],"这个方法负责尝试创建微任务":["48.5"],"等待任务队列执行":["48.5"],"是否正在执行":["48.5"],"isflushpending":["48.5"],"是否正在等待执行":["48.5"],"微任务创建器":["48.5"],"当前任务":["48.5"],"当前没有微任务":["48.5"],"简写":["49.1"],"这里的":["49.1"],"就是一个参数":["49.1"],"它告诉":["49.1"],"指令将表达式":["49.1"],"的值绑定到元素的":["49.1"],"attribute上":["49.1"],"在简写中":["49.1"],"参数前的一切":["49.1"],"都会被忽略为一个":["49.1"],"字符":["49.1"],"另一个例子是":["49.1"],"指令":["49.1","77.12"],"它将监听dom事件":["49.1"],"惰性":["49.3"],"如果初次渲染时条件值为false":["49.3"],"那么它不会做任何事":["49.3"],"条件区块只有当条件首次变为true才会被渲染":["49.3"],"是基于表达式的真假性":["49.3"],"来条件性地渲染元素或者模版片段":["49.3"],"的默认方式是尝试就地更新元素而不移动他们":["49.4"],"要强制其重新排序元素":["49.4"],"则需要使用特殊attribute":["49.4"],"来提供一个排序提示":["49.4"],"src":["49.5"],"imagesrc":["49.5"],"动态":["49.5"],"名":["49.5"],"key":["49.5","60.32","78.5","78.9","87.10","108.1"],"缩写":["49.5"],"缩写形式的动态":["49.5"],"事件而不是":["49.6"],"将输入合法字符串转为数字":["49.6"],"方法接收原生事件作为唯一参数":["49.7"],"如果使用内联声明":["49.7"],"生命可以访问一个特殊的":["49.7"],"变量":["49.7","91.2"],"click":["49.7","64.40","91.5"],"handle":["49.7"],"还支持绑定不带参数的事件":["49.7"],"监听器的对象":["49.7"],"请注意":["49.7"],"当使用对象语法时":["49.7"],"不支持任何修饰符":["49.7"],"destroyed":["50.0"],"而在":["50.0"],"在":["50.0","64.2","76.21"],"组件挂载之前":["50.1"],"mounted":["50.1"],"组件挂载到实例上去之后":["50.1"],"beforeupdate":["50.1","50.4"],"判断是否存在":["50.2"],"选项":["50.2"],"若不存在则停止编译":["50.2"],"直到调用":["50.2"],"mount":["50.2"],"才会继续编译":["50.2"],"优先级":["50.2"],"outerhtml":["50.2"],"是在页面":["50.3"],"节点渲染完毕之后就立刻执行的":["50.3"],"触发时机上":["50.3"],"update":["50.4"],"被替换为":["50.4"],"onbeforeupdate":["50.4"],"onupdate":["50.4"],"beforedestroy":["50.4"],"函数需要返回一个对象":["50.5"],"用于暴露组件状态和方法给模版使用":["50.5"],"因此也提高了代码的可读性和组件的封装性":["50.5"],"default":["50.5","64.54","115.7"],"透传":["50.5"],"attributes":["50.5"],"非响应式对象":["50.5"],"等价于":["50.5"],"console":["50.5","64.54","75.4","76.5","76.7","76.9","76.20","76.29","78.4","78.10","78.29","78.31","79.0","96.14","97.3","97.5"],"log":["50.5","64.54","75.4","76.7","76.9","76.20","76.29","76.30","78.4","78.29","87.15","96.14","97.3","97.5","106.1"],"插槽":["50.5"],"触发事件":["50.5"],"函数":["50.5","60.38","87.14","93.1"],"当我们用":["51.1"],"也会更新":["51.2"],"例如在用户填写表单时":["51.2"],"视图层":["51.3"],"还有两个主要部分组成":["51.4"],"监听器":["51.4"],"同时对模版执行编译":["51.5"],"找到其中动态绑定的数据":["51.5"],"从":["51.5"],"中获取数据并初始化视图":["51.5"],"这个过程发生在解析器":["51.5"],"选项做响应式处理":["51.6"],"observe":["51.6"],"代理":["51.6"],"到":["51.6"],"vm":["51.6","51.8"],"上":["51.6"],"childnodes":["51.7"],"对应的dep中":["51.8"],"当":["51.8"],"setter":["51.8"],"触发时":["51.8"],"便可通过对应":["51.8"],"通知管理所有":["51.8"],"负责更新视图":["51.8"],"constructor":["51.8"],"updater":["51.8"],"在单页面应用中":["52.2"],"所有有必要的代码":["52.2"],"之后解析":["52.3"],"生成":["52.3"],"fcp":["52.3"],"资源加载下来了":["52.3"],"首次的内容绘制":["52.3"],"有一个大结构了":["52.3"],"header":["52.4","61.12","64.13"],"同构":["52.4"],"同构渲染就是一套代码多端使用":["52.4"],"现在有一些框架":["52.4"],"next":["52.4","112.6"],"nuxt":["52.4"],"类似于渲染就是":["52.4"],"server":["52.4"],"getsum":["54.1"],"08":["54.2"],"到被加载的那个模块里面去取值":["54.3"],"输出的是对象的拷贝":["54.3"],"在引入的模块中的变化影响不到这个值":["54.3"],"若文件引用的模块值改变":["54.3"],"引入的模块值不会改变":["54.3"],"而":["54.3","55.2","61.50","76.22"],"引入的模块值会改变":["54.3"],"用法不同":["54.3"],"类型是可以的":["55.2"],"unknown类型赋值给除了":["55.2"],"类型不会报错":["55.2"],"其他都会报错":["55.2"],"known":["55.2"],"known1":["55.2"],"boolean":["55.2","93.1","107.4"],"fun":["55.3"],"typeof":["55.3"],"️":["56.1"],"更新了面试相关的javascript相关":["56.2"],"的区别请简述":["58.7"],"跨平台的语言":["60.1"],"脚本语言":["60.1"],"解释性语言":["60.1"],"来创建该对象":["60.3"],"设置回调函数":["60.3"],"在发送请求之前":["60.3"],"需要设置一个回调函数来处理服务器响应":["60.3"],"onreadystatechange":["60.3"],"属性来监听状态变化":["60.3"],"并在状态变化时触发回调函数":["60.3"],"打开和发送请求":["60.3"],"open":["60.3","81.0"],"方法来指定请求的类型":["60.3"],"表示服务器已经成功接受请求":["60.4"],"并返回客户端所请求的结果":["60.4"],"表示服务器已经接受了请求":["60.4"],"但是还没有处理":["60.4"],"就会形成闭包":["60.6"],"别的函数可能误用这些变量":["60.7"],"造成全局对象过于庞大":["60.7"],"影响访问速度":["60.7"],"因为变量的取值是需要从原型链上遍历的":["60.7"],"除了每次使用变量都是用":["60.7"],"会造成内存泄漏":["60.8"],"details":["60.8","61.48","120.2"],"什么是内存泄漏":["60.8"],"内存泄漏":["60.8"],"memory":["60.8"],"leak":["60.8"],"是指程序中已经不再使用的内存没有被及时释放":["60.8"],"导致系统的可用内存逐渐减少":["60.8"],"就可以管理某一些类型的所有事件":["60.9"],"js高级程序设计":["60.9"],"提高性能":["60.10"],"减少内存空间":["60.10"],"每个函数都是对象":["60.10"],"对象会占用内存":["60.10"],"对象越多":["60.10"],"内存占用率越大":["60.10"],"可以返回事件的目标节点":["60.11"],"我们称为事件源":["60.11"],"捕获阶段":["60.12"],"从window对象传导到目标节点":["60.12"],"生命周期":["60.13"],"cookie可以设置过期时间":["60.13"],"可以使会话级的":["60.13"],"浏览器关闭时失效":["60.13"],"也可以是持久性的":["60.13"],"cookie还可以设置域名和路径":["60.13"],"用于控制其在哪些请求中发送":["60.13"],"本地存储分为两种":["60.13"],"newkey":["60.16"],"newvalue":["60.16"],"name1":["60.16","108.9"],"操作起来更方便":["60.17"],"简化了过程":["60.17"],"js本身事没有":["60.17"],"也就是实例":["60.18"],"普通函数的返回值由":["60.18"],"决定":["60.18"],"构造函数的函数名与类名相同":["60.18"],"引申":["60.18"],"构造函数在被":["60.18"],"的过程中":["60.18"],"发生了什么":["60.18"],"待开发":["60.20"],"解决问题":["60.20","115.5"],"await":["60.21"],"函数前必须加一个":["60.21"],"请求参数的限制是来源与浏览器或":["60.22"],"web":["60.22"],"服务器":["60.22"],"浏览器或者":["60.22"],"服务器限制了":["60.22"],"请求":["60.23","60.40"],"一般是做查询操作":["60.23"],"的交互是通过":["60.24"],"事件驱动":["60.24","103.1"],"addeventlistener":["60.25"],"scrollheight":["60.27"],"里的方法":["60.28"],"clientx":["60.28"],"clienty":["60.28"],"javascript的解释器会消耗完系统中所有可用的内存":["60.30"],"造成系统崩溃":["60.30"],"javascript不像c":["60.30"],"它有一套自己的垃圾回收机制":["60.30"],"garbage":["60.30"],"这种方法不太常见":["60.31"],"引用计数法的意思是每个值被引用的次数":["60.31"],"当声明了一个变量":["60.31"],"并用一个引用类型的值赋值给改变量":["60.31"],"则这个值的引用次数就为1":["60.31"],"相反的":["60.31"],"如果包含了对这个值引用的变量":["60.31"],"又取得了另外一个值":["60.31"],"则在原先的引用值的引用次数":["60.31"],"减":["60.31"],"当这个值的引用次数为":["60.31"],"newarg":["60.33"],"concat":["60.33"],"www":["60.35"],"phpernote":["60.35"],"com":["60.35"],"uploadfiles":["60.35","60.36"],"editor":["60.35","60.36"],"201107240502201179":["60.36"],"jpg":["60.36"],"但是不能实现例如包装对象":["60.37"],"对象的克隆":["60.37"],"包装对象":["60.37"],"num":["60.37","108.10"],"空对象":["60.37"],"str":["60.37","76.2","76.4","76.5","76.6","78.28","78.29"],"剩余部分作为右侧子串":["60.38"],"preresult":["60.38"],"对右侧子串进行全排列":["60.38"],"递归调用":["60.38"],"i":["60.38","75.1","84.0"],"post":["60.40"],"get":["60.40","78.5","78.8","78.16","81.0"],"所谓的同源":["60.41"],"指的是协议":["60.41"],"margin":["60.42","61.5","61.51","68.10","68.11","68.12","68.14"],"left":["60.42","68.11"],"top":["60.42","68.5","68.11","68.12","95.5"],"合并成":["60.42"],"或者是指向该函数所属的对象":["60.43"],"全局this":["60.43"],"结构":["60.44"],"不仅适用于数组还适用于对象":["60.45"],"也就是说会包括那些在原型链上的属性":["60.46"],"prototype":["60.47","92.4","99.3","99.4"],"咱两在一起上班":["60.48"],"到吃饭时间了":["60.48"],"响应":["60.50"],"的模式":["60.50"],"无状态保存":["60.50"],"无链接":["60.50"],"目的是减少文件下载体积":["60.51"],"使用":["60.51","64.15","79.0"],"cdn":["60.51"],"之后使用的时候从缓存中调用":["60.52"],"懒加载是延迟加载":["60.52"],"xss攻击与csrf攻击":["60.54"],"png":["61.1"],"可以在文件大小和图像质量之间取得平衡":["61.2"],"优点":["61.2","61.3","61.4"],"简单图形和带有透明度的图像":["61.3"],"支持动画":["61.4"],"外边距":["61.5"],"组成":["61.5"],"设置元素的宽高只是设置了内容区域的宽高":["61.5"],"盒子真正的宽高应该是":["61.5"],"需要播放的视频地址":["61.9","61.10"],"width":["61.9","68.9","68.11","68.12","68.13","82.0"],"视频区域的宽度":["61.9"],"height":["61.9","68.6","68.9","68.12","68.13","82.0"],"属性名称":["61.10"],"功能":["61.10","61.16","98.4"],"表单元素":["61.11"],"页面头部":["61.12"],"main":["61.12"],"页面主要内容":["61.12"],"footer":["61.12"],"页面底部":["61.12"],"模糊半径":["61.14"],"阴影尺寸":["61.14"],"阴影颜色":["61.14"],"内":["61.14"],"外部阴影":["61.14"],"背景图片尺寸":["61.15"],"origin":["61.15","61.18","100.0","119.4"],"linear":["61.16","68.5"],"定义如何换行":["61.17"],"wrap":["61.17"],"倾斜":["61.18"],"可以更改元素转换的位置":["61.18"],"改变":["61.18"],"xyz":["61.18"],"proprety":["61.19"],"过渡属性名":["61.19"],"keyframes":["61.20","68.2","68.4"],"动画名称":["61.20"],"duration":["61.20"],"属性是对ie6的兼容":["61.21"],"兼容性高":["61.21"],"但是设置":["61.21"],"绝对定位":["61.22"],"脱离文档流":["61.22"],"相对于父级定位":["61.22"],"并且子元素不能设置浮动":["61.24"],"float":["61.24"],"否则居中失效":["61.24"],"translatey":["61.25"],"不知道父元素高度":["61.25"],"子绝对定位父相对定位":["61.25"],"子元素":["61.25"],"父元素设置display":["61.26"],"table":["61.26"],"cell":["61.26"],"vertical":["61.26"],"align":["61.26"],"middle":["61.26"],"子元素设置margin":["61.26"],"自身浮动法":["61.27"],"左栏左浮动":["61.27"],"右栏右浮动":["61.27"],"adjust":["61.28"],"hover":["61.30","69.0"],"active":["61.30","69.0"],"css2伪类选择器":["61.30"],"结构伪类选择器":["61.30"],"nth":["61.30"],"child":["61.30","64.37","64.42","64.46","64.47","99.3","99.5"],"伪元素选择器":["61.31","69.0"],"position":["61.32","68.11","68.12","68.13"],"如果前者小于后者":["61.33"],"优先加载":["61.33"],"em":["61.34"],"select":["61.34"],"sub":["61.34"],"padding":["61.35","108.2"],"内边距":["61.35","82.0"],"direction":["61.36"],"弹性容器中子元素排列方式":["61.36"],"主轴排列方式":["61.36"],"的值并不是固定的":["61.38"],"会继承父级元素的字体大小":["61.38"],"参考物是父元素的":["61.38"],"或":["61.40","77.10","86.8","90.0"],"xhtm":["61.40"],"通过它可以告诉浏览器":["61.41"],"使用哪一个":["61.41"],"在开始拖放被拖放元素时触发":["61.42"],"darg":["61.42"],"在正在拖放被拖放元素时触发":["61.42"],"这里影响和优化的主要是网络和":["61.43"],"脚本":["61.43"],"则可以改成":["61.44"],"async":["61.44"],"或者":["61.44","86.2","91.5"],"defer":["61.44"],"是由":["61.45"],"通过修改":["61.45"],"dom":["61.45","64.11","78.5"],"服务器会发送查询报文到顶级域名服务器":["61.48"],"顶级域名服务器收到请求后会返回权威":["61.48"],"地址":["61.48"],"服务器地址再发送查询报文到权威":["61.48"],"权威":["61.48"],"服务器接收到请求后":["61.48"],"返回最终的":["61.48"],"tcp三次握手建立连接":["61.48"],"网络模型":["61.48"],"网络模型可以分为七层":["61.48"],"四层或五层模型":["61.48"],"这里我们将其分为五层":["61.48"],"五层":["61.48"],"自上而下":["61.48"],"分为应用层":["61.48"],"传输层":["61.48"],"content":["61.49"],"initial":["61.49"],"scale":["61.49"],"trhead":["61.50"],"完成":["61.50","95.2"],"js动画":["61.50"],"则会在":["61.50"],"普通流的块级元素垂直方向的":["61.51"],"weex":["63.5"],"不同点":["63.5"],"严格上只针对":["63.5"],"mvc":["63.5"],"diff":["63.6"],"和属性":["63.11"],"ajax":["63.18"],"component":["63.19"],"的优势":["63.22"],"区别":["63.23","76.14"],"loaders":["63.24"],"axios":["63.34"],"mvvm":["64.1"],"编写的":["64.2"],"可以使用模版引擎来渲染动态数据":["64.2"],"视图模型":["64.2"],"viewmodel是链接模型和视图的桥梁":["64.2"],"它负责将模型数据映射到视图上":["64.2"],"并将用户的交互事件传递给模型":["64.2"],"viewmodel可以使用数据绑定来自动更新视图":["64.2"],"当模型数据发生改变时":["64.2"],"视图自动更新":["64.2"],"最重要的部分是数据绑定和双向数据绑定":["64.2"],"是指将视图中的元素绑定到模型数据的过程":["64.2"],"子组件所有的":["64.3"],"阻止点击事件冒泡":["64.4"],"相当于原生中":["64.4"],"event":["64.4"],"stoppropagation":["64.4"],"prevent":["64.4"],"防止执行预设的行为":["64.4"],"相当于原生中的":["64.4"],"preventdefault":["64.4"],"并不能显示输出":["64.6"],"等价":["64.7"],"只是":["64.7"],"可以的":["64.9"],"如果绑定多个事件":["64.9"],"是保证唯一性":["64.10"],"vue在执行时":["64.10"],"当在模版中把数据绑定到一个计算属性上时":["64.11"],"方式进行跳转的叫做编程式导航":["64.12"],"router":["64.12","64.16","64.19","64.23","64.33"],"后台更改":["64.13"],"url的":["64.15"],"hash值来做路由":["64.15"],"支持所有浏览器":["64.15"],"以及浏览器的前进后退会触发相应的监听事件":["64.16"],"然后调用":["64.16"],"之后更新路由":["64.16"],"触发":["64.16"],"history":["64.18"],"routes":["64.18"],"hash只能修改":["64.20"],"的部分":["64.20"],"可以设置与当前url一样的新的url":["64.20"],"路由定义":["64.22"],"path":["64.22"],"user":["64.22","75.4","118.1"],"导航到搜索页面并传递查询参数":["64.23"],"使用路由参数更合适":["64.24"],"确保信息直接可见":["64.24"],"如果希望用户能够在url中看到传递的信息":["64.24"],"使用双大括号":["64.26"],"将变量插入到模版中":["64.26"],"指令可以将一个变量的值绑定到html元素属性上":["64.27"],"v":["64.30","64.36","64.46"],"实例中的方法":["64.31"],"createrouter":["64.33","64.55"],"guards":["64.34"],"表示当前导航正要离开的路由":["64.35"],"一个函数":["64.35"],"用于进入下一个钩子":["64.35"],"beforeresolve":["64.35"],"mext":["64.35"],"在导航被确认之前":["64.35"],"也就是所有组件的":["64.35"],"beforerouterenter":["64.35"],"被调用之后触发":["64.35"],"在这些守卫中":["64.35"],"通过调用":["64.35"],"自定义属性名":["64.37"],"属性值":["64.37"],"的形式传递":["64.37"],"子组件":["64.38","64.42","64.44"],"子组件接受通过":["64.38"],"nox":["64.40"],"buttom":["64.40"],"transferparents":["64.40"],"点击传值给父组件":["64.40","64.41"],"父组件接收":["64.41"],"引入组件":["64.41"],"world":["64.42","76.2","76.5","77.21","78.31"],"slot":["64.43"],"我是设置的默认内容":["64.43"],"xxx":["64.44"],"可简写为":["64.44"],"指令的":["64.44"],"元素":["64.44"],"这个元素会将目标插槽的名字传递下去匹配对应插槽":["64.44"],"例如":["64.44"],"父组件":["64.45"],"slotprops":["64.46"],"my":["64.46"],"is":["64.46","97.3"],"bigturnip":["64.47"],"或者是由以上类型的值组成的数组":["64.50"],"第二个参数是在发生变化时要调用的回调函数":["64.50"],"这个回调函数接收三个参数":["64.50"],"新值":["64.50"],"旧值":["64.50"],"fooref":["64.51"],"barref":["64.51"],"foo":["64.51","78.4"],"bar":["64.51"],"prefoo":["64.51"],"prebar":["64.51"],"深度遍历":["64.51"],"当使用getter函数作为源时":["64.51"],"回调只在此函数的返回值变化时才会触发":["64.51"],"如果想让回调在深层级变更时也能触发":["64.51"],"你需要使用":["64.51"],"deep":["64.51"],"强制侦听器进入深层级模式":["64.51"],"在深层级模式时":["64.51"],"适用于派生值的场景":["64.52"],"它会缓存计算结果":["64.52"],"只有在依赖的响应式数据变化时才重新计算":["64.52"],"是监听一个值的变化而执行对应的回调":["64.52"],"白屏时间怎么检测":["64.53"],"setup":["64.54"],"访问当前路由信息":["64.54"],"createwebhashhistory":["64.55"],"而不仅仅是对象的属性":["64.56"],"这使得vue3能够高效的追踪数据的变化":["64.56"],"从而提高响应性能":["64.56"],"编译优化":["64.56"],"的编译器做了大量的优化工作":["64.56"],"生成的运行时代码更为精简和高效":["64.56"],"其中有一个重要的变化是将模版编译为更优化的渲染函数":["64.56"],"减少了运行时的开销":["64.56"],"新的编译器还引入了静态提升":["64.56"],"static":["64.56"],"hoisting":["64.56"],"对应一般":["64.57"],"对象的":["64.57"],"里存放的数据是响应式的":["64.57"],"数据发生改变":["64.57"],"textanimation":["66.0"],"10px":["68.1","68.12","68.15"],"background":["68.1","68.3","68.6","68.8","68.9"],"465efb":["68.1","68.3","68.6","68.7","68.8"],"6px":["68.1","68.8"],"display":["68.1","68.5","68.6"],"inline":["68.1","68.5","68.6"],"block":["68.1","68.5","68.6"],"1px":["68.1"],"webkit":["68.1","68.6","68.7","68.8","68.10","68.11","68.14"],"animation":["68.1","68.6","68.7","68.8"],"in":["68.2","68.4","68.8","78.7","108.1","120.2"],"out":["68.2","68.4","68.8","112.4"],"auto":["68.3"],"border":["68.3","68.6","68.7","68.8","68.10"],"radius":["68.3","68.6","68.7","68.8","68.10"],"opacity":["68.3"],"8s":["68.4","68.9"],"infinite":["68.4","68.6","68.7","68.8","68.11"],"ease":["68.4","68.6","68.8"],"delay":["68.4","88.1"],"9s":["68.4","68.9"],"absolute":["68.5","68.8","68.11","68.12"],"30px":["68.6","68.11"],"bouncedelay":["68.6","68.8"],"4s":["68.6","68.13"],"scaleout":["68.7"],"0s":["68.7"],"relative":["68.8","68.11","68.12","68.13"],"2s":["68.8"],"fill":["68.8"],"mode":["68.8"],"both":["68.8","120.3"],"6s":["68.9","68.13"],"7s":["68.9","68.13"],"fff":["68.9"],"300px":["68.9","68.12","68.13"],"200px":["68.10"],"25px":["68.10"],"100px":["68.10","68.12","68.15"],"20px":["68.10"],"15px":["68.10"],"moz":["68.10"],"60px":["68.11"],"1s":["68.11"],"80px":["68.12"],"keys":["68.14","78.13","79.0","108.1"],"map":["68.14","77.9","78.26"],"right":["68.14"],"0px":["68.14"],"下面的选择器的权重是递增的":["69.0"],"类型选择器":["69.0"],"元素选择器":["69.0"],"标签这些":["69.0"],"before":["69.0","120.2"],"after":["69.0"],"class选择器":["69.0"],"类名选择器":["69.0"],"伪类选择器":["69.0"],"focus":["69.0"],"visited":["69.0"],"这些":["69.0"],"box":["70.0"],"ul":["70.0"],"原文链接":["71.0"],"partial":["73.1"],"container":["73.1"],"undefined":["74.0","77.5","78.25"],"我们只是想打印obj里边的fn":["74.0"],"这个时候就应该用我们的call了":["74.0"],"都是改变上下文中的":["74.1"],"通常是由web服务器使用响应":["75.0"],"header设置的":["75.0"],"然后浏览器使用":["75.0"],"cookiestring":["75.1"],"cookies":["75.1"],"cookiearray":["75.1"],"cookieitem":["75.1"],"展示所有":["75.2"],"如果你运行了上面这段代码":["75.2"],"你会看到多个cookie":["75.2"],"这是因为":["75.2"],"操作不是重写整个所有的cookie":["75.2"],"他只设置代码中提到的cookie":["75.2"],"从技术上讲":["75.2"],"cookie的名称和值可以是任意字符":["75.2"],"为了保持有效的格式":["75.2"],"设置":["75.3"],"那么该cookie在":["75.3"],"如果我们在site":["75.4"],"com网站上设置了cookie":["75.4"],"cookie":["75.4"],"jhon":["75.4"],"在forum":["75.4"],"域名下":["75.4"],"我们无法访问它":["75.4"],"03":["75.5"],"07":["75.5"],"gmt":["75.5"],"cooke的国旗时间定义了浏览器会自动清除该cookie的时间":["75.5"],"日期必须完全采用gmt时区的这种格式":["75.5"],"我们可以使用":["75.5"],"date":["75.5","93.1"],"toutcstring":["75.5"],"来获取它":["75.5"],"datatracker":["75.6"],"ietf":["75.6"],"开始":["76.5"],"users":["76.8"],"hhh":["76.8","78.10"],"documents":["76.8"],"txt":["76.8"],"abc":["76.9"],"标准化形式":["76.10"],"它主要用于处理":["76.10"],"可以在调用时扩展实际传入的参数":["76.12"],"扩展运算符后面还可以放置表达式":["76.12"],"如果扩展运算符后面是一个空数组":["76.12"],"则不会有任何效果":["76.12"],"warning":["76.12"],"只有在函数调用时":["76.12"],"扩展运算符才能放在圆括号中":["76.12"],"否则会报错":["76.12"],"arraylike":["76.13"],"方法的主要目的":["76.14"],"是弥补数组构造函数":["76.14"],"的不足":["76.14"],"因为参数个数不同":["76.14"],"会导致":["76.14"],"内的全部元素":["76.16"],"是对键值的遍历":["76.18"],"是对键值对的遍历":["76.18"],"of":["76.18","112.4"],"baz":["76.20"],"但是":["76.21"],"如果使用字面量方式定义对象":["76.21"],"使用大括号":["76.21"],"es5":["76.21"],"返回true":["76.22"],"操作符返回false":["76.22"],"二是object":["76.22"],"那么可以使用第二个参数指定修饰符":["76.27"],"而且":["76.27"],"返回的正则表达式会忽略原有的正则表达式的修饰符":["76.27"],"regex":["76.28","79.0"],"s":["76.29","77.8"],"exec":["76.30"],"abcabc":["76.30"],"表示是否有y修饰符":["76.31"],"表示是否有u修饰符":["76.31"],"replace":["76.32"],"search":["76.32"],"china":["76.34"],"ecmascript是一种由":["77.0"],"ecma":["77.0"],"国际组织制定的脚本语言标准":["77.0"],"关键字的区别在于":["77.2"],"块级作用域":["77.3"],"y":["77.3","77.6"],"常量":["77.3"],"tail":["77.5","112.6"],"z":["77.5","79.0"],"此时的p是模式":["77.6"],"不是变量":["77.6"],"如果想要p也作为变量赋值":["77.6"],"可以写成下面这样":["77.6"],"d":["77.7","78.28","87.12"],"result":["77.9","108.1"],"所以不能用":["77.10"],"再次声明":["77.10"],"add":["77.11","77.15","78.21","86.15","107.5"],"不可以对箭头函数使用":["77.12"],"arguments":["77.13","77.15","101.4"],"要用":["77.13"],"rest":["77.13"],"我们可以放置任何有效的javascript表达式":["77.14"],"这些表达式的值将被插入到字符串中":["77.14"],"对象了":["77.15"],"rest参数搭配的变量是一个数组":["77.15"],"该变量将对于的参数放入到数组中":["77.15"],"这个示例的含义是表示一个求和函数":["77.15"],"利用rest参数":["77.15"],"可以向该函数传入任意数目的参数":["77.15"],"values":["77.15","78.13","78.18"],"arr2":["77.18"],"它提供了一种更方便的方法来定义和初始化对象属性":["77.19"],"lastworld":["77.21"],"last":["77.21","98.7"],"aa":["77.21"],"first":["77.21"],"author":["77.22"],"下面是一个示例":["77.23"],"utils":["77.23"],"导出一个常量":["77.23"],"es6":["78.1"],"原生提供":["78.1"],"构造函数":["78.1"],"用来生成":["78.1"],"实例":["78.1"],"handler":["78.1","78.5"],"time":["78.1"],"上面这段代码中":["78.1"],"作为构造函数":["78.1"],"接收两个参数":["78.1"],"第一个参数是需要代理的目标对象":["78.1"],"上例是一个空对象":["78.1"],"的操作":["78.2"],"deleteproperty":["78.2","78.7"],"delete":["78.2","78.7","79.0"],"ownkeys":["78.2"],"getownpropertynames":["78.2"],"getownpropertysymbols":["78.2"],"proto":["78.4"],"propertykey":["78.4"],"receiver":["78.4"],"obj":["78.4"],"create":["78.4","99.9"],"上面代码中":["78.5"],"由于设置了存值函数":["78.5"],"任何不符合要求的":["78.5"],"属性赋值":["78.5"],"都会抛出一个错误":["78.5"],"这是数据验证的一种实现方法":["78.5"],"利用":["78.5"],"方法":["78.5"],"还可以数据绑定":["78.5"],"即每当对象发生变化时候":["78.5"],"会自动更新":["78.5"],"有时候我们会在对象上面设置内部属性":["78.5"],"属性名的第一个字符使用下划线开头":["78.5"],"表示这些属性不应该被外部使用":["78.5"],"结合":["78.5"],"就可以做到防止这些内部属性被外部读写":["78.5"],"target":["78.5","78.9"],"invariant":["78.5"],"am":["78.6","86.8"],"the":["78.6"],"proxy":["78.6"],"让":["78.7"],"操作都变成函数行为":["78.7"],"某些":["78.7"],"是":["78.7"],"命令式":["78.7"],"has":["78.7"],"argumentslist":["78.8"],"用于创建一个类的实例对象":["78.8"],"notifyobservers":["78.9"],"设置观察者":["78.9"],"addobserver":["78.9"],"函数都返回一个全新且不相等的":["78.10"],"mysymbol1":["78.10"],"mysymbol2":["78.10"],"weakset":["78.11"],"它类似于对象":["78.12"],"但有一些不同之处":["78.12"],"返回以键遍历器的对象":["78.13"],"返回以值遍历器的对象":["78.13"],"entries":["78.13","78.18"],"返回以键和值为遍历器的对象":["78.13"],"使用回调函数遍历每个成员":["78.13","78.18"],"只接受对象":["78.14"],"作为键":["78.14"],"节点":["78.15"],"dom节点被移除时自动释放此成员键":["78.15"],"返回键值对":["78.16"],"类似于数组":["78.17"],"返回以属性值为遍历器的对象":["78.18"],"返回以属性值和属性值为遍历器的对象":["78.18"],"并且这些对象是弱引用的":["78.19"],"这意味着如果一个对象在":["78.19"],"不用担心这些节点从文档移除时会引发内存泄漏":["78.20"],"添加值":["78.21"],"是一种迭代机制":["78.23"],"为es6":["78.24"],"创造了一种新的遍历命令":["78.24"],"it":["78.25"],"done":["78.27","120.2"],"必须部署":["78.27"],"接口":["78.28"],"l":["78.28"],"o":["78.28","115.8"],"遍历字符串":["78.29"],"内部封装了多个状态":["78.30"],"执行":["78.30","103.0"],"ending":["78.31"],"hw":["78.31"],"当属性名匹配提供的正则表达式时":["79.0"],"允许使用":["79.0"],"方式取值":["79.0"],"否则只能用":["79.0"],"号取值":["79.0"],"notation":["79.0"],"文件末尾强制换行":["79.0"],"eol":["79.0"],"替代":["79.0"],"eqeqeq":["79.0"],"allow":["79.0"],"null":["79.0","88.5","101.2","112.6"],"方法表达式是否需要命名":["79.0"],"func":["79.0"],"names":["79.0"],"方法定义风格":["79.0"],"declaration":["79.0"],"强制使用方法声明的方式":["79.0"],"f":["79.0"],"expression":["79.0"],"强制使用方法表达式的方式":["79.0"],"allowarrowfunctions":["79.0"],"declaration风格中允许箭头函数":["79.0"],"禁止使用alert":["79.0"],"confirm":["79.0"],"prompt":["79.0"],"禁止使用数组构造器":["79.0"],"bitwise":["79.0"],"禁止使用按位运算符":["79.0"],"caller":["79.0"],"禁止使用arguments":["79.0"],"caller或arguments":["79.0"],"callee":["79.0"],"catch":["79.0"],"shadow":["79.0"],"禁止catch子句参数与外部作用域变量同名":["79.0"],"assign":["79.0"],"禁止给类赋值":["79.0"],"cond":["79.0"],"禁止在条件表达式中使用赋值语句":["79.0"],"禁止使用console":["79.0"],"禁止修改const声明的变量":["79.0"],"constant":["79.0"],"condition":["79.0"],"禁止在条件中使用常量表达式":["79.0"],"continue":["79.0"],"禁止使用continue":["79.0"],"control":["79.0"],"禁止在正则表达式中使用控制字符":["79.0"],"debugger":["79.0"],"禁止使用debugger":["79.0"],"不能对var声明的变量使用delete操作符":["79.0"],"不能使用看起来像除法的正则表达式":["79.0"],"dupe":["79.0"],"在创建对象字面量时不允许键重复":["79.0"],"args":["79.0","96.23","101.4"],"函数参数不能重复":["79.0"],"duplicate":["79.0"],"switch中的case标签不能重复":["79.0"],"如果if语句里面有return":["79.0"],"后面不能跟else语句":["79.0"],"xhr":["81.0"],"xmlhttprequest":["81.0"],"responsetype":["81.0"],"blob":["81.0"],"setrequestheader":["81.0"],"authorization":["81.0"],"basic":["81.0"],"a2vybwl0omtlcm1pda":["81.0"],"不包括内边距":["82.0"],"边框和外边距":["82.0"],"clientheight":["82.0"],"具有":["83.0"],"的简单语法和":["83.0"],"的异步":["83.0"],"得益于es6的静态模块结构":["83.0"],"可以进行":["83.0"],"tree":["83.0","114.0"],"shaking":["83.0"],"允许像":["83.0"],"rollup":["83.0"],"这样的打包器":["83.0"],"删除不必要的代码":["83.0"],"减少代码包可以获得更快的加载":["83.0"],"可以在html中调用":["83.0"],"只要如下":["83.0"],"它的返回值作为一个元素被添加为新数组中":["85.1"],"该函数被调用时将传入以下参数":["85.1"],"element":["85.1"],"数组中当前正在处理的元素":["85.1"],"正在处理的元素的索引":["85.1"],"调用了":["85.1"],"它方便了日常开发中对时间的操作":["86.0"],"提高了开发效率":["86.0"],"日常开发中":["86.0"],"moment":["86.2"],"yarn":["86.2"],"locale":["86.4"],"cn":["86.4"],"获取本周周日23时59分59秒":["86.6"],"获取当前月最后一天23时59分59秒":["86.6"],"获取当前月的总天数":["86.6"],"daysinmonth":["86.6"],"获取时间戳":["86.6"],"以秒为单位":["86.6"],"设置小时":["86.7"],"hours":["86.7"],"设置分钟":["86.7"],"minutes":["86.7"],"设置秒数":["86.7"],"从sunday到saturday":["86.8"],"w":["86.8"],"年份中的第几周":["86.8"],"如42":["86.8"],"表示第42周":["86.8"],"yyyy":["86.8"],"四位数字完整表示的年份":["86.8"],"yy":["86.8"],"两位数字表示的年份":["86.8"],"大写的am":["86.8"],"pm":["86.8"],"end":["86.9","114.2"],"五月":["86.11"],"24日":["86.11"],"年前":["86.12"],"上周六晚上7点49":["86.13"],"本月一号":["86.15"],"行一个提供的reducer函数":["87.1"],"每一次运行reducer函数会将先前的结果作为参数传入":["87.1"],"一个初始值":["87.2"],"在第一次调用时":["87.3"],"如果指定了":["87.3"],"initialvalue":["87.3"],"则为指定的":["87.3"],"currentvalue":["87.4"],"开始执行":["87.4"],"如果没有":["87.4"],"acc":["87.6","87.10"],"表示的是累加器":["87.6"],"accumulator":["87.6"],"initvalue":["87.7"],"判断累加器的结果中是否有未记录的名称key":["87.9"],"通过传入一个空对象":["87.9"],"cur":["87.10"],"curgroup":["87.10"],"potter":["87.11"],"bob":["87.11"],"war":["87.11"],"and":["87.11"],"sapce":["87.11"],"romeo":["87.11"],"如果你喜欢使用":["87.13"],"循环":["87.13"],"你可以再遍历一次时使用":["87.13"],"进行过滤和映射":["87.13"],"curfunc":["87.14"],"p1":["87.14"],"arrlike":["87.16"],"settimeout和setinterval是两个用于执行延迟操作或定期执行代码的函数":["88.0"],"作用":["88.1","88.2"],"在指定的延迟时间":["88.1"],"以毫秒为单位":["88.1","88.2"],"以指定的时间间隔":["88.2"],"重复执行传入的函数":["88.2"],"javascript是单线程执行":["88.3"],"javascript是单线程执行的":["88.3"],"意味着所有任务都在同一个执行队列中":["88.3"],"setinterval":["88.4","88.7"],"intervalfunction":["88.5"],"用法":["88.6"],"starttime":["88.6"],"timestamp":["88.6"],"tcp数据包序列号":["89.1"],"在tcp发送的每个数据包都会随机生成一个序列号":["89.1"],"该序列号用于接受放对数据包的接收确认":["89.1"],"防止丢失以及数据接收完毕后按序列号顺序组装":["89.1"],"ack":["89.1"],"确认编号":["89.1"],"acknowledgement":["89.1"],"数据包的确认标志":["89.1"],"服务端进入":["89.2"],"close":["89.2"],"这个时候客户端已经没有数据要发送了":["89.2"],"不过服务器端有数据发送的话":["89.2"],"客户端依然需要接收":["89.2"],"客户端接收到服务端发送的":["89.2"],"后":["89.2","95.2"],"进入到":["89.2"],"wati":["89.2"],"一个用于计算机或通信系统间互联的标准体系":["90.0"],"一般称为":["90.0"],"osi参考模型":["90.0"],"七层模型":["90.0"],"所谓的":["90.0"],"简称":["91.1"],"xss":["91.1"],"方法名等":["91.2"],"在标签属性中":["91.2"],"恶意内容包含引号":["91.2"],"从而突破属性值的限制":["91.2"],"常见的是在评论区插入攻击脚本":["91.3"],"如果脚本被储存到服务端":["91.3"],"那么所有看见对应评论的用户都会受到攻击":["91.3"],"是必要的":["91.4"],"就需要对引号":["91.4"],"尖括号":["91.4"],"斜杠进行转移":["91.4"],"但这还不是很完善":["91.4"],"想对html模版各处插入点进行充分的转移":["91.4"],"就需要采用合适的转义库":["91.4"],"attack":["91.5"],"session":["91.5"],"refer":["91.6"],"check":["91.6"],"csrf时常也被成为xsrf":["91.7"],"csrf实现的方式还可以是直接通过命令行发起请求等":["91.7"],"本质上讲":["91.7"],"这意味着当操作涉及不匹配的类型时":["92.0"],"它允许隐式类型转换":["92.0"],"而不是抛出类型错误":["92.0"],"前端数据类型分为":["92.0"],"基本数据类型":["92.0"],"复杂数据类型":["92.0"],"symbol":["92.1","92.3"],"要么是":["92.3"],"属性值可以是任何类型的值":["92.3"],"包括其他对象":["92.3"],"从而可以构建复杂的数据结构":["92.3"],"有两种对象属性的类型":["92.3"],"数据属性和访问器属性":["92.3"],"每个属性都有对应的特性":["92.3"],"attribute":["92.3"],"引擎可在内部访问每个属性":["92.3"],"用于检测构造函数的":["92.4"],"属性是否出现在某个实例对象的原型链上":["92.4"],"car":["92.4"],"make":["92.4"],"year":["92.4"],"上图中":["93.0"],"都是javascript内置的":["93.1"],"类似的我们还有":["93.1"],"也可以说是让某一个构造函数实例化的所有对象都可以找到公共的方法和属性":["93.2"],"有了":["93.2"],"我们不需要":["93.2"],"通常被称为隐式类型":["93.3"],"被称为显式类型":["93.3"],"那么我们可以说一个对象的隐式原型指向了该对象的构造函数的显式原型":["93.3"],"我们通过在显式原型上定义的属性方法":["93.3"],"通过隐式原型传递给了构造函数的实例":["93.3"],"这样一来实例就很容易能够访问到构造函数原型上的方法和属性了":["93.3"],"我们之前也说过":["93.3"],"属性是对象":["93.3"],"独有的":["93.3"],"那么":["93.3"],"那":["93.4"],"函数是不是也有构造函数呢":["93.4"],"显然是有的":["93.4"],"native":["93.4"],"code":["93.4","120.3"],"通过输出看到":["93.4"],"第二次":["94.0"],"也会提升到顶部":["94.0"],"也为":["94.0"],"之下的":["94.0"],"才是":["94.0"],"所以此时打印的是":["94.0"],"第二个例子中也是如此":["94.0"],"先提升到顶部":["94.0"],"为":["94.0"],"再去给":["94.0"],"赋值":["94.0"],"赋值结果为":["94.0"],"所以打印的是":["94.0"],"实际的运行结果为":["94.0"],"浏览器会":["95.2"],"重新绘制":["95.2"],"受影响的部分到屏幕中":["95.2"],"该过程称为":["95.2"],"dom树":["95.3","95.4"],"创建之后创建":["95.3"],"会计算dom节点的样式信息":["95.3"],"会触发":["95.4"],"reflow回流":["95.4"],"页面第一次渲染":["95.4"],"除了":["95.5"],"尽量一次性修改":["95.6"],"所以很多浏览器都会优化这些操作":["95.7"],"浏览器会维护1个队列":["95.7"],"两者区别是":["96.8"],"方法从右向左操作的":["96.8"],"第三个以及后面的多个参数表示从第一个参数的值的位置开始被插入的元素":["96.18"],"setmap":["96.21"],"newmap":["96.21"],"生成的数字范围":["96.22"],"但比分别调用这两个方法稍微更高效一些":["96.23"],"引用数据类型":["97.1"],"这个数据有着原始数据属性值的一份精确复制":["97.2"],"如果属性是基本类型":["97.2"],"name2":["97.3","108.9"],"xka":["97.3"],"love":["97.3"],"beautiful":["97.3"],"parse":["97.4"],"属性为对象时":["97.6"],"浅拷贝是复制":["97.6"],"如何实现一个深拷贝":["97.7"],"响应速度":["98.1"],"过期":["98.2"],"如果命中则直接从缓存中获取资源":["98.2"],"否则进入下一步":["98.2"],"没有命中强缓存":["98.2"],"则根据请求头的":["98.2"],"强制缓存失效":["98.3"],"则直接向服务器发起请求":["98.3"],"跟第一次发起请求一致":["98.3"],"那么客户端与服务端的时间因为某些原因":["98.4"],"例如时区不同":["98.4"],"客户端与服务端有一方时间不准确":["98.4"],"发生误差":["98.4"],"那么强制缓存则会直接失效":["98.4"],"这样的话强制缓存的存在就毫无意义":["98.4"],"在http":["98.4"],"1中":["98.4"],"是最重要的规则":["98.4"],"主要用于控制网页缓存":["98.4"],"取值有以下几种":["98.4"],"public":["98.4"],"所有内容都被缓存":["98.4"],"客户端和代理服务都可缓存":["98.4"],"由服务器根据缓存标识决定是否使用缓存的过程":["98.5"],"主要分为两种情况":["98.5"],"是服务器响应请求时":["98.6"],"返回该资源文件在服务器最后被修改的时间":["98.6"],"则是客户端再次发起该请求时":["98.6"],"携带上次请求返回的":["98.6"],"的值":["98.6"],"通过此字段告诉服务器":["98.6"],"该资源上次请求返回的最后被修改时间":["98.6"],"服务器收到该请求":["98.6"],"生效则直接使用缓存":["98.7"],"若不生效则进行协商缓存":["98.7"],"modified":["98.7","120.3"],"如果一个类别b":["99.0"],"继承自":["99.0"],"speed":["99.1"],"由汽车的这个类可以派生出":["99.1"],"轿车":["99.1"],"货车":["99.1"],"两个类":["99.1"],"在汽车的基础属性上":["99.1"],"为轿车添加一个后备箱":["99.1"],"借助call":["99.2"],"child2":["99.3"],"getname":["99.4"],"第二次调用":["99.5"],"call":["99.5","99.8"],"clone":["99.7"],"original":["99.7"],"friends":["99.8"],"getfriends":["99.8"],"获取当前窗口的路径":["100.0"],"pathname":["100.0"],"获取当前窗口的源信息":["100.0"],"获取当前窗口的协议":["100.0"],"protocol":["100.0"],"mousemove":["101.0"],"等事件在触发时":["101.0"],"节流是指程序在n秒内只运行一次":["101.1"],"oldtime":["101.2"],"apply":["101.2"],"定时器写法":["101.2"],"毫秒后第一次执行":["101.2"],"第二次事件停止触发后依然会再一次执行":["101.2"],"若在这个时间段内被重复触发":["101.3"],"保存this指向":["101.4"],"参数对象":["101.4"],"settimeout":["101.4"],"fn":["101.4"],"降低回调执行频率":["101.5"],"节省计算资源":["101.5"],"差异":["101.5"],"手机号":["101.6"],"邮箱验证输入检测":["101.6"],"进行了封装":["103.0"],"对一些特殊用例进行优化":["103.0"],"提供替代的api":["103.0"],"使得":["103.0"],"在非浏览器环境下运行得更好":["103.0"],"直到数据正常返回":["103.1"],"再去处理数据":["103.1"],"从而提升了执行效率":["103.1"],"事件驱动的编程思想主要是通过事件或者状态变化来进行应用程序的流程控制":["103.1"],"一般通过事件驱动来完成":["103.1"],"一旦事件被监测到":["103.1"],"则调用响应的回调函数":["103.1"],"简单来说":["103.1"],"就是当异步任务执行的时候":["103.1"],"现代typescript高级教程":["105.0"],"中一种特殊的数据类型":["106.0"],"允许我们为一组数值设定友好的名字":["106.0"],"conssole":["106.1"],"上述示例中":["106.3"],"就是一个计算所得项":["106.3"],"上面的例子不会报错":["106.3"],"但是如果紧接在计算所得项后面的是未手动赋值的项":["106.3"],"上面例子编译结果是":["106.4","106.5"],"定义的类型只会用于编译时的检查":["106.5"],"编译结果中会被删除":["106.5"],"泛型":["107.1"],"generics":["107.1"],"字符串数组为":["107.2"],"除此之外":["107.2"],"我们也可以使用泛型":["107.2"],"elemtype":["107.2"],"返回":["107.3"],"我们在函数名后使用了":["107.3"],"其中":["107.3"],"表示任意类型":["107.3"],"后面的":["107.3"],"参数和函数返回值就可以直接使用":["107.3"],"了":["107.3"],"在调用时":["107.3"],"我们传入":["107.3"],"类型":["107.3"],"表示指定他的类型为字符串":["107.3"],"当然也可以不指定类型":["107.3"],"由类型推断自动推断出来":["107.3"],"它的":["107.4"],"类型是":["107.4"],"的类型是":["107.4"],"定义函数的形状":["107.4"],"类型确定情况":["107.4"],"isearchfunc":["107.4"],"source":["107.4"],"substring":["107.4"],"zerovalue":["107.5"],"作用是":["108.1"],"构造类型":["108.1"],"并将它所有的属性设置为可选的":["108.1"],"它的返回类型表示输入类型的所有子类型":["108.1"],"hasownproperty":["108.1"],"as":["108.1"],"hasownpropertu":["108.1"],"seconds":["108.1"],"在函数中定义":["108.2"],"getunointype":["108.2"],"收窄":["108.3"],"这里使用":["108.4"],"操作符将":["108.4"],"值的类型范围收窄到":["108.4"],"dog":["108.5"],"bark":["108.5"],"layeggs":["108.6"],"fish":["108.6"],"swim":["108.6"],"pet":["108.6"],"是字符串字面量或字符串字面量类型":["108.7"],"并且":["108.7"],"是个联合类型":["108.7"],"通常没什么用处":["108.8"],"尽管可以运行":["108.8"],"name3":["108.9"],"上时":["108.10"],"现实的却是这个字面量类型":["108.10"],"alias":["108.10"],"错误的初始化":["108.11"],"表示待推断的函数参数":["108.12"],"整句的含义为":["108.12"],"如果":["108.12"],"能赋值给":["108.12"],"这才是真正让你入门typescript类型体操的文章":["108.13"],"custidcard":["110.0"],"身份证名称":["110.0"],"身份证号码":["110.0"],"showtoast":["110.0"],"微信版本过低":["110.0"],"暂时无法使用此功能":["110.0"],"请升级微信最新版本":["110.0"],"fail":["110.0"],"兼容版本":["110.0"],"读数字":["110.0"],"android":["110.0"],"微信6":["110.0"],"4及以上版本":["110.0"],"集合":["112.1"],"每个节点都有一个指针和指向它的下一个节点":["112.1"],"最后一个指针指向":["112.1"],"插入":["112.2"],"操作":["112.2"],"所以从":["112.2"],"起点":["112.2"],"中间":["112.2"],"插入或移除元素具有很高的成本":["112.2"],"链表插入":["112.2"],"throw":["112.4"],"error":["112.4"],"range":["112.4"],"和指向":["112.5"],"下一个节点的链接":["112.5"],"双线链表":["112.5","112.6"],"conmpareoriginal":["112.6"],"doublylinkedlistnode":["112.6"],"双向链表节点":["112.6"],"previous":["112.6"],"vallback":["112.6"],"callback":["112.6"],"doublylinkedlist":["112.6"],"comparatorfunction":["112.6"],"双向链表的头节点":["112.6"],"doublylinkedisnode":["112.6"],"用于比较的函数":["112.6"],"将新的节点插入到头部":["112.6"],"prepend":["112.6"],"创建新的节点作为头部节点":["112.6"],"newnode":["112.6"],"如果存在头部节点":["112.6"],"或简称语法树":["114.1"],"是源代码语法结构的一种抽象表示":["114.1"],"body":["114.2"],"variabledeclaration":["114.2"],"declarations":["114.2"],"variabledeclarator":["114.2"],"identifier":["114.2"],"语法分析":["114.3"],"构建ast":["114.3"],"抽象语法树":["114.3"],"进行词法分析的程序或者函数叫作":["114.4"],"词法分析器":["114.4"],"lexical":["114.4"],"analyzer":["114.4"],"简称lexer":["114.4"],"也叫":["114.4"],"也就是说":["115.1"],"转换后代码的每一个位置所对应的转换前的位置":["115.1"],"有了它":["115.1"],"大部份源码需要转换才能放在浏览器中运行":["115.2"],"chrome浏览器中默认是开启了soruce":["115.3"],"使用eval包裹模块代码":["115.4"],"不包含":["115.4"],"列信息":["115.4"],"也不包含":["115.4"],"loader":["115.4"],"sourcemap":["115.4"],"包含":["115.4"],"chunks":["115.5"],"sourceurl":["115.5"],"关键字":["115.5"],"特点":["115.5"],"index页面":["115.7"],"原始源代码":["115.8"],"所以":["115.9"],"比较推荐配置":["115.9"],"devtool":["115.9"],"引擎":["117.1"],"本地安装了git":["118.0"],"your":["118.1"],"github":["118.1"],"username":["118.1"],"然后再输入命令":["118.1"],"email":["118.1"],"这里说明一下":["118.1"],"尖括号里输入的是你的github账号":["118.1"],"第二个尖括号输入的是与你github绑定的电子邮箱":["118.1"],"第三步":["118.1"],"现在需要将你的电脑和github账号通过sshkey绑定":["118.1"],"image":["119.1"],"可以简单的概括为":["119.1"],"merge":["119.2"],"将dev分支合并到当前分支":["119.2"],"合并完成后":["119.2"],"g":["119.2","120.2"],"现在abcdefg属于master":["119.2"],"g是一次合并后的结果":["119.2"],"可以指定分支名":["119.3"],"分支名":["119.3"],"注意之间有空格":["119.3"],"fetch":["119.4"],"master":["119.4"],"changes":["120.2"],"pull":["120.2"],"again":["120.2"],"see":["120.2"],"note":["120.2"],"about":["120.2"],"fast":["120.2"],"forwards":["120.2"],"help":["120.2"],"push失败了":["120.2"],"说明a在我之前已经提交了":["120.2"],"我本地master分支的提交历史已经落后远端了":["120.2"],"需要先pull一下":["120.2"],"与远端同步后才能push":["120.2"],"enumerating":["120.2"],"objects":["120.2"],"counting":["120.2"],"compressing":["120.2"],"total":["120.2"],"publish":["120.3"],"local":["120.3"],"you":["120.3"],"have":["120.3"],"unmerged":["120.3"],"paths":["120.3"],"run":["120.3"],"abort":["120.3"],"mark":["120.3"],"resolution":["120.3"],"打开文件":["120.3"],"进行修改":["120.3"],"原文件":["120.3"],"fmt":["120.3"],"println":["120.3"],"修改后":["120.3"],"现在通过add添加":["120.3"],"然后commit提交":["120.3"],"一个repo通常是由一个team中的多个人共同维护":["121.0"],"如果需要增加新feature":["121.0"],"是git中用于将一个分支的提交应用到另一个分支上的命令":["121.1"],"它主要作用是将一个分支上的修改":["121.1"],"interractive":["121.2"],"即弹出交互式页面让用户编辑完成合并操作":["121.2"],"则指定了一个编辑的区间":["121.2"],"是可选的":["121.2"],"如果不指定":["121.2"],"则该区间默认终点是当前分支head所指向的commit":["121.2"],"注":["121.2"],"该区间指定的是一个前开后闭的区间":["121.2"],"针对与我们之前创建的提交":["121.2"],"具体执行以下命令":["121.2"],"但需要在不更改当前分支或提交任何更改的情况下切换到另一个分支或者进行其他操作":["122.1"],"想要推送某个分支但又不想包含当前所有的更改":["122.1"],"命令":["122.2","122.6"],"save":["122.3"],"用于查看执行stash操作的存储列表":["122.4"],"列表格式类似于下面这种格式":["122.4"],"显示做了哪些改动":["122.5"],"默认show第一个存储":["122.5"],"显示第一个存储的改动":["122.6"],"如果想显示其他存存储":["122.6"],"但不会把存储从存储列表中删除":["122.7"],"默认使用第一个存储":["122.7"],"即":["122.7"],"删除":["122.8"],"并将对应修改应用到当前的工作目录下":["122.8"],"默认为第一个":["122.8"],"存储":["122.9"],"直接执行stash是不会被存储的":["122.10"],"不保存新建文件":["122.10"],"branch":["123.1"]},{"0":["4.0","6.0","7.0","25.0","34.0","37.10","60.31","60.37","61.21","68.3","68.5","68.8","68.10","76.3","76.9","76.18","76.22","76.30","77.6","77.9","77.15","78.5","87.3","87.16","120.2","122.7","122.8"],"1":["18.2","20.0","20.2","21.2","24.1","48.3","60.22","64.2","64.42","68.1","75.1","76.16","76.18","86.13","87.7","87.16","92.1","94.0","96.8","96.19","107.3","107.4","108.2"],"2":["13.1","48.3","48.5","61.24","61.28","61.33","64.2","64.13","68.3","68.10","76.16","76.23","77.10","77.11","86.2","87.7","87.13","87.14","87.16","96.3","96.5","96.19","96.23","106.1"],"3":["4.0","14.5","37.6","51.5","61.21","61.27","69.0","76.13","76.16","76.23","77.12","77.23","79.0","87.16","89.2","93.1","96.3","96.5","96.6","96.7","96.19","96.23","103.1","121.2"],"4":["4.0","37.10","48.3","52.4","60.37","60.42","60.51","61.26","61.48","69.0","76.16","76.17","89.2","96.1","96.3","96.4","96.5","96.6","96.7","96.9","96.10","96.11","96.13","96.15","96.19","96.23","120.2"],"5":["4.0","8.0","60.51","61.25","68.4","69.0","76.15","76.16","76.17","79.0","87.13","87.14","96.1","96.4","96.6","96.7","96.9","96.10","96.11","96.12","96.13","96.17","96.20"],"6":["68.3","87.13","96.12","96.21","115.8","120.2"],"7":["1.0","15.0","107.3","110.0"],"8":["1.0","15.0","24.1","86.7"],"9":["1.0","86.7"],"10":["1.0","61.31","69.0","86.7","96.22"],"11":["1.0"],"12":["86.6"],"13":["86.6"],"14":["77.23"],"20":["114.2"],"21":["114.2"],"23":["114.2"],"25":["68.4","68.10"],"26":["87.11"],"40":["56.2"],"42":["108.1"],"50":["68.2","68.4","68.9","68.13"],"65":["76.7"],"75":["68.4"],"97":["76.9"],"100":["68.2","68.5","68.14","69.0"],"123":["77.6"],"200":["81.0"],"204":["60.4"],"2016":["37.10"],"o":["2.0","60.37"],"或":["2.0","29.4","60.3","64.35","79.0"],"nlogn":["2.0"],"具体取决于排序的时间复杂度":["2.0"],"需要注意的是":["2.0"],"在使用夹逼原则时":["2.0"],"要保证数组或列表已经有序":["2.0"],"否则可能会得到错误的结果":["2.0"],"此外":["2.0"],"对于一些特殊情况":["2.0"],"还需要考虑边界条件和指针移动的终止条件":["2.0"],"以确保算法的正确性":["2.0"],"typescript":["2.0","6.0","8.0","87.13","107.2"],"const":["2.0","9.0","77.23","78.9","87.13","92.4","96.8","96.23","107.2","108.6","108.10"],"threesum":["2.0"],"number":["2.0","6.0","9.0","11.0","55.2","76.12","77.8","78.4","87.13","93.1"],"array":["2.0","3.0","6.0","51.7","54.1","78.2","97.3","108.2"],"len":["2.0"],"length":["2.0","7.0","34.0","106.4","107.4"],"if":["3.0","7.0","34.0","49.4","60.36","64.33","75.1","81.0","87.12","98.7","108.4"],"push":["3.0","34.0","64.54"],"return":["3.0","9.0","28.3","31.2","33.0","54.1","76.3","77.15","77.22","85.2","107.4","108.2"],"from":["3.0","51.7","68.6","115.7","120.2"],"new":["3.0","48.3","48.5","51.6","60.33","60.44","75.5","78.13","78.18","93.4","99.5","99.8"],"set":["3.0","78.16","78.26"],"arr":["3.0","60.44","76.13","77.6","87.13","96.8","97.3","107.2"],"param":["5.0"],"do":["5.0","83.0","120.3"],"not":["5.0"],"anything":["5.0"],"modify":["5.0"],"in":["5.0","23.0","68.1","68.5","68.6","68.7"],"place":["5.0"],"instead":["5.0"],"选择较长的一个作为结果":["6.0"],"求解":["6.0","8.0"],"getlongesthump":["6.0"],"let":["6.0","7.0","75.2","75.5","78.13","78.18","93.4","99.8","112.4","112.6"],"maxlength":["6.0"],"sort":["7.0"],"a":["7.0","28.4","33.0","76.25","108.1"],"b":["7.0","108.1"],"numindex":["7.0"],"for":["7.0","11.0","25.1","77.15","78.2","78.24","78.27"],"k":["7.0"],"主要是通过双指针存储临时变量来求解":["8.0"],"danger":["8.0","49.4","64.28"],"注意":["8.0","25.4","78.1"],"下面第一个方法执行完成后":["8.0"],"返回的数字是正确的":["8.0"],"但数组可能不会修改成我们所需要的数组":["8.0"],"function":["9.0","22.1","28.3","31.2","60.31","60.36","78.4","78.5","94.0","97.4"],"createcounter":["9.0"],"两者相等":["10.0"],"示例2":["10.0"],"数组中不存在满足此条件的中心下标":["10.0"],"示例3":["10.0"],"str":["11.0","91.4"],"string":["11.0","48.3","78.26","93.1","96.16","108.8","110.0"],"map":["11.0","48.5","78.13","115.5","115.9"],"bower":["12.0","13.2","13.6"],"获取包括angularjs在内的各种开发库":["12.0"],"为了使用bower":["12.0"],"您可能还需要安装如下工具":["12.0"],"我使用的是英文版的webstorm":["12.1"],"目前网络上也存在有汉化包":["12.1"],"如果希望使用汉化界面的朋友可以自行搜索尝试":["12.1"],"在学习本书的过程中":["12.1"],"您可以使用webstorm的30天尝试版本":["12.1"],"这样可以直接下载完整的安装包":["12.2"],"直接在google搜索chrome的官网页面下载的是一个小型下载器":["12.2"],"在国内无法正确安装":["12.2"],"windows":["12.3","79.0"],"os":["12.3"],"x":["12.4","18.2","20.0","20.2","22.0","23.0","24.1","37.10","86.6"],"会需要您输入本机的密码":["12.4"],"sudo":["12.4"],"选择":["13.0"],"file":["13.0"],"如下图所示":["13.1"],"图2":["13.1"],"一些项目配置文件":["13.2"],"如":["13.2","32.2","95.4"],"如果不想通过命令行创建":["13.3"],"terminal":["13.4"],"currently":["13.5"],"installed":["13.5"],"components":["13.5"],"as":["13.5"],"dependencies":["13.5"],"将常用的忽略文件项添加到列表":["13.5"],"add":["13.5","86.2","86.7"],"commonly":["13.5"],"ignored":["13.5"],"files":["13.5","120.2"],"ignore":["13.5"],"list":["13.5","29.5"],"将项目设置为私有":["13.5"],"防止其被误发布到网络上":["13.5"],"would":["13.5"],"you":["13.5"],"like":["13.5"],"mark":["13.5"],"将组件库下载到特定的目录":["13.6"],"在项目根目录创建":["13.6"],"的配置已经全部结束":["13.7"],"本章开始":["14.0"],"doctype":["14.2","18.1","19.0","24.1","31.0"],"lang":["14.2","14.4","19.0","24.1","31.0"],"zh":["14.2","14.4","19.0","24.1","31.0"],"head":["14.2","14.4","31.0","119.4","121.2"],"如果在运行环境中":["14.3"],"您应该将angular":["14.3"],"js替换为angular":["14.3"],"meta":["14.4","24.1","31.0"],"我在windows电脑上遇到了相同的问题":["14.5"],"请将webstorm使用管理员权限打开":["14.5"],"运行效果如下图所示":["14.5"],"重复语句":["15.0","37.3","38.0"],"repeat":["15.0","23.0","37.3","38.0"],"过滤器":["15.0","37.3"],"filter":["15.0"],"样式选择器":["15.0"],"class":["15.0","44.3"],"而是直接显示hello":["16.0"],"我们可以尝试下将表达式中的内容替换为如下内容":["16.0"],"并观察运行的结果":["16.0"],"假设":["17.1"],"scope中有template":["17.1"],"url":["17.1","24.5","60.3","60.22","64.18"],"http":["17.1","60.22","100.0"],"这个对象":["17.1"],"和":["17.2","48.0","52.2","60.13","64.36","64.54","75.3","98.2"],"设置为":["17.3"],"text":["17.3","30.0","30.5","61.17","64.28"],"然后给他配置一个":["17.3"],"可以将网页自动初始化为一个angularjs应用":["18.0"],"这样你才能在网页中使用各种angularjs提供的功能":["18.0"],"比如前一节介绍的基本表达式功能":["18.0"],"并将":["18.1"],"ng":["18.1","19.5","20.1","23.0","23.3","23.4","24.4","30.5","31.0"],"配置进去即可":["18.1"],"app":["18.3","27.1"],"hello":["19.0","49.7","76.6","76.31","77.14","78.29","108.1"],"同时":["19.0","23.2"],"我们在":["19.0"],"index":["19.0","76.30","78.4","106.4"],"html":["19.0","22.0","22.1","23.3","23.4","24.2","24.4","25.0","27.0","30.3","30.6","32.0","61.41","64.6"],"中进行一些代码修改":["19.0"],"最终代码如下":["19.0"],"声明ng":["19.2"],"controller的方法":["19.2"],"firstctrl":["19.2","19.5","23.4","24.4","28.0","30.7","31.1"],"这个ng":["19.2"],"中的数据和html代码绑定起来":["19.3"],"传入":["19.3"],"的数据":["19.3"],"可以直接在html代码中调用":["19.3"],"在上面的例子中":["19.3"],"我们对":["19.3"],"data":["19.4","29.4","41.2","48.3","120.2"],"message":["19.4","30.7","64.47"],"controller":["19.5","23.4","24.4","28.0","30.7","31.1"],"学习angularjs":["20.0","20.2","24.1"],"body":["20.0","20.2","31.1"],"将firstctrl绑定到这个div标签上":["20.0"],"这个标签中的内容将可以使用firstctrl中的数据":["20.0"],"div":["20.0","20.1","21.0","23.3","23.4","24.2","24.4","24.5","25.0","30.3","30.6","31.1","32.0","49.5","64.27","64.44"],"h1":["20.1","32.4"],"world":["20.1","76.3","76.4","76.6","77.14"],"如果data":["21.0"],"则显示此段文字":["21.0"],"p":["21.0","30.1","30.5","30.6","32.4","64.42","121.2"],"如果使用":["21.1"],"来控制元素是否显示":["21.1"],"则在不显示的情况下":["21.1"],"我们将这些数据显示在html的一个表格中":["22.0"],"table":["22.0","22.1"],"tr":["22.0","22.1","23.0"],"alert":["22.1"],"点击了第":["22.1"],"行的按钮":["22.1"],"将刚才的表格也进行一些改造":["22.1"],"jerry":["23.0","23.3"],"orderby":["23.0"],"对显示的数据列表按照name进行排序":["23.0"],"结果为显示顺序harry":["23.0"],"json":["23.1"],"对list的内容进行排序后输出成json文本":["23.1"],"join":["23.2","108.2"],"我们利用最早的hello":["23.2"],"world的例子":["23.2"],"将我们定义的":["23.2"],"这个过滤器应用上去":["23.2"],"tom":["23.3"],"对于最后一项":["23.4"],"我们可以采取如下输入方法来应用":["23.4"],"style":["24.0","24.3","30.0","61.18"],"全部代码如下":["24.1"],"charset":["24.1"],"utf":["24.1"],"title":["24.1"],"此处引入style":["24.1"],"css样式文件":["24.1"],"orange":["24.3"],"3em":["24.4"],"修改html代码如下":["24.4"],"input":["24.4","76.30"],"type":["24.4","30.0","44.3","61.30","64.38","69.0","120.2"],"image":["24.5","61.14","61.32"],"img":["24.5"],"products":["24.5"],"product":["24.5"],"也可以传入一个函数":["24.5"],"主要用于解决ie11中背景图片不显示的问题":["24.5"],"getbackgroundstyle":["24.5"],"蓝色":["25.0","25.2","25.3"],"blue":["25.0","25.3","106.4"],"黄色":["25.0"],"yellow":["25.0"],"保存选中的状态":["25.0"],"默认颜色设置为黑色":["25.0"],"colorchosen":["25.0"],"color":["25.1","64.29","68.5","68.11","68.12","106.4"],"name":["25.1","30.1","30.4","30.5","48.4","69.0","75.2","97.4","110.0"],"亮色":["25.2"],"红色":["25.2","25.3"],"red":["25.2","25.3","49.5","106.4"],"true":["25.3","33.0","48.5","60.37","76.5","77.6","78.7","108.7"],"以下代码中":["25.4"],"for后面有一个":["25.4"],"空格":["25.4","75.2"],"如果没有":["25.4","61.41"],"则无法成功运行":["25.4"],"这是因为传入":["25.4"],"的其实是一串文本":["25.4"],"我建议您在阅读后续内容之前":["26.0"],"对本章内容进行一次回顾":["26.0"],"可以称之为":["27.0"],"自定义html标签":["27.0"],"举个例子":["27.0"],"angularjs可以让我们进行如下的html编码":["27.0"],"因此":["27.2","37.5","37.8","112.2","112.6"],"可能像我一样对前端经验不太足的读者们":["27.2"],"scope":["28.0"],"harry":["28.0","30.4","37.10"],"男":["28.0","30.3","30.4"],"我们调用了":["28.1"],"函数来告诉angularjs加入一个新的directive":["28.1"],"调用这个函数":["28.1"],"我们需要传入2个参数":["28.1"],"我们这里看看替换后实际的html代码如何":["28.2"],"图5":["28.2"],"e":["28.3","60.37","76.15","78.29"],"element":["28.4","96.16"],"people":["28.4","30.4"],"使用了它":["29.0"],"但是":["29.0","32.1"],"每个单词的首字母大写":["29.1"],"peoplelistarray":["29.2"],"而javascript对大小写敏感":["29.3"],"头":["29.4"],"冒号":["29.5"],"而如果我们在ng":["29.6"],"app和ng":["29.6"],"controller前加上data":["29.6"],"前缀":["29.6"],"link":["30.0","64.12"],"css":["30.0","52.2","68.14","71.0"],"rel":["30.0"],"stylesheet":["30.0"],"href":["30.0","91.2"],"template":["30.1","32.4","50.5","64.27"],"姓名":["30.1","110.0"],"性别":["30.1","30.5","30.6"],"sex":["30.1","30.3","30.4"],"是告诉这个directive它需要自己存储信息":["30.2"],"类似于建立一个基于这个directive的":["30.2"],"model":["30.5","64.36"],"button":["30.7","49.7","64.31"],"提交":["30.7"],"click":["30.7","49.1","64.31"],"代码片段开始":["31.1"],"代码片段结束":["31.1"],"form":["31.1","32.0","60.44","96.21"],"directive":["31.1"],"的命令":["32.0"],"未加上":["32.0"],"转变为json格式输出":["32.0"],"是因为":["32.0"],"本身涉及循环引用":["32.0"],"因此无法转化为json":["32.0"],"对应的html代码":["32.0"],"bind":["32.2","79.0"],"addclass":["32.2","32.5"],"removeclass":["32.2"],"等来直接对元素进行操作":["32.2"],"实现我们期望的功能":["32.2"],"jquery":["32.3"],"save":["32.3"],"在":["32.3","103.1"],"标题":["32.4"],"这里是段落文字":["32.4"],"mouseenter":["32.5"],"strike":["32.5"],"restrict":["33.0"],"通过transclude标签将directive变为一个容器":["33.0"],"注意template中的ng":["33.0"],"供其他directive调用的注册函数":["34.0"],"this":["34.0","60.18","60.36","64.46","74.1"],"注意templateurl的命名":["34.0"],"templateurl":["34.0"],"gqtablist":["34.0"],"获取gqtabcontainer这个directive":["34.0"],"这样在利用angularjs构建网站时":["35.0"],"x相关的文档来自于":["36.0"],"希望能对大家学习angularjs有一定帮助":["37.1"],"txt":["37.1"],"如果您在阅读过程中":["37.1"],"angular":["37.2"],"show":["37.3","38.0"],"hide":["37.3","38.0"],"我向您推荐w3school网站":["37.4"],"您可以在这个网站上快速的了解相关的知识":["37.4"],"另外":["37.4","50.0"],"在javascript方面":["37.4"],"如果您有一定的php经验":["37.4"],"我向您推荐这本书":["37.4"],"我形成了一套app的构建思路":["37.5"],"可以对api的访问限制和安全性进行更完善的设计实现":["37.6"],"前端网站托管在阿里云的oss上":["37.6"],"界":["37.7"],"hu":["37.7"],"一点也不":["37.8"],"学习dom入门给我的感觉与之一模一样":["37.8"],"因为当时并不知道还有javascript框架这种东西存在":["37.8"],"我去网上搜索教程时也是一头雾水":["37.8"],"我想了一个笨办法":["37.8"],"直接在一个国外的网站上购买了一套后台管理系统界面的模板":["37.8"],"浏览了下源代码之后":["37.8"],"我发现源码提供了两套版本":["37.8"],"一套完全基于jquery":["37.8"],"bootstrap的版本":["37.8"],"和一套基于angularjs的版本":["37.8"],"两个版本的界面布局一模一样":["37.8"],"可用":["37.9"],"的网站":["37.9"],"为了使用更地道的方式制作这个新版网站":["37.9"],"而选择继续使用angularjs":["37.10"],"版权声明":["37.10"],"license":["37.10"],"署名":["37.10"],"非商业性使用":["37.10"],"国际":["37.10"],"版权所有":["37.10"],"c":["37.10","78.5"],"andtoo":["37.10"],"api":["41.1"],"mixin":["41.1"],"provide":["41.1"],"数据驱动视图":["41.2"],"ui":["41.2"],"渲染界面不应该直接操作dom":["41.2"],"componentwillreceiveprops":["41.3"],"shouldcomponentupdate":["41.3"],"componentwillupdate":["41.3"],"hooks更加简洁":["41.4"],"reactdom":["41.5"],"finddomnode":["41.6"],"方法的警告":["41.6"],"可以创建一个文件":["41.7"],"js将数据保存在data中":["41.7"],"babel之类的变异工具转换为js文件执行":["41.8"],"js可以被打包工具直接编译不需要额外的转换":["41.8"],"react":["41.9"],"boolean":["41.10","79.0"],"false":["41.10","64.35","108.7","114.2"],"errorhandler":["41.10"],"console":["41.10","76.4","76.8","76.13","76.18","76.31","77.3","77.11","77.14","87.9","87.10","96.1","96.13","96.15","96.17","96.20","96.21","99.3","99.6","99.8","108.11","115.7"],"此时就会有个依据去判断是原生dom标签还是react组件":["41.11"],"版本之后":["41.12"],"官方推出了fragment的概念":["41.12"],"当需要在react组建中访问":["41.13"],"修改或验证表单元素的值时":["41.13"],"响应快":["42.1"],"用户体验好":["42.1"],"会大量占用服务端cpu资源":["42.2"],"onclick":["43.1"],"current":["43.1"],"diff算法避免了没有必要的dom操作":["44.0"],"虚拟dom是一个对象":["44.1"],"而真实的dom是dom结构":["44.1"],"在虚拟dom中":["44.2"],"virtualdom":["44.3"],"props":["44.3","63.11"],"children":["44.3"],"所以性能会比真实的dom操作提升不少":["44.5"],"info":["44.5","78.1","96.14","108.9"],"虚拟dom的优势其实是在于它的diff算法和批量处理策略":["44.5"],"从而磨平各个浏览器事件兼容性问题":["44.6"],"redux的":["45.0"],"connect":["45.0"],"函数":["45.0","60.37","60.45","94.0","107.3"],"它将redux":["45.0"],"store":["45.0","64.57","98.4"],"用于在函数式组件中执行副作用的操作":["45.1"],"比如订阅事件":["45.1"],"数据获取":["45.1"],"dom操作等等":["45.1"],"它接收一个函数作为参数":["45.1"],"这个函数就是副作用代码":["45.1"],"还可以接收第二个参数":["45.1"],"用于指定副作用操作的依赖项":["45.1"],"用于引用":["45.2"],"dom":["45.2","50.5"],"元素或者保存值":["45.2"],"usestate的值会被重新渲染":["45.2"],"useref的值则不会":["45.2"],"名称匹配的组件":["47.0"],"会被缓存":["47.0"],"child1":["47.0"],"child2":["47.0"],"is":["47.0"],"componentname":["47.0"],"正则":["47.0"],"在没有原生":["48.0"],"promise":["48.0"],"mutationobserver":["48.0"],"的情况下才会改用":["48.0"],"执行栈":["48.1"],"执行栈使用到的是数据结构中的栈结构":["48.1"],"它是一个存储函数调用的栈结构":["48.1"],"遵循":["48.1"],"先进后出":["48.1"],"的原则":["48.1"],"它主要负责跟踪所有要执行的代码":["48.1"],"每当一个函数执行完成时":["48.1"],"就会从堆栈中探出":["48.1"],"pop":["48.1"],"这个执行完成的函数":["48.1"],"因为每次派发更新都会引起渲染":["48.2"],"所以把所有watcher都放到nexttick里调用":["48.2"],"flushschedulerqueue":["48.2"],"这里参数":["48.2"],"方法会被放到事件循环":["48.2"],"phantomjs":["48.3"],"ios7":["48.3"],"android":["48.3"],"counter":["48.3"],"observer":["48.3","51.4"],"textnode":["48.3"],"document":["48.3","100.0"],"createtextnode":["48.3"],"observe":["48.3"],"characterdata":["48.3"],"timerfunc":["48.3"],"test":["48.4","76.29"],"避免在事件循环周期内多次创建新的微任务":["48.5"],"把flushjobs推入到任务队列等待执行":["48.5"],"这个方法负责处理队列任务":["48.5"],"主要逻辑如下":["48.5"],"先处理前置任务队列":["48.5"],"根据":["48.5"],"排队队列":["48.5"],"遍历执行队列任务":["48.5"],"执行完毕后清空并重置队列":["48.5"],"执行后置队列任务":["48.5"],"如果还有就递归继续执行":["48.5"],"seen":["48.5"],"countmap":["48.5"],"正在执行":["48.5"],"dev":["48.5"],"开发环境下":["48.5"],"flushpreflushcbs":["48.5"],"执行前置任务队列":["48.5"],"排序队列":["48.5"],"以确保":["48.5"],"从父到子":["48.5"],"因为父级总是在子级前面先创建":["48.5"],"如果符组件更新期间卸载了组件":["48.5"],"vue3":["48.6","50.5"],"dosomething":["49.1","83.0"],"这里的参数是要监听的事件名称":["49.1"],"有一个相应的缩写":["49.1"],"即":["49.1","122.8"],"动态参数":["49.1"],"同样在指令参数上也可以使用一个javascript的表达式":["49.1"],"需要包含在一个方括号内":["49.1"],"attributename":["49.1"],"当":["49.3","49.4"],"元素被触发":["49.3"],"元素及其所包含的指令":["49.3"],"组件都会销毁或重构":["49.3"],"如果初始条件是假":["49.3"],"那么其内部的内容根本不会被渲染":["49.3"],"id":["49.4","64.22","84.0","118.1"],"与":["49.4","63.24"],"优先级":["49.4"],"同时使用时":["49.4"],"内联字符串拼接":["49.5"],"path":["49.5","64.23","64.35","64.54"],"to":["49.5","78.5","115.4"],"images":["49.5"],"filename":["49.5","81.0"],"isred":["49.5"],"classa":["49.5"],"classb":["49.5"],"trim":["49.6"],"移除输入内容两端空格":["49.6"],"vue":["49.6","50.5","64.26","64.30"],"方法处理函数":["49.7"],"dothis":["49.7"],"动态事件":["49.7"],"内联声明":["49.7"],"dothat":["49.7"],"的基础上做了一些改变":["50.0"],"主要是针对最后两个生命周期":["50.0"],"beforeunmount":["50.0","50.4"],"unmounted":["50.0","50.4"],"组件数据发生变化":["50.1"],"更新之前":["50.1"],"update":["50.1"],"组件数据更新之后":["50.1"],"获取到的是挂载":["50.2"],"的":["50.2","64.56"],"在此阶段可获取到":["50.2"],"此阶段":["50.2"],"虽已完成dom初始化":["50.2"],"但并未挂载在":["50.2"],"是比":["50.3"],"要更早的":["50.3"],"destroyed":["50.4"],"这些钩子函数的执行顺序与vue2的版本相同":["50.4"],"但有所不同的是":["50.4"],"在vue3中":["50.4"],"暴露公共属性":["50.5"],"expose":["50.5"],"onbeforemount和onmounted":["50.5"],"onbeforemount":["50.5"],"都是":["50.5"],"中的生命周期钩子":["50.5"],"它们分别在组件":["50.5"],"挂载":["50.5"],"之前和之后运行":["50.5"],"钩子函数会在组件挂载到dom前运行":["50.5"],"可以用来在组件挂载前执行一些初始化操作":["50.5"],"钩子函数会在组件挂载到":["50.5"],"后运行":["50.5"],"通常用于获取数据和初始化页面状态等操作":["50.5"],"代码更新":["51.1"],"的状态被更新":["51.2"],"如果此时可以自动更新":["51.2"],"应用的展示效果":["51.3"],"各类ui组件":["51.3"],"compile":["51.5","51.6"],"同时定义一个更新函数":["51.5"],"watcher":["51.5"],"将来对应数据变化":["51.5"],"proxy":["51.6","78.7"],"执行编译":["51.6"],"el":["51.6"],"遍历子元素":["51.7"],"foreach":["51.7","85.1","85.2"],"node":["51.7","52.4","112.3"],"判断是否为节点":["51.7"],"iselement":["51.7"],"updatefn":["51.8"],"创建实例时":["51.8"],"把当前实例指定到":["51.8"],"target静态属性上":["51.8"],"target":["51.8"],"读一下key":["51.8"],"触发get":["51.8"],"置空":["51.8"],"null":["51.8","112.1","114.2"],"未来执行dom更新函数":["51.8"],"都通过单个页面的加载而检索":["52.2"],"或者根据需要":["52.2"],"通常是为响应用户操作":["52.2"],"contentful":["52.3"],"首次内容绘制":["52.3"],"顾名思义":["52.3"],"它代表浏览器第一次向屏幕绘制":["52.3"],"内容":["52.3"],"只有首次绘制文本":["52.3"],"图片":["52.3","98.0"],"包含背景图":["52.3"],"非白色的":["52.3"],"canvas":["52.3"],"ssr":["52.4"],"服务端渲染也可以解决首屏加载慢这个问题":["52.4"],"因为服务端会把所有数据全部渲染完成在返回给客户端":["52.4"],"请求":["52.4","63.18"],"解析":["52.4"],"返回给客户端":["52.4"],"带请求数据":["52.4"],"但是需要解决":["52.4"],"node层的高并发问题":["52.4"],"路由懒加载":["52.4"],"可以通过":["52.4","64.20"],"plugin":["52.4"],"syntax":["52.4"],"dynamic":["52.4"],"fs":["54.3"],"exports相当于是对":["54.3"],"module":["54.3","83.0"],"exports的引用":["54.3"],"两者等价":["54.3"],"️":["55.1"],"v":["55.2"],"报错":["55.2","77.10"],"known2":["55.2"],"类型也不能够直接调用上面的方法和属性":["55.2"],"foo":["55.2"],"此时为":["55.3"],"else":["55.3","108.2"],"更新了面试相关的":["56.1"],"更新了面试相关的javascript相关":["56.3"],"更新了":["56.4"],"浏览器":["59.0"],"为什么javascript是弱类型语言":["60.1"],"弱类型语言实现相对于强类型语言来说的":["60.1"],"在强类型语言中":["60.1"],"get":["60.3","86.6"],"post":["60.3"],"以及请求的":["60.3"],"然后使用":["60.3"],"send":["60.3","81.0"],"方法发送请求":["60.3"],"处理响应":["60.3"],"在回调函数中":["60.3"],"readystate":["60.3","60.36"],"属性判断请求的状态":["60.3"],"而且这个请求最终会不会处理还不确定":["60.4"],"表示服务器已经成功处理了请求":["60.4"],"但没有返回任何实体内容":["60.4"],"可能会返回新的头部元信息":["60.4"],"闭包就是函数的局部变量集合":["60.6"],"只是这些局部变量在函数返回后会继续存在":["60.6"],"关键字外":["60.7"],"我们在实际情况下经常遇到这样一种情况":["60.7"],"即有的函数只需要执行一次":["60.7"],"最终可能导致程序崩溃":["60.8"],"产生场景":["60.8"],"对象或变量未被正确销毁":["60.8"],"当一个对象或变量不再被使用时":["60.8"],"应该及时将它们从内存中删除":["60.8"],"如果没有正确销毁这些对象或变量":["60.8"],"它们所占用的内存就会一直存在":["60.8"],"造成内存泄漏":["60.8"],"性能也会变差":["60.10"],"但利用事件委托":["60.10"],"就只对它的父级进行操作":["60.10"],"减少了调用的对象":["60.10"],"节省了内存空间":["60.10"],"但这个有兼容性":["60.11"],"从外向里":["60.12"],"这个阶段不会响应任何时间":["60.12"],"localstorage":["60.13"],"sessionstorage":["60.13"],"是永久性的":["60.13"],"除非通过代码或者浏览器设置进行删除":["60.13"],"而":["60.13","78.2","119.1"],"ming":["60.16"],"类型的":["60.17"],"但是每个函数都具有一个":["60.17"],"prototype":["60.17","60.18","77.8","78.4","97.3"],"属性":["60.17","79.0","108.1"],"内部":["60.18"],"创建一个新对象":["60.18"],"使新对象的":["60.18"],"proto":["60.18","99.8"],"指向原函数的":["60.18"],"改变":["60.18"],"指向":["60.18","63.2"],"指向新的obj":["60.18"],"并执行该函数":["60.18"],"回调地狱":["60.20"],"异步操作方法前加一个":["60.21"],"关键字":["60.21"],"的长度":["60.22"],"为了明确这个概念":["60.22"],"我们必须再次强调以下几点":["60.22"],"是一个查找的过程":["60.23"],"可以不用每次都与数据库连接":["60.23"],"来实现的":["60.24"],"是":["60.25","63.5","78.6","110.0"],"dom二级事件新增的指定事件处理程序的操作":["60.25"],"这个方法接收三个参数":["60.25"],"区别":["60.26"],"offsetheight区别":["60.27"],"是鼠标的横纵坐标":["60.28"],"我们用":["60.28"],"offsetx":["60.28"],"collection":["60.30"],"javascript的姐时期可以检测到何时程序不在使用一个对象了":["60.30"],"当它确定了一个对象是无用的时候":["60.30"],"它就知道不再需要这个对象":["60.30"],"可以把它所占用的内存释放掉了":["60.30"],"的时候":["60.31"],"就会把所占的内存给回收进来":["60.31"],"这样垃圾收集器再次运行的时候":["60.31"],"就会释放引用次数为":["60.31"],"的这些值":["60.31"],"引用计数法存在":["60.31"],"内存泄漏":["60.31"],"javascript":["60.31","75.5","76.10","76.22","76.27","78.13","78.18","88.1","88.2","96.8"],"problem":["60.31"],"缺点":["60.32"],"如果id不再user对象中":["60.32"],"则不能监听id的变化":["60.32"],"在es6中":["60.32"],"考虑原型链":["60.33"],"为什么考虑原型链":["60.33"],"因为在":["60.33"],"一个":["60.33"],"过程中生成新函数的时候":["60.33"],"必须条件就是要继承原函数原型":["60.33"],"201107240502201179":["60.35"],"jpg":["60.35"],"onload":["60.35","81.0"],"onreadystatechange":["60.36"],"complete":["60.36"],"newstr":["60.37"],"h":["60.37","77.7","78.29","86.8","119.2"],"l":["60.37"],"bol":["60.37"],"newbol":["60.37"],"valueof":["60.37","86.6"],"所有对象都有":["60.37"],"方法":["60.37","64.35","76.12","78.1","78.7"],"j":["60.38"],"所以会有跨域问题出现":["60.40"],"跨域问题来源于":["60.40"],"域名":["60.41"],"网址后面加斜杠":["60.42"],"www":["60.42"],"campr":["60.42"],"com":["60.42"],"指向的是window":["60.43"],"不能拷贝":["60.45"],"undefined":["60.45","97.4"],"map循环方法不会对空数组进行检测":["60.46"],"object":["60.47","92.0","93.3","99.7","108.1","110.0"],"create":["60.47","99.7"],"我去喊你一起吃饭":["60.48"],"你很忙":["60.48"],"我就坐着等你忙完再一起去吃饭":["60.48"],"https是由":["60.50"],"ssl":["60.50"],"协议构建的可进行加密传输":["60.50"],"托管资源":["60.51"],"使用缓存":["60.51"],"按照一定的条件活着需求":["60.52"],"gif":["61.1"],"文件大小相对较小":["61.2"],"支持高度压缩":["61.2"],"支持透明度":["61.3"],"无损压缩":["61.3"],"透明度":["61.4"],"适合存储简单的动画图像":["61.4"],"内容宽高":["61.5"],"内填充":["61.5"],"边界边框":["61.5"],"content":["61.7","70.0"],"视频区域的高度":["61.9"],"autoplay":["61.9"],"是否自动播放":["61.9"],"视频类型":["61.10"],"支持ogg":["61.10"],"mp3":["61.10"],"表单属性":["61.11"],"nav":["61.12"],"导航栏":["61.12"],"aside":["61.12"],"侧边栏":["61.12"],"article":["61.12"],"加载页面一块独立内容":["61.12"],"设施边框图像":["61.14"],"source":["61.14","76.23","115.5","115.9"],"规定":["61.15"],"position":["61.15","68.9","68.14"],"允许长的内容可以自动换行":["61.17"],"轴":["61.18"],"指定嵌套元素怎么样在三位空间中呈现":["61.18"],"2d":["61.18"],"duration":["61.19"],"动画需要花费的时间":["61.20"],"timing":["61.20"],"之后":["61.21"],"超出部分会被隐藏":["61.21"],"在浮动元素后面加一个空标签并设置属性":["61.21"],"clear":["61.21"],"both":["61.21"],"height":["61.21","68.14"],"fixed":["61.22"],"固定定位":["61.22"],"子父元素款素固定":["61.24"],"top":["61.25","61.26","68.3","68.8","68.9"],"创建一个隐藏节点":["61.25"],"子元素相对定位":["61.26"],"子元素":["61.26"],"left":["61.26","68.3","68.8","68.9"],"值为":["61.26"],"中间栏放最后":["61.27"],"绝对定位法":["61.27"],"左右两栏采用绝对定位":["61.27"],"none":["61.28","95.3"],"n":["61.30","83.0","112.2"],"查找第几个子元素":["61.30"],"of":["61.30","77.15","78.24","78.27","87.11"],"查找同已类型第几个":["61.30"],"only":["61.30"],"class选择器":["61.31"],"伪类选择器":["61.31"],"内联元素":["61.32"],"字母间距":["61.32"],"letter":["61.32"],"spacing":["61.32"],"段落间距":["61.32"],"word":["61.32"],"使用图片预加载技术":["61.33"],"sup":["61.34"],"u":["61.34","107.3","108.1"],"textarea":["61.34"],"会独占一行":["61.34"],"自身边距到自身内容之间的距离":["61.35"],"当需要在":["61.35"],"wrap":["61.36"],"设置弹性盒子的子元素超出父容器时是否换行":["61.36"],"flow":["61.36"],"font":["61.38"],"size":["61.38"],"中所有的字体都是相对于父元素的大小决定的":["61.38"],"相对于":["61.38"],"就是根据不同的媒体类型设置不同的css样式":["61.39"],"标记语言":["61.40"],"的版本标准来解析文档":["61.41"],"dragenter":["61.42"],"事件主体是目标元素":["61.42"],"在被拖放元素进入某元素时触发":["61.42"],"交互阶段":["61.43"],"页面加载完成":["61.43"],"同样的":["61.44"],"css如果不是在页面构建前加载":["61.44"],"则可以加上取消阻止显示的标志":["61.44"],"降低关键资源大小":["61.44"],"或者":["61.45","95.5","108.3","121.2"],"cssom":["61.45"],"来触发的":["61.45"],"网络层":["61.48"],"链接层和实体层":["61.48"],"物理层":["61.48"],"每层都有相关的协议和功能":["61.48"],"并且需要下一层的支持":["61.48"],"他们的功能以及依赖关系":["61.48"],"如下图":["61.48"],"网络传输数据包装":["61.48"],"应用层http协议的通信请求":["61.48"],"规定应用程序的数据格式":["61.48"],"基于传输层tcp协议的tcp连接":["61.48"],"传输层的tcp连接":["61.48"],"负责传输数据包":["61.48"],"基于网络层ip协议分配ip地址连通网络和链接层mac地址":["61.48"],"网卡地址":["61.48"],"确认接收主机":["61.48"],"网络层的数据发送":["61.48"],"基于连接层将实体层发出的电信号分组并且解读":["61.48"],"通过arp协议利用ip地址获取到mac地址":["61.48"],"实体层":["61.48"],"就是电脑间链接的介质":["61.48"],"比如光纤":["61.48"],"电缆等等":["61.48"],"maxmum":["61.49"],"user":["61.49"],"执行":["61.50"],"然后触发":["61.50"],"会重叠":["61.51"],"重叠结果为":["61.51"],"axios":["63.1"],"层":["63.5"],"mvvm":["63.5"],"模式":["63.5"],"虚拟":["63.5"],"不一样":["63.5"],"会跟踪每一个组件的依赖关系":["63.5"],"不需要重新渲染整个":["63.5"],"组件树":["63.5"],"算法":["63.6"],"的区别":["63.34"],"模型的框架":["64.1"],"当模型数据发生变化时":["64.2"],"视图将自动更新":["64.2"],"双向数据绑定":["64.2"],"是指同时将视图中的元素绑定到模型数据":["64.2"],"并将模型数据绑定到视图中的元素":["64.2"],"当视图或模型中的数据发生变化时":["64.2"],"另一部分将自动更新":["64.2"],"mvvm优点":["64.2"],"关注点分离":["64.2"],"mvvm模式通过明确的分层将数据":["64.2"],"用户界面和业务逻辑分离开来":["64.2"],"这有助于提高代码可维护性和可测试性":["64.2"],"使开发人员更容易地修改":["64.2"],"扩展和维护不同的部分":["64.2"],"代码重用":["64.2"],"可以根据不同的视图需求进行调整":["64.2"],"都会刷新为最新的值":["64.3"],"数据从父组件传递给子组件":["64.3"],"captrue":["64.4"],"添加事件侦听器时使用事件捕获模式":["64.4"],"就是谁有该事件修饰符":["64.4"],"就先触发谁":["64.4"],"self":["64.4"],"只会触发自己范围内的事件":["64.4"],"不包括子元素":["64.4"],"once":["64.4"],"叫指令":["64.7"],"可以渲染输出":["64.8"],"可以使用键值对形式":["64.9"],"会对节点进行检查":["64.10"],"如果没有key值":["64.10"],"那么vue检查到这里有":["64.10"],"vue会在它依赖的任何值导致该计算属性改变时更新":["64.11"],"进行跳转的叫声明式":["64.12"],"包括不支持":["64.15"],"html5":["64.15"],"的重新渲染":["64.16"],"hash":["64.16"],"模式是优先监听":["64.16"],"popstate":["64.16"],"事件":["64.16"],"不行就降级为":["64.16"],"hashchange":["64.16"],"history":["64.17"],"模式在内部传递的实际url之前使用了一个哈希字符":["64.18"],"由于这部分":["64.18"],"从未被发送到服务器":["64.18"],"routes":["64.19"],"history模式的url中没有":["64.19"],"号":["64.19"],"采用传统的路由分发模式":["64.19"],"即用户输入":["64.19"],"将记录添加到栈中":["64.20"],"query方式与区别":["64.21"],"component":["64.22"],"useprofile":["64.22"],"在页面中调用":["64.22"],"search":["64.23","100.0","107.4"],"使用路由参数":["64.24"],"query":["64.24"],"非标识性信息":["64.24"],"active":["64.28"],"isactive":["64.28"],"haserror":["64.28"],"activecolor":["64.29"],"fontsize":["64.29"],"可以实现表单输入和数据的双向绑定":["64.30"],"beforeenter":["64.34"],"可以控制路由导航的行为":["64.35"],"调用":["64.35"],"表示继续导航":["64.35"],"中止当前的导航":["64.35"],"子组件":["64.37"],"props接收父组件传递过来的数据":["64.37"],"是一个对象":["64.37","93.1"],"但是不要直接去找操作修改props的值":["64.37"],"type属性定义接收的数据类型":["64.37"],"defineprops":["64.38"],"接收父组件传递的值":["64.38"],"属性定义接受的数据类型":["64.38"],"default":["64.38"],"属性设置默认值":["64.38"],"父组件接收":["64.40"],"引入组件":["64.40"],"注册组件":["64.40"],"定义事件":["64.40","64.41"],"接收并使用传递的值":["64.40","64.41"],"父组件中使用自定义事件接收":["64.41"],"自定义事件名称必须与子组件传递的一致":["64.41"],"即等号前面名称":["64.41"],"父组件":["64.43"],"monkey":["64.44","64.45"],"child":["64.45","99.4"],"等同于":["64.45","76.20"],"and":["64.46","79.0"],"i":["64.46","119.2"],"am":["64.46"],"years":["64.46","86.7"],"old":["64.46"],"year":["64.46","86.6"],"bigturnipprops":["64.47"],"用于侦听一个或者多个响应式数据源":["64.48"],"value":["64.49","75.2","78.31"],"oldvalue":["64.49","64.51"],"oncleanup":["64.49"],"cleanupfn":["64.49"],"void":["64.49"],"以及一个用于注册副作用清理的回调函数":["64.50"],"该回调函数会在副作用下一次重新执行前调用":["64.50"],"可以用来清除无效的副作用":["64.50"],"例如等待中的异步请求":["64.50"],"当侦听多个来源时":["64.50"],"如果回调函数":["64.51"],"由于深层级的变更而被触发":["64.51"],"那么新值和旧值将会是同一个对象":["64.51"],"newvalue":["64.51"],"适用于需要在数据变化时执行异步或复杂操作的场景":["64.52"],"是否调用缓存":["64.52"],"函数所依赖的属性不变的时候会调用缓存":["64.52"],"怎么解决白屏问题":["64.53"],"路由器":["64.54"],"router是":["64.54"],"router的实例":["64.54"],"包含了整个路由器的配置信息":["64.54"],"可以理解为全局的路由控制器":["64.54"],"它提供了一些方法和属性":["64.54"],"比如":["64.54","115.4"],"replace":["64.54","91.4"],"go":["64.54"],"home":["64.55"],"views":["64.55"],"about":["64.55"],"等":["64.56"],"技术":["64.56"],"使得生成的代码更加紧凑和高效":["64.56"],"tree":["64.56"],"shanking的支持":["64.56"],"vue3在设计上更加友好用于":["64.56"],"shanking":["64.56"],"使得在应用中使用vue3时能够更好地利用打包模块工具":["64.56"],"如webpack":["64.56"],"对应这个数据的组件也会发生改变":["64.57"],"相当于":["64.57"],"的计算属性":["64.57"],"主要是对":["64.57"],"textanimation3d":["66.0"],"实际效果":["67.0"],"stretchdelay":["68.1"],"2s":["68.1","68.10"],"infinite":["68.1","68.3","68.10"],"ease":["68.1","68.3","68.5","68.7"],"out":["68.1","68.5","68.6","68.7"],"delay":["68.1","68.14"],"transform":["68.2","68.4","68.8","68.9","68.10"],"perspective":["68.2"],"120px":["68.2"],"rotatey":["68.2"],"180deg":["68.2","68.4"],"absolute":["68.3","68.9","68.13"],"webkit":["68.3","68.9","68.12","68.13"],"animation":["68.3"],"bounce":["68.3","68.5"],"0s":["68.3"],"translatex":["68.4"],"42px":["68.4"],"rotate":["68.4","68.9"],"90deg":["68.4","68.8"],"scale":["68.4","68.10"],"translatey":["68.4"],"background":["68.5","68.11","68.12","70.0"],"465efb":["68.5","68.11","68.12"],"border":["68.5","68.11","68.12","68.13"],"radius":["68.5","68.11","68.12","68.13"],"prevent":["68.6"],"first":["68.6"],"frame":["68.6"],"flickering":["68.6"],"when":["68.6"],"starts":["68.6"],"rotatez":["68.8"],"45deg":["68.8","68.9"],"right":["68.8"],"bottom":["68.8"],"relative":["68.9","68.14"],"150px":["68.9","68.13"],"margin":["68.9","68.13"],"75px":["68.9","68.13"],"ms":["68.9","68.10"],"20px":["68.9"],"keyframes":["68.10"],"translate":["68.10"],"var":["68.10","75.1","76.21","99.3"],"float":["68.11"],"moz":["68.11","68.12","68.13"],"50px":["68.12"],"s":["68.14","75.1"],"300px":["68.14"],"width":["68.14"],"属性选择器":["69.0"],"例如":["69.0"],"radio":["69.0"],"id选择器":["69.0"],"行内样式":["69.0"],"important":["69.0"],"通过设置元素选择器为1来做对比各种选择器的权重关系":["69.0"],"权重数字":["69.0"],"类":["69.0","79.0"],"layout":["70.0"],"此时打印的是":["74.0"],"这是因为":["74.0"],"通过call函数将a的指向变成了obj这个对象":["74.0"],"所以":["74.0","112.5"],"他会执行函数":["74.0"],"并且打印出name的值":["74.0"],"call方法还可以传入多个参数":["74.0"],"并立即执行这个函数":["74.1"],"header":["75.0"],"将它们自动添加到":["75.0"],"几乎":["75.0"],"每个对相同域的请求中":["75.0"],"最常见的用处就是用于身份验证":["75.0"],"match":["75.1"],"key":["75.1"],"decodeuricomponent":["75.1"],"他们应该使用内建的":["75.2"],"encodeuricomponent":["75.2"],"函数对其进行转义":["75.2"],"特殊字符":["75.2"],"需要编码":["75.2"],"my":["75.2"],"smith":["75.2"],"admin":["75.3"],"没有user":["75.4"],"但这是可以设置的":["75.4"],"如果我们想允许像":["75.4"],"这样的子域在":["75.4"],"上设置cookie":["75.4"],"也是可以实现的":["75.4"],"为此":["75.4"],"例如我们可以将cookie设置为一天后过期":["75.5"],"当前时间":["75.5"],"1天":["75.5"],"now":["75.5","120.3"],"86400e3":["75.5"],"org":["75.6"],"doc":["75.6"],"str1":["76.2"],"log":["76.4","76.5","76.8","76.13","76.18","76.31","77.3","77.11","77.14","78.10","78.31","87.9","87.10","96.1","96.15","96.17","96.20","96.21","99.3","99.6","99.8","108.11","115.7"],"formcodepoint":["76.7"],"字符串的表达形式":["76.10"],"uncaught":["76.12"],"syntaxerrot":["76.12"],"unexpected":["76.12"],"syntaxerror":["76.12"],"替代函数的":["76.12"],"apply":["76.12","101.4"],"由于扩展运算符可以展开数组":["76.12"],"所以不再需要":["76.12"],"方法转为函数的参数了":["76.12"],"的行为有差异":["76.14"],"空值":["76.14"],"found":["76.15"],"elem":["76.18"],"中只能使用方法一":["76.21"],"标识符":["76.21"],"定义属性":["76.21"],"返回false":["76.22"],"操作符返回true":["76.22"],"只使用新指定的修饰符":["76.27"],"abc":["76.28"],"gi":["76.28"],"𠮷":["76.29"],"groups":["76.30"],"split":["76.32"],"允许为函数的参数设置默认值":["76.34"],"这个运算符的一个特点是右结合":["76.36"],"而不是常见的左结合":["76.36"],"它定义了javascript的语法":["77.0"],"类型":["77.0","108.4","110.0"],"声明的变量只在其所在的块级作用域中有效":["77.2"],"还有一种情况是不完全解构":["77.5"],"即等号左边的模式":["77.5"],"只匹配一部分等号右边的数组":["77.5"],"d":["77.5","123.1"],"嵌套赋值":["77.6"],"prop":["77.6"],"如果解构模式是嵌套的对象":["77.6"],"而且子对象所在的父属性不存在":["77.6"],"那么将会报错":["77.6"],"默认值":["77.9"],"函数参数的解构也可以使用默认值":["77.9"],"move":["77.9"],"error":["77.10","78.5"],"引申":["77.10"],"使用函数默认值时":["77.10"],"函数不能有同名参数":["77.10"],"否则会抛出错误":["77.12"],"不可以使用":["77.12"],"arguments":["77.12"],"参数":["77.13","110.0"],"解决":["77.13"],"sum":["77.15","87.8"],"val":["77.15"],"arr2":["77.16"],"它是es6中一个非常方便的特性":["77.19"],"alex":["77.20"],"age":["77.20","98.4"],"表达式还可以用方法名":["77.21"],"getsummary":["77.22"],"书名":["77.22"],"pi":["77.23"],"导出一个函数":["77.23"],"即如果没有":["78.1"],"的介入":["78.1"],"操作原来要访问的就是这个对象":["78.1"],"第二个参数是一个配置对象":["78.1"],"对于每一个被代理的操作":["78.1"],"需要提供一个对应的处理函数":["78.1"],"该函数将拦截对应的操作":["78.1"],"如上面代码中的":["78.1"],"用来拦截对目标对象属性的访问请求":["78.1"],"方法的两个参数分别是目标对象和要访问的属性":["78.1"],"可以看到":["78.1","93.3"],"由于拦截器函数总是返回":["78.1"],"所以访问任何属性都会得到":["78.1"],"要使得":["78.1"],"起作用":["78.1"],"必须针对":["78.1"],"上例是":["78.1"],"对象":["78.1","78.4"],"进行操作":["78.1"],"而不是针对目标对象":["78.1"],"上例是空对象":["78.1"],"如果":["78.1"],"没有设置任何拦截":["78.1"],"那就等同于直接通向原对象":["78.1"],"keys":["78.2"],"循环":["78.2"],"该方法返回目标对象所有自身的属性的属性名":["78.2"],"的返回结果仅包括目标对象自身的可遍历属性":["78.2"],"getownpropertydescriptor":["78.2","92.3"],"上面代码中":["78.4","78.6"],"拦截操作定义在":["78.4"],"对象上面":["78.4"],"所以如果读取":["78.4"],"继承属性时":["78.4"],"拦截就会生效":["78.4"],"实现数组读取负数的索引":["78.4"],"createarray":["78.4","107.4"],"elements":["78.4"],"handler":["78.4"],"action":["78.5"],"attempt":["78.5"],"private":["78.5","98.4"],"property":["78.5"],"的实例":["78.6"],"当它作为函数调用时":["78.6"],"就会被":["78.6"],"让操作变成了函数行为":["78.7"],"assign":["78.7"],"对象的方法与":["78.7"],"方法一一对应":["78.7"],"只要是":["78.7"],"对象的方法":["78.7"],"就能在":["78.7"],"对象上找到对应的方法":["78.7"],"这就让":["78.7"],"对象可以方便地调用对应":["78.7"],"完成默认行为":["78.7"],"作为修改行为的基础":["78.7"],"不管":["78.7"],"propkey":["78.8"],"receiver":["78.8"],"获取对象的属性值":["78.8"],"removeobserver":["78.9"],"创建观察者":["78.9"],"observer1":["78.9"],"typeof":["78.10","108.2"],"tostring":["78.10"],"数据结构":["78.11"],"map的键可以是任意类型的值":["78.12"],"创建一个空的":["78.13"],"不接受其他类型的数据":["78.14"],"不用担心这些节点从文档移除时会引发内存泄漏":["78.15"],"添加键值对":["78.16"],"但是他的值是唯一的":["78.17"],"创建一个":["78.18"],"中没有任何其他引用":["78.19"],"临时存放一组对象或存放跟对象绑定的信息":["78.20"],"返回实例":["78.21"],"of循环":["78.22"],"为各种不同的数据结构提供统一的访问机制":["78.23"],"对于遍历器对象来说":["78.25"],"属性都是可以省略的":["78.25"],"因此上面的":["78.25"],"上面代码的扩展运算符内部就调用":["78.28"],"实际上":["78.28"],"这提供了一种简便机制":["78.28"],"可以将任何部署了":["78.28"],"接口的数据结构":["78.28"],"转为数组":["78.28"],"也就是说":["78.28"],"只要某个数据结构部署了":["78.28"],"就可以对它使用扩展运算符":["78.28"],"将其转为数组":["78.28"],"iterable":["78.28"],"char":["78.29"],"函数会返回一个遍历器对象":["78.30"],"next":["78.31"],"done":["78.31"],"empty":["79.0"],"块语句中的内容不能为空":["79.0"],"character":["79.0"],"正则表达式中的":["79.0"],"内容不能为空":["79.0"],"label":["79.0"],"禁止使用空label":["79.0"],"eq":["79.0"],"禁止对null使用":["79.0"],"运算符":["79.0"],"eval":["79.0"],"禁止使用eval":["79.0"],"ex":["79.0"],"禁止给catch语句中的异常参数赋值":["79.0"],"extend":["79.0"],"native":["79.0"],"禁止扩展native对象":["79.0"],"extra":["79.0"],"禁止不必要的函数绑定":["79.0"],"cast":["79.0"],"禁止不必要的bool转换":["79.0"],"parens":["79.0"],"禁止非必要的括号":["79.0"],"semi":["79.0"],"禁止多余的冒号":["79.0"],"fallthrough":["79.0"],"禁止switch穿透":["79.0"],"floating":["79.0"],"decimal":["79.0"],"禁止省略浮点数中的0":["79.0"],"禁止重复的函数声明":["79.0"],"implicit":["79.0"],"coercion":["79.0"],"禁止隐式转换":["79.0"],"implied":["79.0"],"禁止使用隐式eval":["79.0"],"inline":["79.0"],"comments":["79.0"],"禁止行内备注":["79.0"],"inner":["79.0"],"declarations":["79.0"],"functions":["79.0"],"禁止在块语句中使用声明":["79.0"],"变量或函数":["79.0"],"invalid":["79.0"],"regexp":["79.0"],"禁止无效的正则表达式":["79.0"],"禁止无效的this":["79.0"],"只能用在构造器":["79.0"],"对象字面量":["79.0"],"irregular":["79.0"],"whitespace":["79.0"],"不能有不规则的空格":["79.0"],"禁止使用":["79.0"],"label名不能与var声明的变量名相同":["79.0"],"labels":["79.0"],"禁止标签声明":["79.0"],"lone":["79.0"],"blocks":["79.0"],"禁止不必要的嵌套块":["79.0"],"lonely":["79.0"],"禁止else语句内只有if语句":["79.0"],"loop":["79.0"],"禁止在循环中使用函数":["79.0"],"如果没有引用外部变量不形成闭包就可以":["79.0"],"mixed":["79.0"],"requires":["79.0"],"声明时不能混用声明类型":["79.0"],"spaces":["79.0"],"tabs":["79.0"],"禁止混用tab和空格":["79.0"],"linebreak":["79.0"],"换行风格":["79.0"],"status":["81.0"],"获取文件blob数据并保存":["81.0"],"getfilename":["81.0"],"saveas":["81.0"],"response":["81.0"],"url方式保存文件到本地":["81.0"],"鼠标事件触发":["82.0"],"clientx":["82.0"],"鼠标相对于浏览器":["82.0"],"这里说的是浏览器的有效区域":["82.0"],"左上角x轴的坐标":["82.0"],"不随滚动条滚动而改变":["82.0"],"clienty":["82.0"],"左上角y轴的坐标":["82.0"],"pagex":["82.0"],"cjs是commonjs的缩写":["83.0"],"经常是这么使用":["83.0"],"importing":["83.0"],"导入":["83.0"],"require":["83.0"],"js":["83.0","115.4"],"exporting":["83.0"],"导出":["83.0"],"exports":["83.0"],"something":["83.0","120.3"],"获取其中某一个参数":["84.0"],"decodeuri":["84.0"],"unit":["84.0"],"方法二":["84.0"],"解析url字符串参数":["84.0"],"数组本身":["85.1"],"返回值":["85.1"],"一个新数组":["85.1"],"每个元素都是回调函数的返回值":["85.1"],"myforeach":["85.2"],"通常会对时间进行下面这几个操作":["86.0"],"比如获取时间":["86.0"],"format":["86.6"],"返回值为字符串类型":["86.6"],"unix":["86.6"],"返回值为数值型":["86.6"],"以毫秒为单位":["86.6"],"获取年份":["86.6"],"seconds":["86.7"],"年份":["86.7"],"月份":["86.7"],"months":["86.7"],"小写的am":["86.8"],"hh":["86.8"],"小时":["86.8"],"24小时制":["86.8"],"00到23":["86.8"],"无前导零":["86.8"],"0到23":["86.8"],"12小时制":["86.8"],"00到12":["86.8"],"diff":["86.9"],"返回毫秒数":["86.9"],"moment":["86.10"],"晚上":["86.11"],"dddd":["86.11"],"星期五":["86.11"],"本周二晚上7点49":["86.13"],"ll":["86.14"],"2019年5月24日":["86.14"],"m":["86.15"],"上一个月月底":["86.15"],"最后":["87.1"],"将其结果汇总为单个返回值":["87.1"],"第一次执行回调函数时":["87.1"],"可选":["87.2"],"否则为array":["87.3"],"的值":["87.3"],"currentvalue":["87.3"],"当前元素的值":["87.3"],"则":["87.4"],"cur":["87.6","87.12","87.15"],"表示的是当前元素":["87.6"],"reduce":["87.8","87.12"],"acc":["87.8","87.12","87.15"],"表示累加器通过对象操作来控制名称key出现的次数":["87.9"],"输出值为":["87.9"],"obj":["87.10","97.4","108.1"],"groupepeople":["87.10"],"输出结果为":["87.10"],"juliet":["87.11"],"alice":["87.11"],"the":["87.11"],"lord":["87.11"],"myarr":["87.12"],"crr":["87.12"],"includes":["87.12"],"reject":["87.14"],"p2":["87.14"],"后执行传入的函数":["88.1"],"只执行一次":["88.1"],"用法":["88.1","88.2"],"示例":["88.2"],"每隔一秒执行一次":["88.2"],"如果队列中已有任务":["88.3"],"那么定时任务的执行可能会受到延迟":["88.3"],"最小延迟时间":["88.3"],"都可以通过":["88.4"],"settimeout":["88.5"],"启动第一次":["88.5"],"progress":["88.6"],"更精准":["88.7"],"因为它与浏览器的重绘同步":["88.7"],"标识对发出方发出数据包的接收确认":["89.1"],"sent":["89.1"],"客户端发送同步标志syn后":["89.1"],"进入syn":["89.1"],"sent状态":["89.1"],"recv":["89.1"],"服务端确认客户端的syn包并发送syn包后":["89.1"],"第三次挥手":["89.2"],"服务端数据发送完毕之后":["89.2"],"向客户端发送":["89.2"],"半连接状态下服务器可能又发送了一些数据":["89.2"],"服务器此时进入了":["89.2"],"last":["89.2","98.2"],"ack状态":["89.2"],"第四次挥手":["89.2"],"客户端收到服务器的":["89.2"],"包之后":["89.2"],"ip四层模型":["90.0"],"ip五层模型":["90.0"],"是以":["90.0"],"osi七层":["90.0"],"优化而来":["90.0"],"是一种代码注入攻击":["91.1"],"攻击者通过在目标网站上注入恶意脚本":["91.1"],"注入其他属性或者标签":["91.2"],"在标签的":["91.2"],"src":["91.2"],"等属性中":["91.2"],"反射型":["91.3"],"攻击者将脚本混在url里":["91.3"],"服务端接收到url将恶意代码当作参数取出并拼接在html里返回":["91.3"],"浏览器解析此html后执行恶意代码":["91.3"],"escape":["91.4"],"g":["91.4"],"amp":["91.4"],"riding":["91.5"],"通常缩写为":["91.5"],"csrf":["91.5"],"请求来源限制":["91.6"],"此方法成本最低":["91.6"],"但是并不能保证100":["91.6"],"xss是代码注入问题":["91.7"],"csrf是http问题":["91.7"],"除了":["92.0"],"以外":["92.0"],"所有类型都定义了表示在语言最低层面的不可变值":["92.0"],"我们将这些值称为原始值":["92.0"],"bigint":["92.1"],"但是你可以通过":["92.3"],"defineproperty":["92.3"],"设置它们":["92.3"],"或通过":["92.3"],"读取它们":["92.3"],"数据属性":["92.3"],"数据属性将键与值相关联":["92.3"],"它可以通过以下属性来描述":["92.3"],"auto":["92.4"],"p1":["93.0"],"它有两个属性":["93.1"],"为每个实例创建重复的属性方法":["93.2"],"而是将属性方法创建在构造函数的原型对象上":["93.2"],"那些不需要共享的方法才被创建在构造函数之中":["93.2"],"也是对象":["93.3"],"它有隐式原型么":["93.3"],"又指向谁呢":["93.3"],"构造函数的原型对象上的隐式原型指向了":["93.3"],"的原型对象":["93.3"],"那么parent的原型对象就继承了object的原型对象":["93.3"],"由此我们可以验证一个结论":["93.3"],"函数的构造函数是":["93.4"],"这点也不奇怪":["93.4"],"因为我们每次定义函数其实都是调用了new":["93.4"],"下面两种效果是一样的":["93.4"],"func1":["93.4"],"msg":["93.4"],"介绍完":["94.0"],"变量":["94.0"],"就应该介绍":["94.0"],"变量的提升了":["94.0"],"首先先看一个例子":["94.0"],"fn":["94.0"],"这个a会打印1吗":["94.0"],"不会":["94.0"],"打印出来undefined":["94.0"],"当render树":["95.1"],"一定会引起":["95.2"],"不一定会引起":["95.2"],"而且每个页面都至少需要一次":["95.2"],"就是页面第一次开始加载的时候":["95.2"],"可能会有人问":["95.2"],"如果说元素设置成了":["95.3"],"display":["95.3"],"变化":["95.4"],"增删节点":["95.4"],"render树":["95.4"],"padding":["95.4"],"transforms":["95.5"],"opacity":["95.5"],"减少style修改所影响元素的数量":["95.6"],"把所有会引起回流":["95.7"],"newarr":["96.2"],"isbigenough":["96.4"],"warning":["96.16"],"题外话":["96.16"],"方法和":["96.16"],"都是将元素转变为字符串的方法":["96.16"],"但两者又有一些地方有差别":["96.16"],"存在性检查":["96.16"],"在使用":["96.16"],"表示删除掉下标为1的元素后面的元素":["96.18"],"原数组变更为":["96.18"],"indexof":["96.20"],"步长为":["96.22"],"基本数据类型保存在栈内存中":["97.1"],"拷贝的就是基本类型的值":["97.2"],"slice":["97.3"],"one":["97.3"],"two":["97.3"],"three":["97.3"],"arr1":["97.3"],"存在弊端":["97.4"],"转义时会忽略":["97.4"],"symbol":["97.4"],"和函数":["97.4"],"name1":["97.4"],"name3":["97.4"],"name4":["97.4","108.9"],"两个对象指向同一个地址":["97.6"],"字体以及应用程序明确请求的任何数据":["98.0"],"即使设备子啊线":["98.1"],"modified":["98.2"],"etag":["98.2"],"判断是否命中协商缓存":["98.2"],"不存在缓存标识":["98.3"],"存在该缓存结果和缓存标识":["98.3"],"所有内容只有客户端可以缓存":["98.4"],"的默认取值":["98.4"],"no":["98.4"],"客户端缓存内容":["98.4"],"但是是否使用缓存则需要经过协商缓存来验证决定":["98.4"],"所有内容都不会被缓存":["98.4"],"即不使用强制缓存":["98.4"],"也不使用协商缓存":["98.4"],"max":["98.4"],"xxx":["98.4"],"是数字":["98.4"],"缓存内容将在xxx秒后失效":["98.4"],"协商缓存生效":["98.5"],"发现请求头":["98.6"],"含有":["98.6"],"字段后":["98.6"],"然后根据":["98.6"],"的字段值与该资源在服务器的最后被修改时间做对比":["98.6"],"若服务器的资源最后被修改时间大于":["98.6"],"sinde":["98.6"],"since":["98.7"],"另一个类别a":["99.0"],"给货车添加一个大货箱":["99.1"],"truck":["99.1"],"extends":["99.1","108.1"],"super":["99.1"],"组合继承":["99.2"],"上述代码看似没啥问题":["99.3"],"但实际上是存在潜在问题":["99.3"],"s1":["99.3"],"第一次调用":["99.5"],"手动挂上构造器":["99.5"],"指向自己的构造函数":["99.5"],"person2":["99.6"],"lucy":["99.6"],"getfriends":["99.7"],"person":["99.8"],"来划分不同的继承方式":["99.9"],"获取当前文档的url":["100.0"],"urls":["100.0"],"获取参数":["100.0"],"分隔":["100.0"],"会不断调用绑定在事件上的回调函数":["101.0"],"极大的浪费资源":["101.0"],"降低页面性能":["101.0"],"若在这个时间段内重复触发":["101.1"],"throttleinterval":["101.2"],"timer":["101.2"],"则重新开始计时":["101.3"],"立即执行版本":["101.4"],"immediate":["101.4"],"防抖是在一段连续操作结束后":["101.5"],"处理回调":["101.5"],"利用":["101.5"],"窗口大小":["101.6"],"resize":["101.6"],"的速度非常快":["103.0"],"性能非常好":["103.0"],"运行时建立的平台":["103.0"],"用于方便地搭建响应速度快":["103.0"],"易于扩展的网络应用":["103.0"],"会被放置到任务队列中":["103.1"],"主线程任务完毕后":["103.1"],"会读取任务队列中的事件":["103.1"],"因为任务队列中的每一个异步任务执行完毕后都会在队列中添加一个事件":["103.1"],"而js而js主线程执行完后就会执行这些事件":["103.1"],"从而调起对应的回调函数放入主线程中进行执行":["103.1"],"单线程":["103.1"],"java":["103.1"],"typescript手册":["105.0"],"枚举的定义使用":["106.0"],"从编译结果我们可以看出来":["106.2"],"枚举值递增到":["106.2"],"时与前面":["106.2"],"的值重复了":["106.2"],"导致":["106.2"],"先是":["106.2"],"然后":["106.2"],"也是":["106.2"],"所以在赋值时":["106.2"],"最好不要出现这种情况":["106.2"],"那么它就会因为无法获得初始值而报错":["106.3"],"赋值项之后是未赋值的枚举项的报错":["106.3"],"常数项和计算所得项的完整定义":["106.3"],"引用自中文手册":["106.3"],"枚举":["106.3"],"当满足以下条件时":["106.3"],"枚举成员被当作是常数":["106.3"],"不具有初始化函数并且之前的枚举成员是常数":["106.3"],"假如包含了计算成员":["106.4"],"则会在编译阶段报错":["106.4"],"green":["106.4"],"ts":["106.4"],"外部枚举与声明语句一样":["106.5"],"是一种强大的类型工具":["107.1"],"它允许我们编写可重用":["107.1"],"来定义一个数组":["107.2"],"通过":["107.3"],"的类型自动":["107.3"],"推断出泛型的类型":["107.3"],"多个类型参数":["107.3"],"定义泛型的时候":["107.3"],"可以一次定义多个类型参数":["107.3"],"swap":["107.3"],"tuple":["107.3"],"seven":["107.3"],"我们实现了一个":["107.3"],"用于交换输入中的元祖":["107.3"],"泛型约束":["107.3"],"在函数内部使用泛型参数时":["107.3"],"由于不知道参数的具体类型":["107.3"],"所以不能够随意使用它的属性与方法":["107.3"],"泛型定义函数":["107.4"],"icreatearray":["107.4"],"y":["107.5"],"这个类型断言可以省略":["108.1"],"现在":["108.1"],"obj就同时拥有了":["108.1"],"属性与":["108.1"],"泛型联合":["108.1"],"t":["108.1"],"断言":["108.3"],"之后就可以调用字符串的方法":["108.4"],"makesound":["108.5"],"animial":["108.5"],"这里使用":["108.5"],"这一段就是类型谓词":["108.6"],"isfish":["108.6"],"那么":["108.7"],"分支的类型细化为有一个可选的或者必须的属性":["108.7"],"nameresolver":["108.8"],"tip":["108.9"],"类型别名不能出现在右侧任何地方":["108.9"],"yikes":["108.9"],"declare":["108.10"],"arg":["108.10"],"但是访问一个已知的索引":["108.11"],"会得到正确的类型":["108.11"],"则结果是":["108.12"],"类型中的参数":["108.12"],"6及以上版本":["110.0"],"屏幕闪烁":["110.0"],"2及以上版本":["110.0"],"开放状态":["110.0"],"未开放":["110.0"],"开放范围":["110.0"],"白名单":["110.0"],"参数说明":["110.0"],"是否必填":["110.0"],"说明":["110.0"],"idcardnumber":["110.0"],"在访问一个元素时":["112.2"],"需要从七点开始迭代整个链表直到找到所需的元素":["112.2"],"访问的时间复杂度就在":["112.2"],"之间":["112.2"],"constructor":["112.3"],"currentnode":["112.4"],"prenode":["112.4"],"currentindex":["112.4"],"while":["112.4"],"prevnode":["112.4"],"currentnext":["112.4"],"有三个整数值":["112.5"],"数值":["112.5"],"向后的节点的链接":["112.5"],"向前的节点的链接":["112.5"],"那么它就不再是头部节点了":["112.6"],"将其前驱节点设置为新节点":["112.6"],"新的头部节点":["112.6"],"然后标记新的节点为头部节点":["112.6"],"如果还没有尾部节点":["112.6"],"那么就让新的节点称为尾部节点":["112.6"],"将新的及诶单追加到尾部":["112.6"],"append":["112.6"],"如果还没有头部节点":["112.6"],"让新的节点称为头部节点":["112.6"],"将新的节点添加到链表的末尾":["112.6"],"将当前尾部节点添加到新节点的前驱引用":["112.6"],"设置新节点为链表的尾部节点":["112.6"],"删除具有特定值的节点":["112.6"],"delete":["112.6"],"抽象语法树":["114.0"],"它以树状的形式表现编程语言的语法结构":["114.1"],"树上的每个节点都表示源代码中的一种结构":["114.1"],"之所以说语法是":["114.1"],"init":["114.2"],"arrowfunctionexpression":["114.2"],"expression":["114.2"],"generator":["114.2"],"async":["114.2"],"params":["114.2"],"一系列操作":["114.3"],"transformation":["114.3"],"扫描器":["114.4"],"scanner":["114.4"],"其作用是将一行行的源码拆解成一个个":["114.4"],"所谓":["114.4"],"出错的时候":["115.1"],"开发着工具将直接显示原始代码":["115.1"],"而不是转换后的代码":["115.1"],"随着持续开发所带来的代码量增多":["115.2"],"map功能":["115.3"],"jsx":["115.4"],"babel":["115.4"],"否则无法定义源文件":["115.4"],"将":["115.4"],"作为":["115.4"],"datauri":["115.4"],"使用":["115.5"],"包裹源代码进行执行":["115.5"],"利用字符串可缓存进行提效":["115.5"],"sourcemappingurl":["115.5"],"bundle":["115.5"],"对于":["115.7"],"转换过后的代码":["115.8"],"生产环境":["115.9"],"它是一个引擎":["117.1"],"而非一款框架":["117.1"],"同时github也已经申请了账号":["118.0"],"ssh":["118.1"],"如果输入命令后无法进入":["118.1"],"则说明还没有在本地机器上绑定你自己github账户的公钥":["118.1"],"那么就需要下边的ssh":["118.1"],"keygen命令进行绑定":["118.1"],"命令如果失效":["118.1"],"跳过该命令":["118.1"],"ls":["118.1"],"看ssh文件夹下有没有":["118.1"],"rsa":["118.1"],"pub":["118.1"],"这两个文件":["118.1"],"fetch区别":["119.0"],"是将远程主机的最新内容拉到本地":["119.1"],"用户在检查了以后决定是否合并到工作本机分支中":["119.1"],"是将e和ｆ的代码合并后的结果":["119.2"],"可能会出现冲突":["119.2"],"而abdf依然属于dev分支":["119.2"],"可以继续在dev的分支上进行开发":["119.2"],"分支":["119.2","119.3"],"最常见的命令如取回":["119.3"],"origin":["119.3","123.2"],"主机的":["119.3"],"master":["119.3"],"从远程主机的master分支拉取最新内容":["119.4"],"merge":["119.4","120.2"],"delta":["120.2"],"reused":["120.2"],"unpacking":["120.2"],"a1bc60a":["120.2"],"b91f711":["120.2"],"made":["120.2"],"recursive":["120.2"],"strategy":["120.2"],"controllers":["120.2"],"deal":["120.2"],"local":["120.2"],"rtu":["120.2"],"interface":["120.2"],"instrument":["120.2"],"562ec58":["120.3"],"现在在查看一下分支提交历史":["120.3"],"0e80f97":["120.3"],"虽然合并成功":["120.3"],"但是master已经保存了合并历史":["120.3"],"出现开叉了":["120.3"],"对于强迫症患者来说肯定是不能接受的":["120.3"],"通过rebase合并分支":["120.3"],"现在将版本退回到合并前":["120.3"],"也就是回退一个版本":["120.3"],"reset":["120.3"],"hard":["120.3"],"at":["120.3"],"退回去了":["120.3"],"现在是位于master分支的":["120.3"],"提交这里":["120.3"],"先切换回feature分支":["120.3"],"那么就是一个feature分支了":["121.0"],"由于开发中各种修改":["121.0"],"衍合":["121.1"],"77663d6":["121.2"],"执行完命令后":["121.2"],"我们可以看到终端变成如下界面":["121.2"],"rebase操作":["121.2"],"commands表示了可以进行的指令的类型":["121.2"],"即为":["121.2"],"pick":["121.2"],"表示保留这一个commitid":["121.2"],"命令的作用是将更改存储在一个临时区域中":["122.0"],"而只想把某些更改推送到远程仓库":["122.1"],"想要在多个分支之间进行代码重构或实验性开发时":["122.1"],"保存时的描述":["122.3"],"命令":["122.3"],"shell":["122.4"],"如果要显示其他存贮":["122.5"],"后面加":["122.5"],"如果要使用其他个":["122.7"],"从列表中删除这个存储":["122.9"],"这个文件还在":["122.10"],"说明没有被存起来":["122.10"],"说白了就是没有在git":["122.10"],"版本控制中的文件":["122.10"]},{"0":["12.1","12.2","68.7","68.11","76.17","78.4","86.6","86.9","87.13","96.18","97.3","106.3","108.11","122.4"],"1":["16.0","19.0","31.0","32.0","37.8","55.2","60.47","68.5","68.10","74.0","76.3","76.22","76.25","77.17","77.21","78.9","78.18","78.28","86.8","89.1","97.3","106.3","108.11"],"2":["28.2","29.4","32.0","37.8","41.4","42.2","60.22","64.42","74.0","75.1","75.6","77.15","77.21","77.23","78.9","78.18","78.28","87.9","96.8","107.2"],"3":["1.0","12.1","32.0","61.33","64.2","74.0","77.6","77.11","77.15","78.28","87.7","87.14","91.3","96.8","98.2","106.1","107.2","120.3"],"4":["29.6","37.6","51.5","60.3","61.21","64.2","76.23","77.16","78.28","87.16","93.1","96.8","99.3","107.2"],"5":["52.4","60.42","61.26","64.2","77.11","77.15","77.16","78.28","96.3","96.5","96.8","96.19","96.22","96.23","107.2"],"6":["1.0","60.51","61.25","64.2","96.23"],"7":["96.12","96.22","96.23","120.2"],"8":["14.2","14.4","19.0","31.0","76.14","77.9","96.23"],"9":["15.0","96.22","96.23"],"10":["15.0","77.15","96.23"],"11":["76.14"],"13":["86.7"],"14":["86.6"],"15":["77.3","86.6"],"16":["86.6"],"18":["77.20","87.11"],"20":["86.12"],"21":["120.2"],"26":["3.0"],"28":["114.2"],"30":["78.13"],"32":["114.2"],"38":["106.4"],"47":["114.2"],"50":["68.14"],"100":["56.3","68.4"],"200":["60.3"],"301":["60.4"],"600":["98.4"],"1000":["69.0"],"1998":["92.4"],"2019":["86.15"],"2526":["12.2"],"1411572969":["86.8"],"n":["1.0","55.2"],"result":["2.0","60.18","76.23","107.4"],"if":["2.0","5.0","51.6","97.4","101.4"],"return":["2.0","7.0","64.33","64.40","75.1","77.21","87.8","87.12","97.4","108.6","112.4"],"sort":["2.0","48.5"],"for":["2.0","6.0","8.0","25.0","37.4","48.5","70.0","92.3","107.4"],"let":["2.0","4.0","5.0","8.0","9.0","76.12","99.4","107.4","107.5"],"j":["2.0"],"break":["2.0"],"console":["3.0","7.0","51.7","75.2","76.2","76.6","76.15","76.22","76.27","76.28","78.7","78.9","87.12","87.16","88.2","88.5","92.4","96.9","96.10","96.11","96.12","96.19","107.3","108.4"],"log":["3.0","7.0","51.7","75.2","76.6","76.15","76.22","76.27","76.28","78.7","78.9","87.12","88.2","88.5","92.4","96.9","96.10","96.11","96.12","96.13","96.19","107.3","108.4","120.2"],"利用map的特性去处理":["3.0"],"新建一个":["3.0"],"map":["3.0","115.7"],"然后遍历数组":["3.0"],"将差值记录在":["3.0"],"中":["3.0","87.14","96.14"],"最后通过":["3.0"],"的前五个元素被修改为":["4.0"],"求解":["4.0"],"通过判断与前一项是否相等":["4.0"],"在通过指针重新指向":["4.0"],"typescript":["4.0","108.7"],"removeduplicates":["4.0"],"number":["4.0","8.0","79.0","107.5","110.0"],"len":["4.0","8.0"],"index1":["5.0"],"index2":["5.0"],"tail":["5.0"],"while":["5.0","112.6"],"k":["6.0","8.0"],"length":["6.0","8.0","54.1","78.4"],"leftindex":["6.0"],"i":["6.0","11.0"],"target1":["7.0"],"target2":["7.0"],"target3":["7.0"],"removeele":["8.0"],"index":["8.0","32.2","32.3","120.3"],"isinit":["9.0"],"false":["9.0","76.29","77.5","78.10","78.31"],"res":["9.0"],"中心下标是0":["10.0"],"左侧数之和是":["10.0"],"下标":["10.0"],"左侧不存在元素":["10.0"],"右侧数之和是":["10.0"],"of":["11.0","120.2"],"cnpm":["12.0"],"国内用户推荐":["12.0"],"淘宝的npm加速服务":["12.0"],"npm":["12.0"],"node":["12.0"],"直接下载安装即可":["12.1"],"30天的时间对于学习angularjs和进行一些初级的开发尝试完全足够了":["12.1"],"本书写作时使用的webstorm版本是11":["12.1"],"webstorm自8":["12.1"],"chrome完整版本下载链接":["12.2"],"本书写作时使用的chrome版本是47":["12.2"],"x都有对应的安装包":["12.3"],"本书使用的node":["12.3"],"new":["13.0","60.31","76.27","78.29","79.0","92.4","97.4","99.4","107.5","108.2"],"然后选择empty":["13.0"],"创建目录":["13.1"],"大家对于":["13.1"],"的配置文件":["13.2"],"测试文档":["13.2"],"这些文件我们是绝对不希望用户可以直接访问到的":["13.2"],"也可以跳过下面命令行创建的部分":["13.3"],"即可启用":["13.4"],"图2":["13.4"],"private":["13.5"],"which":["13.5"],"prevents":["13.5"],"it":["13.5","120.3"],"from":["13.5","54.3","64.34"],"being":["13.5"],"accidentally":["13.5"],"published":["13.5"],"registry":["13.5"],"以下是生成的配置文件的预览":["13.5"],"并在其中加入如下内容":["13.6"],"json":["13.6","30.6"],"现在项目看起来应该长这个样子":["13.7"],"我们将进入正式的学习使用angularjs的过程":["14.0"],"meta":["14.2","19.0","28.0","60.51"],"charset":["14.2","14.4","19.0","28.0","31.0"],"utf":["14.2","14.4","19.0","31.0"],"title":["14.2","14.4","19.0","31.0","34.0"],"学习angularjs":["14.2","14.4","19.0","31.0"],"min":["14.3"],"js":["14.3","52.4"],"148kb":["14.3"],"hello":["14.5","18.2","19.3","55.2","60.30"],"看不到":["14.5"],"和":["14.5","50.0","52.3","60.22","61.5","61.36","61.44","64.11","64.56","88.3","101.5","106.5","108.1","108.9"],"就说明angularjs已经成功运行起来了":["14.5"],"style":["15.0","31.0","37.3","38.0","91.2"],"下拉列表选项":["15.0","37.3"],"options":["15.0","50.0"],"引入":["15.0","86.2"],"include":["15.0"],"和模板":["15.0"],"template":["15.0","17.1","49.4","49.6","64.26","64.30"],"网页会显示2":["16.0"],"a":["16.0","31.2","48.5","60.30","64.27","76.7","78.1","96.22"],"bc":["16.0"],"网页会显示abc":["16.0"],"是定义和使用html代码碎片的功能":["17.0"],"用于将html切碎分别存储":["17.0"],"并根据需求再去获取对应的代码块":["17.0"],"geturl":["17.1"],"从上面的例子可以看出":["17.1"],"autoscroll":["17.2"],"的属性":["17.2"],"id":["17.3","32.0"],"这个":["17.3"],"就是这段html代码被引用时的名称":["17.3"],"使用":["17.3","61.28","61.33","64.13","69.0","76.16","92.1","96.22"],"在现在阶段":["18.0"],"我们并不会用到":["18.0"],"lang":["18.1","28.0","30.7"],"zh":["18.1","28.0","30.7"],"head":["18.1","19.0","28.0","119.3","120.2"],"app被放置在了这里":["18.2"],"h1":["18.2","20.0","23.2","33.0","61.34"],"world":["18.2","19.4","20.0"],"以上代码的运行结果如下":["18.2"],"图4":["18.2"],"文件呼唤":["18.3"],"网页的标题":["19.0"],"我们在这里使用了angularjs的基本表达式":["19.0"],"controller的名称":["19.2"],"function":["19.2","51.6","60.35","61.20","76.12","78.28"],"scope":["19.2","31.2","32.4"],"controller的实体":["19.2"],"传入了":["19.3"],"data":["19.3","20.0","20.2","24.4","115.5"],"message":["19.3","20.0","50.5"],"对象":["19.3"],"并在html代码中直接使用了":["19.3"],"为什么不推荐这样做呢":["19.5"],"因为在我们后续会学习应用":["19.5"],"filter":["19.5","37.3","38.0"],"firstctrl":["20.0","23.2","25.4","30.0","30.1","30.5","30.6"],"这里增加了一个input输入框":["20.0"],"input":["20.1","20.2","23.3","23.4","24.5"],"type":["20.1","20.2","23.3","23.4","24.1","24.5","99.4"],"text":["20.1","20.2","23.3","23.4","32.5"],"model":["20.1","20.2","23.3","23.4","25.0"],"if中的文字":["21.0"],"中包含的内容":["21.1"],"会被全部从html中移除掉":["21.1"],"而如果使用":["21.1"],"true":["21.2","41.10","77.8","99.1","99.6"],"但是请":["21.2"],"注意":["21.2","60.21","77.21"],"在":["21.2","96.14"],"in":["22.0","22.1","25.0","25.1","68.3","79.0","106.4"],"td":["22.0","22.1"],"x":["22.1","31.0","61.18","77.10","86.8","89.1","96.2","96.3"],"list":["22.1"],"name":["22.1","77.18","78.13","81.0"],"以上都是angularjs的常用用法":["23.0"],"具体的系统自带的":["23.0"],"的列表":["23.0"],"我们可以从官方网站上获取":["23.0"],"这里对管网提供的功能进行一个简要列表":["23.0"],"filter名称":["23.0"],"示例用法":["23.0","75.1"],"说明":["23.0"],"传入自定义的函数作为过滤器":["23.0"],"结果为":["23.1"],"代码如下":["23.2"],"html":["23.2","25.4","29.2","30.4","30.5","30.7","32.2","32.3","56.1","61.38","75.6"],"div":["23.2","24.1","25.4","27.0","28.4","30.0","30.4","30.5","50.5","61.12","61.34"],"ng":["23.2","28.0"],"controller":["23.2","25.4","27.1","30.0","30.3","30.5","30.6"],"link":["24.1","31.0","32.4"],"rel":["24.1"],"stylesheet":["24.1"],"href":["24.1","31.0","84.0"],"body":["24.1","30.0","82.0"],"此处放置了ng":["24.1"],"并设定了每个样式激活时的条件":["24.1"],"对应下方3个复选框":["24.1"],"p":["24.1","24.2","28.3","33.0","50.5","64.26"],"class":["24.2","37.3","38.0"],"直接使用字符串作为样式":["24.2"],"warning":["24.3"],"同时应用两种样式":["24.3"],"button":["24.4","24.5","48.4"],"value":["24.4","24.5","61.30","78.7","78.8","92.3","96.4","96.5","96.6","96.7","107.4","112.3"],"开始动画":["24.4"],"click":["24.4","24.5"],"br":["24.4"],"imagepath":["24.5"],"下面":["24.5"],"我们通过官网的示例来看看如何传入文本":["24.5"],"设置字体颜色为红色":["24.5"],"mystyle":["24.5"],"label":["25.0","25.4"],"选择一个颜色":["25.0"],"无空选项":["25.0"],"select":["25.0"],"colors":["25.1"],"blue":["25.2"],"黄色":["25.2","25.3"],"yellow":["25.2","25.3"],"然后修改":["25.3"],"而angularjs需要解析这段文本":["25.4"],"因此提出了对格式的要求":["25.4"],"选择一个国家":["25.4"],"有空选项":["25.4"],"并将印象不深的地方多浏览几遍":["26.0"],"如果可能":["26.0"],"直接作为标签名":["27.0"],"people":["27.0","30.0","30.3"],"直接作为标签属性":["27.0"],"可能会对directive的学习或者使用价值感到困难":["27.2"],"doctype":["28.0","30.7"],"第一个参数是directive的命名":["28.1"],"这里是":["28.1","48.3"],"第二个参数是这个directive的功能":["28.1"],"directive生效后的html代码":["28.2"],"姓名":["28.3"],"attribute":["28.4"],"在实际应用场景中":["29.0"],"我们的命名通常不止1个单词":["29.0"],"这时候我们就需要注意directive的命名和使用规则":["29.0"],"并且不使用连接符号":["29.1"],"驼峰式命名的例子":["29.1"],"array":["29.2","107.4","108.9"],"实际使用举例":["29.2"],"为了保证html和javascript都能按原有模式正常工作":["29.3"],"下划线":["29.5"],"则可以通过html5的验证":["29.6"],"有data前缀":["29.6"],"第一个人的信息":["30.0"],"harry":["30.1"],"这段配置":["30.2"],"告诉directive从html标签中":["30.2"],"获取名为":["30.2"],"张三":["30.4"],"sex":["30.5"],"peoplelist":["30.6"],"span":["30.6","73.1"],"repeat":["30.6"],"person":["30.6"],"clickbtncallback":["30.7"],"msg":["30.7"],"alert":["30.7","60.35","60.36","93.4"],"点击了按钮":["30.7"],"信息是":["30.7"],"对应的html代码":["30.7"],"css":["31.0","56.1","61.40","61.44"],"这里":["31.1"],"我们保留了上个例子中的":["31.1"],"所有":["31.1"],"文件":["31.1","115.4"],"包括独立的part":["31.1"],"对javascript也未进行任何修改":["31.1"],"运行效果如下":["31.1"],"图5":["31.1"],"restrict":["31.2"],"在chrome的":["32.0"],"开发者工具":["32.0"],"的控制台中":["32.0"],"我们可以看到如下结果":["32.0"],"childtail":["32.0"],"null":["32.0","60.18","76.12","77.5","92.0","96.16","97.4"],"这里才是整个directive中的":["32.1"],"同时":["32.2"],"如果你希望在angularjs中直接使用完整的jquery也是非常容易的":["32.2"],"只需要安装jquery":["32.2"],"并在":["32.2"],"中引入":["32.3"],"attrs":["32.4","34.0"],"鼠标移过来了":["32.5"],"mouseleave":["32.5"],"这里是放置原有代码的地方":["33.0"],"标题":["33.0"],"这里是段落文字":["33.0"],"第四个参数是获取到的directive":["34.0"],"element":["34.0","88.6"],"tabcontainer":["34.0"],"调用了上方gqtabcontainer的addpane":["34.0"],"方法":["34.0","76.13","96.16"],"注意参数命名":["34.0"],"不需要和上方directive一致":["34.0"],"在html代码中":["34.0"],"我们直接使用了":["34.0"],"gq":["34.0"],"tab":["34.0"],"container":["34.0","99.1"],"思路更清晰更有条理":["35.0"],"learning":["36.0"],"angular":["36.0"],"有任何疑问或者发现错误":["37.1"],"可联系":["37.1"],"作者":["37.1","77.22"],"github地址":["37.2"],"样式选择器":["37.3","38.0"],"如果您没有php经验":["37.4"],"这本书也可以阅读":["37.4"],"javascript":["37.4","60.30","61.44","64.35","86.2","92.1","93.2","100.0"],"php":["37.4","103.1"],"developers":["37.4"],"在制作网站前端时":["37.5"],"我也希望采用类似的方法":["37.5"],"我不喜欢直接在php代码中直接嵌入html模板的方案":["37.5"],"以静态网站的方式部署":["37.6"],"这样页面部分不再占用服务器的流量和空间":["37.6"],"便于之后的扩展":["37.6"],"其实有一个调侃的说法":["37.7"],"写java的写不来javascript的用angularjs":["37.7"],"但是基于angularjs的版本提供了一些如单页应用":["37.8"],"在同一个界面直接刷新部分界面而不是整页刷新":["37.8"],"的特性":["37.8"],"然后便是一系列的在网上搜索了解angularjs的过程":["37.8"],"看完它基本的tutorial":["37.8"],"phonecat":["37.8"],"之后":["37.8"],"我马上被它的特性震惊了":["37.8"],"因为":["37.8"],"angularjs的整个结构体系非常符合我的思路":["37.8"],"双向绑定的特性实在是太和我胃口了":["37.8"],"我现在正在重新学习angularjs":["37.9"],"写这本书":["37.9"],"一方面是为了记录学到的angularjs的技术":["37.9"],"便于我日后查询":["37.9"],"net":["37.10"],"本作品采用知识共享":["37.10"],"许可协议进行许可":["37.10"],"访问":["37.10","78.1","112.2"],"http":["37.10","64.13","98.0"],"creativecommons":["37.10"],"org":["37.10"],"licenses":["37.10"],"by":["37.10","41.10"],"nc":["37.10"],"过滤器":["38.0"],"inject":["41.1"],"而react中我们通过hoc":["41.1"],"higher":["41.1"],"而是通过修改数据":["41.2"],"state":["41.2"],"或":["41.2","103.1"],"props":["41.2","64.37"],"componentwillunmount":["41.3"],"卸载":["41.3"],"并且更贴合原生js写法":["41.4"],"dom":["41.5","64.10"],"app":["41.5"],"检测意外的副作用":["41.6"],"检测过时的":["41.6"],"跳转页面后获取":["41.7"],"sessionstorage":["41.7"],"存入sessionstorage初始化时查询":["41.7"],"有数据就加载":["41.7"],"jsx需要":["41.8"],"babel":["41.8"],"createelement":["41.9"],"component":["41.9","52.4"],"caught":["41.10"],"这个依据就是标签的首字母":["41.11"],"能够让一个组件返回多个元素":["41.12"],"应该使用受控组件":["41.13"],"适用于需要对表单元素的值进行实时操作和处理的情况":["41.13"],"首屏渲染快":["42.1"],"首屏渲染是node发送过来的字符串":["42.1"],"开发条件受限":["42.2"],"export":["43.1","81.0"],"default":["43.1","52.4","54.3"],"父组件与子组件的加载顺序":["43.1"],"danger":["43.1"],"加载顺序":["43.1"],"父子组件初始化":["43.1"],"父组件":["43.1"],"constructor":["43.1","93.1","99.5"],"getderivedstatefromprops":["43.1"],"render":["43.1"],"子组件":["43.1"],"从而提高性能":["44.0"],"断点看到真实dom中挂载了很对属性和方法":["44.1"],"我们并不需要去关心":["44.1"],"是将所有的操作聚集在一块计算出所有变化后统一更新一次虚拟dom":["44.2"],"将所有的dom":["44.5"],"手机起来":["44.5"],"一起去改变真是的dom":["44.5"],"对于跨平台react和":["44.6"],"连接到":["45.0"],"react":["45.0"],"组件":["45.0"],"使组件可以访问和更新":["45.0"],"store中的状态":["45.0"],"timer":["45.1"],"time":["45.1","89.2"],"settime":["45.1"],"intervaild":["45.1"],"setinterval":["45.1"],"usestate的值在每一个render中都是独立存在的":["45.2"],"而useref":["45.2"],"current则更像是相对于render函数的一个全局变量":["45.2"],"每次它会保持render的最新状态":["45.2"],"usestate异步更新值":["45.2"],"useref则同步更新":["45.2"],"数组":["47.0","60.37","60.45","112.1"],"或者正则表达式":["47.0"],"名称匹配的组件则":["47.0"],"不会被缓存":["47.0"],"settimeout":["48.0","101.2"],"vue3":["48.0"],"如果有代码需要进去执行的话":["48.1"],"就进行push操作":["48.1"],"任务队列":["48.1"],"任务队列使用到的是数据结构中的队列结构":["48.1"],"它用来保存异步任务":["48.1"],"先进先出":["48.1"],"原则":["48.1"],"它主要负责将新的任务发送到队列中进行处理":["48.1"],"执行顺序":["48.1"],"先执行同步任务":["48.1"],"执行完接着执行微任务":["48.1"],"主线程任务的行完成后就会执行这个函数":["48.2"],"对watcher队列排序":["48.2"],"遍历执行watcher对应的run方法":["48.2"],"然后render":["48.2"],"更新视图":["48.2"],"也就是说":["48.2","78.30"],"this":["48.2","77.13","101.2","112.3"],"我的胃来食":["48.2"],"使用settmmediate":["48.3"],"虽然也是宏任务":["48.3"],"但是比settimeout更好":["48.3"],"以上都不支持的情况下":["48.3"],"使用settimeout":["48.3"],"环境判断结束就会得到一个延迟回调函数":["48.3"],"然后进入核心的":["48.3"],"nexttick":["48.3","48.6"],"nexttick方法":["48.3"],"这里的主要逻辑是":["48.3"],"把传入的回调函数放入回调队列":["48.3"],"执行保存的异步任务":["48.3"],"就会遍历":["48.3"],"执行相应的回调函数了":["48.3"],"这三行是使用了":["48.3"],"typescript中的":["48.3"],"函数重载":["48.3"],"方法的函数重载定义":["48.3"],"用于在异步更新":["48.3"],"就可以跳过":["48.5"],"b":["48.5","78.1"],"getid":["48.5"],"try":["48.5"],"遍历主任务队列":["48.5"],"批量执行更新任务":["48.5"],"active":["48.5"],"checkrecursiveupdates":["48.5"],"continue":["48.5"],"callwitherrorhandling":["48.5"],"errorcodes":["48.5"],"scheduler":["48.5"],"finally":["48.5"],"队列任务执行完":["48.5"],"重置队列索引":["48.5"],"flushpostflushcbs":["48.5"],"的":["48.6","114.1"],"会作为一个javascript的表达式被动态执行":["49.1"],"计算得到的值会被用作最终的参数":["49.1"],"举例来说":["49.1"],"如果你的足见实例有一个数据属性":["49.1"],"其值为":["49.1"],"那么这个绑定就等价于":["49.1"],"相似地":["49.1"],"还可以将一个函数绑定到动态事件名称上":["49.1"],"eventname":["49.1"],"dosonething":["49.1"],"是无论初始条件如何":["49.3"],"它都会被渲染":["49.3"],"只有css":["49.3"],"display":["49.3","61.25"],"会被切换":["49.3"],"来改变元素的可见性":["49.3"],"比":["49.4"],"的优先级更高":["49.4"],"并且不推荐在同一元素上使用这两个指令":["49.4"],"因为同时使用时会抛出一个错误":["49.4"],"ul":["49.4"],"li":["49.4","70.0"],"user":["49.4","75.5"],"users":["49.4"],"isactive":["49.4"],"isb":["49.5"],"classc":["49.5"],"isc":["49.5"],"fontsize":["49.5"],"size":["49.5"],"px":["49.5","64.29"],"styleobjecta":["49.5"],"styleobjectb":["49.5"],"绑定对象形式的":["49.5"],"缩写":["49.7"],"使用缩写的动态事件":["49.7"],"停止传播":["49.7"],"阻止默认事件":["49.7"],"api":["50.0"],"composition":["50.0"],"在生命周期上也有一些小的不同":["50.0"],"conposition":["50.0"],"beforedestroy":["50.1"],"组件实例销毁之前":["50.1"],"destroy":["50.1"],"组件实例销毁之后":["50.1"],"选项上":["50.2"],"mounted":["50.2"],"完成挂载":["50.2"],"生成的":["50.2"],"替换了":["50.2"],"选项所对应的":["50.2"],"两者的相同点":["50.3"],"都能拿到实例对象的属性和方法":["50.3"],"讨论这个问题本质就是触发的时机":["50.3"],"放在":["50.3"],"他们是使用es6类定义的":["50.4"],"生命周期钩子":["50.4"],"描述":["50.4"],"替代了vue2中的":["50.4"],"的作用":["50.4"],"需要注意的是":["50.5"],"钩子":["50.5"],"钩子需要在":["50.5"],"函数中使用":["50.5"],"onbeforeupdate":["50.5"],"onupdated":["50.5"],"更新":["50.5"],"钩子函数会在数据重新渲染之前运行":["50.5"],"可以用来在组件更新前执行一些操作":["50.5"],"时":["51.1","60.3","64.19","96.16"],"的状态":["51.2"],"那么就相当于我们把":["51.2"],"业务逻辑层":["51.3"],"viewmodel":["51.3"],"对所有数据的属性进行监听":["51.4"],"解析器":["51.4"],"会更新函数":["51.5"],"由于":["51.5","78.19","78.25","98.4"],"的某个":["51.5"],"选项执行响应具体化操作":["51.6"],"obj":["51.6","77.20","78.10","79.0"],"typeof":["51.6"],"object":["51.6","60.31","77.6","78.1"],"编译元素":["51.7"],"nodename":["51.7"],"else":["51.7","112.6"],"isinterpolation":["51.7"],"判断是否为插值文本":["51.7"],"由dep调用":["51.8"],"update":["51.8"],"call":["51.8"],"声明dep":["51.8"],"deps":["51.8"],"依赖管理":["51.8"],"adddep":["51.8"],"动态装在适当的资源并添加到页面":["52.2"],"页面在任何时间点":["52.2"],"都不会重新加载":["52.2"],"也不会将控制转移到其他页面":["52.2"],"举个例子":["52.2"],"或者":["52.3","60.18","97.4"],"svg":["52.3"],"时才被算作":["52.3"],"details":["52.3"],"fcp的区别":["52.3"],"fcp这两个指标之间的主要区别是":["52.3"],"fp是当浏览器开始绘制内容到屏幕上时":["52.3"],"只要在视觉上发生变化":["52.3"],"无论是什么内容触发的视觉变化":["52.3"],"import":["52.4","64.35","86.4"],"插件":["52.4"],"async":["52.4"],"resolve":["52.4"],"asynccomponent":["52.4"],"then":["52.4"],"如果是多个参数求和":["54.1"],"getsums":["54.1"],"args":["54.1","76.12"],"readfile":["54.3"],"从":["54.3"],"导入":["54.3"],"模块":["54.3"],"as":["54.3","108.6"],"trim":["55.2"],"known3":["55.2"],"类型可以复制给任意其他类型":["55.3"],"更新了es6新特性":["56.2"],"原型与原型链相关":["56.4"],"变量类型有很多种":["60.1"],"比如":["60.1"],"int":["60.1"],"并通过":["60.3"],"status":["60.3"],"属性判断服务器响应的状态码":["60.3"],"当":["60.3"],"等于":["60.3"],"并且":["60.3"],"表示请求成功":["60.3"],"并可以通过":["60.3"],"客户端请求的网页已经永久移动到新位置":["60.4"],"当链接发生变化时":["60.4"],"返回":["60.4"],"代码告诉客户端链接的变化":["60.4"],"闭包就是就是函数的":["60.6"],"堆栈":["60.6"],"其内部变量无需维护":["60.7"],"就可以使用闭包":["60.7"],"结果缓存":["60.7"],"我们在开发中会遇到很多情况":["60.7"],"循环引用":["60.8"],"当两个或多个对象相互引用时":["60.8"],"如果它们之间没有被正确断开引用关系":["60.8"],"就会形成循环引用":["60.8"],"这种情况下":["60.8"],"这些对象所占用的内存就无法被垃圾回收器回收":["60.8"],"从而导致内存泄漏":["60.8"],"定时器未被清除":["60.8"],"称为事件代理":["60.9"],"是js中很常用的绑定事件的技巧":["60.9"],"动态绑定事件处理程序":["60.10"],"由于事件委托是基于事件冒泡机制实现的":["60.10"],"因此可以动态地添加或删除子元素":["60.10"],"而无需重新绑定事件处理程序":["60.10"],"处理未来元素的事件":["60.10"],"由于事件委托是基于父元素的事件处理程序实现的":["60.10"],"标准浏览器使用":["60.11"],"目标阶段":["60.12"],"从目标节点触发":["60.12"],"存储的数据会在会话结束时失效":["60.13"],"即浏览器标签关闭":["60.13"],"安全性":["60.13"],"cookie存在一些安全性问题":["60.13"],"因为他可以被跨站脚本":["60.13"],"xss":["60.13"],"攻击":["60.13"],"key1":["60.16"],"value1":["60.16"],"key2":["60.16"],"prototype指向一个对象":["60.17"],"当函数作为构造函数时":["60.17"],"prototype就起到类似":["60.17"],"执行结果保存起来作为":["60.18"],"判断执行函数的结果是不是":["60.18"],"undefuned":["60.18"],"如果是则返回之前的新对象":["60.18"],"如果不是则返回result":["60.18"],"手写实现一个":["60.18"],"代码难以维护":["60.20"],"意思就是等这个异步操作执行":["60.21"],"执行完成之后再往下走":["60.21"],"️":["60.21"],"协议未规定":["60.22"],"的长度限制":["60.22"],"因此":["60.23","118.1"],"例如鼠标点击事件":["60.24"],"onclick":["60.24"],"要处理的事件名":["60.25"],"作为事件处理程序的函数和一个布尔值":["60.25"],"这个布尔值代表了什么阶段调用事件处理程序":["60.25"],"具体可见":["60.27"],"offsety":["60.28","82.0"],"来标识元素的初始坐标":["60.28"],"移动的距离应该是":["60.28"],"鼠标移动时的坐标":["60.28"],"鼠标按下去时刻的坐标":["60.28"],"例如":["60.30","83.0","92.0"],"var":["60.30","60.31","60.32","68.12","76.12","77.6","78.7","83.0","99.5"],"obj1":["60.31","77.6","77.18"],"obj2":["60.31","77.6"],"someotherobject":["60.31"],"anotherobject":["60.31"],"proxy":["60.32"],"来实现":["60.32"],"图片的宽度为":["60.35","60.36"],"width":["60.36"],"图片的高度为":["60.36"],"方法对于":["60.37"],"如果存在任意元市值":["60.37"],"它就默认将对象转换为标示它的原始值":["60.37"],"对象是符合值":["60.37"],"而且大多数对象无法真正表示为一个原始值":["60.37"],"因此默认的":["60.37"],"方法简单地返回对象本身":["60.37"],"而不是一个原始值":["60.37"],"函数和正则表达式简单地继承了这个默认方法":["60.37"],"调用这些类型的实例的":["60.37"],"方法只是简单地返回这个对象本身":["60.37"],"对原始值或者包装类":["60.37"],"baseclone":["60.37"],"base":["60.37"],"在右侧子串的每个位置插入左侧字符":["60.38"],"生成新的排列":["60.38"],"并加入结果数组":["60.38"],"tmp":["60.38"],"javascript的同源策略":["60.40"],"即":["60.40","119.1"],"协议":["60.40"],"端口相同":["60.41"],"浏览器处于安全方面考虑":["60.41"],"目录":["60.42"],"会判断这个目录是什么文件类型":["60.42"],"cdn托管":["60.42"],"标明高度与宽度":["60.42"],"如果浏览器没有找到这两个参数":["60.42"],"对象中的":["60.43"],"或者扩展运算符":["60.44"],"symbol":["60.45"],"浅拷贝":["60.45"],"只是简单的指针赋值":["60.45"],"map会返回一个新数组":["60.46"],"方法创建":["60.47"],"继承有六种":["60.47"],"原型继承":["60.47"],"身份认证的网络协议":["60.50"],"具有安全性的":["60.50"],"解密传输协议":["60.50"],"gizp":["60.51"],"压缩网站的js和css文件":["60.51"],"等到满足条件的时候再加载对应资源":["60.52"],"两者主要区别是一个提前加载":["60.52"],"比较流行的是":["61.1"],"色彩丰富":["61.2"],"适合存储真实照片":["61.2"],"适合存储简单图形和带有透明背景的图像":["61.3"],"缺点":["61.3","61.4"],"色彩表现不如":["61.4"],"和模型有两种":["61.5"],"标准盒模型":["61.5"],"ie盒模型":["61.5"],"这两者的区别主要在于宽高的包含范围":["61.5"],"表示标准盒子模型":["61.7"],"controls":["61.9","61.10"],"是否显示进度条":["61.9"],"poster":["61.9"],"没有播放之前现实的展位图片":["61.9"],"wav":["61.10"],"autoplay":["61.10"],"是否自动播放":["61.10"],"表单事件":["61.11"],"section":["61.12"],"英译为":["61.12"],"部分":["61.12"],"相当于":["61.12"],"figure":["61.12"],"边框图片的路径":["61.14"],"slice":["61.14"],"图片边框向内偏移":["61.14"],"属性相对于什么位置定位":["61.15"],"clip":["61.15"],"线性渐变":["61.16"],"overflow":["61.17"],"指定当文本溢出包含它的元素":["61.17"],"转换方法":["61.18"],"rotate":["61.18"],"旋转":["61.18"],"translate":["61.18","61.26"],"完成过渡效果需要花费的时间":["61.19"],"timing":["61.19"],"动画如何完成一个周期":["61.20"],"但增加了新标签":["61.21"],"不利于页面优化":["61.21"],"相对于浏览器窗口定位":["61.22"],"static":["61.22"],"默认值":["61.22","77.6"],"元素出现在正常的文档流中":["61.22"],"父元素设置text":["61.24"],"algin":["61.24"],"让隐藏节点的":["61.25"],"height":["61.25","61.32"],"为剩余高度的一半":["61.25"],"给父元素":["61.25"],"table":["61.25"],"transform":["61.26","68.7"],"子元素相对父元素绝对定位":["61.26"],"分别固定于页面的左右两侧":["61.27"],"中间的主体栏用左右":["61.27"],"值撑开距离":["61.27"],"webkit":["61.28"],"查找唯一类型":["61.30"],"attr":["61.30"],"属性选择器":["61.30","61.31"],"root":["61.30"],"行高":["61.32"],"line":["61.32"],"字体颜色":["61.32"],"color":["61.32","68.13"],"font":["61.32"],"字体种类":["61.32"],"将当前展示图片的前一张和后一张优先下载":["61.33"],"可以设置宽高等属性":["61.34"],"h6":["61.34"],"hr":["61.34"],"border":["61.35","68.9"],"外侧添加空白时用":["61.35"],"是":["61.36"],"根元素的":["61.38"],"1em":["61.38"],"1rem":["61.38"],"达到自适应的目的":["61.39"],"表现":["61.40"],"会导致":["61.41"],"html文档以混杂模式出现":["61.41"],"dragover":["61.42"],"在被拖放在某元素内移动时触发":["61.42"],"用户交互的这段过程":["61.43"],"影响的主要是":["61.43"],"压缩":["61.44"],"资源":["61.44"],"降低请求量":["61.45"],"合并资源":["61.45"],"减少":["61.45"],"主要负责传送0和1的电信号":["61.48"],"由此我们可得知internet通信的前提必须是知道双方的ip地址和mac地址":["61.48"],"以太网的物理地址":["61.48"],"ip地址负责确定接收方的子网":["61.48"],"mac地址负责确定接收方的主机地址":["61.48"],"tcp协议":["61.48"],"transmission":["61.48"],"control":["61.48"],"protocol":["61.48"],"传输控制协议":["61.48"],"是一种面向连接的":["61.48"],"可靠的":["61.48"],"基于字节流的":["61.48"],"传输层协议":["61.48"],"tcp协议的主要功能是当应用层向tcp层发送用于网间传输的":["61.48"],"用8位字节表示的数据流":["61.48"],"tcp则把数据流分割成适当长度的报文段":["61.48"],"最大传输段大小":["61.48"],"miss":["61.48"],"通常受该计算机连接的网络的数据链路层的最大":["61.48"],"传送单元":["61.48"],"mtu":["61.48"],"限制":["61.48"],"之后tcp把数据包传给ip层":["61.48"],"由他来通过将包传送给接收端实体的tcp层":["61.48"],"tcp三次握手":["61.48"],"scalable":["61.49"],"no":["61.49"],"采用border":["61.49"],"image的方式":["61.49"],"进行下一步操作":["61.50"],"需要特别注意的是":["61.50"],"如果改变":["61.50"],"两者相邻的外边距皆为正数时":["61.51"],"折叠结果是比较他们两者之间较大的值":["61.51"],"而":["63.5","103.1"],"不同":["63.5"],"当应用的状态被改变时":["63.5"],"全部组件都会重新渲染":["63.5"],"所以":["63.5","78.25"],"中用":["63.5"],"shouldcomponentupdate":["63.5"],"这个生命周期的钩子函数来控制":["63.5"],"组件写法不一样":["63.5"],"之间有何不同":["63.11"],"plugin":["63.24"],"vue的核心只关注视图层":["64.1"],"从而实现业务逻辑的重用":["64.2"],"这允许在不同的视图之间共享共同的viewmodel":["64.2"],"团队协作":["64.2"],"mvvm模式的分层结构可以使不同的团队成员在不同层次上独立工作":["64.2"],"减少了彼此的依赖性":["64.2"],"由于数据逻辑与展示逻辑分开":["64.2"],"所以对逻辑的修改和调试不影响用户界面的呈现":["64.2"],"mvvm模式通常具有双向数据绑定的功能":["64.2"],"使视图与数据保持同步":["64.2"],"从而实现了更实时的用户体验":["64.2"],"响应式编程":["64.2"],"mvvm模式通常设计响应式编程范式":["64.2"],"使数据的变化能够自动传播到相关的视图中":["64.2"],"只能单向绑定":["64.3"],"子组件内部不能直接修改父组件传递过来的数据":["64.3"],"只执行一次":["64.4"],"passive":["64.4"],"一般触摸事件的修饰符":["64.4"],"常用于改善移动端设备的滚屏性能":["64.4"],"键盘修饰符":["64.4"],"enter":["64.4"],"回车键":["64.4"],"delete":["64.4","78.16","78.21"],"捕获":["64.4"],"叫模版插值":["64.7"],"是它的另一种写法":["64.7"],"事件类型":["64.9"],"节点":["64.10"],"就会对内容清空并赋新值":["64.10"],"每个计算属性都包括一个":["64.11"],"getter":["64.11","64.49"],"view":["64.12"],"路由出口":["64.12"],"路由模版显示的位置":["64.12"],"api的浏览器":["64.15"],"依赖":["64.15"],"模式监听":["64.16"],"pushstate":["64.16"],"所以它不需要在服务器里面进行任何特殊处理":["64.18"],"对后端没啥影响":["64.18"],"改变hash值不会重新加载页面":["64.18"],"因为浏览器可以通过":["64.18"],"onhashchange":["64.18"],"事件监听hash的辩护":["64.18"],"url":["64.19","79.0"],"服务器接收请求并解析":["64.19"],"然后进行相应的逻辑处理":["64.19"],"当使用这种模式时":["64.19"],"会导致一个问题":["64.19"],"stateobject":["64.20"],"参数添加任意类型的数据到记录中":["64.20"],"而hash只能添加短字符串":["64.20"],"router":["64.22","64.35"],"push":["64.22","78.4","99.3"],"q":["64.23"],"vue":["64.23","64.35"],"category":["64.23"],"framework":["64.23"],"当需要传递筛选条件":["64.24"],"搜索关键字":["64.24"],"分页信息等非标识性信息时":["64.24"],"类名":["64.28"],"也可以使用数组语法":["64.28"],"样式信息":["64.29"],"dosomething":["64.31"],"me":["64.31"],"path":["64.33","79.0"],"login":["64.33"],"to":["64.34","78.7","78.9"],"重定向到一个不同的地址":["64.35"],"error":["64.35","106.4","108.2","120.3"],"将会把导航终止":["64.35"],"并把错误传递给":["64.35"],"onerror":["64.35"],"注册过的回调":["64.35"],"show":["64.36"],"default属性设置默认值":["64.37"],"在当前属性没有值传入时调用":["64.37","64.38"],"props也可以定义为":["64.37"],"为了开启":["64.37"],"对props类型的推导":["64.37"],"可通过":["64.38"],"进行解构":["64.38"],"父组件中使用自定义时间接收":["64.40"],"自定义事件名称必须与子组件传递的一致":["64.40"],"即登号前面名称一致":["64.40"],"等号后面的事件名称可自行定义":["64.40","64.41"],"事件中通过默认参数接收使用子组件传递的值":["64.40","64.41"],"setup函数中的时间必须":["64.40"],"setup语法糖中组件引入后使用":["64.41"],"无需注册":["64.41"],"子组件中的":["64.42"],"就是父组件放在子组件中的内容":["64.42"],"如果不传值":["64.43"],"orange":["64.44","64.45"],"apple":["64.44"],"slotname":["64.45"],"你不懂吗喽":["64.45"],"也可以通过解构来获取数据":["64.46"],"子组件child":["64.47"],"并在数据源变化时调用所给的回调函数":["64.48"],"ref":["64.49"],"回调函数接收两个数组":["64.50"],"分别对应来源数组中的新值和旧值":["64.50"],"第三个参数是可选的":["64.50"],"是一个对象":["64.50"],"支持下面这些选项":["64.50"],"当直接侦听一个响应式对象时":["64.51"],"侦听器会自动启用深层模式":["64.51"],"深层级变更状态所触发的回调":["64.51"],"调试选项与刷新时机":["64.51"],"每次监听的值发生变化时都会调用回调":["64.52"],"是否调用return":["64.52"],"必须有":["64.52"],"首页白屏":["64.53"],"等方法":["64.54"],"用于改变url":["64.54"],"以及":["64.54"],"currentroute":["64.54"],"matched":["64.54"],"等属性":["64.54"],"userouter":["64.54"],"函数或来获取路由器实例":["64.54"],"createrouter":["64.54"],"createwebhashhistory":["64.54"],"contact":["64.55"],"功能":["64.56"],"去除无用的代码":["64.56"],"减少包的大小":["64.56"],"fragment":["64.56"],"teleprot":["64.56"],"teleport":["64.56"],"中数据的过滤":["64.57"],"放置了所有的处理数据逻辑的方法":["64.57"],"当触发事件想改变":["64.57"],"数据的时候使用":["64.57"],"原文链接":["66.0"],"boxshadow":["67.0"],"1s":["68.1","68.8"],"0s":["68.1","68.8"],"rotatex":["68.2"],"0deg":["68.2"],"out":["68.3"],"delay":["68.3","68.5","68.6","68.8"],"0px":["68.4","68.5","68.11"],"270deg":["68.4"],"360deg":["68.4"],"bottom":["68.5","68.11","68.12"],"fill":["68.6"],"mode":["68.6"],"both":["68.6"],"32s":["68.6"],"keyframes":["68.7"],"scale":["68.7"],"9s":["68.8"],"465efb":["68.9","68.13"],"moz":["68.9"],"radius":["68.9"],"nth":["68.9","68.11"],"child":["68.9","68.11"],"2n":["68.9","68.11"],"right":["68.9","68.11","68.12"],"linear":["68.12"],"infinite":["68.12"],"20px":["68.13"],"background":["68.13"],"absolute":["68.14"],"left":["68.14"],"top":["68.14","120.3"],"50px":["68.14"],"150px":["68.14"],"25px":["68.14"],"75px":["68.14"],"无穷大":["69.0"],"优先生效":["69.0"],"例外规则":["69.0"],"当在一个样式声明中使用一个":["69.0"],"规则时":["69.0"],"此声明将覆盖任何其他声明":["69.0"],"虽然":["69.0"],"从技术上讲":["69.0"],"与优先级无关":["69.0"],"但它与最终的结果直接相关":["69.0"],"是一个坏习惯":["69.0"],"应该尽量避免":["69.0"],"v":["70.0"],"实现跳动的方块动画":["71.0"],"call与apply函数的差别":["74.0"],"就是后面传入的参数格式不同":["74.0"],"call传入的是每个单纯的元素":["74.0"],"而apply传入的是一个数组":["74.0"],"bind":["74.1"],"方法可以让对应的函数想什么时候调就什么时候调用":["74.1"],"登录后":["75.0"],"服务器在响应中使用":["75.0"],"parsedcookies":["75.1"],"将cookie编码为":["75.2"],"20name":["75.2"],"20smith":["75.2"],"something":["75.3"],"下都是可见的":["75.3"],"但是在":["75.3"],"home":["75.3"],"当在":["75.4"],"设置cookie时":["75.4"],"我们应该明确地将":["75.4"],"选项设置为根域":["75.4"],"那么":["75.4"],"所有子域都可以访问到这样的cookie":["75.4"],"document":["75.5","82.0","88.6"],"john":["75.5","78.13"],"expries":["75.5"],"如果我们将":["75.5"],"rfc6265":["75.6"],"touppercase":["76.3"],"foo":["76.5","77.10","78.5"],"the":["76.8"],"is":["76.8"],"located":["76.8"],"at":["76.8"],"const":["76.10","76.34","77.6","77.17","106.5","108.7","108.8"],"str":["76.10","79.0"],"c":["76.10","76.23","118.1"],"es5":["76.12"],"写法":["76.12"],"fun":["76.12"],"z":["76.12"],"es6":["76.12","96.14","99.8"],"func":["76.12"],"该方法还可以接收第二个参数":["76.13"],"作用类似于数组的":["76.13"],"用来对每个元素进行处理":["76.13"],"将处理后的值放入返回的数组":["76.13"],"上面代码中":["76.14","78.1"],"方法没有参数":["76.14"],"一个参数":["76.14"],"三个参数时":["76.14"],"返回的结果不一样":["76.14"],"填充":["76.16"],"从下标为1到下标为3的区间":["76.16"],"将索引为3及其之后的元素复制到索引为0的位置":["76.17"],"除了属性简写":["76.20"],"方法也可以简写":["76.20"],"abc":["76.21"],"es6中":["76.21"],"对象定义属性名的方式也有了变化":["76.21"],"prototype":["76.24","96.13"],"undefined":["76.30","92.0","96.16","108.6"],"d":["76.31"],"y":["76.31","77.10"],"内部调用转为调用regexp实例对应的":["76.32"],"regexp":["76.32"],"即直接写在参数定义的后面":["76.34"],"多个指数运算符连用时":["76.36"],"是从最右边开始计算的":["76.36"],"操作符":["77.0"],"对象和函数等基本组件":["77.0"],"而不会被提升到函数作用域":["77.2"],"这意味着在使用":["77.2"],"正常运行":["77.3","77.10"],"报错":["77.3","77.5","77.6"],"如果等号的右边不是数组":["77.5"],"或者严格地说":["77.5"],"不是可遍历的结构":["77.5"],"那么将会报错":["77.5"],"nan":["77.5"],"对于数据结构具有":["77.5"],"iterator":["77.5","78.24","78.25"],"接口":["77.5"],"那么都可以采用数组的形式进行解构赋值":["77.5"],"对象的解构赋值可以取到继承的属性":["77.6"],"setprototypeof":["77.6"],"对象的解构也能指定默认值":["77.6"],"默认值生效的条件是":["77.6"],"对象的属性值严格等于":["77.6"],"l":["77.7","78.29"],"syntaxerror":["77.10"],"duplicate":["77.10"],"parameter":["77.10"],"not":["77.10"],"函数表达式示例":["77.11"],"multiply":["77.11"],"该对象在函数体内不存在":["77.12"],"如果要用":["77.12"],"可以用":["77.12"],"箭头函数没有原型属性":["77.13"],"箭头函数的":["77.13"],"插入dom标签":["77.14"],"parent":["77.14","93.2"],"参数代替":["77.15"],"变量":["77.15"],"对象不是数组":["77.15"],"而是一个类数组的对象":["77.15"],"numbers":["77.17"],"alex":["77.18"],"可以提高代码的可读性和可维护性":["77.19"],"h":["77.21"],"ello":["77.21"],"hi":["77.21"],"属性名表达式与简洁表示法":["77.21"],"不能同时使用":["77.21"],"会报错":["77.21"],"属性名表达式如果是一个对象":["77.21"],"默认情况下会自动将对象转为字符串":["77.21"],"创建":["77.22"],"area":["77.23"],"r":["77.23","119.2","121.2"],"main":["77.23"],"是一个空对象":["78.1"],"没有任何拦截效果":["78.1"],"就等同于":["78.1"],"一个技巧是将":["78.1"],"设置到":["78.1"],"属性":["78.1"],"从而可以在":["78.1"],"上调用":["78.1"],"属性的描述对象":["78.2"],"defineproperty":["78.2"],"propdesc":["78.2"],"defineproperties":["78.2"],"propdescs":["78.2"],"preventextensions":["78.2"],"string":["78.4","106.2"],"reflect":["78.4"],"只要读写的属性名的第一个字符是下划线":["78.5"],"一律报错":["78.5"],"从而达到禁止读写内部属性的目的":["78.5"],"方法传入四个参数":["78.5"],"receiver":["78.5","78.7"],"bar":["78.5"],"上面示例中":["78.5"],"方法的第四个参数":["78.5"],"指的是原始的操作行为所在的那个对象":["78.5"],"一般情况下是":["78.5"],"ser":["78.5"],"方法拦截":["78.6"],"返回一个字符串":["78.6"],"通过":["78.6"],"函数调用":["78.6"],"twice":["78.6"],"怎么修改默认行为":["78.7"],"你总可以在":["78.7"],"上":["78.7"],"获取默认行为":["78.7"],"set":["78.7","78.8"],"on":["78.7"],"has":["78.9"],"been":["78.9"],"updated":["78.9"],"observer2":["78.9"],"可以作为对象的属性名来定义对象的私有成员":["78.10"],"包括对象和函数":["78.12"],"而对象只能使用字符串作为键":["78.12"],"age":["78.13"],"weakmap中的键是弱引用的":["78.14"],"这意味着如果键对象都没有其他引用":["78.14"],"部署私有属性":["78.15"],"返回实例":["78.16"],"不会重复":["78.17"],"那么这个对象将会被垃圾回收机制回收":["78.19"],"只要这些对象在外部消失":["78.20"],"删除值":["78.21"],"任何数据结构只要内部有":["78.23"],"循环":["78.24"],"函数可以简写下面的形式":["78.25"],"只是把接口规格加到数据结构之上":["78.25"],"typedarray":["78.26"],"函数的":["78.26"],"提前退出调用":["78.27"],"yield":["78.28"],"后面跟的是一个可遍历的结构":["78.28"],"它会调用该结构的遍历器接口":["78.28"],"后面跟着一个星号表示这个yield也是可迭代的":["78.28"],"可以被遍历":["78.28"],"generator":["78.28"],"o":["78.29","103.0"],"遍历set和map的元素":["78.29"],"generator函数除了状态机":["78.30"],"不能用多余的空格":["79.0"],"字符串不能用":["79.0"],"换行":["79.0"],"multiple":["79.0"],"lines":["79.0"],"max":["79.0"],"空行最多不能超过2行":["79.0"],"reassign":["79.0"],"不能重写native对象":["79.0"],"negated":["79.0"],"lhs":["79.0"],"操作符的左边不能有":["79.0"],"nested":["79.0"],"ternary":["79.0"],"禁止使用嵌套的三目运算":["79.0"],"禁止在使用new构造一个实例后不赋值":["79.0"],"禁止使用new":["79.0"],"require":["79.0","86.2"],"wrappers":["79.0"],"禁止使用new创建包装实例":["79.0"],"calls":["79.0"],"不能调用内置的全局对象":["79.0"],"比如math":["79.0"],"octal":["79.0"],"禁止使用八进制数字":["79.0"],"escape":["79.0"],"禁止使用八进制转义序列":["79.0"],"param":["79.0"],"禁止给参数重新赋值":["79.0"],"concat":["79.0","87.8"],"node中不能使用":["79.0"],"dirname或":["79.0"],"filename做路径拼接":["79.0"],"plusplus":["79.0"],"process":["79.0"],"禁止使用process":["79.0"],"exit":["79.0"],"proto":["79.0"],"redeclare":["79.0"],"禁止重复声明变量":["79.0"],"禁止在正则表达式字面量中使用多个空格":["79.0"],"restricted":["79.0"],"如果禁用了指定模块":["79.0"],"使用就会报错":["79.0"],"语句中不能有赋值表达式":["79.0"],"script":["79.0"],"禁止使用javascript":["79.0"],"void":["79.0"],"self":["79.0"],"compare":["79.0"],"不能比较自身":["79.0"],"sequences":["79.0"],"禁止使用逗号运算符":["79.0"],"外部作用域中的变量不能与它所包含的作用域中的变量或参数同名":["79.0"],"严格模式中规定的限制标识符不能作为声明时的变量名使用":["79.0"],"文件的blob数据":["81.0"],"文件名":["81.0","115.4"],"urlobject":["81.0"],"window":["81.0"],"webkiturl":["81.0"],"随滚动条滚动而改变":["82.0"],"pagey":["82.0"],"screenx":["82.0"],"鼠标相对于显示器屏幕左上角x轴的坐标":["82.0"],"screeny":["82.0"],"鼠标相对于显示器屏幕左上角y轴的坐标":["82.0"],"offsetx":["82.0"],"鼠标相对于事件源左上角x轴的坐标":["82.0"],"鼠标相对于事件源左上角y轴的坐标":["82.0"],"网页部分":["82.0"],"网页可见区域宽":["82.0"],"cjs是同步导入模块":["83.0"],"可以从node":["83.0"],"modules中引入一个库或者从本地目录引入一个文件":["83.0"],"mylocalmodule":["83.0"],"some":["83.0","88.6"],"local":["83.0"],"file":["83.0"],"都会生效":["83.0"],"当cjs导入时":["83.0"],"他会给你一个导入对象的副本":["83.0"],"location":["84.0"],"n1":["84.0"],"方法对数组的每个元素执行一次给定的函数":["85.1"],"设置时间":["86.0"],"格式化时间":["86.0"],"方式":["86.2"],"获取月份":["86.6"],"january":["86.6"],"december":["86.6"],"获取一个月中的某一天":["86.6"],"date":["86.6"],"获取一个星期中的某一天":["86.6"],"日期":["86.7"],"days":["86.7","86.15"],"星期":["86.7"],"weeks":["86.7"],"小时":["86.7"],"分钟":["86.7"],"0到12":["86.8"],"没有前导零的分钟数":["86.8"],"0到59":["86.8"],"有前导零的分钟数":["86.8"],"00到59":["86.8"],"s":["86.8","106.2"],"没有前导零的秒数":["86.8"],"1到59":["86.8"],"ss":["86.8"],"有前导零的描述":["86.8"],"01到59":["86.8"],"unix时间戳":["86.8"],"格式化年月日":["86.8"],"xxxx年xx月xx日":["86.8"],"months":["86.9"],"todate":["86.10"],"mmm":["86.11"],"yy":["86.11"],"5月":["86.11"],"startof":["86.12"],"day":["86.12"],"小时前":["86.12"],"昨天晚上7点49分":["86.13"],"今天晚上7点49分":["86.13"],"本年的的开始日期":["86.15"],"不存在":["87.1"],"上一次计算结果":["87.1"],"如果需要回调函数从数组索引为0的":["87.1"],"则为array":["87.3"],"初始":["87.4"],"化为数组中的第一个值":["87.4"],"回调函数从数组中的第二个值作为":["87.4"],"sum":["87.6","87.7"],"reduce":["87.6","87.11"],"cur":["87.8","87.13"],"第二种写法":["87.9","87.10"],"只是实现方法不同":["87.9"],"rings":["87.11"],"shining":["87.11"],"allbooks":["87.11"],"输出结果为":["87.12"],"newarr":["87.13"],"acc":["87.13"],"将由":["87.14"],"包装在已解决的":["87.14"],"f3":["87.14"],"输出为7":["87.15"],"示例":["88.1"],"延迟一秒后执行":["88.1"],"浏览器和node":["88.3"],"js环境通常将":["88.3"],"cleartimeout":["88.4","101.5"],"示例使用":["88.5"],"stopinterval":["88.5"],"执行动画操作":["88.6"],"例如移动元素":["88.6"],"getelementbyid":["88.6"],"可以更好的利用浏览器的优化":["88.7"],"recv状态":["89.1"],"established":["89.1"],"客户端与服务端发送同步标识syn后":["89.1"],"对方确认后进入tcp建立状态":["89.1"],"三次握手详细过程":["89.1"],"建立连接时":["89.1"],"客户端向服务端发syn包":["89.1"],"该数据包假设syn为j":["89.1"],"随机产生一个值seq":["89.1"],"发送确认包":["89.2"],"此时客户端进入":["89.2"],"此时tcp连接还没有释放":["89.2"],"必须经过两个":["89.2"],"msl":["89.2"],"才会进入":["89.2"],"closed状态":["89.2"],"可以看出服务端结束tcp连接的时间要比客户端早一些":["89.2"],"为什么建立连接时需要握手三次":["89.2"],"关闭连接时需要四次呢":["89.2"],"把某些层进行合并了":["90.0"],"本质上还是相同的":["90.0"],"太过细化":["90.0"],"有一定的参考意义":["90.0"],"但实现起来比较繁琐":["90.0"],"相比较而言":["90.0"],"使其在用户的浏览器上运行":["91.1"],"利用这些恶意脚本":["91.1"],"攻击者可获取用户的敏感信息":["91.1"],"包含":["91.2"],"伪协议":["91.2"],"等可执行代码":["91.2"],"dom型":["91.3"],"将攻击脚本写在url中":["91.3"],"诱导用户点击该url":["91.3"],"lt":["91.4"],"gt":["91.4"],"xsrf":["91.5"],"是一种挟制用户在当前已经登陆的web应用程序上执行非本意":["91.5"],"有效":["91.6"],"因为服务器并不是什么时候都能取到":["91.6"],"referer":["91.6"],"xss是内容没有过滤导致浏览器将攻击者的输入当代码执行":["91.7"],"csrf则是因为浏览器在发送http请求时候自动带上":["91.7"],"所有原始类型都有它们相应的对象包装类型":["92.0"],"这为处理原始值提供可用的方法":["92.0"],"bigint类型":["92.1"],"类型在":["92.1"],"中是一个数字的原始值":["92.1"],"它可以表示任意大小的整数":["92.1"],"通过属性访问其获取值":["92.3"],"可以是任意的":["92.3"],"javascript的值":["92.3"],"writable":["92.3"],"一个布尔值":["92.3"],"表示是否可以通过赋值来改变属性":["92.3"],"enumerable":["92.3"],"表示是否可以通过":["92.3"],"honda":["92.4"],"accord":["92.4"],"expected":["92.4","108.2"],"是构造函数":["93.0"],"原型对象":["93.1"],"有一个默认的":["93.1"],"继续引用上面的代码":["93.2"],"当我们想要为":["93.2"],"实例化的所有实例添加一个共享的属性时":["93.2"],"万物继承自":["93.3"],"这也就是为什么":["93.3"],"我们可以实例化一个对象":["93.3"],"并且可以调用该对象上没有的属性和方法了":["93.3"],"我们并没有在parent中定义任何方法和属性":["93.3"],"但是我们可以调用":["93.3"],"tostring":["93.3"],"hasownproperty":["93.3"],"等等一些方法":["93.3"],"我们可以调用很多我们没有定义的方法":["93.3"],"这些方法从哪里来的呢":["93.3"],"现在引出":["93.3"],"原型链":["93.3"],"那么我们再回来看一下":["93.4"],"再次打印":["93.4"],"此时的a才会打印1":["94.0"],"这个a":["94.0"],"也会打印1":["94.0"],"为什么会这样呢":["94.0"],"由于函数的局部作用域的问题":["94.0"],"全局变量访问不到函数内部的变量":["94.0"],"所以会打印":["94.0"],"就拿这个例子来说":["94.0"],"由于在下面var了一个变量":["94.0"],"但是由于变量的提升":["94.0"],"它会先赋值为":["94.0"],"并且提升到函数体内部的顶端":["94.0"],"也就是说此时的":["94.0"],"虽然全局作用域里边已经声明了变量":["94.0"],"但是由于函数体内部的变量的提升":["94.0"],"从先后顺序来讲":["94.0"],"它会现访问到全局的作用域里的":["94.0"],"渲染树":["95.1"],"什么是":["95.2"],"render树":["95.2"],"在了解":["95.2"],"之前":["95.2","103.0"],"我们先了解一下浏览器在页面加载完成后到页面显示的中间过程":["95.2"],"首先将得到的代码解析生成":["95.2"],"dom树":["95.2"],"这个dom树里边包括了所有的html的标签":["95.2"],"包括":["95.2","95.4"],"或者元素的子孙元素继承了":["95.3"],"改变":["95.4"],"浏览器窗口":["95.4"],"resize":["95.4"],"当你查询布局信息":["95.4"],"offsetleft":["95.4"],"offsettop":["95.4"],"属性都会引起重绘":["95.5"],"做动画的时候要注意":["95.5"],"尽量使用这两个属性":["95.5"],"使用csstext来替代要多次修改的style属性":["95.6"],"重绘的操作放入这个队列":["95.7"],"等队列中的操作到了一定的数量或者到了一定的时间间隔":["95.7"],"满足条件的下标":["96.1","96.20"],"x2":["96.2"],"num":["96.3","122.5","122.6"],"isbigenough":["96.5"],"islessthan4":["96.6","96.7"],"我们可以使用解构的方式也可以合并两个或者多个数组":["96.14"],"方法时":["96.16"],"如果调用方法的元素是":["96.16"],"会返回报错":["96.16"],"因为这些类型的数据没有":["96.16"],"而在使用":["96.16"],"表示从下标为1的元素开始删除":["96.18"],"删除0个元素":["96.18"],"生成字母表":["96.22"],"并将其序列排序":["96.22"],"charcodeat":["96.22"],"筛选出奇数项":["96.23"],"引用数据类型保存在堆内存中":["97.1"],"如果属性是引用类型":["97.2"],"拷贝的就是内存地址":["97.2"],"循环递归":["97.4"],"deepclone":["97.4"],"hash":["97.4"],"weakmap":["97.4"],"如果对象是":["97.4"],"深拷贝会另外创造一个一模一样的对象":["97.5"],"新对象跟原对象不共享内存":["97.5"],"修改新对象不会改到原对象":["97.5"],"深拷贝":["97.5"],"深拷贝是递归拷贝深层次":["97.6"],"都是通过发出":["98.0"],"如果其用户界面是从缓存中获取的":["98.1"],"如果命中":["98.2"],"直接从缓存中获取资源":["98.2"],"如果没有命中":["98.2"],"则进入下一步":["98.2"],"如果前两步都没有命中":["98.2"],"但结果已失效":["98.3"],"从上述示例中可以看到":["98.4"],"http响应报文中":["98.4"],"的时间值":["98.4"],"是一个绝对值":["98.4"],"http响应报文中的":["98.4"],"为":["98.4"],"是相对值":["98.4"],"优先级高于":["98.4"],"那么直接根据":["98.4"],"cashe":["98.4"],"返回304":["98.5"],"的字段值":["98.6"],"则":["98.6"],"重新返回该资源":["98.6"],"状态码为200":["98.6"],"否则返回304":["98.6"],"代表资源无更新":["98.6"],"可继续使用缓存文件":["98.6"],"返回当前资源文件的一个唯一标识":["98.6"],"由服务器生成":["98.6"],"etag":["98.7"],"就把这个b称为":["99.0"],"a的子类":["99.0"],"货箱":["99.1"],"minicar":["99.1"],"原型式继承":["99.2"],"s2":["99.3","99.5"],"s1":["99.5"],"可以看到":["99.8"],"打印出来的结果":["99.8"],"属性得到了继承":["99.8"],"方法也没有问题":["99.8"],"文章一开头":["99.8"],"我们使用的是":["99.8"],"中的":["99.8"],"extends":["99.8","107.3"],"最后的寄生组合式继承方式是通过组合继承改造之后的最优的继承方式":["99.9"],"中的参数":["100.0"],"getsearchstring":["100.0"],"结果":["100.0"],"key":["100.0","118.1"],"需要检索的键":["100.0"],"传入的需要分割的url地址":["100.0"],"例":["100.0"],"getsearchstr":["100.0"],"为了优化体验":["101.0"],"需要对这类事件进行调用次数限制":["101.0"],"对此我们就可以采用":["101.0"],"则只生效一次":["101.1"],"两者结合":["101.2"],"throttled":["101.2"],"只需要在窗口完成调整后":["101.6"],"再计算窗口大小":["101.6"],"使用事件驱动":["103.0"],"非阻塞i":["103.0"],"模型而得以轻量和高效":["103.0"],"非常适合在分布式设备上运行数据密集型的实时应用":["103.0"],"在理解":["103.0"],"先明确几个概念":["103.0"],"终端":["103.0"],"终端指的是设备终端终端设备":["103.0"],"会为每一个客户端链接创建一个线程":["103.1"],"而每个线程需要大约2mb的内存":["103.1"],"在一个8gb的服务器上":["103.1"],"大约能同时为4000左右的用户服务":["103.1"],"通过非阻塞i":["103.1"],"深入理解typescript":["105.0"],"enum":["106.0"],"关键字":["106.0"],"反向映射":["106.1"],"以免发生不必要的错误":["106.2"],"手动赋值可以不是数字":["106.2"],"这个时候需要通过类型断言来跳过tsc的类型检查编译出来的js仍是可用的":["106.2"],"编译结果":["106.2"],"在这种情况下":["106.3"],"当前枚举成员的值为上一个枚举成员的值加":["106.3"],"但第一个枚举元素是个例外":["106.3"],"如果它没有初始化方法":["106.3"],"那么它的初始值为":["106.3"],"枚举成员使用常数枚举表达式初始化":["106.3"],"ts2474":["106.4"],"declarations":["106.4"],"member":["106.4"],"initializer":["106.4"],"must":["106.4"],"be":["106.4"],"constant":["106.4"],"常出现在声明文件中":["106.5"],"同时使用":["106.5"],"也是可以的":["106.5"],"灵活和类型安全的代码":["107.1"],"泛型允许我们在定义函数":["107.1"],"loggingidentity":["107.3"],"arg":["107.3"],"ts泛型类型不明确":["107.3"],"我们可以在函数参数类型上加上一些限制":["107.3"],"只能让它穿入那些包含":["107.3"],"属性的变量":["107.3"],"这个限制操作就是":["107.3"],"interface":["107.3"],"lengthwise":["107.3"],"mygenericnumber":["107.5"],"使用交叉类型进行接口混入":["108.1"],"初始时的":["108.1"],"answer":["108.1"],"定义":["108.1"],"iquestionrecord":["108.1"],"throw":["108.2"],"or":["108.2"],"got":["108.2"],"变量的技术":["108.3"],"通常与联合类型与交叉类型一起使用":["108.3"],"操作符将":["108.5"],"的类型收窄到":["108.5"],"类上":["108.5"],"之后调用":["108.5"],"getsmallpet":["108.6"],"分支的类型细化为有一个可选的或不存在属性":["108.7"],"move":["108.7"],"nameorresolver":["108.8"],"这个写法会报错":["108.9"],"如果需要使用类型注解的层次结构":["108.9"],"请使用接口":["108.9"],"它能使用":["108.9"],"implements":["108.9"],"extedns":["108.9"],"为一个简单的对象类型使用类型别名":["108.9"],"只需要一个与异化的名字就可以":["108.9"],"另外":["108.9"],"当想给联合类型和交叉类型提供一个语义化的名称时":["108.9"],"类型别名是一个好的选择":["108.9"],"请注意":["108.9"],"类型别名在":["108.9"],"interfaced":["108.10"],"在旧版本的":["108.10"],"substr":["108.11"],"ok":["108.11"],"否则返回":["108.12"],"shiftarr":["108.12"],"arr":["108.12"],"unknown":["108.12"],"否":["110.0"],"调用成功回调":["110.0"],"调用失败回调":["110.0"],"complete":["110.0"],"调用完成回调":["110.0"],"不管成功失败都会回调":["110.0"],"人脸核验交互方式":["110.0"],"默认":["110.0"],"见表1":["110.0"],"表1":["110.0"],"与":["112.1"],"可以直接":["112.2"],"通过索引":["112.2"],"来访问":["112.2"],"成本就很低":["112.2"],"单向链表与数组各个操作时间复杂度对比":["112.2"],"链表操作":["112.2"],"最大时间复杂度":["112.2"],"search":["112.2"],"获取指定位置节点的值":["112.4"],"getat":["112.4"],"既可以":["112.5"],"向前查询":["112.5"],"也可以":["112.5"],"向后查询":["112.5"],"deletenode":["112.6"],"currentnode":["112.6"],"deletednode":["112.6"],"如果要删除的是头部节点":["112.6"],"将头部节点设置为第二个节点":["112.6"],"它将成为新的头部节点":["112.6"],"将新头部节点的前驱设置为":["112.6"],"如果链表中的所有节点的值都和传入的参数相同":["112.6"],"那么所有节点都会被删除":["112.6"],"因此需要更新尾部节点":["112.6"],"如果要删除的是尾部节点":["112.6"],"将尾部节点设置为倒数第二个节点":["112.6"],"它将成为新的尾部节点":["112.6"],"如果要删除的是中间节点":["112.6"],"previousnode":["112.6"],"nextnode":["112.6"],"抽象":["114.1"],"是因为这里的语法并不会表示出真实语法中出现的每个细节":["114.1"],"blockstatement":["114.2"],"expressionstatement":["114.2"],"callexpression":["114.2"],"callee":["114.2"],"memberexpression":["114.2"],"转化过程":["114.3"],"这个过程就是将上一步解析后的内容":["114.3"],"按照编译器指定的规则进行处理":["114.3"],"指的是语法上不可能再分的":["114.4"],"最小的单个字符或字符串":["114.4"],"是编译过程的一个逻辑阶段":["114.4"],"解决了开发代码与实际运行代码不一致时帮助我们debug到原始开发代码的技术":["115.1"],"实际运行的代码与开发环境的代码不一致":["115.2"],"导致进行debug越来越困难":["115.2"],"如果被关闭可以手动开启":["115.3"],"下图所示":["115.3"],"嵌入":["115.4"],"不单独生成":["115.4"],"性能最好":["115.4"],"生成文件":["115.4"],"然后在末尾添加模块来源":["115.4"],"sourceurl":["115.4"],"依靠sourceurl找到原始代码的位置":["115.4"],"错误追踪":["115.4"],"源码行和列位置":["115.4"],"定位最全":["115.5"],"但":["115.5"],"map文件最大":["115.5"],"性能最低":["115.5"],"inline":["115.5","115.8"],"处理后结果":["115.5"],"base64":["115.5"],"字符串":["115.5"],"source":["115.7"],"而言":["115.7"],"此时页面":["115.7"],"一般情况下":["115.9"],"我们并不希望其他人都可以在浏览器直接看到我们未编译的源码":["115.9"],"所以我们不应该直接提供sourcemap给浏览器":["115.9"],"但我们又需要sourcemap来定位我们的错误信息":["115.9"],"一方面":["115.9"],"因为它并未提供核心工具类":["117.1"],"所有功能可以通过预设和内联配置提供":["117.1"],"info":["117.1","120.3"],"想通过git把github上别人的代码clone到本地":["118.0"],"如果没有那么就需要绑定ssh":["118.1"],"需要输入命令":["118.1"],"keygen":["118.1"],"t":["118.1"],"则是将远程主机的最新内容拉下来后直接合并":["119.1"],"branch":["119.2","120.2","123.2"],"的基本操作":["119.2"],"查看本地所有分支":["119.2"],"查看远程所有分支":["119.2"],"查看本地和远程的所有分支":["119.2"],"branchname":["119.2"],"取回更新后":["119.3"],"会返回一个":["119.3"],"将拉取下来的最新内容合并到当前所在的分支中":["119.4"],"即将远程主机的某个分支的更新取回":["119.4"],"并与本地指定的分支合并":["119.4"],"完整格式可表示为":["119.4"],"pull成功":["120.2"],"现在使用git":["120.2"],"log看下一提交历史":["120.2"],"oneline":["120.2"],"graph":["120.2"],"f63ecbf":["120.2"],"修正bug":["120.2"],"优化内置通道配置":["120.2"],"完善日报接口":["120.2"],"9f73b5e":["120.2"],"增加内置通道设置功能":["120.2"],"a0d464e":["120.2"],"竟然分叉了":["120.2"],"由于我本地master的提交历史和远端的master分支的提交历史不一致":["120.2"],"所以git为我进行了自动合并":["120.2"],"然后生成了一个新的提交历史":["120.2"],"对于部分强迫症来说这个不能接受的":["120.2"],"不想看到分叉":["120.2"],"在feature分支上执行":["120.3"],"rebase":["120.3"],"这句命令的意识是":["120.3"],"以master为基础":["120.3"],"将feature分支上的修改增加到master分支上":["120.3"],"并生成新的版本":["120.3"],"first":["120.3"],"rewinding":["120.3"],"replay":["120.3"],"work":["120.3"],"applying":["120.3"],"using":["120.3"],"reconstruct":["120.3"],"tree":["120.3"],"falling":["120.3"],"back":["120.3"],"patching":["120.3"],"way":["120.3"],"changes":["120.3"],"patch":["120.3"],"本feature分支多次commit":["121.0"],"最后提交master后":["121.0"],"到另一个分支上":["121.1"],"使得目标分支上的提交历史变得整洁和线性":["121.1"],"reword":["121.2"],"表示保留着一个commitid":["121.2"],"但是需要修改commit的注释":["121.2"],"e":["121.2"],"edit":["121.2"],"但是要停止rebase操作来进行这次提交的修改":["121.2"],"即修改变更的代码与commit与注释":["121.2"],"squash":["121.2"],"表示将这个commitid与前一个commitid合并":["121.2"],"f":["121.2"],"fixup":["121.2"],"使得该工作目录变成一个干净的工作状态":["122.0"],"但又不想创建新的分支来存储每个实验性更改":["122.1"],"可以使用":["122.1"],"只是要保存的描述为空":["122.3"],"执行存储时":["122.3"],"添加备注":["122.3"],"比如查看第二个stash详情":["122.5"],"如果要应用并删除其他":["122.8"],"命令":["122.8"],"是不能被":["122.10"],"存起来的":["122.10"],"那要怎么办呢":["122.10"]},{"0":["32.0","54.1","68.12","77.5","100.0","107.5"],"1":["14.2","14.4","18.1","28.0","30.7","34.0","56.2","68.3","76.9","77.6","77.10","78.4","87.3","100.0","108.12","110.0"],"2":["60.31","60.47","76.6","77.17","78.6","86.8","89.1","108.10","108.12"],"3":["13.4","60.44","60.47","76.30","77.17","78.18","108.12"],"4":["12.3","61.27","77.12","87.14","99.5","107.3","108.2"],"5":["61.21","74.0","77.6","107.3"],"6":["52.4","96.1","96.6","96.7","96.20"],"7":["22.0","32.0","74.0","108.10"],"8":["18.1","28.0","30.7","34.0"],"9":["74.0"],"10":["74.0"],"11":["31.1"],"12":["86.15"],"14":["76.12","86.7"],"17":["76.12"],"19":["86.11"],"20":["77.18"],"27":["1.0"],"39":["91.4","114.2"],"40":["114.2"],"43":["114.2"],"50":["68.15"],"75":["68.10"],"80":["68.6","68.12"],"85":["68.12"],"90":["68.12"],"95":["68.12"],"98":["76.9"],"100":["61.31","68.15"],"106":["12.2"],"123":["64.22"],"180":["68.2"],"403":["60.4"],"404":["60.4"],"1000":["45.1","88.1","88.2","88.5"],"1234":["96.15"],"1999":["81.0"],"3600":["75.5"],"result":["1.0","76.3"],"continue":["2.0","120.3"],"left":["2.0","78.6","95.4"],"right":["2.0","78.6"],"双指针夹逼":["2.0"],"while":["2.0","6.0","77.5"],"sum":["2.0","78.6"],"的":["3.0","75.0"],"get":["3.0","78.7","92.3","120.3"],"方法得到下标":["3.0"],"length":["4.0","32.0","100.0"],"index":["4.0","78.25"],"for":["4.0","25.4","54.1","100.0"],"if":["4.0","8.0","9.0","87.9","87.10","87.13","108.5","108.7","108.8"],"else":["5.0","9.0","60.38"],"rightindex":["6.0"],"寻找左边递减序列":["6.0"],"寻找右边递减序列":["6.0"],"使用二分法查找":["7.0"],"return":["8.0","41.10","51.6","76.20","77.11","78.7","87.6","87.7","87.11"],"true":["9.0","13.5","76.4","76.22","76.31","77.5","78.27","92.4","96.13"],"求解":["10.0"],"typescript":["10.0"],"const":["10.0","64.35","77.22","87.14"],"pivotindex":["10.0"],"number":["10.0","92.0","108.9"],"reduce":["10.0"],"cur":["10.0","87.7","87.11"],"tar":["10.0"],"求和":["10.0"],"k":["11.0","25.4","54.1","107.4"],"js的包管理软件":["12.0"],"js":["12.0","32.2","32.3","63.5"],"基于chrome":["12.0"],"v8引擎的本地":["12.0"],"x版本起就可以正确的开发angularjs网站":["12.1"],"再往前的版本没有评估":["12.1"],"使用最新的11":["12.1"],"3版本是在准备本书内容过程中":["12.1"],"m":["12.2","19.3"],"chrome的版本对于应用angularjs并不关键":["12.2"],"本书特意安装目前的最新版本":["12.2"],"js版本是5":["12.3"],"所有命令后面都跟上了一个":["12.4"],"在右边的location设置好项目的位置":["13.0"],"然后点击界面右下角的create即可":["13.0"],"三个目录的设置应该比较熟悉":["13.1"],"他们分别用于存放对应的文件":["13.1"],"通过设置一个public目录":["13.2"],"并在部署时将网站的根目录直接指向到":["13.2"],"目录":["13.2"],"直接在下方生成的文件解析的部分":["13.3"],"moduletype":["13.5"],"node":["13.5"],"test":["13.5"],"tests":["13.5"],"looks":["13.5"],"good":["13.5"],"命令运行完毕后":["13.5"],"会在项目的根目录生成一个":["13.5"],"directory":["13.6"],"components":["13.6","14.1"],"图2":["13.7"],"首先":["14.0"],"public":["14.1"],"命令解释":["14.1"],"这行命令告诉":["14.1"],"在这个项目中安装":["14.1"],"x":["14.2","14.4","19.0","23.3","28.0","30.7","34.0","76.13","96.22","108.9","121.2"],"body":["14.2","19.0","31.0","61.38"],"小贴士":["14.3"],"将js文件放在head部分和body部分有何区别":["14.3"],"如果angularjs没有成功运行":["14.5"],"那么您看到的应该是如下内容":["14.5"],"txt":["14.5"],"深入学习":["15.0"],"directive":["15.0","19.5"],"数据获取":["15.0"],"http":["15.0","61.45","61.48","81.0"],"如何使用第三方的angularjs扩充库":["15.0"],"ui":["15.0"],"route":["15.0"],"从上我们可以看出":["16.0"],"双括号":["16.0"],"内的内容":["16.0"],"其实是一个javascript表达式":["16.0"],"达到加速访问和代码复用的效果":["17.0"],"下面":["17.0"],"我们将分别介绍":["17.0"],"支持直接传入静态文本":["17.1"],"传入变量":["17.1"],"传入函数":["17.1"],"返回网页地址":["17.1"],"的方式来进行调用":["17.1"],"另外":["17.1","77.10"],"的用法也可以直接作为标签名使用":["17.1"],"但是我目前不清楚具体的使用方法和效果":["17.2"],"代码片段的方法就是上诉的":["17.3"],"include":["17.3"],"方法":["17.3","108.5"],"的扩展功能":["18.0"],"只需要在独立的javascript文件中将":["18.0"],"meta":["18.1","30.7","34.0"],"charset":["18.1","30.7","34.0"],"utf":["18.1","28.0","30.7","34.0"],"title":["18.1","28.0","30.7","60.51","108.1"],"学习angularjs":["18.1","28.0","30.7","34.0"],"app在body时的运行结果":["18.2"],"我们可以看到":["18.2"],"网页标题中的angularjs表达式并没有执行":["18.2"],"这是因为网页的":["18.2"],"标签中的内容":["18.2"],"并不在angularjs的管理之下":["18.2"],"如果我们将":["18.2"],"那么网页将不能正常的展示":["18.3"],"并且我们可在chrome的":["18.3"],"将firstctrl绑定到这个div标签上":["19.0"],"这个标签中的内容将可以使用firstctrl中的数据":["19.0"],"div":["19.0","20.2","31.0","32.4","33.0"],"h1":["19.0"],"并注入":["19.2"],"下文详解":["19.2"],"来调用":["19.3"],"命名并不是固定用法":["19.3"],"我们也可以使用":["19.3"],"shuju":["19.3"],"在":["19.4","61.38","64.12","99.1"],"scope":["19.4"],"或":["19.5","75.3","76.14"],"等功能时":["19.5"],"或者将数据在多个":["19.5"],"并使用ng":["20.0","20.1"],"model绑定了data":["20.0"],"input":["20.0","22.1","23.2","24.1","24.2","49.7"],"type":["20.0","22.1","23.2","24.2","28.0","31.1"],"text":["20.0","24.2","28.0","31.1","73.1"],"model":["20.0","21.2","24.1","25.2","25.3","25.4","27.1"],"这里我们放置一个按钮":["20.1"],"click绑定了":["20.1"],"onclick事件":["20.1"],"button":["20.1","22.1","50.5"],"style":["20.2","25.0","34.0","63.5","88.6"],"class":["20.2","28.4","99.8"],"示例文本":["20.2"],"可输入strike":["20.2"],"show中的文字":["21.0"],"false":["21.0","76.5","78.28"],"angularjs只是使用css控制将内容隐藏起来":["21.1"],"这两者可以应用于不同的场景":["21.1"],"如果内容较多":["21.1"],"ng":["21.2","34.0"],"运行结果":["22.0"],"图4":["22.0"],"repeat运行结果":["22.0"],"为了更好的查看具体的运行效果":["22.0"],"我们可以查看下最终生成的html代码":["22.0"],"value":["22.1","25.1","51.6","78.4","78.28","78.29","83.0"],"我是第":["22.1"],"click":["22.1","48.4","50.5"],"可选货币单位和保留小数位数":["23.0"],"将数字转化为文本":["23.0"],"自动加逗号":["23.0"],"可选设置小数位数":["23.0"],"date":["23.0","86.10","97.4"],"harry":["23.1","27.0","30.3","37.1"],"data":["23.2","28.3","64.3"],"message":["23.2","49.6","64.26","77.6"],"table":["23.3","23.4","61.34"],"tr":["23.3","23.4"],"repeat":["23.3","23.4","30.5"],"in":["23.3","30.5","30.6","70.0","77.10","87.9","92.3","107.3"],"示例文字":["24.1"],"checkbox":["24.1"],"选中后上方文字将加上删除线":["24.1"],"style中加上strike类":["24.1"],"br":["24.1","25.0"],"此示例可举一反三":["24.3"],"比如加入多个文本输入":["24.3"],"恢复原始":["24.4"],"设置背景颜色":["24.5"],"blue":["24.5"],"当前选中的颜色":["25.0"],"border":["25.0"],"solid":["25.0"],"1px":["25.0"],"height":["25.0","60.35","60.36","68.15","95.4"],"20px":["25.0"],"background":["25.0","68.14","91.2"],"option":["25.1"],"选择一个颜色":["25.1"],"然后修改ng":["25.2"],"options的语法":["25.2"],"html":["25.2","25.3","32.4","33.0","34.0","63.5"],"select":["25.2","25.3","25.4"],"colorchosen":["25.2","25.3"],"的语法":["25.3"],"as":["25.4","120.3"],"v":["25.4"],"也请尽量的实际的运行一下示例":["26.0"],"作为类属性":["27.0"],"学习directive可能会多花您一些时间":["27.2"],"link":["28.0","30.7","81.0"],"css":["28.0","30.7","34.0","61.49","63.5","68.15"],"在实例中":["28.1"],"我们直接在第二个参数的函数中返回了一个对象":["28.1"],"可以看到":["28.2"],"angularjs在":["28.2"],"name":["28.3","76.3","93.2","123.1","123.2"],"性别":["28.3"],"c":["28.4","78.4","96.22","107.2"],"对directive的命名":["29.0"],"angularjs是有特殊的规则需求的":["29.0"],"people":["29.1"],"angularjs提出了这套解决方法":["29.3"],"将字段中的连接符号去除":["29.4"],"并将第二个单词开始改为首字母大写":["29.4"],"其他字母小写":["29.4"],"但是实际使用中":["29.5"],"推荐使用":["29.5"],"所以":["29.6"],"如果你的项目需要使用html5的验证工具":["29.6"],"那么就需要在字段前加上data":["29.6"],"secondctrl":["30.0"],"第二个人的信息":["30.0"],"这样做":["30.0"],"无法实现动态化的列表":["30.0"],"是无法实现我们期望的功能的":["30.0"],"我们理想中的情况应该是什么样子呢":["30.0"],"男":["30.1"],"注意":["30.1","77.9"],"这里我将restrict从":["30.1"],"e":["30.1"],"element元素":["30.1"],"改变成为了":["30.1"],"attribute":["30.1"],"属性":["30.1"],"这样它的使用方法有了一些变化":["30.1"],"的属性":["30.2","95.3"],"并将它的值存储在":["30.2"],"info":["30.3","76.12","98.4","106.4","121.2"],"span":["30.4","30.5"],"person":["30.4","30.5","99.7"],"peoplelist":["30.5"],"json":["30.5"],"注意此处的数据传入方法":["30.6"],"head":["30.7","34.0"],"rel":["31.0"],"stylesheet":["31.0"],"form":["31.0","49.7","77.15","98.4"],"templateurl的使用":["31.1"],"要使用这个功能":["31.1"],"我们需要在":["31.1"],"script":["31.1"],"标签中":["31.1"],"首先声明":["31.1"],"并给这段代码进行命名":["31.1"],"示例代码中的":["31.1"],"templateurl":["31.2"],"childhead":["32.0"],"prevsibling":["32.0"],"nextsibling":["32.0"],"ng339":["32.0"],"attr":["32.0"],"核心部分":["32.1"],"中":["32.2","63.5","112.5"],"保证在":["32.2"],"引入之前引入":["32.2"],"children":["32.4","41.9"],"addclass":["32.4"],"strike":["32.4"],"removeclass":["32.5"],"firstctrl":["33.0"],"content":["34.0","77.14","108.1"],"doctype":["34.0"],"lang":["34.0"],"zh":["34.0","75.6"],"href":["34.0","64.27"],"仓库":["36.0"],"options":["37.3","38.0"],"引入ng":["37.3","38.0"],"include和模板ng":["37.3","38.0"],"template":["37.3","38.0"],"本章总结":["37.3"],"中文版":["37.4"],"stoyan":["37.4"],"stefanov":["37.4"],"著":["37.4"],"李强":["37.4"],"那样做感觉上比较混乱":["37.5"],"难以管理":["37.5"],"前端网站可以使用阿里云的cdn直接进行访问加速":["37.6"],"后端在使用api模式通讯的情况下":["37.6"],"本来就可以极大的提高负载能力":["37.6"],"虽然这个说法比较武断":["37.7"],"但是其中也体现出来一个明显的信息":["37.7"],"这让我完全不用再操心dom":["37.8"],"因为这两点特性":["37.8"],"我义无反顾的加入了使用angularjs的大军":["37.8"],"题外话":["37.8"],"国外网站购买的这种模板":["37.8"],"都是由专业的前端人员开发":["37.8"],"提供的功能都非常丰富完整":["37.8"],"他们对管理工具的使用也很正规":["37.8"],"使用bower或其他工具来管理第三方库等":["37.8"],"代码结构和注释也非常完善":["37.8"],"对我而言":["37.8"],"这笔投资绝对物有所值":["37.8"],"另一方面也是为了给自己一点压力":["37.9"],"让自己沉下心来掌握这门技术":["37.9"],"我在angularjs方面也是一名菜鸟":["37.9"],"查看该许可协议":["37.10"],"attribution":["37.10"],"noncommercial":["37.10"],"international":["37.10"],"cc":["37.10"],"copyright":["37.10"],"下拉列表选项":["38.0"],"order":["41.1"],"commponent":["41.1"],"数据驱动视图更新":["41.2"],"虚拟dom":["41.2"],"由浏览器的渲染流水线可知":["41.2"],"dom":["41.2","48.3"],"8版本引入hooks之后":["41.3"],"它提供了一种新的方式来使用状态和其他":["41.3"],"react":["41.3","44.6"],"业务代码更加聚合":["41.4"],"render":["41.5"],"context":["41.6","77.10"],"无数据就是初始化状态":["41.7"],"history":["41.7"],"api":["41.7","64.19","64.56"],"编译转换为浏览器识别语言":["41.8"],"props":["41.9","49.5"],"捕获全局错误":["41.10"],"window":["41.10","60.10","64.33"],"addeventlistener":["41.10"],"removeeventlistener":["41.10"],"如果标签的首字母是小写就会被认为是原生标签":["41.11"],"等价于":["41.12"],"一个空标签":["41.12"],"非受控组件不是通过数据控制页面":["41.13"],"而是直接通过dom本身管理":["41.13"],"并不依赖与js文件了":["42.1"],"这就会使用户更快地看到页面的内容":["42.1"],"尤其是针对大型单页应用":["42.1"],"在服务端渲染中只会执行到":["42.2"],"componentdidmount":["42.2","43.1"],"子组件修改自身state":["43.1"],"getderiverstatefromprops":["43.1"],"shouldcomponentupdate":["43.1"],"getsnapshotbeforeupdate":["43.1"],"componentdidupdate":["43.1"],"父组件修改props":["43.1"],"这些属性和方法":["44.1"],"都是默认的":["44.1"],"但在首次渲染上":["44.5"],"虚拟dom会多了一层计算":["44.5"],"native":["44.6"],"高阶组件是react":["45.0"],"中一种非常强大的模式":["45.0"],"可以帮助我们在组件间复用逻辑":["45.0"],"修改props":["45.0"],"实现条件渲染以及额":["45.0"],"clearinterval":["45.1","88.4"],"usecontext高阶函数":["45.1"],"usecontext":["45.1"],"用于在函数式组件中访问react的上下文":["45.1"],"usestate会触发重新渲染":["45.2"],"useref不触发":["45.2"],"useref不仅用于dom引用":["45.2"],"对象是通用容器":["45.2"],"期当前属性是可变的":["45.2"],"的实现原理基于":["48.0"],"resolve":["48.0","120.3"],"最后执行宏任务":["48.1"],"这个过程会不断重复":["48.1"],"任务执行顺序":["48.1"],"事件循环机制":["48.1"],"宏任务":["48.1"],"microtask":["48.1"],"与":["48.1"],"微任务":["48.1"],"macrotask":["48.1"],"是指在事件循环中两种不同类型的任务":["48.1"],"的时候":["48.2","93.3"],"任务队列可以简单理解成这样":["48.2"],"然后下一行":["48.2"],"console":["48.2","76.10","76.17","76.23","76.25","77.20","78.13","78.18","87.8","87.11","88.1","99.4","99.5","99.7"],"log":["48.2","76.2","76.17","78.13","78.18","87.8","87.11","87.16","88.1","99.4","99.5","99.7","119.3"],"由于会更新视图的任务":["48.2"],"之后执行回调函数":["48.3"],"这一行表示如果调用nexttick并且不传递任何参数":["48.3"],"它会返回一个promise":["48.3"],"void":["48.3","108.2"],"用于处理异步操作":["48.3"],"这一行表示":["48.3"],"如果调用nexttick并传递一个回调函数和一个上下文":["48.3"],"this":["48.3","77.10","120.3"],"那么这个回调函数将以指定的上下文执行":["48.3"],"t":["48.3"],"cb":["48.3"],"args":["48.3","60.18"],"any":["48.3"],"ctx":["48.3"],"handleclick":["48.4","50.5"],"重置队列执行状态":["48.5"],"currnetflushpromise":["48.5"],"重置当前微任务为":["48.5"],"如果住任务队列":["48.5"],"前置和后置任务队列还没有被清空":["48.5"],"就继续递归执行":["48.5"],"pendingpreflushcbs":["48.5"],"pendingpostflushcbs":["48.5"],"这个方法负责执行前置任务队列":["48.5"],"parentjob":["48.5"],"如果待处理的队列不为空":["48.5"],"保存队列中去重后的任务为当前活动的队列":["48.5"],"activepreflushcbs":["48.5"],"set":["48.5","77.5"],"遍历执行队列里的任务":["48.5"],"实现原理":["48.6"],"在此示例中":["49.1"],"当":["49.1"],"的值是":["49.1"],"focus":["49.1"],"时":["49.1","97.4"],"就等价于":["49.1"],"动态参数的限制":["49.1"],"动态参数中的表达式的值应该是一个字符串":["49.1"],"或者":["49.1"],"null":["49.1","51.6"],"特殊值":["49.1"],"意为显式移除该绑定":["49.1"],"其他非字符串的值会触发警告":["49.1"],"动态参数语法限制":["49.1"],"动态参数表达式因为某些自负的缘故有一些语法限制":["49.1"],"比如":["49.1","114.1"],"空格":["49.1"],"通过设置内联样式的":["49.3"],"css属性来触发工作":["49.3"],"当元素可见时将使用初始的":["49.3"],"的值":["49.3"],"warning":["49.3","77.9","79.0"],"总结":["49.3"],"上述示例中":["49.4"],"会抛出一个错误":["49.4"],"因为":["49.4","60.37"],"会先被执行":["49.4"],"而":["49.4","64.56","99.9"],"的条件表达式中的":["49.4"],"此时不存在":["49.4"],"这个问题可以通过迭代计算属性来解决":["49.4"],"id":["49.5"],"someprop":["49.5"],"other":["49.5"],"otherprop":["49.5"],"必须在子组件中已声明":["49.5"],"mycomponent":["49.5"],"something":["49.5","77.6"],"传递子父组件共有的":["49.5"],"placeholder":["49.6"],"编辑我":["49.6"],"不带表达式地阻止默认事件":["49.7"],"submit":["49.7"],"链式调用修饰符":["49.7"],"按键用于":["49.7"],"keyup":["49.7"],"提供了":["50.0"],"setup":["50.0"],"函数作为入口函数":["50.0"],"替换了":["50.0"],"activated":["50.1"],"keep":["50.1"],"alive":["50.1"],"缓存的组件激活时":["50.1"],"完成挂载与渲染":["50.2"],"此刻打印":["50.2"],"发现之前的挂载点及内容已被替换成新的dom":["50.2"],"beforeupdate":["50.2"],"更新的数据必须是被渲染在模版上的":["50.2"],"中的请求有可能导致页面闪动":["50.3"],"因为此时页面":["50.3"],"组件挂载之前":["50.4"],"组件挂载到实例上去之后":["50.4"],"组件数据发生变化":["50.4"],"更新之前":["50.4"],"count":["50.5"],"增加":["50.5"],"在上面的示例中":["50.5"],"我们通过":["50.5"],"钩子注册了":["50.5"],"一个函数":["50.5"],"在每次组件更新之前输出计数器数据的值":["50.5"],"同时":["50.5"],"在方法中添加了一个按钮点击事件":["50.5"],"用于修改计数器的值":["50.5"],"钩子函数会在数据重新渲染后运行":["50.5"],"通常用于更新":["50.5"],"执行动画或获取最新的状态等操作":["50.5"],"就会自动更新":["51.1"],"但改变":["51.1"],"和":["51.2","60.31","60.50","61.4","61.48","63.5","64.4","74.0","92.3"],"框架封装的核心":["51.3"],"他负责将数据与视图关联起来":["51.3"],"compiler":["51.4"],"对每个元素节点的指令进行扫描跟解析":["51.4"],"key":["51.5","70.0"],"在一个视图中可能出现多次":["51.5"],"所以每个":["51.5"],"都需要一个管家":["51.5"],"dep":["51.5"],"来管理多个":["51.5"],"observer":["51.6"],"编译插值文本":["51.7"],"textcontent":["51.7"],"判断是否有子元素":["51.7"],"push":["51.8","60.38","99.5","119.2"],"notify":["51.8"],"foreach":["51.8","75.1"],"创建":["51.8"],"时触发getter":["51.8"],"一个杯子":["52.2"],"早上装的牛奶":["52.2"],"中午装的是开水":["52.2"],"晚上装的是茶":["52.2"],"在这一刻":["52.3"],"这个时间点":["52.3"],"叫做fp":["52.3"],"相比之下":["52.3"],"fcp指的是浏览器首次绘制来自dom的内容":["52.3"],"例如文本":["52.3"],"canvas元素等":["52.3"],"这个时间点叫fcp":["52.3"],"quicklink":["52.4"],"google":["52.4"],"开源的一个脚本插件":["52.4"],"可以置顶浏览器在空闲的时候去指定需要加载的数据":["52.4"],"使用gzip压缩":["52.4"],"减少文件体积":["52.4"],"加快首屏页面打开速度":["52.4"],"服务器需要开启gzip":["52.4"],"我们可以通过使用webpack插件来实现这个功能":["52.4"],"shell":["52.4"],"pnpm":["52.4"],"install":["52.4"],"vite":["52.4"],"compression":["52.4"],"arr":["54.1","74.0","78.4","100.0","107.3"],"let":["54.1","55.3","60.18","93.1","100.0","108.9"],"中导入使用":["54.3"],"导出的模块":["54.3"],"filesystem":["54.3"],"所有导出模块":["54.3"],"引用对象名为":["54.3"],"类型变量能够进行的运算是有限的":["55.2"],"只支持比较运算":["55.2"],"运算符":["55.2"],"取反运算":["55.2"],"typeof":["55.2","97.4"],"运算符和":["55.2"],"instance":["55.2"],"运算符这几种":["55.2"],"aa":["55.2","55.3"],"fun1":["55.3"],"throw":["55.3","78.27","79.0"],"new":["55.3","60.32","64.35","76.14","77.5","77.22","78.7","86.10","100.0"],"error":["55.3","79.0","108.11"],"浏览器相关":["56.1"],"更新了一部分":["56.2"],"更新了面试相关的vue相关":["56.3"],"char":["60.1"],"float":["60.1"],"boolean":["60.1"],"responsetext":["60.3"],"responsexml":["60.3"],"属性获取服务器返回的数据":["60.3"],"示例":["60.3","78.7"],"var":["60.3","60.10","68.9","68.13","86.2"],"xhr":["60.3"],"function":["60.3","60.10","60.18","61.19","77.5","77.11"],"客户端保存新的链接":["60.4"],"并向新的链接发起请求":["60.4"],"一返回请求结果":["60.4"],"表示客户端请求的资源没有权限查看":["60.4"],"在函数返回后并不释放":["60.6"],"设想我们有一个处理过程很耗时的函数对象":["60.7"],"每次调用都会花费很长时间":["60.7"],"那么我们就需要把计算出来的值储存起来":["60.7"],"当调用就这个函数的时候":["60.7"],"首先在缓存中查找":["60.7"],"在使用":["60.8"],"javascript":["60.8","60.10","60.18","86.8","93.1"],"定时器时":["60.8"],"如果没有及时清除已经失效的定时器":["60.8"],"就会导致定时器所占用的内存无法被释放":["60.8"],"从而造成内存泄漏":["60.8"],"闭包":["60.8"],"脱离dom的引用":["60.8"],"事件委托就是把原本需要绑定在子元素上的响应时间委托给父元素":["60.9"],"因此可以处理未来添加到页面上的元素的事件":["60.10"],"onload":["60.10"],"ie浏览器使用":["60.11"],"冒泡阶段":["60.12"],"从目标节点传回到window对象":["60.12"],"也可能被窃取":["60.13"],"本地存储相对来说更安全":["60.13"],"因为它不会随着http请求被发送到服务器":["60.13"],"减少了被窃取的风险":["60.13"],"但仍然需要注意防范xss攻击":["60.13"],"用途":["60.13"],"cookie主要用户客户端与服务端传递信息":["60.13"],"value2":["60.16"],"直接删除键值对":["60.16"],"delete":["60.16"],"的作用":["60.17"],"特点":["60.17"],"封装":["60.17"],"隐藏对象的属性和实现细节":["60.17"],"手写一个new":["60.18"],"mynew":["60.18"],"fn":["60.18"],"创建一个空对象":["60.18"],"obj":["60.18","100.0"],"使空对象的隐式原型":["60.18"],"obj对象的":["60.18"],"常常第一个的函数的输出是第二个函数的输入这种现象":["60.20"],"支持多并发请求":["60.20"],"await只能在async中运行":["60.21"],"否则会报错":["60.21"],"当运行返回报错时候":["60.21"],"通过":["60.21","106.4"],"的最大长度显示是因为浏览器和":["60.22"],"不同的浏览器和":["60.22"],"请求更适合请求缓存":["60.23"],"页面滚动事件":["60.24"],"onscroll":["60.24"],"如果为true":["60.25"],"表示是在捕获阶段调用事件处理程序":["60.25"],"js中的元素尺寸与布局信息":["60.27"],"也就是说定位信息为":["60.28"],"鼠标移动的坐标":["60.28"],"鼠标按下去的坐标":["60.28"],"元素初始情况下的":["60.28"],"world":["60.30","108.2"],"b":["60.30","78.4","96.8","96.22","107.2","108.9"],"在这个例子里面":["60.31"],"通过各自的属性相互引用":["60.31"],"这样的话":["60.31"],"两个对象的引用次数为":["60.31"],"在采用引用计数的策略中":["60.31"],"由于函数执行之后":["60.31"],"这两个对象都离开了作用域":["60.31"],"bound":["60.33"],"width":["60.35","61.14","68.15","95.4"],"图片的高度为":["60.35"],"document":["60.35","60.36","77.14"],"getelementbyid":["60.36"],"mypic":["60.36"],"innnerhtml":["60.36"],"其实对于包装类":["60.37"],"完全可以用":["60.37"],"号来进行克隆":["60.37"],"其实没有深度克隆一说":["60.37"],"这里用":["60.37"],"语法上比较符合规范":["60.37"],"对于":["60.37"],"类型":["60.37"],"日期定义的":["60.37"],"方法会返回它的一个内部表示":["60.37"],"主机名":["60.40"],"端口号":["60.40"],"相同":["60.40"],"只允许本域名下的借口交互":["60.41"],"不同元的客户端脚本":["60.41"],"它需要一遍下载图片一遍计算大小":["60.42"],"如果图片很多":["60.42"],"浏览器会不断调整页面":["60.42"],"这不但影响速度":["60.42"],"也影响体验":["60.42"],"当浏览器知道了宽高":["60.42"],"指向其本身":["60.43"],"事件中的":["60.43"],"sort":["60.44"],"如果是数组":["60.45"],"可以使用数组的一些方法实现":["60.45"],"slice":["60.45"],"不会对原数组产生影响":["60.46"],"借用构造函数继承":["60.47"],"组合继承":["60.47"],"我就先自己去吃了":["60.48"],"你忙完了再去吃饭":["60.48"],"比":["60.50"],"安全":["60.50"],"标签优化":["60.51"],"description":["60.51"],"keywords":["60.51"],"一个迟缓甚至不加载":["60.52"],"格式":["61.1"],"缺点":["61.2"],"文件大小通常比":["61.3"],"jpeg":["61.3","61.4"],"标准盒模型的宽高指的是":["61.5"],"内容区域":["61.5"],"的宽高":["61.5"],"loop":["61.9","61.10"],"是否循环播放":["61.9","61.10"],"perload":["61.9","61.10"],"预加载视频":["61.9"],"是否显示进度条":["61.10"],"多媒体标签":["61.11"],"加载独立内容":["61.12"],"上图下字":["61.12"],"figcaption":["61.12"],"figure的标题":["61.12"],"hgroup":["61.12"],"标题组合标签":["61.12"],"图片边框的宽度":["61.14"],"outset":["61.14"],"规定背景的绘制区域":["61.15"],"padding":["61.15"],"box":["61.15","64.40","66.0"],"radial":["61.16"],"shadow":["61.17"],"文字阴影":["61.17"],"水平位移":["61.17"],"y":["61.18","107.4"],"指定元素在二维空间的位移":["61.18"],"scale":["61.18","61.28"],"n":["61.18"],"定义缩放转换":["61.18"],"3d":["61.18"],"指定切换效果的速度":["61.19"],"delay":["61.20"],"动画启动前的延迟间隔":["61.20"],"iteration":["61.20"],"auto":["61.21"],"但内部宽高超过父级时":["61.21"],"会出现滚动条":["61.21"],"给塌陷元素添加微对象":["61.21"],"这个写法固定":["61.21"],"sticky":["61.22"],"粘性定位":["61.22"],"元素先按照普通文档流进行相对定位":["61.22"],"center":["61.24"],"子元素设置display":["61.24"],"inline":["61.24","63.5"],"cell":["61.25"],"flex":["61.27"],"左右固定宽":["61.27"],"中间":["61.27"],"transform":["61.28","61.49","68.3","68.5","68.11","88.6"],"查找根元素html标签":["61.30"],"empty":["61.30"],"查找空标签":["61.30"],"目标伪类选择器":["61.30"],"表单":["61.30"],"enabled":["61.30"],"id选择器":["61.31"],"family":["61.32"],"字体大小":["61.32"],"size":["61.32"],"字体样式":["61.32"],"csssprite":["61.33"],"css精灵图":["61.33"],"p":["61.34","119.3"],"ul":["61.34"],"ol":["61.34"],"address":["61.34"],"简写形式":["61.36"],"align":["61.36"],"item":["61.36","70.0","96.23"],"16px":["61.38"],"中加入":["61.38"],"样式表":["61.40"],"不仅会降低解析效率":["61.41"],"而且会在解析过程中产生一些难以预料的bug":["61.41"],"dragleave":["61.42"],"在被拖放元素移出目标元素是触发":["61.42"],"drop":["61.42","121.2"],"关闭阶段":["61.43"],"minify":["61.44"],"gzip":["61.44"],"webp图片压缩":["61.44"],"http次数":["61.45"],"缓存":["61.45"],"协议缓存请求":["61.45"],"tcp三次握手与四次挥手":["61.48"],"发送http":["61.48"],"https请求":["61.48"],"建立连接后就可以停过":["61.48"],"进行数据传输了":["61.48"],"如果使用了":["61.48"],"https":["61.48"],"会在":["61.48","78.1"],"之间多添加一层协议作为加密和认证的服务":["61.48"],"使用":["61.48","95.5"],"ssl":["61.48"],"tls":["61.48"],"协议":["61.48"],"保证了信息的安全":["61.48"],"协议的作用是认证客户端和服务端":["61.48"],"确保数据发送到正确的客户端和服务器":["61.48"],"加密数据防止数据中途被窃取":["61.48"],"维护数据的完整性":["61.48"],"确保数据在书参数过程中不被改变":["61.48"],"协议的作用是在两个通信应用程序之间提供保密性和数据完整性":["61.48"],"是不会layout或者paint的":["61.50"],"区别":["61.50"],"功能涵盖方面":["61.50"],"js动画比css动画功能强大":["61.50"],"实现":["61.50"],"重构难度":["61.50"],"两者相邻的外边距都是负数时":["61.51"],"折叠结果是两者绝对值的较大的值":["61.51"],"jsx":["63.5"],"就是把":["63.5"],"全写进":["63.5"],"则是":["63.5"],"的区别":["63.24"],"mvvm缺点":["64.2"],"复杂性":["64.2"],"mvvm模式引入了额外的层次和概念":["64.2"],"可能会增加项目的初始学习成本":["64.2"],"特别是对于初学者来说":["64.2"],"性能":["64.2"],"在某些情况下":["64.2"],"mvvm模式可能引入额外的性能开销":["64.2"],"特别是实现数据绑定和观察者模式时":["64.2"],"虽然现在前端框架会优化这些问题":["64.2"],"但仍然需要注意这些问题":["64.2"],"过度工程":["64.2"],"在小型应用中":["64.2"],"采用":["64.2"],"模式可能会导致过度设计":["64.2"],"可以使用":["64.3"],"backspace":["64.4"],"两个键位":["64.4"],"tab":["64.4"],"制表键":["64.4"],"esc":["64.4"],"返回键":["64.4"],"将数据解析成纯文本":["64.7"],"事件名":["64.9"],"如果绑定的是多个相同事件":["64.9"],"如果有":["64.10"],"存在":["64.10"],"setter":["64.11","79.0"],"读取时触发":["64.11"],"路由中name的作用":["64.12"],"proxy":["64.13"],"api和服务器配置":["64.15"],"支持所有":["64.15"],"replacestate":["64.16"],"修改浏览器历史栈后":["64.16"],"url":["64.16","64.27","91.2","108.1"],"改变但不会刷新页面":["64.16"],"不会触发":["64.16"],"从而实现前端路由切换":["64.18"],"浏览器支持度友好":["64.18"],"包括低版本ie浏览器":["64.18"],"已经成为spa标配":["64.18"],"原理":["64.18"],"hash模式的主要原理是":["64.18"],"由于我们是一个单页的客户端应用":["64.19"],"如果没有适当的服务器配置":["64.19"],"用户在浏览器中直接访问没有配置的路由时":["64.19"],"会返回404":["64.19"],"history模式使用":["64.19"],"可以额外设置title属性供后续使用":["64.20"],"url处理":["64.20"],"优点":["64.22","64.23"],"直观":["64.22"],"查询参数可以传递多个键值对":["64.23"],"因此更灵活":["64.23"],"适用于各种场景":["64.23"],"查询参数更合适":["64.24"],"灵活性":["64.24"],"如果需要传递多个键值对或灵活地控制何时传递参数":["64.24"],"也可以使用对象语法":["64.29"],"也可以使用缩写形式":["64.31"],"获取token":["64.33"],"tokenstr":["64.33"],"sessionstorage":["64.33"],"next":["64.34","78.28"],"vuerouter":["64.35"],"use":["64.35","79.0"],"routes":["64.35","64.54","64.55"],"home":["64.35","64.54"],"之外":["64.36"],"还可以注册自定义的指令":["64.36"],"必须使用":["64.37","77.15"],"definecomponent":["64.37"],"输出才能使用":["64.40"],"父组件中使用自定义事件来进行接收":["64.41"],"当然可以放入任何内容":["64.42"],"例如变量":["64.42"],"父组件":["64.42","64.44"],"那么最终结果就是展示子组件设置的默认内容":["64.43"],"child":["64.43","64.44"],"如果传值":["64.43"],"是":["64.44"],"monkey的缩写":["64.44"],"西海龙王敖润之子":["64.45"],"apple":["64.45"],"大萝卜":["64.47"],"extends":["64.49","99.9"],"object":["64.49","77.21","78.5","96.16","100.0","112.6","114.2"],"never":["64.49","108.12"],"响应式对象":["64.49"],"interface":["64.49","108.2"],"watcheffectoptions":["64.49"],"immediate":["64.49","64.50"],"在侦听器创建时立即触发回调":["64.50"],"第一次调用时旧值是":["64.50"],"undefined":["64.50","79.0","112.6"],"deep":["64.50"],"source":["64.51","107.3"],"callback":["64.51","79.0","110.0"],"flush":["64.51"],"post":["64.51"],"ontrack":["64.51"],"event":["64.51"],"debugger":["64.51"],"ontrigger":["64.51"],"停止侦听器":["64.51"],"stop":["64.51"],"可以没有":["64.52"],"使用场景":["64.52"],"当一个属性受多个属性影响的时候":["64.52"],"例如购物车商品结算":["64.52"],"component":["64.54","64.55"],"about":["64.54"],"contact":["64.54"],"path":["64.55"],"两个新特性":["64.56"],"它们使得组件的渲染更加高效":["64.56"],"允许组件返回多个根节点":["64.56"],"允许将组件的内容渲染到dom树的其他位置":["64.56"],"这两个特性能够减少不必要的dom操作":["64.56"],"提升渲染性能":["64.56"],"composition":["64.56"],"调用时添加一个参数":["64.57"],"就是":["64.57"],"的载荷":["64.57"],"异步操作数据":["64.57"],"原文链接":["67.0"],"9s":["68.1"],"8s":["68.1","68.8","68.13"],"keyframes":["68.1","68.3","68.5","68.6","68.11","68.12","68.13"],"1deg":["68.2"],"179deg":["68.4"],"360deg":["68.5","68.11"],"16s":["68.6"],"opacity":["68.7"],"7s":["68.8"],"6s":["68.8"],"5s":["68.8"],"infinite":["68.9","68.13","68.14"],"50px":["68.9"],"ms":["68.11"],"rotate":["68.11"],"15px":["68.12"],"animate":["68.13","68.14"],"8px":["68.14"],"5px":["68.14"],"color":["68.14"],"465efb":["68.14"],"1s":["68.14"],"300px":["68.15"],"position":["68.15"],"relative":["68.15"],"absolute":["68.15"],"top":["68.15","120.2"],"margin":["68.15"],"因为这破坏了样式表中的固有的级联规则":["69.0"],"使得调试找":["69.0"],"bug":["69.0"],"变得更加困难了":["69.0"],"当两条相互冲突的带有":["69.0"],"规则的声明被应用到相同的元素上时":["69.0"],"拥有更大优先级的声明将会被采用":["69.0"],"一些经验法则":["69.0"],"一定要优先考虑使用样式规则的优先级来解决问题而不是直接加":["69.0"],"只有在需要覆盖全占或外部css的特定页面中使用":["69.0"],"不要在你的插件中使用":["69.0"],"不要在全站范围的css代码中使用":["69.0"],"lilist":["70.0"],"我的胃来食":["73.1"],"注":["74.0"],"亦可以var":["74.0"],"传入的时候直接传入arr":["74.0"],"需要注意的是":["74.0"],"注意如果":["74.0"],"并且可以将参数在执行的时候添加":["74.1"],"来设置具有唯一":["75.0"],"会话标识符":["75.0"],"session":["75.0","91.7"],"identifier":["75.0"],"函数数组":["75.1"],"cookietrimmed":["75.1"],"限制":["75.2"],"编码后的":["75.2"],"对":["75.2"],"大小不能超过":["75.2"],"4kb":["75.2"],"因此":["75.2"],"我们不能在一个":["75.2"],"中保存大的东西":["75.2"],"adminpage":["75.3"],"下不可见":["75.3"],"在site":["75.4"],"使cookie可以被在任何子域":["75.4"],"访问":["75.4"],"john":["75.4"],"设置为过去的时间":["75.5"],"则cookie将会被删除":["75.5"],"它是":["75.5"],"的替代选项":["75.5"],"指明了cookie的过期时间距离当前时间的秒数":["75.5"],"如果将其设置为0或者负数":["75.5"],"u0327":["76.10"],"扩展运算符的应用":["76.12"],"下面是扩展运算符取代":["76.12"],"方法的一个实际的例子":["76.12"],"应用":["76.12"],"math":["76.12"],"max":["76.12"],"简化求出一个数组最大元素的写法":["76.12"],"等同于":["76.13"],"只有当参数不少于两个时":["76.14"],"才会返回由参数组成的新数组":["76.14"],"参数只有一个正整数时":["76.14"],"实际上是指定数组的长度":["76.14"],"基本上可以用来替代":["76.14"],"o":["76.20","77.7"],"method":["76.20"],"es6":["76.21"],"允许字面量定义对象时":["76.21"],"用方法二":["76.21"],"表达式":["76.21"],"作为对象的属性名":["76.21"],"即把表达式放在方括号内":["76.21"],"regexp":["76.27","97.4"],"abc":["76.27","77.21"],"u":["76.29"],"prototype":["76.32","87.16"],"es6是ecmascript的第六个版本":["77.0"],"2015年发布":["77.0"],"引入了许多新的语言特性和改进":["77.0"],"声明的变量之前":["77.2"],"assignment":["77.3"],"to":["77.3","88.6"],"constant":["77.3"],"variable":["77.3"],"这个generator函数是为了生成斐波那契数列":["77.5"],"fibs":["77.5"],"yield":["77.5"],"msg":["77.6"],"wen":["77.6"],"wrong":["77.6"],"类数组都具有length属性":["77.7"],"因此还可以对这个属性进行解构赋值":["77.7"],"下面的写法会有不一样的结果":["77.9"],"allowed":["77.10"],"还有一个比较容易忽略的地方是":["77.10"],"rest":["77.12"],"参数代替":["77.12"],"永远是指向其上下文的":["77.13"],"queryselector":["77.14"],"所以为了使用数组的方法":["77.15"],"array":["77.15","87.16"],"先将其转为数组":["77.15"],"参数则是一个真正的数组":["77.15"],"可以直接使用数组特有的方法":["77.15"],"变量的写法":["77.15"],"age":["77.18"],"obj2":["77.18","97.5"],"fun":["77.20"],"bar":["77.21"],"baz":["77.21"],"报错":["77.21"],"book类的实例":["77.22"],"book1":["77.22"],"导入常量和函数":["77.23"],"import":["77.23"],"from":["77.23"],"实例也可以作为其他对象的原型对象":["78.1"],"create":["78.1"],"对象是":["78.1"],"对象的原型":["78.1"],"obj对象本身没有time属性":["78.1"],"所以根据原型链":["78.1"],"对象上读取该属性":["78.1"],"导致被拦截":["78.1"],"同一个拦截器函数":["78.1"],"可以设置拦截多个操作":["78.1"],"对其属性进行访问时":["78.1"],"getprototypeof":["78.2"],"isextensible":["78.2"],"a":["78.4","83.0","96.8","107.2","108.9"],"实现链式操作":["78.4"],"pipe":["78.4"],"funcstack":["78.4"],"oproxy":["78.4"],"pipeobject":["78.4"],"myobj":["78.5"],"setprototypeof":["78.5"],"设置":["78.5"],"属性的值时":["78.5"],"并没有":["78.5"],"因此引擎会到":["78.5"],"的原型链去找":["78.5"],"myobj的原型对象":["78.5"],"是一个":["78.5"],"实例":["78.5"],"设置它的":["78.5"],"上面代码中":["78.7"],"方法拦截":["78.7"],"对象的属性赋值行为":["78.7"],"它采用":["78.7"],"方法将值赋值给对象的属性":["78.7"],"确保完成原有的行为":["78.7"],"然后再部署额外的功能":["78.7"],"longgedobj":["78.7"],"设置对象的属性值":["78.8"],"deleteproperty":["78.8"],"创建被观察者对象":["78.9"],"observalbe":["78.9"],"修改被观察者对象的数据":["78.9"],"privatemember":["78.10"],"私有成员":["78.10"],"可以通过":["78.10"],"此外":["78.12"],"获取值":["78.13"],"检查是否包含某个键":["78.13"],"会被垃圾回收机制回收":["78.14"],"并且对应的键值对也会对":["78.14"],"内部属性是实例的弱引用":["78.15"],"删除实例时它们也会随之消失":["78.15"],"删除键值对":["78.16"],"返回布尔值":["78.16","78.21"],"set可以存储任意类型的值":["78.17"],"检查是否包含某个值":["78.18"],"的成员是弱引用":["78.19"],"它在weakset结构中的引用就会自动被垃圾回收":["78.20"],"has":["78.21"],"接口":["78.23"],"接口主要提供":["78.24"],"遍历器与它所遍历的那个数据结构":["78.25"],"实际是分开的":["78.25"],"完全可以写出没有对应数据结构的遍历器对象":["78.25"],"或者用遍历器对象模拟出数据结构":["78.25"],"idmaker":["78.25"],"arguments":["78.26","114.2"],"done":["78.28"],"还是一个遍历器独享生成函数":["78.30"],"返回的遍历器对象":["78.30"],"spaced":["79.0"],"函数调用时":["79.0"],"函数名与":["79.0"],"之间不能有空格":["79.0"],"sparse":["79.0"],"arrays":["79.0"],"禁止稀疏数组":["79.0"],"sync":["79.0"],"nodejs":["79.0"],"禁止同步方法":["79.0"],"禁止使用三目运算符":["79.0"],"trailing":["79.0"],"一行结束后面不要有空格":["79.0"],"在调用super":["79.0"],"之前不能使用this或super":["79.0"],"literal":["79.0"],"禁止抛出字面量错误":["79.0"],"undef":["79.0"],"不能有未定义的变量":["79.0"],"init":["79.0"],"变量初始化时不能直接给它赋值为undefined":["79.0"],"不能使用undefined":["79.0"],"unexpected":["79.0"],"避免多行表达式":["79.0"],"underscore":["79.0"],"标识符不能以":["79.0"],"开头或结尾":["79.0"],"unneeded":["79.0"],"禁止不必要的嵌套":["79.0"],"isyes":["79.0"],"answer":["79.0"],"unreachable":["79.0"],"不能有无法执行的代码":["79.0"],"unused":["79.0"],"expressions":["79.0"],"禁止无用的表达式":["79.0"],"vars":["79.0"],"used":["79.0"],"不能有声明后未被使用的变量或参数":["79.0"],"define":["79.0","83.0"],"未定义前不能使用":["79.0"],"useless":["79.0"],"call":["79.0"],"禁止不必要的call和apply":["79.0"],"禁用void操作符":["79.0"],"禁用var":["79.0"],"用let和const代替":["79.0"],"terms":["79.0"],"todo":["79.0"],"fixme":["79.0"],"xxx":["79.0"],"start":["79.0"],"不能有警告备注":["79.0"],"with":["79.0"],"禁用with":["79.0"],"是否允许非空数组里面有多余的空格":["79.0"],"arrow":["79.0"],"箭头函数用小括号括起来":["79.0"],"的前":["79.0"],"后括号":["79.0"],"在对象中使用getter":["79.0"],"块语句中使用var":["79.0"],"大括号风格":["79.0"],"避免多次调用回调什么的":["79.0"],"save":["81.0"],"createelementns":["81.0"],"www":["81.0"],"w3":["81.0"],"org":["81.0"],"xhtml":["81.0"],"网页可见区域高":["82.0"],"包括边线的宽":["82.0"],"网页正文全文宽":["82.0"],"cjs不能在浏览器中工作":["83.0"],"他必须经过转换和打包":["83.0"],"amd代表异步模块定义":["83.0"],"dep1":["83.0"],"dep2":["83.0"],"the":["83.0"],"by":["83.0"],"returning":["83.0"],"地址的总长度":["84.0"],"n2":["84.0"],"取得":["84.0"],"号的位置":["84.0"],"substr":["84.0"],"从":["84.0","108.10"],"号后面的内容":["84.0"],"为数组中每个元素执行的函数":["85.1"],"并会丢弃它的返回值":["85.1"],"比较时间等等":["86.0"],"下面就是我对":["86.0"],"sunday":["86.6"],"saturday":["86.6"],"weekday":["86.6"],"isoweekday":["86.6"],"monday":["86.6"],"秒数":["86.7"],"subtract":["86.7"],"moment":["86.8"],"format":["86.8"],"yyyy年mm月dd日":["86.8"],"xxxx":["86.8"],"xx":["86.8"],"escaped":["86.11"],"endof":["86.12"],"add":["86.13","96.8"],"明天晚上7点49分":["86.13"],"lll":["86.14"],"2019年5月24日晚上7点50分":["86.14"],"startof":["86.15"],"year":["86.15"],"本年的的结束日期":["86.15"],"元素开始执行":["87.1"],"则需要传入初始值":["87.1"],"currentindex":["87.3"],"在这种情况下":["87.4"],"acc":["87.7","87.11"],"alphabet":["87.11"],"第二种实现方式":["87.12"],"doubled":["87.13"],"p4":["87.14"],"promisearr":["87.14"],"这将在一秒后执行":["88.1"],"这将每隔一秒执行一次":["88.2"],"也接受两个参数":["88.2"],"的最小延迟时间设定为4毫秒":["88.3"],"具体取决于浏览器或者环境":["88.3"],"functional":["88.5"],"interval":["88.5"],"executed":["88.5"],"模拟执行":["88.5"],"you":["88.6"],"want":["88.6"],"避免不必要的绘制":["88.7"],"并将该数据包发送给服务端":["89.1"],"客户端进入syn":["89.1"],"等待server确认":["89.1"],"服务端收到syn包":["89.1"],"必须先确认客户的syn":["89.1"],"发送一个ack值为j":["89.1"],"1的确认数据包":["89.1"],"同时也向客户端发送一个syn包":["89.1"],"在tcp握手的时候":["89.2"],"接收端发送":["89.2"],"syn":["89.2"],"的包是将一个":["89.2"],"和一个":["89.2"],"合并到一个包中":["89.2"],"所以减少了一次包的发送":["89.2"],"完成三次握手":["89.2"],"对于四次挥手":["89.2"],"tcp是全新工程通信":["89.2"],"在主动关闭放发送":["89.2"],"ip模型":["90.0"],"比较简洁":["90.0"],"具有较强的实际应用价值":["90.0"],"将计算机网络分为了四个层次":["90.0"],"如":["91.1","114.4"],"cookie":["91.1","91.7"],"属性和标签中":["91.2"],"包含类似":["91.2"],"image":["91.2"],"如果url被解析":["91.3"],"那么攻击脚本就会被运行":["91.3"],"反射型xss根存储型xss的区别":["91.3"],"存储型xss的恶意代码存放在数据库里":["91.3"],"quto":["91.4"],"的操作的攻击方法":["91.5"],"例如":["91.5","106.0"],"攻击者诱导受害者进入第三方网站":["91.5"],"在第三方网站中":["91.5"],"而且低版本浏览器存在伪造":["91.6"],"referer的风险":["91.6"],"而一般网站的":["91.7"],"对象提供像":["92.0"],"toexponential":["92.0"],"这样的方法":["92.0"],"当在原始值上访问属性时":["92.0"],"会自动将值包装到相应的包装对象中":["92.0"],"你可以安全地存储和操作巨大的整数":["92.1"],"甚至超过":["92.1"],"的安全整数限制":["92.1"],"symbol类型":["92.1"],"循环来枚举属性":["92.3"],"configurable":["92.3"],"表示该属性是否可以删除":["92.3"],"是否可以更改为访问器属性":["92.3"],"并可以更改其特性":["92.3"],"访问器属性":["92.3"],"将键与两个访问器函数":["92.3"],"output":["92.4"],"parent":["93.0","93.1"],"用于记录实例是由哪个构造函数创建":["93.1"],"定义一个函数":["93.1"],"我是原型属性":["93.2"],"所有实例都可以读取到我":["93.2"],"的概念":["93.3"],"当我们调用":["93.3"],"先在":["93.3"],"对象本身寻找":["93.3"],"没有找到则通过":["93.3"],"找到了原型对象":["93.3"],"也没有找到":["93.3"],"然后又通过":["93.3"],"可以看到function函数的构造函数就是本身了":["93.4"],"那我们也可以说":["93.4"],"function时所有函数的构造函数":["93.4"],"到这里我们已经对":["93.4"],"属性有了一个初步认识":["93.4"],"它的作用是从一个对象指向一个函数":["93.4"],"在函数体内部又重新给":["94.0"],"赋值了":["94.0"],"所以第一个打印的是":["94.0"],"第二次打印出来一个":["94.0"],"完全是因为在函数体内部声明了一个变量":["94.0"],"直接打印就会打印出":["94.0"],"至于函数体外边的":["94.0"],"那就更简单了":["94.0"],"由于在全局已经声明了变量":["94.0"],"所以在全局作用域中打印出来的就是":["94.0"],"还有一个例子":["94.0"],"中的一部分或者全部因为大小边距等引起结构变化":["95.1"],"display":["95.2"],"none":["95.2","98.7"],"还有js动态添加的元素等":["95.2"],"浏览器把所有的样式解析成样式结构体":["95.2"],"在dom树和样式结构体组合后构建成":["95.2"],"不包括":["95.2"],"那么元素的":["95.3"],"offsetwidth":["95.4"],"offsetheight":["95.4"],"scrolltop":["95.4"],"flexbox":["95.5"],"浏览器就会flush队列":["95.7"],"进行一个批处理":["95.7"],"找不到则返回":["96.1","96.20"],"原数组保持不变":["96.2"],"x2":["96.3"],"newarr":["96.4","96.23"],"islessthan6":["96.6","96.7"],"表示被删除的元素":["96.9"],"新数组的长度":["96.10"],"返回的是删除的那个元素":["96.11"],"方法时候":["96.16"],"如果传入的元素是":["96.16"],"则不会返":["96.16"],"回报错":["96.16"],"并且返回的结果是字符串的":["96.16"],"元素5对应的下标为":["96.17"],"删除一个元素":["96.18"],"还支持传入箭头函数":["96.21"],"可以进行函数操作":["96.21"],"使用箭头函数作为映射函数去操作多个元素":["96.21"],"z":["96.22"],"map":["96.22"],"string":["96.22"],"fromcharcode":["96.22"],"并且获取他们各自的平方的数组":["96.23"],"引用数据类型的变量是一个指向堆内存中实际对象的引用":["97.1"],"即浅拷贝是拷贝一层":["97.2"],"concat":["97.3"],"直接返回":["97.4"],"不进行操作":["97.4"],"instanceof":["97.4"],"deepclone":["97.5"],"一个深拷贝方法":["97.5"],"深拷贝是新开栈":["97.6"],"s":["98.0"],"请求来获取的":["98.0"],"pwa通常会更加反应迅速":["98.1"],"则直接从服务端获取资源":["98.2"],"强缓存与协商缓存的区别":["98.2"],"强缓存不会发送到服务器":["98.2"],"资源更新了可能浏览器还不知道":["98.2"],"协商缓存会发送请求给服务器":["98.2"],"则使用协商缓存":["98.3"],"使用协商缓存":["98.3"],"的值进行混存":["98.4"],"意思是在600秒内再次发起这个请求":["98.4"],"则会直接使用缓存结果":["98.4"],"强制缓存生效":["98.4"],"️":["98.4","121.1"],"在无法确定客户端的事件是否与服务端的事件同步的情况下":["98.4"],"相比于":["98.4"],"是更好的选择":["98.4"],"所以同时存在时":["98.4"],"只有":["98.4","122.3"],"生效":["98.4"],"如何在浏览器中判断强制缓存是否生效":["98.4"],"关于chrome网络请求的size":["98.4"],"可能会出现三种情况":["98.4"],"协商缓存失效":["98.5"],"是客户端再次发起请求时":["98.6"],"携带上次请求返回的唯一标识":["98.6"],"值":["98.6"],"通过此字段值告诉服务器":["98.6"],"该资源上起请求返回的唯一标识值":["98.6"],"服务器收到该请求后":["98.6"],"发现该请求头中":["98.6"],"match":["98.7"],"协商缓存由服务器决定是否使用缓存":["98.7"],"若协商缓存失效":["98.7"],"而把a称为":["99.0"],"b的父类别":["99.0"],"trunk":["99.1"],"后备厢":["99.1"],"这样轿车和货车就是不一样的":["99.1"],"但是二者都属于汽车这个类":["99.1"],"汽车":["99.1"],"轿车继承了汽车的属性":["99.1"],"而不需要再次在":["99.1"],"中定义汽车已有的属性":["99.1"],"继承":["99.1"],"寄生式继承":["99.2"],"没问题":["99.4"],"关键字直接实现继承":["99.8"],"constructor":["99.8"],"原型方法":["99.8"],"即":["99.8","118.1"],"下面可以简写为":["99.8"],"str":["100.0"],"substring":["100.0"],"获取url中":["100.0"],"之后的字符":["100.0"],"去掉第一位的问号":["100.0"],"以":["100.0"],"分隔字符串":["100.0"],"获得类似name":["100.0"],"xiaoli这样的元素数组":["100.0"],"split":["100.0"],"将每一个数组元素以":["100.0"],"分隔并赋给obj对象":["100.0"],"i":["100.0"],"防抖":["101.0"],"debounce":["101.0"],"starttime":["101.2"],"curtime":["101.2"],"当前时间":["101.2"],"remaining":["101.2"],"不为null":["101.4"],"callnow":["101.4"],"第一次会立即执行":["101.4"],"来实现":["101.5"],"而节流是在一段连续操作中":["101.5"],"每一段时间只执行一次":["101.5"],"防止重复渲染":["101.6"],"节流":["101.6"],"是计算机网络中处于网络最外围的设备":["103.0"],"主要用于用户信息的输入以及处理结果的输出等":["103.0"],"客户端":["103.0"],"客户端与服务段对应":["103.0"],"又称为用户端":["103.0"],"为用户提供本地服务的程序":["103.0"],"用来接收来自服务端的数据或者资源":["103.0"],"也可以理解为软件":["103.0"],"服务端":["103.0"],"为客户端提供服务":["103.0"],"事件驱动机制":["103.1"],"可以同时处理超过4万的用户连接":["103.1"],"缺点就是一个用户造成的线程奔溃会让整个服务器都崩溃":["103.1"],"其他用户也会崩溃":["103.1"],"单线程在同一时刻只能执行一个任务":["103.1"],"也就是说":["103.1"],"执行环境相对更简单":["103.1"],"更高效":["103.1"],"但是在单线程中i":["103.1"],"o设备对其来说是致命的":["103.1"],"因为i":["103.1"],"枚举类型被用于取值被限定在一定范围内的取值":["106.0"],"实际上上述例子会被编译成下面这种格式":["106.1"],"当然":["106.2"],"手动赋值也可以是":["106.2"],"小数":["106.2"],"常数枚举表达式是":["106.3"],"表达式的子集":["106.3"],"它可以在编译阶段求值":["106.3"],"当一个表达式满足下面条件之一时":["106.3"],"它就是一个常数枚举表达式":["106.3"],"数字字面量":["106.3"],"expression":["106.4"],"赋值计算项编译报错":["106.4"],"常量枚举与枚举的区别":["106.4"],"声明差异":["106.4"],"常量枚举":["106.4"],"进行声明":["106.4"],"枚举":["106.4"],"则通过":["106.4"],"类或接口时使用类型参数":["107.1"],"这些类型参数在使用时可以被动态地指定具体的类型":["107.1"],"strarr":["107.2"],"num":["107.3","122.7","122.8"],"ts编译错误":["107.3"],"ts泛型约束限制":["107.3"],"多个泛型类型也可以互相约束":["107.3"],"copyfileds":["107.3"],"target":["107.3"],"也可以提前把泛型定义到接口上":["107.4"],"createtime":["108.1"],"username":["108.1"],"useravatar":["108.1"],"picture":["108.1"],"ianswerrecord":["108.1"],"comment":["108.1"],"audio":["108.1"],"通过提取公共部分":["108.1"],"利用联合类型将类型定义简化并且可复用":["108.1"],"iuserbaseinfo":["108.1"],"useavatar":["108.1"],"hello":["108.2"],"bird":["108.2","108.7"],"fly":["108.2"],"类型守卫可以通过一些条件检查来确定变量的确切类型":["108.3"],"touppercase":["108.4"],"else判断体里的逻辑是将":["108.4"],"的类型推断为":["108.4"],"number类型":["108.4"],"pets":["108.6"],"这里":["108.6"],"通过自定义的":["108.6"],"将pets的类型收窄为":["108.6"],"之后调用":["108.6"],"pet":["108.7"],"fish":["108.7"],"swim":["108.7"],"getusername":["108.8"],"中只是给现有类型起了一个别名":["108.9"],"它们并不会创建出不同或独立的类型":["108.9"],"当你使用类型别名时":["108.9"],"实际上就相当于直接使用了被别名的原始类型":["108.9"],"换句话说":["108.9"],"类型别名并不会创建出全新的":["108.9"],"不同的类型":["108.9"],"里":["108.10"],"类型别名不能被继承和实现":["108.10"],"它们也不能继承和实现其它类型":["108.10"],"开始":["108.10"],"类型别名可以被继承并生成新的交叉类型":["108.10"],"restarr":["108.12"],"footarr":["108.12"],"上面这个示例得到的结果是得到一个去掉首位字符的数组":["108.12"],"checkalivetype参数的类型":["110.0"],"解释":["110.0"],"先检查是否为屏幕闪烁":["110.0"],"不可以则自动读数字":["110.0"],"返回参数":["110.0"],"errmag":["110.0"],"错误信息":["110.0"],"错误码":["110.0"],"verifyresult":["110.0"],"本次认证结果凭据":["110.0"],"不同":["112.1"],"中的元素不是按照它们在内存中的的物理顺序存储的":["112.1"],"insert":["112.2"],"remove":["112.2"],"删除":["112.2"],"append":["112.2"],"删除指定位置的节点":["112.4"],"removeat":["112.4"],"在一个":["112.5"],"首节点和末节点被连接在一起":["112.5"],"这种方式在单向和双向链表中皆可实现":["112.5"],"findparams":["112.6"],"funtion":["112.6"],"查找具有特定值或者满足回调函数的节点":["112.6"],"find":["112.6"],"如果指定了回调函数":["112.6"],"那么尝试通过回调函数找到节点":["112.6"],"如果指定了值":["112.6"],"那么尝试通过值找到节点":["112.6"],"commpare":["112.6"],"删除尾部节点":["112.6"],"dealetetail":["112.6"],"没有尾部节点可以删除":["112.6"],"链表中只有一个节点":["112.6"],"deletetail":["112.6"],"嵌套括号被隐含在树的结构中":["114.1"],"并没有以节点的形式呈现":["114.1"],"而类似于":["114.1"],"property":["114.2"],"computed":["114.2"],"optional":["114.2"],"形成一个新的表现形式":["114.3"],"code":["114.3"],"generation":["114.3"],"的任务是在":["114.4"],"的基础上将单词序列组合成各类语法短语":["114.4"],"程序":["114.4"],"语句":["114.4"],"常见的源码转换":["115.1"],"主要分为三种情况":["115.1"],"压缩":["115.1"],"浏览器中如何设置source":["115.3"],"包含eval关键字的配置项不产生":["115.4"],"eval依靠sourceurl定位原始代码":["115.4"],"其他都是":["115.4"],"map定位":["115.4"],"性能最低":["115.4"],"将map通过dataurl嵌入":["115.5"],"不再生成":["115.5"],"map文件":["115.5"],"减少文件数":["115.5"],"cheap":["115.5"],"展示源码是":["115.7"],"es5":["115.7"],"的代码":["115.7"],"因为已经被":["115.7"],"babal":["115.7"],"转义了":["115.7"],"webpack":["115.9"],"会生成":["115.9"],"sourcemap":["115.9"],"文件以提供给错误收集工具":["115.9"],"比如sentry":["115.9"],"英文官网":["117.1"],"然后一直回车就会提示rsa保存成功":["118.1"],"这样在":["118.1"],"ssh目录就会生成两个文件":["118.1"],"第四步":["118.1"],"cat":["118.1"],"然后复制里边的信息":["118.1"],"在网页登录github账号":["118.1"],"点击个人头像":["118.1"],"进入setting":["118.1"],"然后选择":["118.1"],"merge":["119.1"],"这样可能会产生冲突":["119.1"],"新建分支":["119.2"],"删除本地分支":["119.2"],"删除远程分支":["119.2"],"删除后还需推送到服务器":["119.2"],"origin":["119.2"],"删除后推送至服务器":["119.2"],"指的是某个branch在服务器上的最新状态":["119.3"],"我们可以在本地通过它查看刚取回的更新信息":["119.3"],"远程主机名":["119.4"],"远程分支名":["119.4"],"这个时候用":["120.2"],"rebase":["120.2"],"就可以解决":["120.2"],"rewinding":["120.2"],"replay":["120.2"],"your":["120.2"],"on":["120.2","122.4"],"it":["120.2"],"applying":["120.2"],"现在再查看一下提交历史":["120.2"],"2e2b995":["120.2"],"完美解决":["120.2"],"现在再push推送到远端":["120.2"],"0001":["120.3"],"hint":["120.3"],"am":["120.3"],"show":["120.3"],"current":["120.3"],"see":["120.3"],"all":["120.3"],"manually":["120.3"],"them":["120.3"],"resolved":["120.3"],"rm":["120.3"],"conflicted":["120.3"],"files":["120.3"],"can":["120.3"],"instead":["120.3"],"skip":["120.3"],"state":["120.3"],"before":["120.3"],"失败了":["120.3"],"原因很简单":["120.3"],"两个分支修改个同一个文件":["120.3"],"产生了冲突":["120.3"],"所以先需要解决冲突":["120.3"],"打开冲突的文件":["120.3"],"解决冲突":["120.3"],"会看到乱七八糟的所有增量修改历史":["121.0"],"其实对别人来说":["121.0"],"danger":["121.1"],"但是不保留该提交的注释信息":["121.2"],"exec":["121.2"],"表示执行shell命令":["121.2"],"d":["121.2"],"表示丢弃这条commitid":["121.2"],"根据我们的需求":["121.2"],"我们需要讲第二三次提交合并到第一次提交上去":["121.2"],"最终只形成一个提交":["121.2"],"提交信息":["121.2"],"从而可以去执行其他操作":["122.0"],"方便查找":["122.3"],"wip":["122.4"],"master":["122.4"],"比如第二个":["122.6","122.7"],"这个文件我也想存起来":["122.10"],"很明显":["122.10"],"先执行下":["122.10"]},{"0":["51.7","61.28","68.14","78.1","87.12","88.6","96.23"],"1":["12.3","13.0","60.8","68.13","78.6","87.12","88.6","106.2","112.4","119.2","122.6"],"2":["12.1","12.2","60.8","75.0","77.6","94.0"],"3":["20.0","29.4","41.1","41.4","60.8","75.0","76.18","89.1","118.1"],"4":["13.7","60.44","60.47","68.1","79.0","86.8","86.12","103.1"],"5":["21.0","47.0","51.5","60.47","61.27","61.28","61.38","61.48","68.9","68.13","77.5","78.6","88.5","106.2"],"6":["60.42","61.26","61.48","78.6","96.2","96.3","106.2"],"7":["61.25","78.6","86.9"],"8":["22.0","22.1","61.25","78.6","96.3"],"10":["9.0","79.0","87.14","96.3","108.9"],"11":["79.0"],"16":["86.7"],"17":["86.6","86.7"],"18":["25.0","86.6","86.7","107.3"],"19":["25.1","86.6"],"20":["68.1","75.2"],"22":["78.6"],"25":["68.13"],"30":["56.3","78.29"],"31":["86.15"],"40":["68.1","68.6"],"42":["108.9"],"44":["114.2"],"46":["114.2"],"50":["68.5","114.2"],"62":["61.38"],"66":["96.18","106.2"],"75":["68.13"],"80":["79.0"],"96":["91.4"],"97":["76.7"],"98":["76.7"],"99":["76.7","77.10"],"394":["120.2"],"500":["60.4"],"502":["60.4"],"1000":["61.31"],"1200":["87.14"],"2010":["60.37"],"push":["2.0","48.3","54.1","87.10","87.12","112.6"],"j为":["3.0"],"与数组每一项的差值":["3.0"],"判断map中是否包含着这个差值的项":["3.0"],"如果包含":["3.0"],"则这个时候这个差值与nums":["3.0"],"之和等于target":["3.0"],"has":["3.0","78.16"],"通过两个指针一快一慢来限定重复项目":["4.0"],"fast":["4.0"],"console":["5.0","60.3","76.16","76.24","77.22","77.23","87.6","87.7","87.13","87.14"],"log":["5.0","60.3","76.10","76.16","76.23","76.24","76.25","77.20","77.22","77.23","87.6","87.14"],"function":["5.0","51.8","78.1","106.1","107.5"],"len1":["5.0"],"len2":["5.0"],"计算递减序列的长度":["6.0"],"currentlength":["6.0"],"n":["7.0","96.22"],"left":["7.0","64.4"],"right":["7.0","64.4","68.15"],"ans":["7.0"],"while":["7.0","8.0"],"let":["10.0","76.21","77.7","97.4"],"leftsum":["10.0"],"for":["10.0","25.2","25.3","64.37","64.38"],"k":["10.0","89.1","96.22"],"length":["10.0","11.0","51.7","77.7","79.0","87.12"],"if":["10.0","11.0","21.2","41.10","60.3","64.35","78.1","108.6","114.1"],"比较左侧数字之和是否等于总和减去左侧数字和当前数字的值":["10.0"],"服务端js运行环境":["12.0"],"txt":["12.0","12.1","61.48"],"以上内容除去webstorm外":["12.0"],"都可以免费获得":["12.0"],"webstorm可以获取免费试用30天的版本":["12.0"],"评估了angular":["12.1"],"而webstorm是从11版本才开始部分支持angular":["12.1"],"2的typescript开发":["12.1"],"是因为要同时评估angular":["12.2"],"而angular":["12.2"],"2必须要在非常新的浏览器上才能正确运行":["12.2"],"目前最新的stable稳定版本":["12.3"],"标志":["12.4","14.1"],"这是使用了淘宝提供的npm镜像服务来安装所需的软件":["12.4"],"这样访问的速度会加快非常多":["12.4"],"如果您优先运行了后面的可选的命令":["12.4"],"那么之前三个命令的此标志项都可以去除":["12.4"],"x的命令和windows类似":["12.4"],"但是前面都加了一个sudo":["12.4"],"用于提权后把这些工具安装到node":["12.4"],"js的公共库中":["12.4"],"安装完成后":["12.4"],"请手动命令确认这几个工具的版本":["12.4"],"如果您安装时不成功":["12.4"],"请先确认node":["12.4"],"js工具的版本是否是最新的":["12.4"],"安装好后":["12.4"],"您的几个工具的版本应该如下":["12.4"],"图2":["13.0"],"创建项目":["13.0"],"用于存放图片文件":["13.1"],"但是":["13.1"],"为什么要把他们放置到":["13.1"],"即可保证目录外的内容不被暴露到网络当中":["13.2"],"另外":["13.2"],"这样设置的主要原因是为了使用git将整个项目都管理起来":["13.2"],"将文档内容拷贝过去":["13.3"],"命令行工具":["13.4"],"文件":["13.5","14.1"],"里面的内容如下":["13.5"],"以上配置文件会告诉":["13.6"],"将文档下载到":["13.6"],"我们将从安装angularjs开始":["14.0"],"也即是angularjs的1":["14.1"],"0版本":["14.1"],"当前的最新版本":["14.1"],"这个额外的标志":["14.1"],"是告诉":["14.1"],"把我们的安装记录放置入":["14.1"],"json":["14.1"],"这样":["14.1","60.32"],"我们以后可以直接通过":["14.1"],"对此项目使用的angularjs或其他库进行更新":["14.1"],"此时":["14.1","50.5"],"当我们打开":["14.1"],"我们会发现文档中的内容变多了":["14.1"],"我将":["14.2"],"从":["14.2","47.0"],"en":["14.2"],"改为了":["14.2"],"放在head部分的javascript文件":["14.3"],"会在body渲染完毕后才开始执行":["14.3"],"从angularjs工作的特性来看":["14.3"],"ng":["14.4","32.4"],"h1":["14.4","18.1","31.0","41.10"],"如果出现以上结果":["14.5"],"请您按书的前面内容仔细检查您的代码":["14.5"],"world到此结束":["14.5"],"下面我们将进入angularjs的世界":["14.5"],"页面模板获取和植入":["15.0"],"全局事件监听":["15.0"],"如何调试angularjs代码":["15.0"],"如何使用自动化测试工具":["15.0"],"表单":["15.0"],"数据验证":["15.0"],"界面库的引入":["15.0"],"并将表达式进行计算的结果显示在此处":["16.0"],"这也是angularjs最吸引人的特性":["16.0"],"因为它还支持将javascript中的数据显示在此处":["16.0"],"我们将在后面的内容中介绍如何操作":["16.0"],"并且":["16.0","29.0","50.0"],"和":["17.0","25.0","64.3","64.19","85.2","101.0"],"如":["17.1","64.15","98.4"],"data":["17.1","23.0"],"如果有读者清楚":["17.2"],"可与我联系以便更新上此段内容":["17.2"],"例如":["17.3","76.18","92.4","103.0"],"div":["17.3","28.0","29.2","30.1","30.7","60.36","77.14"],"声明好":["18.0"],"x":["18.1","23.4","74.0","78.1","87.16","96.21"],"body":["18.1","28.0","30.7","34.0"],"hello":["18.1","64.43","76.20","78.1"],"world":["18.1","19.0","64.43"],"声明放置在":["18.2"],"元素中":["18.2"],"那么angularjs":["18.2"],"只会":["18.2"],"针对":["18.2"],"元素中的内容进行处理":["18.2"],"开发者工具":["18.3"],"中看到报错信息":["18.3"],"以下表达式不会输出任何内容":["19.0"],"因为它在firstctrl之外":["19.0"],"p":["19.0","34.0","49.6","77.10","108.1"],"下面的内容不会显示":["19.0"],"这里只是为了表明变量命名的约束":["19.3"],"如果可能":["19.3"],"请不要使用拼音命名的变量":["19.3"],"值得注意的是":["19.3"],"之下除了可以传入数据外":["19.3"],"还可以传入其他函数":["19.3"],"比如我们声明一个":["19.3"],"中传入数据后":["19.4"],"通过表达式可以直接调用":["19.4"],"之间共享时":["19.5"],"如果不对数据进行二次封装":["19.5"],"可能会导致数据互相访问不了的情况":["19.5"],"运行结果":["20.0","21.0","25.3"],"图4":["20.0","21.0","22.1","23.2","25.0","25.1"],"value":["20.1","25.4","49.1"],"按钮":["20.1","48.4"],"click":["20.1"],"点击按钮":["20.1"],"我们即可看到数据通过弹出框显示了出来":["20.1"],"bold":["20.2"],"red":["20.2"],"来调整样式":["20.2"],"hide中的文字":["21.0"],"if为真时界面":["21.0"],"且之后不会使用到":["21.1"],"那么可以使用":["21.1"],"如果之后还可能会显示出来":["21.1"],"等标签中传入参数时":["21.2"],"是不需要双括号":["21.2"],"从源代码可以看出来":["22.0"],"刷新页面后":["22.1"],"让我们点击第一个按钮":["22.1"],"效果如下":["22.1"],"index字段应用效果":["22.1"],"format":["23.0"],"timezone":["23.0"],"将时间转化到对应的格式和时区":["23.0"],"将对象转化为json格式内容输出":["23.0"],"lowercase":["23.0"],"将文本转化为小写":["23.0"],"uppercase":["23.0"],"将文本转化为大写":["23.0"],"jerry":["23.1"],"model":["23.2","24.2"],"运行效果":["23.2","24.2","30.6"],"td":["23.3","23.4"],"in":["23.4","25.3","25.4","30.4","64.37","64.38"],"list":["23.4"],"filter":["23.4"],"选中后上方文字将变化为粗体":["24.1"],"style中加上bold类":["24.1"],"选中后上方文字将变红":["24.1"],"背景变黄":["24.1"],"style中加上has":["24.1"],"error类":["24.1"],"对应多个来源":["24.3"],"以及多个设定好的样式开关":["24.3"],"此示例就不进行具体的运行效果展示了":["24.3"],"span":["24.4"],"示例文本":["24.4"],"清除样式":["24.5"],"br":["24.5"],"运行页面":["25.0"],"我们可以看到下拉列表中有列表中的五种颜色":["25.0"],"并且选中不同颜色后":["25.0"],"下方方框内的颜色":["25.0"],"会根据选择变化":["25.0"],"options运行效果":["25.0"],"颜色根据选中状态变化":["25.0"],"利用到了":["25.0"],"group":["25.3"],"by":["25.3"],"option":["25.4"],"修改修改代码":["26.0"],"观察具体的运行情况":["26.0"],"class":["27.0","52.3"],"还有一种比较特殊的放置在注释中生效的表达方式":["27.0"],"if等使用方法":["27.1"],"如果您现在再仔细看下它们的使用方法":["27.1"],"但是相信我":["27.2"],"这些付出是非常有价值的":["27.2"],"rel":["28.0","30.7","34.0"],"stylesheet":["28.0","30.7","34.0"],"href":["28.0","30.7"],"style":["28.0","30.7"],"people":["28.2"],"sex":["28.3","107.3"],"具体的效果":["28.3"],"是会去除掉":["28.3"],"eac":["28.4"],"以上三种都可使用":["28.4"],"在javascript中的命名":["29.0"],"与在html对应使用时的名称":["29.0"],"peoplelist":["29.1","30.4"],"peoplelistarray":["29.1"],"作为连接符":["29.5"],"其他的两种符号":["29.5"],"另":["29.6"],"的存在":["29.6"],"可能是针对xhtml的支持":["29.6"],"注意":["29.6","64.46","76.34","77.6","78.5","87.14","118.1"],"当然是能够并列放置这些directive":["30.0"],"通过传入不同的数据来让directive展示不同的内容":["30.0"],"peopleoneinfo":["30.0"],"html":["30.1","31.2","60.36","61.48","64.7","69.0","75.2"],"中":["30.2","95.2"],"运行效果如下":["30.3"],"info":["30.4","44.3","64.42","75.6","98.6"],"注意这里绑定btn":["30.7"],"btnclick中传入的参数的命名":["30.7"],"同时":["31.0","64.18","64.56"],"我们还要加入一个新的html文档":["31.0"],"为了演示":["31.0"],"我们将新建的文档放置在和index":["31.0"],"html同一个目录":["31.0"],"命名为part":["31.0"],"id":["31.1","64.51","79.0"],"part":["31.1","31.2"],"即是这部分html代码片段的命名":["31.1"],"使用时":["31.1"],"直接使用":["31.1"],"即可":["31.1"],"这样进行封装":["31.1"],"与函数封装调用的概念类似":["31.1"],"当默认html进行展示时":["31.1"],"运行效果与上面的图片一致":["31.2"],"angularjs会自动将":["32.2"],"绑定到jquery上":["32.2"],"保证在angular":["32.3"],"js之前引入jquery":["32.3"],"controller":["32.4"],"firstctrl":["32.4"],"form":["32.4","33.0"],"鼠标移开了":["32.5"],"运行时":["32.5"],"当鼠标移动到标题上":["32.5"],"则标题文字会变化成":["32.5"],"并加上删除线效果":["32.5"],"当鼠标移开":["32.5"],"则文字会变为":["32.5"],"这段文字是放置在directive中间的":["33.0"],"标签1":["34.0"],"h4":["34.0"],"标题1":["34.0"],"这是第一个标签下的内容":["34.0"],"标签2":["34.0"],"andtoo":["37.1"],"net":["37.1"],"微信":["37.1"],"深入学习angularjs":["37.3","38.0"],"directive":["37.3","38.0"],"制作一个自定义的directive":["37.3","38.0"],"directive的命名和使用规则":["37.3","38.0"],"让directive支持传入数据":["37.3","38.0"],"使用templateurl获取模板":["37.3","38.0"],"让directive动起来":["37.3"],"译":["37.4"],"这本书只有141页":["37.4"],"定价28元":["37.4"],"网站还有折扣":["37.4"],"阅读起来非常轻松":["37.4"],"如果您有编程经验":["37.4"],"我将angularjs作为一个类似于app的载体":["37.5"],"当网站代码在客户端载入完成后":["37.5"],"网络带宽优化":["37.6"],"如果需要扩展":["37.6"],"可以提高机器配置或者增加机器数量":["37.6"],"如果你之前有java或其他后端语言的编程经验":["37.7"],"angularjs是让你快速上手web前端开发的很好的选择":["37.7"],"当时花费了我19美金":["37.8"],"接下来我所做的事情":["37.8"],"就是拿着这个模板的代码":["37.8"],"修改html和增加controller":["37.8"],"service":["37.8"],"调整ui":["37.8"],"router的配置":["37.8"],"最终完成了网站的第一个版本":["37.8"],"花的时间大约是2个月出头":["37.8"],"前端":["37.8"],"后端":["37.8"],"部署调试":["37.8"],"开发工作全部由我一人完成":["37.8"],"虽然我会尽力保证信息的正确性":["37.9"],"但也还请您在阅读的过程中批判的接收信息":["37.9"],"如果有何问题":["37.9"],"this":["37.10","60.37","77.20"],"work":["37.10"],"is":["37.10","77.3"],"licensed":["37.10"],"under":["37.10"],"the":["37.10"],"creative":["37.10"],"commons":["37.10"],"to":["37.10"],"本章总结":["38.0"],"高阶组件来执行":["41.1"],"react是jsx渲染模板":["41.1"],"操作是一个非常昂贵的操作":["41.2"],"很耗费性能":["41.2"],"所以就有了虚拟dom":["41.2"],"虚拟dom是对真实dom的映射":["41.2"],"特性而无需编写类组件":["41.3"],"hooks并没有完全取代生命周期的方法":["41.3"],"但是可以在函数组建中完成类似的功能":["41.3"],"常用的hooks有":["41.3"],"usestate":["41.3"],"逻辑代码方便复用":["41.4"],"stricemode":["41.5"],"未来的":["41.6"],"react":["41.6","52.2"],"使用":["41.7","64.12","64.56","93.3"],"pushstate":["41.7","64.19"],"函数可以支持临时储存":["41.7"],"zustand":["41.7"],"jsx是js语法扩展允许在html中写js":["41.8"],"js是原生写法需要通过script标签引入":["41.8"],"的语法糖":["41.9"],"因此使用jsx可以完成的任何事情都可以通过原生js来完成":["41.9"],"something":["41.10"],"went":["41.10"],"反之就是react组件":["41.11"],"两者的区别就是":["41.12"],"fragment可以使用key":["41.12"],"当需要快速地继承已有的html表单元素或访问dom元素时":["41.13"],"可以考虑使用非受控组件":["41.13"],"打包后文件体积比较大":["42.1"],"普通客户端渲染加载所有所需文件的时间较长":["42.1"],"之前的生命周期":["42.2"],"因此有些第三方库会受到影响":["42.2"],"shoulecomponentupdate":["43.1"],"因为标准就这么设计的的":["44.1"],"所以从结构上来说虚拟dom比真实的dom轻量很多":["44.1"],"注":["44.3"],"表示实际的标签":["44.3"],"表示标签内部的属性":["44.3"],"除去key":["44.3"],"消耗一些性能":["44.5"],"所以有可能会比html慢一点":["44.5"],"虚拟dom知识规划了一个最短路径":["44.5"],"都是根据虚拟dom画出响应平台的ui层":["44.6"],"外的功能":["45.0"],"通过熟练掌握高阶组件的概念和使用方式":["45.0"],"我们可以提高代码的可维护性和可读性":["45.0"],"构建更加强壮":["45.0"],"高效的应用程序":["45.0"],"context":["45.1","101.2"],"他接收一个上下文对象作为参数":["45.1"],"并返回上下文的当前值":["45.1"],"组件嵌套不需要一层一层props传参":["45.1"],"可以直接实现a组件传值到c组件":["45.1"],"创建方法为createcontext":["45.1"],"mycontext":["45.1"],"并且可以保存任何职":["45.2"],"类似于类的实例属性":["45.2"],"变量是决定视图图层渲染的变量":["45.2"],"需要使用usestate":["45.2"],"其他用途则使用":["45.2"],"只支持传入数字":["47.0"],"表示最大支持缓存页面个数":["47.0"],"原理":["47.0"],"组件的实现原理是将被缓存的组件实例存储到一个缓存对象中":["47.0"],"当需要重新渲染这个组件时":["47.0"],"会从缓存中获取到之前的实例":["47.0"],"并将其重新挂载在dom上":["47.0"],"的渲染看":["47.0"],"的渲染":["47.0"],"vue的渲染":["47.0"],"then":["48.0","114.1"],"如果浏览器不支持原生":["48.0"],"则使用":["48.0","49.3"],"script":["48.1"],"全局代码":["48.1"],"settimeout":["48.1"],"一次性定时器":["48.1"],"setinterval":["48.1"],"持续性定时器":["48.1"],"node中的":["48.1"],"setimmediate":["48.1"],"i":["48.1","76.27"],"o":["48.1","96.22"],"ui":["48.1"],"rendering":["48.1"],"在任务队列里没有执行":["48.2"],"所以无法拿到更新后的视图":["48.2"],"然后执行到":["48.2"],"fn":["48.2","78.4"],"添加一个异步任务":["48.2"],"internal":["48.3"],"把回调函数放入回调队列":["48.3"],"try":["48.3","60.21"],"call":["48.3","87.16","92.4"],"catch":["48.3","60.21"],"e":["48.3","96.22"],"handleerror":["48.3"],"preflushindex":["48.5"],"activepreflushcbspreflushindex":["48.5"],"清空当前活动的任务队列":["48.5"],"递归执行":["48.5"],"直到清空前置任务队列":["48.5"],"再往下执行异步更新队列任务":["48.5"],"这个方法负责执行后置任务队列":["48.5"],"activepostflushcbs":["48.5"],"保存队列中去重后的任务":["48.5"],"deduped":["48.5"],"vue2源码nexttick":["48.6"],"与":["49.1","61.9","61.10"],"引号":["49.1"],"在html":["49.1"],"attribute":["49.1"],"名称中都是不合法的":["49.1"],"例如下面的示例":["49.1"],"这会触发一个编译器警告":["49.1"],"foo":["49.1","49.5","76.4"],"bar":["49.1"],"如果需要传入动态的复杂参数":["49.1"],"推荐使用vue的":["49.1"],"计算属性":["49.1"],"当使用":["49.1"],"内嵌模版":["49.1"],"直接写在html文件里的模版":["49.1"],"需要避免在名称中使用大写字母":["49.1"],"因为浏览器会强制将其转换为小写":["49.1"],"someattr":["49.1"],"上面的例子将会在":["49.1"],"有更高的切换开销":["49.3"],"而":["49.3"],"有更高的初始渲染开销":["49.3"],"因此":["49.3"],"如果需要频繁的切换":["49.3"],"activeusers":["49.4"],"或者使用":["49.4"],"标签添加":["49.4"],"来包装":["49.4"],"元素":["49.4"],"xlink":["49.5"],"svg":["49.5"],"a":["49.5","55.2"],"special":["49.5"],"修饰符也有专门缩写":["49.5"],"someproperty":["49.5"],"someobject":["49.5"],"等同于":["49.5"],"消息是":["49.6"],"enter":["49.7"],"onenter":["49.7"],"点击事件将最多触发一次":["49.7"],"对象语法":["49.7"],"mousedown":["49.7"],"mouseup":["49.7"],"监听子组件的自定义事件":["49.7"],"这两个生命周期钩子":["50.0"],"在两者之间执行":["50.0"],"所以在实际开发中":["50.0"],"deactivated":["50.1"],"缓存的组件停用时调用":["50.1"],"之一":["50.2"],"view":["50.2"],"层还未更新":["50.2"],"若在":["50.2"],"中再次修改数据":["50.2"],"不会再次触发更新方法":["50.2"],"updated":["50.2"],"完成":["50.2"],"层更新":["50.2"],"update":["50.2"],"结构已经生成":["50.3"],"但如果在页面加载前完成请求":["50.3"],"则不会出现此情况":["50.3"],"建议对页面内容的改动放在":["50.3"],"组件数据更新之后":["50.4"],"组件实例卸载之前":["50.4"],"组件实例卸载之后":["50.4"],"activated":["50.4"],"keep":["50.4"],"alive":["50.4"],"缓存的组件激活时":["50.4"],"获取最新的值":["50.5"],"onbeforeunmount":["50.5"],"当组件不再被需要时":["50.5"],"将依次执行":["50.5"],"beforeunmount":["50.5"],"unmount":["50.5"],"钩子函数":["50.5"],"beforeunmount钩子函数在组件卸载之前调用":["50.5"],"通常用于处理一些事件监听器或者一些异步任务":["50.5"],"unmounted钩子函数在组件完全被卸载后调用":["50.5"],"组件可以回收内存等资源":["50.5"],"钩子会在组件卸载之前进行":["50.5"],"通常可以用来清除定时器":["50.5"],"取消事件监听器等操作":["50.5"],"定时器示例":["50.5"],"时候":["51.1"],"不会影响到":["51.1"],"做了双向绑定":["51.2"],"关系如图":["51.2"],"核心是通过业务逻辑层":["51.3"],"根据指令模版替换数据":["51.4"],"以及绑定相应的更新函数":["51.4"],"将来":["51.5"],"中数据一旦发生变化":["51.5"],"会首先找到对应的":["51.5"],"walk":["51.6"],"keys":["51.6"],"对元素进行递归遍历":["51.7"],"return":["51.7","60.38","74.0","83.0","87.13","100.0","108.7","108.8"],"nodetype":["51.7"],"创建dep实例":["51.8"],"obj":["51.8"],"val":["51.8","78.4"],"observe":["51.8"],"const":["51.8","77.15"],"new":["51.8","84.0","93.1"],"object":["51.8","78.10","97.4"],"defineproperty":["51.8","78.5","78.8"],"我们发现":["52.2"],"变得始终是杯子里的内容":["52.2"],"而杯子始终是那个杯子":["52.2"],"spa图示":["52.2"],"header":["52.3"],"最后是":["52.3"],"fmp":["52.3"],"ajax请求数据之后":["52.3"],"首次有效绘制":["52.3"],"就是页面加载差不多了":["52.3"],"但是可能图片还没加载出来":["52.3"],"save":["52.4"],"dev":["52.4"],"config":["52.4"],"js中":["52.4"],"vitecompression":["52.4"],"from":["52.4"],"export":["52.4"],"plugins":["52.4"],"配置选项":["52.4"],"read":["54.3"],"不报错":["55.2"],"返回true":["55.2"],"使用位置":["55.2"],"我们可以通过类型守卫":["55.2"],"instanceof":["55.2"],"操作符这些":["55.2"],"来限制类型范围":["55.2"],"在操作符的加持下":["55.2"],"我们就可以使用":["55.2"],"正常运行":["55.3","77.21"],"bb":["55.3"],"cc":["55.3"],"boolean":["55.3","64.49","77.8"],"天气不错":["56.1"],"适合骑车":["56.1"],"后续持续更新":["56.2"],"不同类型相互转换有时需要强制转换":["60.1"],"而javascript只有一种类型":["60.1"],"var":["60.1","68.11","68.15","106.1"],"response":["60.3","64.51"],"处理服务器返回的数据":["60.3"],"表示请求失败":["60.4"],"客户端请求的资源没有找到或者不存在":["60.4"],"表示服务器遇到未知错误":["60.4"],"导致无法完成客户端当前请求":["60.4"],"我们也可以理解为这些函数堆栈并不在栈上分配而是在堆上分配":["60.6"],"当在一个函数内定义另外一个函数就会产生闭包":["60.6"],"如果找不到就重新计算":["60.7"],"然后更新缓存并返回值":["60.7"],"如果找到了":["60.7"],"直接返回查找到的值即可":["60.7"],"防止内存泄漏":["60.8"],"及时销毁不再使用的对象或变量":["60.8"],"尤其是大内存占用的对象":["60.8"],"避免循环引用":["60.8"],"确保对象之间的引用关系能够正确断开":["60.8"],"让父元素担当事件监听的职务":["60.9"],"事件委托的原理就是dom元素的时间冒泡":["60.9"],"oul":["60.10"],"document":["60.10","60.13","60.31"],"getelementbyid":["60.10","60.31","60.35"],"ul1":["60.10"],"onclick":["60.10"],"srcelement":["60.11"],"从里到外":["60.12"],"事件委托":["60.12"],"可以在请求头中携带cookie":["60.13"],"本地存储主要用户客户端本地保存数据":["60.13"],"供同一域名下的页面之间共享":["60.13"],"访问方式":["60.13"],"cookie":["60.13"],"通过":["60.13","64.57","76.12"],"解构赋值":["60.16"],"newjson将是被删除后的json对象":["60.16"],"对外提供公共访问方式":["60.17"],"继承":["60.17"],"提高代码复用性":["60.17"],"继承是多态的前提":["60.17"],"指向原函数的显式原型":["60.18"],"函数的":["60.18"],"this指向obj":["60.18"],"获取并发请求中的数据":["60.20"],"语句来捕获异常":["60.21"],"链接":["60.21"],"限制的最大长度是不一样的":["60.22"],"如果需要支持":["60.22"],"ie":["60.22"],"则最大长度为":["60.22"],"请求一般是做增删改操作":["60.23"],"所以必须与数据库交互":["60.23"],"等":["60.24","91.1"],"可以向文档或者文档中的元素添加事件侦听器来预定事件":["60.24"],"如果是":["60.25"],"false":["60.25","78.5"],"表示是在冒泡阶段调用事件处理程序":["60.25"],"apply函数的恶区别":["60.26"],"offsetleft":["60.28"],"还有一点需要注意":["60.28"],"拖拽的时候是绝对定位":["60.28"],"改变的是绝对定位条件下的方向的值":["60.28"],"这时":["60.30","78.5","93.1"],"会释放掉":["60.30"],"函数执行完成之后":["60.31"],"因为":["60.31"],"计数不为":["60.31"],"这样的相互引用如果大量存在就会导致内存泄漏":["60.31"],"特别是在dom对象中":["60.31"],"也容易存在这种问题":["60.31"],"element":["60.31"],"target":["60.32"],"receiver":["60.32"],"content":["60.33","61.15","61.21","61.26","61.36"],"f":["60.33","96.22"],"mypic":["60.35"],"innnerhtml":["60.35"],"img":["60.35","60.36"],"1970年1月1日":["60.37"],"以来的毫秒数":["60.37"],"因此我们可以在":["60.37"],"的原型上定义克隆的方法":["60.37"],"prototype":["60.37","78.1"],"clone":["60.37"],"newdate":["60.37"],"fri":["60.37"],"jan":["60.37"],"01":["60.37"],"08":["60.37"],"00":["60.37","120.2"],"gmt":["60.37"],"0800":["60.37"],"对于正则对象":["60.37"],"如果字符串长度为":["60.38"],"直接返回包含该字符的数组":["60.38"],"permutations":["60.38"],"则允许互相访问":["60.40"],"也就是说":["60.40","77.10"],"javascript只能访问和操作自己域下的资源":["60.40"],"在没有明确授权的情况下":["60.41"],"不能读写对方的资源":["60.41"],"即使图片无法显示":["60.42"],"页面上也会腾出图片的空位":["60.42"],"然后继续加载后面的内容":["60.42"],"从而加载时间变快了":["60.42"],"浏览器体验也变好了":["60.42"],"指向事件对象":["60.43"],"方法排序":["60.44"],"然后与相邻的元素比较":["60.44"],"不同则存入新数组":["60.44"],"concat":["60.45"],"返回一个新数组的特性实现拷贝":["60.45"],"用扩展运算符":["60.45"],"原型式继承":["60.47"],"寄生式继承":["60.47"],"阻塞":["60.48"],"的连接方式完全不同":["60.50"],"端口也不同":["60.50"],"http是":["60.50"],"heading":["60.51"],"标签的优化":["60.51"],"alt":["60.51"],"优化":["60.51"],"懒加载对服务器前端有一定的缓解压力的作用":["60.52"],"预加载则是会增加服务器前端的压力":["60.52"],"可以把文件压缩到最小":["61.1"],"是有损压缩":["61.2"],"因此会导致图像细节的损失":["61.2"],"大":["61.3"],"不适合存储真实照片":["61.3","61.4"],"png":["61.4"],"而ie盒模型的宽高指的是":["61.5"],"内容区":["61.5"],"border":["61.7","61.15","68.15"],"缓存":["61.9","61.10"],"冲突":["61.9"],"预加载视频":["61.10"],"mark":["61.12"],"高亮显示":["61.12"],"dialog":["61.12"],"对话框":["61.12"],"必须配合open属性":["61.12"],"embed":["61.12"],"边框图像区域超出边框的量":["61.14"],"repeat":["61.14"],"图像边框是否平铺":["61.14"],"径向渐变":["61.16"],"垂直位移":["61.17"],"模糊半径":["61.17"],"阴影颜色":["61.17"],"perspective":["61.18"],"为":["61.18"],"delay":["61.19"],"count":["61.20","74.0"],"动画播放次数":["61.20"],"但代码比较多":["61.21"],"css":["61.21","61.26"],"after":["61.21"],"相对于块级元素的祖先元素定位":["61.22"],"当超过设置的阈值之后":["61.22"],"就会变成固定定位":["61.22"],"block":["61.24"],"给父元素添加伪元素":["61.25"],"弹性盒":["61.25"],"父元素":["61.25"],"父元素设置弹性盒":["61.26"],"display":["61.26"],"flex":["61.26"],"网格布局":["61.27"],"查找可以使用的标签":["61.30"],"disabled":["61.30"],"查找禁止使用的标签":["61.30"],"checked":["61.30"],"查找被选中的标签":["61.30"],"selection":["61.30"],"设置选中文本内容的高亮显示":["61.30"],"内联样式的权重":["61.31"],"包含选择器权重":["61.31"],"字体变体":["61.32"],"variant":["61.32"],"字体粗细":["61.32"],"weight":["61.32"],"文本装饰性线条的外观":["61.32"],"或者":["61.33"],"svgsprite":["61.33"],"blockquote":["61.34"],"dir":["61.34"],"frommenu":["61.34"],"可变元素":["61.34"],"根据上下文预警决定该元素为块元素还是内联元素":["61.34"],"内侧添加空白时用":["61.35"],"设置弹性盒子元素在侧轴上的对齐方式":["61.36"],"设置行对齐":["61.36"],"这样直接就是原来的px数值除以10加上em就可以":["61.38"],"缺点":["61.38","64.22","64.23"],"行为":["61.40"],"js":["61.40"],"标准模式":["61.41"],"以浏览器支持的最高标准执行":["61.41"],"混杂模式":["61.41"],"在目标元素完全接受被拖放元素时触发":["61.42"],"dragend":["61.42"],"关闭后的一些清理操作":["61.43"],"影响的主要也是":["61.43"],"图片懒加载":["61.44"],"移除一些注释内容":["61.44"],"降低关键资源的rtt次数":["61.44"],"离线缓存":["61.45"],"manifest":["61.45"],"离线数据缓存localstorage":["61.45"],"协议有两层协议组成":["61.48"],"记录协议和":["61.48"],"握手协议":["61.48"],"服务器响应请求":["61.48"],"当浏览器到web服务器建立连接后":["61.48"],"浏览器会发送一个初始的":["61.48"],"get请求":["61.48"],"请求目标通常是一个html文件":["61.48"],"服务器收到请求后":["61.48"],"将返回一个":["61.48"],"的响应报文":["61.48"],"内容包括响应头和":["61.48"],"正文":["61.48"],"get":["61.48","97.4"],"index":["61.48"],"http1":["61.48"],"浏览器解析渲染页面":["61.48"],"浏览器接收到服务端的响应之后":["61.48"],"width":["61.49"],"100px":["61.49"],"height":["61.49"],"1px":["61.49"],"难度不一":["61.50"],"css动画比":["61.50"],"js动画更简单":["61.50"],"性能方面":["61.50"],"js动画在低版本浏览器下表现并不好":["61.50"],"css动画可以做到自然降级":["61.50"],"两者相邻的外边距为一正一负时":["61.51"],"折叠结果是两者相加的和":["61.51"],"在同一个文件":["63.5"],"数据绑定不一样":["63.5"],"实现了数据双向绑定":["63.5"],"数据流动是单向的在":["63.5"],"state":["63.5"],"对象需要用":["63.5"],"增加不必要的复杂性":["64.2"],"状态管理":["64.2"],"在一些复杂的应用中":["64.2"],"随着视图和数据逻辑的增加":["64.2"],"可能会涉及到复杂的状态管理问题":["64.2"],"如果不恰当地管理好状态":["64.2"],"可能会导致应用变得难以理解和维护":["64.2"],"mvvm与mvc的区别":["64.2"],"mvc":["64.2"],"是model":["64.2"],"controller的简写":["64.2"],"即模型":["64.2"],"控制器":["64.2"],"m和v指的意思和mvvm中的m和v意思一样":["64.2"],"c即controller指的是页面业务逻辑":["64.2"],"computed":["64.3"],"space":["64.4","87.11"],"空格键":["64.4"],"up":["64.4","120.2"],"down":["64.4"],"向上":["64.4"],"下":["64.4"],"左":["64.4"],"不能输出真正的":["64.7"],"与模版插值":["64.7"],"直接使用逗号分隔就可以":["64.9"],"那么会对新老节点进行对比":["64.10"],"比较两者":["64.10"],"修改时触发":["64.11"],"中使用":["64.12"],"name":["64.12","64.47","78.9","78.29","84.0","107.3"],"导航到对应路由":["64.12"],"middleware":["64.13"],"配置代理服务器的中间件":["64.13"],"javascript运行环境":["64.15"],"node":["64.15"],"js服务器端":["64.15"],"location":["64.16"],"b":["64.16","77.21"],"修改":["64.16"],"事件":["64.18"],"无需向后端发起请求":["64.18"],"浏览器可以监听哈希值的变化":["64.18"],"并按照规则加载相应的代码":["64.18"],"包括":["64.19"],"replacestate":["64.19"],"方法用于修改历史状态":["64.19"],"在hash模式下":["64.20"],"仅hash符号之前的url会被包含在请求中":["64.20"],"后端如果没有覆盖所有路由":["64.20"],"路由参数直接体现在url中":["64.22"],"用户可以直接看到传递的信息":["64.22"],"有限性":["64.22"],"查询参数式可选的":["64.23"],"因此可以选择何时传递它们":["64.23"],"查询参数不像路由参数那么直观":["64.23"],"使用查询参数":["64.24"],"非必要信息":["64.24"],"查询参数通常用于传递可选信息":["64.24"],"点击跳转":["64.27"],"font":["64.29"],"size":["64.29"],"message":["64.30"],"getitem":["64.33"],"token":["64.33","91.6"],"在某个路由独享的守卫":["64.34"],"dashboard":["64.35"],"其他路由配置":["64.35"],"beforeeach":["64.35"],"在进入每个路由前进行身份验证等操作":["64.35"],"custom":["64.36"],"directives":["64.36"],"item":["64.37","64.38"],"v":["64.38"],"key":["64.38","78.29"],"父组件中使用自定义事件来进行接收":["64.40"],"即等号前面的属性名一致":["64.40","64.41"],"等号后面的属性值可以自定义":["64.40","64.41"],"child":["64.40","64.41"],"takeoverchild":["64.40","64.41"],"msg":["64.42"],"这个效果跟上面示例的结果是一样的":["64.42"],"tip":["64.42"],"就是展示传入的内容":["64.43"],"一只吗喽":["64.44"],"敖润之子":["64.44"],"one":["64.45"],"more":["64.45"],"thing":["64.45"],"warning":["64.46","78.5","85.2","87.14"],"作用域插槽不能绑定":["64.46"],"属性":["64.46","78.10","107.3"],"因为绑定了":["64.46"],"我是萝北":["64.47"],"默认值为false":["64.49"],"deep":["64.49"],"米哦认知为false":["64.49"],"flush":["64.49","64.50"],"pre":["64.49"],"post":["64.49"],"sync":["64.49"],"默认值为pre":["64.49"],"如果源是对象":["64.50"],"强制深度遍历":["64.50"],"以便在深层级变更时触发回调":["64.50"],"吊证回调函数的刷新时机":["64.50"],"当已不再需要该侦听器时":["64.51"],"副作用清理":["64.51"],"async":["64.51"],"newid":["64.51"],"oldid":["64.51"],"oncleanup":["64.51"],"一条数据影响多条数据的时候":["64.52"],"例如搜索框":["64.52"],"是否支持异步":["64.52"],"history":["64.54"],"在":["64.54","92.0"],"router":["64.55"],"是vue3中一个重要的新增特性":["64.56"],"它提供了更灵活和可复用的组件逻辑复用方式":["64.56"],"api能够更好地组织和封装组件逻辑":["64.56"],"提高代码的可维护性":["64.56"],"它也有助于更好的利用javascript":["64.56"],"引擎的优化":["64.56"],"使得组件的性能更高效":["64.56"],"自定义渲染器和渲染优化":["64.56"],"但是通过":["64.57"],"mutations来操作":["64.57"],"dispatch":["64.57"],"触发":["64.57"],"也支持载荷":["64.57"],"shadow属性高级用法":["66.0"],"transform":["68.1","68.6","68.13","68.14","68.15"],"scaley":["68.1","68.14"],"scale":["68.5","68.9","68.13"],"4s":["68.8"],"3s":["68.8","68.15"],"keyframes":["68.9","68.14","68.15"],"translate":["68.11"],"ms":["68.13","68.14","68.15"],"float":["68.14"],"solid":["68.15"],"transparent":["68.15"],"465efb":["68.15"],"rotate":["68.15"],"webkit":["68.15"],"infinite":["68.15"],"ease":["68.15"],"out":["68.15"],"与其使用":["69.0"],"你可以":["69.0"],"更好地使用css级联属性":["69.0"],"使用更具体的规则":["69.0"],"在您选择的元素之前":["69.0"],"增加一个或多个元素":["69.0"],"使选择器变得更加具体":["69.0"],"并获得更高的优先级":["69.0"],"覆盖important":["69.0"],"虽然我们应该尽量避免使用":["69.0"],"但你应该知道如何覆盖important":["69.0"],"加点权重就可以实现":["69.0"],"优先级最高":["69.0"],"但也会被权重高的important所覆盖":["69.0"],"的第一个参数写的是":["74.0"],"null":["74.0","78.6","101.4"],"那么":["74.0","78.5"],"指向的是":["74.0"],"window对象":["74.0"],"接下来是":["74.0"],"bind函数也是改变this指向的":["74.0"],"但是不会立即调用":["74.0"],"y":["74.0","78.1","87.16","89.1"],"这是它们的区别":["74.1"],"根据自己的实际情况来选择使用":["74.1"],"下次当请求北方送到同一个域时":["75.0"],"浏览器会使用":["75.0"],"header通过网络发送cookie":["75.0"],"trim":["75.1"],"cookieparts":["75.1"],"每个域的":["75.2"],"总数不得超过":["75.2"],"左右":["75.2"],"具体限制取决于浏览器":["75.2"],"cookie有几个选项":["75.2"],"其中很多都很重要":["75.2"],"应该设置它":["75.2"],"选项在被列在key":["75.2"],"value之后":["75.2"],"以":["75.2"],"分隔":["75.2"],"像这样":["75.2"],"通常":["75.3"],"我们应该将":["75.3"],"设置为根目录":["75.3"],"之后":["75.4"],"有cookie":["75.4"],"出于历史原因":["75.4"],"则cookie会被删除":["75.5"],"会在一小时后失效":["75.5"],"javascript":["75.6","106.1"],"worldhello":["76.6"],"两者都等同于":["76.12"],"函数":["76.12"],"将一个数组添加到另一个数组的尾部":["76.12"],"arr1":["76.12"],"arr2":["76.12"],"并且不存在由于参数不同而导致的重载":["76.14"],"它的行为非常统一":["76.14"],"undefined":["76.14","78.28","85.1","96.21"],"输出":["76.17","78.9"],"数组空位":["76.18"],"es6中对待数组空位的方式有所改变":["76.18"],"空位指的是数组中某个位置没有任何值":["76.18"],"中的第二个元素是个空位":["76.18"],"在es6之前":["76.18"],"对待数组空位的方式是跳过它们":["76.18"],"不进行任何操作":["76.18"],"propkey":["76.21"],"ig":["76.27"],"flags":["76.27","76.28"],"因为第二次匹配从上一次匹配的结束位置开始":["76.30"],"u":["76.31"],"symbol":["76.32"],"方法":["76.32","93.3"],"相当于":["76.36"],"像箭头函数":["77.0"],"模版字面量":["77.0"],"必须先进行声明":["77.2"],"否则会抛出错误":["77.2"],"not":["77.3"],"defined":["77.3"],"first":["77.5"],"second":["77.5"],"fourth":["77.5"],"fifth":["77.5"],"sixth":["77.5"],"默认值":["77.5"],"解构赋值允许指定默认值":["77.5"],"danger":["77.6"],"如果要将一个已经声明的变量用于解构赋值":["77.6"],"需要注意不能把花括号写在行首":["77.6"],"否则会报错":["77.6"],"syntaxerror":["77.6"],"syntax":["77.6"],"error":["77.6"],"因为javascript会将":["77.6"],"理解成一个代码块":["77.6"],"从而发生语法错误":["77.6"],"正确写法应该是":["77.6"],"解构赋值允许等号左边的模式之中":["77.6"],"len":["77.7","79.0"],"参数值默认是不穿值的":["77.10"],"而是每次重新计算默认值表达式的值":["77.10"],"参数默认值是惰性求值的":["77.10"],"yield":["77.12"],"命令":["77.12"],"因此箭头函数不能用作":["77.12"],"会捕获其所在的上下文的this的值":["77.13"],"这是一个div标签":["77.14"],"templatestring":["77.14"],"sortnumbers":["77.15"],"sort":["77.15"],"参数的写法":["77.15"],"numbers":["77.15"],"result":["77.17"],"foos":["77.21"],"属性名表达式为对象":["77.21"],"keya":["77.21"],"keyb":["77.21"],"三体":["77.22"],"刘慈欣":["77.22"],"当被作为函数调用时":["78.1"],"apply":["78.1","78.2"],"thisbinding":["78.1"],"args":["78.1","78.2"],"当被用作构造函数实例化时":["78.1"],"construct":["78.1"],"fproxy":["78.1"],"setprototypeof":["78.2"],"proto":["78.2"],"如果目标对象是函数":["78.2"],"那么还有两种额外操作可拦截":["78.2"],"实例作为函数调用的操作":["78.2"],"fnname":["78.4"],"reduce":["78.4"],"window":["78.4","82.0","84.0"],"double":["78.4"],"属性会触发":["78.5"],"第四个参数":["78.5"],"就是指向原始赋值行为所在的对象":["78.5"],"如果目标对象自身的某个属性不可写":["78.5"],"方法将不起作用":["78.5"],"writable":["78.5"],"baz":["78.5"],"每一个":["78.7"],"对象的拦截操作":["78.7"],"删除对象的属性":["78.8"],"john":["78.9","78.29"],"age":["78.9","78.29","99.8","107.3"],"getownpropertysymbols":["78.10"],"方法获取对象的所有":["78.10"],"symbols":["78.10"],"map键值对是有序的":["78.12"],"插入的顺序决定了键值对的顺序":["78.12"],"中自动移除":["78.14"],"不会造成内存泄漏":["78.15"],"检查键值对":["78.16"],"报苦熬原始类型和对象":["78.17"],"true":["78.18","78.28","78.31","108.10"],"因此无法迭代":["78.19"],"也无法获取其中的大小或者清空它":["78.19"],"检查值":["78.21"],"就可以完成依次迭代操作":["78.23"],"消费":["78.24"],"上面的示例中":["78.25"],"遍历器生成函数":["78.25"],"返回一个遍历器对象":["78.25"],"即指针对象":["78.25"],"但是并没有对应的数据结构":["78.25"],"或者说":["78.25"],"遍历器对象自己描述了一个数据结构出来":["78.25"],"如果使用":["78.25"],"typescript":["78.25"],"写法":["78.25"],"遍历器接口":["78.25"],"iterable":["78.25"],"对象":["78.26","106.4"],"nodelist对象":["78.26"],"不使用":["78.27"],"配合":["78.27"],"generator函数":["78.27"],"其他场合":["78.28"],"由于数组的遍历会调用遍历器接口":["78.28"],"所以任何接受数组作为参数的场合":["78.28"],"其实都调用了遍历器接口":["78.28"],"可以依次遍历":["78.30"],"强制驼峰法命名":["79.0"],"对象字面量项尾不能有逗号":["79.0"],"逗号前后的空格":["79.0"],"逗号风格":["79.0"],"换行时在行首还是行尾":["79.0"],"循环复杂度":["79.0"],"是否允许计算后的键名什么的":["79.0"],"后面是否允许省略":["79.0"],"this别名":["79.0"],"非派生类不能调用super":["79.0"],"派生类必须调用super":["79.0"],"必须使用":["79.0"],"中的":["79.0"],"switch语句最后必须有default":["79.0"],"对象访问符的位置":["79.0"],"换行的时候在行首还是行尾":["79.0"],"避免不必要的方括号":["79.0"],"文件以单一的换行符结束":["79.0"],"必须使用全等":["79.0"],"函数表达式必须有名字":["79.0"],"函数风格":["79.0"],"规定只能使用函数声明":["79.0"],"函数表达式":["79.0"],"star":["79.0"],"生成器函数":["79.0"],"的前后空格":["79.0"],"guard":["79.0"],"in循环要用if语句过滤":["79.0"],"handle":["79.0"],"err":["79.0"],"处理错误":["79.0"],"变量名长度":["79.0"],"indent":["79.0"],"缩进风格":["79.0"],"声明时必须赋初值":["79.0"],"beforecolon":["79.0"],"aftercolon":["79.0"],"对象字面量中冒号的前后空格":["79.0"],"around":["79.0"],"comment":["79.0"],"行前":["79.0"],"行后备注":["79.0"],"depth":["79.0"],"嵌套块深度":["79.0"],"字符串最大长度":["79.0"],"callbacks":["79.0"],"回调嵌套深度":["79.0"],"params":["79.0","100.0"],"函数最多只能有3个参数":["79.0"],"statements":["79.0"],"函数内最多有几个声明":["79.0"],"cap":["79.0"],"函数名首行大写必须使用new方式调用":["79.0"],"首行小写必须用不带new方式调用":["79.0"],"new时必须加小括号":["79.0"],"newline":["79.0"],"变量声明后是否需要空一行":["79.0"],"createobjecturl":["81.0"],"根据文件url获取文件名":["81.0"],"网页正文全文高":["82.0"],"scrollheight":["82.0"],"网页被卷去的高":["82.0"],"网页被卷去的左":["82.0"],"网页正文部分上":["82.0"],"screentop":["82.0"],"网页正文部分左":["82.0"],"screenleft":["82.0"],"amd是异步":["83.0"],"asynchronously":["83.0"],"方法三":["84.0"],"获取url中的参数":["84.0"],"查询的变量名":["84.0"],"geturlparam":["84.0"],"reg":["84.0"],"regexp":["84.0"],"构造一个含有目标参数的正则表达式对象":["84.0"],"r":["84.0"],"简单来说":["85.1"],"简单对比":["85.2"],"的实现原理类似":["85.2"],"它们都是通过遍历数组":["85.2"],"对数组的每个元素执行特定的函数":["85.2"],"使用过程中的整理":["86.0"],"import":["86.2"],"mment":["86.6"],"获取小时":["86.6"],"hours":["86.6"],"获取分钟":["86.6"],"minutes":["86.6"],"获取秒数":["86.6"],"格式化时分秒":["86.8"],"xx时xx分xx秒":["86.8"],"hh时mm分ss秒":["86.8"],"days":["86.9"],"05":["86.11"],"小时内":["86.12"],"hour":["86.12"],"下周一晚上7点49":["86.13"],"llll":["86.14"],"2019年5月24日星期五晚上7点50分":["86.14"],"endof":["86.15"],"转成时间戳":["86.15"],"否则":["87.1"],"数组索引为0的元素将被作为初始值":["87.1"],"迭代器将从第二个元素开始执行":["87.1"],"在数组中的索引的位置":["87.3"],"则为":["87.3"],"如果数组为空":["87.4"],"没有第一个值可以作为":["87.4"],"输出结果为":["87.8","87.11"],"else":["87.9","108.4","108.5"],"这个方法与":["87.14"],"all":["87.14"],"接收两个参数":["88.1"],"第一个是要执行的函数":["88.1","88.2"],"第二个是延迟的时间":["88.1"],"第二个是执行之间的时间间隔":["88.2"],"在上述示例中":["88.2"],"函数将每隔一秒执行一次":["88.2"],"累计误差":["88.3"],"由于定时器的执行会受到事件循环机制和系统资源的影响":["88.3"],"定时器的实际执行时间可能会有一些偏差":["88.3"],"方法来取消之前设置的定时器":["88.4"],"次后停止":["88.5"],"translatex":["88.6"],"px":["88.6"],"设置动画执行总时间":["88.6"],"更适合与动画":["88.7"],"因为他能够自动适应浏览器的刷新率":["88.7"],"假设syn":["89.1"],"即发送syn":["89.1"],"ack包":["89.1"],"然后服务端进入syn":["89.1"],"客户端接收到服务端的syn":["89.1"],"ack包之后":["89.1"],"接收端可能还要发送数据":["89.2"],"不能立即关闭服务器端到客户端的数据通道":["89.2"],"所以并不能将服务器端的":["89.2"],"包盒对客户端的":["89.2"],"包合并发送":["89.2"],"只能先确定":["89.2"],"然后服务器等到无需发送数据时候在发送":["89.2"],"所以四次挥手时候必须是四次数据包的交互":["89.2"],"四次挥手结束后":["89.2"],"一般资料或教程都是结合":["90.0"],"将计算机网络按照5层的模型来讲":["90.0"],"5层模型只是为了方便介绍计算机":["90.0"],"sessionid":["91.1"],"的代码":["91.2"],"新版浏览器已经可以防范":["91.2"],"反射型xss的恶意代码存在url里":["91.3"],"dom型xss跟前两种xss攻击的区别":["91.3"],"dom型xss攻击中":["91.3"],"取出和执行恶意代码由浏览器端完成":["91.3"],"向被攻击者发送跨站请求":["91.5"],"利用受害者在被攻击网站已经获取的注册凭证":["91.5"],"绕过后台的用户验证":["91.5"],"token验证csrf防御机制是公认的最适合的方案":["91.6"],"若网站同时存在xss漏洞时候":["91.6"],"都保存在":["91.7"],"cookie里":["91.7"],"并访问对象上的属性":["92.0"],"然而":["92.0"],"或":["92.0","106.2"],"是唯一并且不可变的原始值并且可以用来作为对象属性的键":["92.1"],"如下":["92.1"],"在某些程序语言当中":["92.1"],"也被称作":["92.1"],"原子":["92.1"],"set":["92.3"],"相关联":["92.3"],"以获取或者存储值":["92.3"],"该函数使用一个空的参数列表":["92.3"],"以便有权对值执行访问时":["92.3"],"获取属性值":["92.3"],"使用包含分配值的参数调用的函数":["92.3"],"每当尝试更改指定属性时执行":["92.3"],"tostring":["92.4"],"该方法可以返回一个":["92.4"],"具体类型":["92.4"],"的格式":["92.4"],"的一个实例":["93.0"],"那么它只是一个普通的函数":["93.1"],"p1":["93.1","93.2"],"parent就不是一个普通的函数了":["93.1"],"这就是原型属性":["93.2"],"可以在上面添加原型方法":["93.2"],"那么问题来了":["93.2"],"是如何知道他的原型对象上有这个方法呢":["93.2"],"找到了上一层原型对象":["93.3"],"在这一层找到了":["93.3"],"返回该方法供":["93.3"],"当然如果直到":["93.3"],"上也没有找到":["93.3"],"这个函数就是该对象的构造函数":["93.4"],"通过例子我们可以看到":["93.4"],"的":["93.4","99.3"],"属性指向了":["93.4"],"就是":["93.4"],"的构造函数":["93.4"],"同样":["93.4"],"这个打印1":["94.0"],"这个a打印2":["94.0"],"这个a打印1":["94.0"],"我们来简单分析一下":["94.0"],"首先":["94.0"],"第一个打印项":["94.0"],"由于全局声明好了":["94.0"],"所以第一个":["94.0"],"打印就为":["94.0"],"虽然在声明变量的前边调用了函数":["94.0"],"但是通过变量的提升":["94.0"],"后面的值会覆盖前面的":["94.0"],"最后一个刚好是":["94.0"],"所以打印结果为":["94.0"],"第二个打印项打印出":["94.0"],"而需要重建的过程叫做回流":["95.1"],"head":["95.2"],"节点":["95.2"],"因为这些节点不会用于呈现":["95.2"],"而且不会影响呈现":["95.2"],"所以不再":["95.2"],"但会包括":["95.2"],"visibility":["95.2"],"hidden":["95.2","115.8"],"则不会被创建":["95.3"],"节点的子类":["95.3"],"clienttop":["95.4"],"调用了":["95.4"],"getcomputedstyle":["95.4"],"或者ie的":["95.4"],"避免多次读取部分布局属性":["95.5"],"同上":["95.5"],"将复杂的节点元素脱离文档流":["95.5"],"这样就会让多次的回流":["95.7"],"重绘变成一次回流重绘":["95.7"],"newnum":["96.4"],"newarr":["96.5"],"sum":["96.8"],"返回的是":["96.16"],"原始值转换":["96.16"],"对于原始值":["96.16"],"例如数字":["96.16"],"布尔值等基本数据类型":["96.16"],"它们有各自的":["96.16"],"元素4对应的下标为":["96.17"],"以此类推":["96.17"],"生成一个数字序列":["96.21"],"因为数组在每个位置都使用":["96.21"],"初始化":["96.21"],"下面的":["96.21"],"d":["96.22"],"g":["96.22"],"h":["96.22"],"j":["96.22"],"l":["96.22"],"m":["96.22","119.2"],"返回":["96.23"],"存在栈中":["97.1"],"深层次的引用类型则是共享内存地址":["97.2"],"扩展运算符实现的复制":["97.3"],"可能不是对象或者普通的值":["97.4"],"如果是函数则不需要深拷贝":["97.4"],"如果是对象的话要进行深拷贝":["97.4"],"cloneobj":["97.4"],"constructor":["97.4"],"找到的是所属类原型上的":["97.4"],"而原型上的":["97.4"],"指向的是当前类的本身":["97.4"],"两个对象指向不同的地址":["97.6"],"pwa的一个基本特性就是":["98.0"],"能够明确地将一些应用程序的资源缓存在设备上":["98.0"],"通过字段":["98.2"],"服务器能够知道是否更新":["98.2"],"大部分web浏览器默认开启协商缓存":["98.2"],"关于浏览器普通刷新和强制刷新的区别":["98.2"],"强制刷新":["98.2"],"会直接从服务器获取最新资源":["98.2"],"且该结果尚未失效":["98.3"],"disk":["98.4"],"磁":["98.4"],"硬盘缓存":["98.4"],"不请求网络":["98.4"],"资源在磁盘中":["98.4"],"一般非脚本会存放在内存中":["98.4"],"css等":["98.4"],"硬盘缓存是直接将缓存写在硬盘文件中":["98.4"],"读取缓存需要对该缓存存放的硬盘文件进行i":["98.4"],"o操作":["98.4"],"然后重新解析该缓存的内容":["98.4"],"读取复杂":["98.4"],"速度比内存缓存慢":["98.4"],"memory":["98.4"],"内存缓存":["98.4"],"资源在内存中":["98.4"],"返回200和请求结果":["98.5"],"则会根据":["98.6"],"的字段值与该资源在服务器的etag值作对比":["98.6"],"两者一致时返回304":["98.6"],"继续使用缓存文件":["98.6"],"不一致则重新返回资源文件":["98.6"],"️":["98.6"],"那么代表该请求的缓存失效":["98.7"],"重新获取请求结果":["98.7"],"在存入到浏览器阿訇":["98.7"],"也可以称":["99.0"],"a是b的超类":["99.0"],"的同时":["99.1"],"也可以重新定义汽车的某些属性":["99.1"],"并重写或覆盖某些属性和方法":["99.1"],"使其获得与":["99.1"],"这个父类不停的属性和方法":["99.1"],"寄生组合式继承":["99.2"],"我们改变了":["99.3"],"会报错":["99.4"],"可以看到":["99.4"],"父类原型对象中一旦存在父类之前自己定义的方法":["99.4"],"那么子类将无法继承这些方法":["99.4"],"不互相影响":["99.5"],"s3":["99.5"],"正常输出":["99.5"],"gamer":["99.8"],"子类中存在构造函数":["99.8"],"则需要在使用":["99.8"],"之前首先调用":["99.8"],"super":["99.8"],"的语法糖和寄生组合继承的方式基本类似":["99.9"],"tmp":["100.0"],"decodeuricomponent":["100.0"],"获取":["100.0"],"参数对象":["100.0"],"parsequeryparams":["100.0"],"urlstr":["100.0"],"querystartindex":["100.0"],"节流":["101.0"],"throttle":["101.0"],"从上一次到现在":["101.2"],"还剩下多少剩余时间":["101.2"],"arguments":["101.2"],"cleartimeout":["101.2"],"以后只有事件执行后才会再次触发":["101.4"],"频率较高的事件中使用来提高性能":["101.5"],"防抖关注一定事件内连续触发的事件":["101.5"],"只在最后执行一次":["101.5"],"滚动加载":["101.6"],"加载更多或滚到底部监听":["101.6"],"数据资源":["103.0"],"运行服务器的终端叫服务器":["103.0"],"js是一门脚本语言":["103.0"],"脚本语言需要一个解析器":["103.0"],"在客户端":["103.0"],"浏览器的js引擎充当了js的解析器":["103.0"],"而在服务端":["103.0"],"充当了解析器":["103.0"],"o是阻塞形式的":["103.1"],"然而nodejs中":["103.1"],"将异步数据放在任务队列中执行":["103.1"],"从而不阻塞主线程任务的执行":["103.1"],"当异步任务执行完毕后":["103.1"],"在任务队列添加事件":["103.1"],"等待执行":["103.1"],"从而提高了效率":["103.1"],"单线程也就是同一时刻只能做同一件事情":["103.1"],"跨平台":["103.1"],"typescript教程":["105.0"],"ruanyifeng":["105.0"],"一周只有七天":["106.0"],"颜色限定在红绿蓝等":["106.0"],"负数":["106.2"],"但后续未赋值的枚举值的步长仍为":["106.2"],"进行递增":["106.2"],"引用之前定义的常数枚举成员":["106.3"],"可以是在不同的枚举类型中定义的":["106.3"],"如果这个成员是在同一个枚举类型中定义的":["106.3"],"可以使用非限定名来引用":["106.3"],"带括号的常数枚举表达式":["106.3"],"一元运算符应用于常数枚举表达式":["106.3"],"二元运算符":["106.3"],"常数枚举表达式做为其一个操作对象":["106.3"],"来声明":["106.4"],"编译结果差异":["106.4"],"在编译时会被删除":["106.4"],"在编译时会生成真实的":["106.4"],"同时在运行时也会存在对应的对象实体":["106.4"],"使用场景差异":["106.4"],"编译结果":["106.5"],"特点":["107.1"],"不是事先定义好类型":["107.1"],"anyarr":["107.2"],"any":["107.2"],"obj1":["107.3"],"张三":["107.3"],"obj2":["107.3"],"男":["107.3"],"obj3":["107.3"],"正常编译":["107.3"],"ts编译报错":["107.3"],"obj3缺少来自obj2的":["107.3"],"我们使用":["107.3"],"两个类型字段":["107.3"],"并且指定":["107.3"],"继承自":["107.3"],"这样就保证了":["107.3"],"unknown":["107.4"],"使用交叉类型混入":["108.1"],"mixin":["108.1"],"类型的含义是遍历传入的泛型":["108.1"],"的所有属性":["108.1"],"并且把他们联合":["108.1"],"产生新的类型对象":["108.1"],"新的类型对象上每个属性的类型是他们在原本类型上的属性":["108.1"],"是泛型类的写法":["108.1"],"keyof":["108.1"],"另一种写法":["108.1"],"layeggs":["108.2"],"fish":["108.2"],"swim":["108.2"],"getsmallpet":["108.2"],"以便在后续的代码中使用更具体的类型信息":["108.3"],"类型守卫通常有以下几种方式":["108.3"],"之后调用":["108.4"],"类型的方法":["108.4"],"判断体的逻辑是将":["108.5"],"推断为属于":["108.5"],"类型定义的操作函数":["108.6"],"else判断体中是将":["108.6"],"类型推断为":["108.6"],"swom":["108.7"],"typeof":["108.8"],"合法":["108.9"],"上述示例中":["108.9"],"类型别名":["108.9"],"cat":["108.10"],"animal":["108.10"],"purrs":["108.10"],"因为软件中的对象应该对于扩展是开放的":["108.10"],"但是对于修改是封闭的":["108.10"],"类型没有substr方法":["108.11"],"元组类型在需要固定长度和类型的数组场景下非常有用":["108.11"],"例如表示一对坐标":["108.11"],"表示函数返回多个不同类型的值等":["108.11"],"通过使用元组类型":["108.11"],"但他不是结果":["108.12"],"它是一个类型":["108.12"],"类型中传入了泛型":["108.12"],"是继承于":["108.12"],"或者说arr的类型范围限制在了":["108.12"],"数组":["108.12"],"第三方可以选择根据这个凭据获取相关信息":["110.0"],"识别成功":["110.0"],"示例代码":["110.0"],"请求进行基于生物识别的人脸核身":["110.0"],"idcard":["110.0"],"相反":["112.1"],"每个元素都包含一个指向下一个元素的引用":["112.1"],"数组操作":["112.2"],"next":["112.3"],"要转换一个循环链表":["112.5"],"你开始于任意一个节点然后沿着列表的任一方向直到返回开始的节点":["112.5"],"再来看另一种方法":["112.5"],"循环链表可以被视为":["112.5"],"无头无尾":["112.5"],"这种列表很利于节约数据存储缓存":["112.5"],"如果链表中有很多节点":["112.6"],"删除头部节点":["112.6"],"deletehead":["112.6"],"uf":["112.6"],"htis":["112.6"],"doublylinklistnode":["112.6"],"将链表转换为数组":["112.6"],"toarray":["112.6"],"nodes":["112.6"],"condition":["114.1"],"kind":["114.2"],"代码生成":["114.3"],"将上一步处理好的内容":["114.3"],"转化为新的代码":["114.3"],"表达式":["114.4"],"等等":["114.4"],"语法分析程序":["114.4"],"判断源程序在结构上是否正确":["114.4"],"其作用是将上一步生成的":["114.4"],"减少体积":["115.1"],"多个文件合并":["115.1"],"减少http请求数":["115.1"],"map就是为了解决这个问题才出现的":["115.2"],"不包含原始代码的列信息":["115.4"],"如果包含cheap关键字":["115.4"],"则产生的":["115.4"],"map文件不包含列信息":["115.4"],"也就是说当你在浏览器中点击该代码的位置":["115.4"],"光标只定位到行数":["115.4"],"而不包含具体字符位置":["115.4"],"也不包含loaders的sourcemap":["115.4"],"如果你使用了babel等代码编译工具":["115.4"],"定位到的代码将是经过编译的代码位置":["115.4"],"而不是原始代码":["115.4"],"存在问题":["115.5"],"错误信息只会定义行":["115.5"],"不会定义列":["115.5"],"降低文件精度":["115.5"],"换取文件内容的缩小":["115.5"],"对于经过babel转化后的代码而言":["115.5"],"只能定义到转换后的代码的错误":["115.5"],"不是很利于定位具体项目中的位置":["115.5"],"针对cheap存在的问题":["115.5"],"引出下面的关键字":["115.5"],"但对于":["115.7"],"nosources":["115.8"],"无源代码内容":["115.8"],"另一方面又不会给bundle文件提供注释":["115.9"],"以避免浏览器使用":["115.9"],"unocss英文官网":["117.1"],"中文官网":["117.1"],"and":["118.1"],"gpg":["118.1"],"在页面里添加":["118.1"],"添加成功之后":["118.1"],"在git里输入命令":["118.1"],"com":["118.1"],"验证是否连接成功":["118.1"],"如果提示成功":["118.1"],"那么就可以把自己github远程仓库的代码clone到本地了":["118.1"],"fork别人的github项目":["118.1"],"然后clone项目到本地":["118.1"],"需要手动解决":["119.1"],"下面我们来详细了解一下":["119.1"],"oldbranch":["119.2"],"newbranch":["119.2"],"重命名本地分支":["119.2"],"重命名远程分支":["119.2"],"删除远程待修改分支":["119.2"],"push本地新分支到远程服务器":["119.2"],"git中一些选项解释":["119.2"],"delete":["119.2"],"删除":["119.2"],"如图":["119.3"],"image":["119.3"],"可以看到返回的信息包括更新的文件名":["119.3"],"更新的作者和时间":["119.3"],"以及更新的代码":["119.3"],"19行红色":["119.3"],"本地分支名":["119.4"],"如果远程分支是与当前分支合并":["119.4"],"则冒号后面的部分可以省略":["119.4"],"compression":["120.2"],"using":["120.2"],"threads":["120.2"],"writing":["120.2"],"bytes":["120.2"],"kib":["120.2"],"s":["120.2"],"powered":["120.2"],"现在是重点":["120.3"],"之前的rebase其实只是完成了一半":["120.3"],"由于出现冲突而终止":["120.3"],"现在冲突解决":["120.3"],"可以通过":["120.3"],"继续完成之前的rebase操作":["120.3"],"rebase完成":["120.3"],"再查看一下提交历史":["120.3"],"b2593e6":["120.3"],"提交记录已经是一条完美的直线":["120.3"],"现在切换到主分支master":["120.3"],"将feather分支上的提交合并过来":["120.3"],"我们的改动应该就是增加或者删除":["121.0"],"给别人看开发过程的增量反而太乱":["121.0"],"不要通过rebase对任何已经提交到公共仓库中的commit进行修改":["121.1"],"个人分支除外":["121.1"],"feat":["121.2"],"test":["121.2"],"第一次提交":["121.2"],"第二次提交":["121.2"],"第三次提交":["121.2"],"编辑后":["121.2"],"输入wq保存退出":["121.2"],"会得到如下页面":["121.2"],"保存当前的更改":["122.1"],"然后在不同的分支之间应用更改":["122.1"],"也要可以的":["122.3"],"e695606":["122.4"],"which":["122.4"],"version":["122.4"],"比如应用并删除第二个":["122.8"],"add":["122.10"],"加到git版本控制中":["122.10"],"然后再":["122.10"]},{"0":["12.4","22.1","75.5","78.10","81.0","96.21","101.2","106.5","108.4"],"1":["12.4","23.3","51.7","78.7","78.13","86.12","106.5","120.3","122.5","122.7","122.8"],"2":["12.4","19.0","76.9","78.4","84.0","106.5"],"3":["12.4","20.1","20.2","51.7","78.4","106.5"],"4":["12.4","60.8","76.13","87.13"],"5":["12.4","30.1","60.8","61.49","77.7","86.8"],"6":["21.0","30.3","60.47","61.27","77.11","77.17","87.6"],"7":["12.4","30.5","52.4","60.51","61.48"],"8":["30.6","52.4","96.2"],"9":["76.13","78.6"],"10":["23.2","23.3","31.0","55.2","78.6","96.2"],"11":["9.0","24.1"],"12":["9.0","24.1","32.4","87.13"],"13":["24.1","32.5"],"14":["24.1","33.0","75.2"],"15":["24.1","33.0","96.8"],"16":["24.2","34.0"],"17":["24.5"],"19":["75.2","86.7"],"20":["25.2","86.6","86.7","99.8"],"21":["25.3","86.7"],"22":["25.4"],"25":["78.9","96.23"],"26":["77.23"],"28":["77.23"],"30":["78.6"],"38":["78.6"],"40":["68.8"],"46":["12.2"],"49":["96.23"],"61":["114.2"],"62":["114.2"],"66":["96.19"],"67":["114.2"],"75":["78.7"],"80":["60.50","68.8"],"81":["96.23"],"99":["76.9"],"100":["77.10"],"101":["77.10"],"111":["60.37"],"123":["49.7"],"179":["68.2"],"443":["60.50"],"503":["60.4"],"1111":["96.13"],"2000":["88.6"],"2038":["75.2"],"5000":["88.5"],"else":["2.0","7.0","8.0","64.35","101.2","101.4","108.6","108.8"],"console":["2.0","60.38"],"log":["2.0","60.38","87.7","87.13"],"利用":["3.0","99.8"],"方法":["3.0","78.6"],"获取存储的差值类型的key":["3.0"],"下标":["3.0"],"然后与当遍历的次数k一起返回":["3.0"],"slow":["4.0"],"while":["4.0"],"return":["4.0","6.0","10.0","11.0","48.3","51.8","81.0","91.4","107.5"],"len":["5.0"],"continue":["5.0"],"更新最长递减序列的信息":["6.0"],"if":["6.0","51.8","55.2","84.0","100.0"],"slice":["6.0","100.0"],"mid":["7.0"],"因此":["12.0","29.6","77.6"],"您在学习本书的过程中":["12.0"],"并不需要花费购买任何软件":["12.0"],"另":["12.1"],"使用哪种编辑器更多的是个人的偏好":["12.1"],"如果您有其他喜欢的编辑器":["12.1"],"可以自行选择":["12.1"],"v":["12.2","12.4","96.21","96.22"],"推荐安装较新的稳定版本":["12.3"],"或者更高":["12.4"],"下面我们将一步一步的完善整个项目的结构":["13.0"],"目录中呢":["13.1"],"通过git版本控制的方式来保证项目代码的完整性和安全性":["13.2"],"具体的git的操作方法就不在本文中叙述了":["13.2"],"如果您不希望bower配置文件这么复杂":["13.5"],"那么可以手工最简化的创建":["13.5"],"最简化bower":["13.5"],"只需要一个":["13.5"],"字段即可让bower好好工作了":["13.5"],"目录中":["13.6"],"bower配置完成后":["13.7"],"如下所示":["14.1"],"name":["14.1"],"learning":["14.1"],"angularjs":["14.1"],"dependencies":["14.1"],"同时":["14.1"],"项目中会多出":["14.1"],"目录":["14.1"],"所有的angularjs的文件都在这个目录中存放":["14.1"],"图3":["14.1"],"安装好angularjs后的目录结构":["14.1"],"标明此网站是简体中文的":["14.2"],"同时调整了":["14.2"],"html的基础并不属于本书的范围":["14.2"],"因此不在此细述":["14.2"],"推荐所有的javascript文件都放在body部分引入":["14.3"],"学习它":["14.5"],"理解它":["14.5"],"使用它":["14.5"],"angular":["15.0"],"material":["15.0"],"案例实践":["15.0"],"登陆":["15.0"],"注册":["15.0"],"权限控制":["15.0"],"如果此处输出的是javascript中的变量":["16.0"],"此处的显示会":["16.0"],"自动":["16.0"],"的随javascript变量的变化而变化":["16.0"],"src":["17.1"],"这些用法的效果都是一样的":["17.1"],"part":["17.3"],"再引用入html页面即可":["18.0"],"这里我们将app":["18.1"],"js引入了进来":["18.1"],"以上代码有两个问题需要注意":["18.1"],"这也是angularjs的核心特性之一":["18.2"],"它让我们的javascript代码有了作用域的概念":["18.2"],"降低了代码之间不期望的一些互相影响":["18.2"],"这个特性我们在后面会大量的使用":["18.2"],"将网页分为多个部分":["18.2"],"并分别交于不同的javascript代码进行管理":["18.2"],"各个部分之间互相独立":["18.2"],"这样即可在网页中实现逻辑复杂的功能":["18.2"],"刷新页面":["19.0"],"我们可以看到运行的效果":["19.0"],"图4":["19.0","20.1","20.2","23.3","24.1","24.2","24.5","25.2","25.3","25.4"],"controller运行结果":["19.0","20.0"],"下面":["19.0","25.0"],"我们再来分析下":["19.0"],"的具体形式":["19.0"],"data":["19.2","60.3","63.5","64.51"],"message":["19.2"],"hello":["19.2"],"onclick":["19.3"],"函数传入":["19.3"],"之后":["19.3"],"可在html页面中调用这个功能":["19.3"],"实现比如按钮点击触发功能的效果":["19.3"],"在使用angularjs的时候":["19.5"],"养成数据二次封装的习惯":["19.5"],"可以避免很多这样的问题":["19.5"],"如果您实际运行代码":["20.0"],"会发现":["20.0","99.3"],"您每输入":["20.0"],"删除一个文字":["20.0"],"改动会马上在上方显示出来":["20.0"],"这就是数据绑定的魅力":["20.0"],"函数中的逻辑":["20.1"],"click运行结果":["20.1","20.2"],"运行效果如下":["20.2"],"if为假时界面":["21.0"],"从上面的例子可以看出":["21.0"],"如果复选框打勾":["21.0"],"则界面只显示了前两行文字":["21.0"],"而取消复选框的打勾":["21.0"],"则显示了最后的一行文字":["21.0"],"这个特性可以用于展示界面上的某些信息或者按钮":["21.0"],"与":["21.2","55.3"],"将参数包裹起来的":["21.2"],"直接将其所在的":["22.0"],"元素根据":["22.0"],"的长度复制了3次":["22.0"],"并将相应的数据填充了进去":["22.0"],"这样":["22.1","30.2"],"我们就可以明确的知道用户点击了哪一行了":["22.1"],"另外":["22.1"],"值得注意的是":["22.1"],"是从":["22.1"],"开始计算的哟":["22.1"],"limitto":["23.0"],"limit":["23.0"],"begin":["23.0"],"截取array从begin位置开始的limit个元素":["23.0"],"expression":["23.0","91.2"],"reverse":["23.0","78.4"],"根据expression的条件对list进行排序":["23.0"],"reverse可选":["23.0"],"设置为true则反过来排":["23.0"],"tom":["23.1"],"自定义filter的运行效果":["23.2"],"如果您期望界面显示的内容进行一些通用的处理":["23.2"],"但是又不希望对原本的数据进行改动":["23.2"],"那么可以考虑自己制作过滤器":["23.2"],"如果我们在输入框中输入t":["23.3"],"则列表中只会显示包含t的项目":["23.3"],"filter用于搜索":["23.3"],"运行效果":["24.1","25.2","31.0","34.0"],"未选中时效果":["24.1"],"ngclass运行效果":["24.1","24.2"],"选中第一个的效果":["24.1"],"选中第二个的效果":["24.1"],"选中第三个的效果":["24.1"],"全部选中的效果":["24.1"],"使用文本作为样式":["24.2"],"请读者自行测试效果":["24.3"],"运行之后":["24.4"],"点击上面的按钮":["24.4"],"则文字放大变红":["24.4"],"点击第二个按钮":["24.4"],"则文本变回原来的样子":["24.4"],"由于动画效果无法通过截图表示":["24.4"],"还请读者自行测试":["24.4"],"pre":["24.5"],"当前样式为":["24.5"],"运行效果为":["24.5"],"style运行效果":["24.5"],"在下一节中":["24.5"],"我们还将看到约束为只设置背景颜色的示例":["24.5"],"的特性":["25.0"],"我们将仔细讲解":["25.0"],"中的语法":["25.0"],"用于显示在下拉框中的名称":["25.0"],"类似于ng":["25.0"],"repeat中的用法":["25.0"],"将colors遍历":["25.0"],"每次遍历的对象命名为color":["25.0"],"options加上空选项":["25.1"],"in":["25.2","97.4","122.4"],"options加上group":["25.2"],"可以看到":["25.3","30.6","121.2"],"图中的":["25.3"],"和":["25.3","28.1","44.3"],"变为了不可选择的状态":["25.3"],"options加上disable":["25.3"],"br":["25.4"],"当前选中的国家":["25.4"],"运行结果":["25.4","28.0","30.7","33.0"],"请注意列表中显示的值和选中时变量的值的关系":["25.4"],"options传入object作为数据":["25.4"],"但是我目前没有理解其实现意义":["27.0"],"就不在这里介绍了":["27.0"],"如果我们预先定义好了针对这些标签的处理方式":["27.0"],"那么angularjs将可以把这些标签自动的转化成html显示代码":["27.0"],"就会发现它们无一例外的都是directive":["27.1"],"注意这里只加入了一个people的标签":["28.0"],"图5":["28.0","30.1","30.3","30.5","30.6","30.7","31.0","32.4","32.5","33.0","34.0"],"directive运行效果":["28.0"],"这个对象中有两个元素":["28.1"],"中间加入了template中的内容":["28.2"],"这对标签":["28.3"],"如果在restrict中设定了使用方法":["28.4"],"而在html代码中却未按照对应的方法使用":["28.4"],"那么代码将不会生效":["28.4"],"不一样":["29.0"],"然后合并起来":["29.4"],"peoplelistarray":["29.4"],"只是因为历史原因提供了支持":["29.5"],"但是并不推荐使用":["29.5"],"因为有这个条件存在":["29.6"],"请不要给你的directive起data开头的名字":["29.6"],"peopletwoinfo":["30.0"],"这样的功能":["30.0"],"可以通过配置directive的":["30.0"],"scope":["30.0"],"定义实现":["30.0"],"在html代码里":["30.1"],"我们为div元素配置了一个people的属性和一个info属性":["30.1"],"并将firstctrl的":["30.1"],"harry传入给了info":["30.1"],"最终的显示效果如下":["30.1"],"传入数据的directive":["30.1"],"我们就达到了存储数据的效果":["30.2"],"在一个控制器中多个directive":["30.3"],"实现的效果与上一张图片一样":["30.4"],"具体的页面html代码会有差异":["30.4"],"请您自行测试查看":["30.4"],"刷新界面后":["30.5"],"我们可以在输入框中尝试修改":["30.5"],"效果如下":["30.5"],"在directive中修改数据":["30.5"],"在directive中传入字符串":["30.6"],"我们在directive中传入的数据进行的数据修改":["30.6"],"并未反馈到firstctrl中":["30.6"],"form":["30.7","49.1","78.28"],"btn":["30.7"],"在directive中传入函数和数据回传":["30.7"],"p":["31.0","96.22"],"这里是part":["31.0"],"html中的内容":["31.0"],"templateurl的使用":["31.0"],"是不会显示这段代码的":["31.1"],"而通过":["31.1"],"调用后":["31.1"],"又可以直接展示出来":["31.1"],"注意":["31.1","77.5"],"通过示例我们可以看到":["31.1"],"文档中的":["31.1"],"的优先级高于独立的html文件":["31.1"],"就不重复展示了":["31.2"],"在这里":["32.0","121.2"],"我们最主要的是观察最下方的":["32.0"],"部分":["32.0","119.3"],"我们可以看到":["32.0"],"在这个directive元素中传入的数据":["32.0"],"都可以通过":["32.0"],"获取到":["32.0"],"这也是我们在":["32.0"],"中获取数据的主要方法":["32.0"],"会自动使用jquery来解析界面元素":["32.2"],"我们获取的":["32.2"],"会自动变为jquery对象":["32.2"],"element的使用":["32.4","32.5"],"因为主要是jquery的用法":["32.5"],"更多的实际应用就不在本书中详述了":["32.5"],"如果有兴趣学习jquery":["32.5"],"您可以通过上网搜索或者购买书籍的方式来学习":["32.5"],"transclude的使用":["33.0"],"查看html代码如下":["33.0"],"transclude的效果html":["33.0"],"标题2":["34.0"],"这是第二个标签下的内容":["34.0"],"这里为了将文件整理在一起":["34.0"],"使用了ng":["34.0"],"template的方式":["34.0"],"当点击":["34.0"],"或":["34.0","76.34","106.3"],"时":["34.0","95.4","118.1"],"下方会自动展示对应的内容":["34.0"],"directive之间通讯":["34.0"],"angular仓库":["36.0"],"hharry":["37.1"],"link":["37.3","38.0"],"把directive变为一个容器":["37.3","38.0"],"transclude":["37.3","38.0"],"directive之间互相通讯":["37.3","38.0"],"一个下午就可掌握javascript的基本语法和用法":["37.4"],"同时也可能学会php的语法":["37.4"],"京东特价优惠时我购买了几十本与javascript相关的书籍":["37.4"],"这本是我认为最靠谱的入门书":["37.4"],"再通过api请求获取数据":["37.5"],"幸运的是":["37.6"],"angularjs推荐这么做":["37.6"],"至少对我而言是如此":["37.7"],"从今天来看":["37.8"],"我的做法完全不符合angularjs的最佳实践":["37.8"],"虽然我未在网站中使用jquery等类库":["37.8"],"但是我也同样没有使用angularjs推荐使用的directive方式":["37.8"],"完全没有使用":["37.8"],"这也是我准备在更深入的学习angularjs和重新构建网站的第二版的主要原因":["37.8"],"不管怎么说":["37.8"],"我把东西做出来了":["37.8"],"而且整个网站是可用的":["37.8"],"从程序结构上也是可维护和修改的":["37.8"],"请通过邮件或微信联系我":["37.9"],"联系地址在此页面上方":["37.9"],"view":["37.10","49.5"],"a":["37.10","69.0"],"copy":["37.10"],"of":["37.10","78.28","100.0"],"visit":["37.10"],"让directive动起来":["38.0"],"vue是通过拓展html语法进行渲染":["41.1"],"react通过新旧dom的对比得到需要更新的部分dom":["41.2"],"实现数据的增量更新":["41.2"],"useeffect":["41.3"],"usecontext":["41.3"],"等":["41.3"],"document":["41.5"],"getelementbyid":["41.5"],"root":["41.5"],"版本将添加更多的额外功能":["41.6"],"轻量级状态管理包":["41.7"],"不到1kb":["41.7"],"wrong":["41.10"],"export":["41.10","64.35","64.55","108.1"],"default":["41.10","64.35","64.55"],"但是空标签不可以":["41.12"],"适用于简单的表单场景或需要直接操作dom元素的值得情况":["41.13"],"首页就会有一个很长的加载时间":["42.1"],"conponentdidupdate":["43.1"],"卸载子组件":["43.1"],"componentwillunmount":["43.1"],"ref":["44.3"],"会形成单独的key名":["44.3"],"表示节点内容":["44.3"],"依次循环":["44.3"],"但是还是得真是的dom去走":["44.5"],"只不过不同平台的画法不太一样":["44.6"],"在实际项目中":["45.0"],"我们可能会遇到各种高阶组件的应用场景":["45.0"],"因此掌握高阶组件的使用方法对于":["45.0"],"react开发来说至关重要":["45.0"],"mycomponent":["45.1","49.7"],"value":["45.1","100.0","114.2"],"useref特性":["45.2"],"可变的":["45.2"],"持久化":["45.2"],"的渲染是从图中":["47.0"],"render":["47.0"],"阶段开始的":["47.0"],"但keep":["47.0"],"alive的渲染是在patch阶段":["47.0"],"构建组件树":["47.0"],"虚拟dom树":["47.0"],"并将":["47.0"],"vnode":["47.0"],"转换成真正":["47.0"],"dom":["47.0","49.5","61.48","103.0"],"节点的过程":["47.0"],"首次加载被包裹组件时":["47.0"],"componentinstance":["47.0"],"的值是":["47.0"],"undefined":["47.0","76.18","77.9","78.7","78.31","93.3"],"因为":["47.0","99.6"],"组件作为父组件":["47.0"],"它的render函数会优先于被包裹的组件先执行":["47.0"],"后面逻辑不执行":["47.0"],"再次访问被包裹组件时":["47.0"],"的值就是已经缓存的组件的实例":["47.0"],"之后会把上一次的dom插入到父元素中":["47.0"],"alive组件渲染流程":["47.0"],"来模拟":["48.0"],"的行为":["48.0"],"并在回调函数执行前添加一个空的定时器来强制推迟执行":["48.0"],"的交互事件":["48.1"],"promise":["48.1","78.28"],"then":["48.1"],"回调":["48.1"],"mutaionobserver":["48.1"],"nexttick":["48.1"],"async":["48.1"],"await":["48.1","64.51"],"这时的任务队列可以简单理解成这样":["48.2"],"然后同步任务就执行完了":["48.2"],"接着按顺序执行任务队列里的任务":["48.2"],"第一个任务执行就会更新视图":["48.2"],"后面自然而然地就得到更新后的视图了":["48.2"],"如果异步开关是开的":["48.3"],"就关闭":["48.3"],"表示正在执行回调函数":["48.3"],"然后执行回调函数":["48.3"],"如果没有提供回调":["48.3"],"并支持promise":["48.3"],"那么就返回promise":["48.3"],"这里的":["48.3","108.1"],"是让我们在不穿参数的情况下使用的":["48.3"],"具体使用":["48.3"],"sflow":["48.3"],"disable":["48.3"],"time":["48.3"],"如果当店已经有活动的队列":["48.5"],"就添加到执行队列的末尾":["48.5"],"并返回":["48.5"],"赋值为当前活动队列":["48.5"],"排列队列":["48.5"],"postflushindex":["48.5"],"activepostflushcbspostflushindex":["48.5"],"vue3源码nexttick":["48.6"],"的内嵌模版中转换为":["49.1"],"如果组件中拥有":["49.1"],"属性而非":["49.1"],"这段代码将不会工作":["49.1"],"但文件内的模版不受此限制":["49.1"],"修饰符":["49.1"],"modifiers":["49.1"],"修饰符是以点开头的特殊后缀":["49.1"],"表明指令需要以一些特殊的方式被绑定":["49.1"],"prevent":["49.1"],"修饰符会告知":["49.1"],"指令对触发的事件调用":["49.1"],"event":["49.1","64.49"],"preventdefault":["49.1"],"submit":["49.1"],"onsubmit":["49.1"],"较好":["49.3"],"如果在运行时绑定条件很少改变":["49.3"],"则":["49.3"],"更合适":["49.3"],"当在":["49.5"],"内模板使用":["49.5"],"可以驼峰化":["49.5"],"的名称":["49.5"],"例如":["49.5"],"viewbox":["49.5"],"box":["49.5"],"当子组件的":["49.7"],"my":["49.7"],"被触发":["49.7"],"处理函数将被调用":["49.7"],"handlethis":["49.7"],"我们可以简单地把":["50.0"],"理解为":["50.0"],"来使用":["50.0"],"errorcaptured":["50.1","50.4"],"捕获一个来自子孙组件的错误时被调用":["50.1","50.4"],"vue2生命周期":["50.1"],"会再次触发更新方法":["50.2"],"beforedestroy":["50.2"],"实例被销毁前调用":["50.2"],"此时实例属性与方法仍可访问":["50.2"],"destroyed":["50.2"],"完全销毁一个实例":["50.2"],"可清理它与其他实例的连接":["50.2"],"接棒他的全部指令以及事件监听器":["50.2"],"并不能清除dom":["50.2"],"仅仅销毁实例":["50.2"],"生命周期当中":["50.3"],"deactivated":["50.4"],"缓存的组件停用时调用":["50.4"],"vue生命周期":["50.4"],"starttimer":["50.5"],"开始":["50.5"],"stoptimer":["50.5"],"停止":["50.5"],"onunmount":["50.5"],"钩子函数会在组件卸载后运行":["50.5"],"通常用于清理一些资源或取消订阅":["50.5"],"unsubscribe":["50.5"],"取消订阅":["50.5"],"双向绑定关系":["51.2"],"来进行关联数据与视图":["51.3"],"通知所有":["51.5"],"执行更新函数":["51.5"],"双向绑定原理":["51.5"],"foreach":["51.6","112.6"],"key":["51.6","64.37","97.4"],"definereactive":["51.6"],"test":["51.7"],"get":["51.8"],"target也就是watcher实例":["51.8"],"set":["51.8","97.4"],"newval":["51.8"],"通知dep执行更新方法":["51.8"],"vue":["52.2"],"都属于":["52.2"],"meaningful":["52.3"],"表示页面的":["52.3"],"主要内容":["52.3"],"开始出现在屏幕上的时间点":["52.3"],"它是我们测量用户加载体验的主要指标":["52.3"],"fmp本质上是通过一个算法来猜测某个时间点可能是":["52.3"],"所以有时候不准":["52.3"],"fmp原理":["52.3"],"捕获fmp的原理":["52.3"],"根据需要进行配置":["52.4"],"外链css":["52.4"],"js文件":["52.4"],"很多时候我们在main":["52.4"],"js中直接import一些ui库或者css文件啥的":["52.4"],"以后可以在index":["52.4"],"通过script外链引入":["52.4"],"这样就不会通过我们的webpack打包":["52.4"],"loading":["52.4"],"首页加一个loading或许是最原始的方法了":["52.4"],"在index":["52.4"],"html里加一个loadingcss效果":["52.4"],"当页面加载完成消失":["52.4"],"function":["54.3","76.20","78.7"],"类型变量":["55.2"],"bb":["55.2","69.0"],"可以正常运行":["55.2"],"typescript中有两个":["55.3"],"顶层类型":["55.3"],"any":["55.3","78.25"],"unknown":["55.3"],"只有一个":["55.3"],"底层类型":["55.3"],"为变量赋值时会自动判断类型并转换":["60.1"],"所以是弱类型语言":["60.1"],"http":["60.3","60.42"],"example":["60.3"],"com":["60.3"],"api":["60.3"],"true":["60.3","76.29","78.1"],"表示服务器请求超时":["60.4"],"表是服务器由于临时的服务器过载或者维护":["60.4"],"无法解决当前请求":["60.4"],"闭包正式可以做到这一点":["60.7"],"因为它不会释放外部的引用":["60.7"],"从而函数内部的值得以保留":["60.7"],"在使用定时器时":["60.8"],"一定要记得及时清除已经失效的定时器":["60.8"],"使用内存分析工具来检测内存泄漏问题":["60.8"],"及时发现和解决潜在问题":["60.8"],"赋值为null":["60.8"],"alert":["60.10"],"利用事件冒泡的原理":["60.10"],"将事件委托给父元素":["60.10"],"代理就是利用事件冒泡的机制把里层需要相拥的事件绑定到外层":["60.12"],"来进行访问和设置":["60.13"],"本地存储通过":["60.13"],"localsorage":["60.13"],"对象进行访问与设置":["60.13"],"newjson":["60.16"],"多态":["60.17"],"是父类或接口定义的引用变量可以指向子嘞或者具体实现类的实例对象":["60.17"],"apply":["60.18","78.7"],"返回结果":["60.18"],"instanceof":["60.18"],"object":["60.18","107.3"],"es6新特性二":["60.21"],"待开发":["60.21"],"2083byte":["60.22"],"若只支持":["60.22"],"chrome":["60.22"],"则最大长度是":["60.22"],"8182byte":["60.22"],"所以不能使用缓存":["60.23"],"ie浏览器只支持事件冒泡":["60.25"],"也可以通过h5的拖放":["60.28"],"drag和drop":["60.28"],"来实现":["60.28"],"释放内存以便在引用垃圾回收的方法":["60.30"],"标记清除":["60.30"],"计数引用":["60.30"],"someobject":["60.31"],"这样就不会有垃圾回收的过程":["60.31"],"即使有属性在user中不存在":["60.32"],"通过user":["60.32"],"id同样也可以这样监听这个属性的变化":["60.32"],"这里需要组合继承":["60.33"],"this":["60.35"],"id":["60.36","69.0"],"onloading":["60.36"],"pattern":["60.37"],"flags":["60.37"],"global":["60.37"],"g":["60.37"],"ignorecase":["60.37"],"multiline":["60.37"],"m":["60.37"],"source":["60.37"],"reg":["60.37"],"newreg":["60.37"],"abc":["60.38","76.7","77.6"],"输出":["60.38","87.6"],"bac":["60.38"],"bca":["60.38"],"acb":["60.38"],"cab":["60.38"],"cba":["60.38"],"不能访问和操作其它域下的资源":["60.40"],"减少":["60.42"],"请求":["60.42"],"合并文件":["60.42"],"合并图片":["60.42"],"includes":["60.44"],"spread":["60.45"],"实现数组":["60.45"],"寄生组合式继承":["60.47"],"这两个关注的是程序在等待调用结果时的状态":["60.48"],"https是":["60.50"],"反向链接":["60.51"],"网站外链优化":["60.51"],"不支持透明度":["61.2"],"表示ie盒子模型":["61.7"],"muted":["61.9","61.10"],"静音模式":["61.9","61.10"],"冲突":["61.10"],"加载插件的标签":["61.12"],"video":["61.12"],"视频标签":["61.12"],"audio":["61.12"],"音频标签":["61.12"],"平铺":["61.14"],"round":["61.14"],"铺满stretch":["61.14"],"拉伸":["61.14"],"转换":["61.17"],"指定什么时候开始切换效果":["61.19"],"direction":["61.20","61.32"],"是否轮流反向播放动画":["61.20"],"display":["61.21"],"block":["61.21"],"visibility":["61.21"],"inherit":["61.22"],"表示元素会继承父级元素的定位属性":["61.22"],"flex":["61.25"],"self":["61.25"],"center":["61.25","61.26"],"justfy":["61.26"],"item":["61.26"],"table":["61.27"],"布局":["61.27"],"只能用于背景色和文本颜色":["61.30"],"not":["61.30"],"否定伪类选择器":["61.30"],"lang":["61.30"],"语言伪类选择器":["61.30"],"包含的所有的权重之和":["61.31"],"decoration":["61.32"],"元素的文本大小写":["61.32"],"transform":["61.32"],"文本方向":["61.32"],"svg精灵图":["61.33"],"button":["61.34"],"del":["61.34"],"iframe":["61.34"],"ins":["61.34"],"justify":["61.36"],"设置弹性盒子元素在主轴上的对齐方式":["61.36"],"屏幕越小的移动设备如果用了":["61.38"],"肯定文字就越小":["61.38"],"就会导致看文章的时候看不清":["61.38"],"中页面是一种比较宽松的像后兼容的方式显示":["61.41"],"在整个拖放操作结束时触发":["61.42"],"实现前两者的优化":["61.44"],"使用":["61.44","78.27","96.16"],"cdn":["61.44"],"渲染":["61.45"],"服务端渲染":["61.45"],"开始渲染解析页面":["61.48"],"浏览器会处理":["61.48"],"并且构建":["61.48"],"树":["61.48"],"处理":["61.48","76.18"],"css":["61.48"],"标记并构建":["61.48"],"cssdom":["61.48"],"将":["61.48","64.57","94.0"],"树和":["61.48"],"树合并成一个渲染树":["61.48"],"根据渲染树来布局":["61.48"],"以计算每个节点的集合信息":["61.48"],"将各个节点渲染到屏幕上":["61.48"],"这样就完成了页面渲染":["61.48"],"传输完成":["61.48"],"tcp四次挥手":["61.48"],"native":["61.48"],"javascript":["61.48","103.1"],"tcp四层五层与osi七层模型区别":["61.48"],"事件方面":["61.50"],"css动画有天然提供的事件支持":["61.50"],"js动画则没有":["61.50"],"兼容性问题":["61.50"],"css动画存在兼容性问题":["61.50"],"setstate":["63.5"],"方法更新状态":["63.5"],"在":["63.5"],"state对象不是必须的":["63.5"],"数据由":["63.5"],"属性在":["63.5"],"对象中管理":["63.5"],"使用mvc的目的就是将m和v的代码分离":["64.2"],"mvc是单向通信":["64.2"],"也就是view跟model":["64.2"],"必须通过controller来承上启下":["64.2"],"两者区别":["64.2"],"mvc和mvvm其实区别并不大":["64.2"],"都是一种设计思想":["64.2"],"mvc和mvvm的区别并不是vm完全取代了c":["64.2"],"只是在mvc的基础上增加了一层vm":["64.2"],"不过是弱化了c的概念":["64.2"],"viewmodel存在目的在于抽离controller中展示的业务逻辑":["64.2"],"而不是替代controller":["64.2"],"其它视图操作业务等还是应该放在controller中实现":["64.2"],"也就是说mvvm实现的是业务逻辑组件的重用":["64.2"],"使开发更高效":["64.2"],"结构更清晰":["64.2"],"增加代码的复用性":["64.2"],"解决":["64.3"],"右":["64.4"],"系统按键修饰符":["64.4"],"ctrl":["64.4"],"alt":["64.4"],"shift":["64.4"],"meta":["64.4"],"按下对应键位触发":["64.4"],"区别是在页面加载时不显示双花括号":["64.7"],"是否相同":["64.10"],"进行调换位置或删除操作":["64.10"],"导航的同时":["64.12"],"给子路由传递参数":["64.12"],"如果发现没有浏览器的api":["64.15"],"路由强制进入这个模式":["64.15"],"不会刷新页面":["64.16"],"会触发":["64.16"],"hash的改变会自动添加到浏览器历史记录中":["64.16"],"hash值的变化会被浏览器记录":["64.18"],"实现页面的前进和后退功能":["64.18"],"不过":["64.18"],"它在seo中的确有不好的影响":["64.18"],"以及":["64.19"],"forward":["64.19","120.3"],"back":["64.19"],"go":["64.19"],"方法用于切换历史状态":["64.19"],"也不会返回404错误":["64.20"],"路由参数通常只能传递有限数量的信息":["64.22"],"因为他们必须以路径的一部分存在":["64.22"],"因为他们不包含在路径中":["64.23"],"用户不容易传递信息":["64.23"],"不影响访问资源的关键性标识":["64.24"],"auth":["64.35"],"isauthenticated":["64.35"],"login":["64.35"],"未登录时重定向到登录页":["64.35"],"继续导航":["64.35"],"自定义指令主要是为了重用涉及普通元素的底层dom访问逻辑":["64.36"],"content":["64.40","64.41"],"插槽在父子组件关系中放置在子组件中":["64.42"],"插槽的内容是被在父组件中调用时传递过来的":["64.42"],"插槽内容":["64.42"],"插槽内容是在父组件中调用子组件时":["64.42"],"具体要传递给子组件的值":["64.42"],"一般是放在子组件标签里面的":["64.42"],"小小苹果":["64.44"],"具名插槽的顺序是不限制的":["64.44"],"只需要写好模版命好名字":["64.44"],"它就会自动去到它所对应的位置":["64.44"],"成了具名插槽了":["64.46"],"同样具名插槽的":["64.46"],"属性也不会传递给":["64.46"],"这种在父组件作用域中获取到了子组件作用域中的变量":["64.46"],"可以认为作用域插槽":["64.46"],"延伸了子组件数据的作用范围":["64.46"],"所以这类能够借搜参数的插槽就被称为作用域插槽":["64.46"],"ontrack":["64.49","64.50"],"debuggerevent":["64.49"],"ontrigger":["64.49","64.50"],"调试侦听器的依赖":["64.50"],"cancel":["64.51"],"doasyncwork":["64.51"],"当":["64.51"],"变化时候":["64.51"],"cancel将被调用":["64.51"],"取消之前的未完成的请求":["64.51"],"函数不能有异步":["64.52"],"可以":["64.52"],"函数中使用路由器":["64.54"],"综上所述":["64.54"],"是vuerouter的实例":["64.54"],"提供了路由控制器的一些方法和属性":["64.54"],"用于改变url和获取路由相关信息":["64.54"],"而":["64.54","85.1","85.2"],"是当前激活的路由对象":["64.54"],"包含了当前url解析得到的信息":["64.54"],"history":["64.55"],"引入了一个新的渲染器api":["64.56"],"使得可以更轻松地构建自定义渲染器":["64.56"],"这使得vue3":["64.56"],"0不仅能够在浏览器中运行":["64.56"],"还可以在服务器":["64.56"],"原生应用等环境中使用":["64.56"],"新的渲染器api也带来了更多的渲染优化":["64.56"],"使得vue3":["64.56"],"在不同环境下都能够高效地工作":["64.56"],"为了解决":["64.57"],"store对象过于臃肿的问题":["64.57"],"分割成":["64.57"],"模块":["64.57"],"shadow属性高级用法":["67.0"],"9deg":["68.2"],"keyframes":["68.8"],"scale":["68.8"],"translate":["68.9","68.15"],"aa":["69.0"],"class":["69.0"],"background":["69.0"],"color":["69.0"],"blue":["69.0"],"id的important会将class的important覆盖掉":["69.0"],"red":["69.0"],"函数体":["74.0"],"没有被调用":["74.0"],"png":["74.0","82.0"],"打印出来的是":["74.0"],"7张三":["74.0"],"同样":["74.0"],"也可以有多个参数":["74.0"],"并且参数可以执行的时候再次添加":["74.0"],"但是要注意的是":["74.0"],"参数是按照形参的顺序进行的":["74.0"],"所以服务器知道是谁发起了请求":["75.0"],"我们还可以使用":["75.0"],"属性从浏览器访问cookie":["75.0"],"path":["75.2"],"expires":["75.2"],"tue":["75.2"],"jan":["75.2"],"03":["75.2"],"07":["75.2"],"gmt":["75.2"],"以使cookie对此网站所有页面可见":["75.3"],"前面有一个点符号":["75.4"],"也以相同的方式工作":["75.4"],"允许从子域访问cookie":["75.4"],"这是一种旧的表示方式":["75.4"],"如果我们需要支持非常旧的浏览器":["75.4"],"那么应该使用它":["75.4"],"总结一下":["75.4"],"通过domain选项的设置":["75.4"],"可以实现允许在子域访问cookie":["75.4"],"删除cookie":["75.5"],"让他立即过期":["75.5"],"property":["75.6"],"accessors":["75.6"],"false":["76.4","76.22","77.6","96.13"],"array":["76.12","78.28","87.3","92.4"],"prototype":["76.12","78.7"],"但在es6中":["76.18"],"空位被视为":["76.18"],"的值":["76.18"],"使用es6的数组方法时":["76.18"],"空位会被当作":["76.18"],"null":["76.30","84.0","107.2","112.3"],"参数变量是默认声明的":["76.34"],"所以不能使用":["76.34"],"let":["76.34"],"再次声明":["76.34"],"解构赋值等":["77.0"],"referenceerror":["77.2"],"️":["77.5"],"es6内部使用严格相等运算符":["77.5"],"来判断一个位置是否有值":["77.5"],"所以":["77.5"],"只有当一个数组成员严格等于":["77.5"],"默认值才会生效":["77.5"],"不放置任何变量名":["77.6"],"可以写出非常古怪的赋值表达式":["77.6"],"但没有实际意义":["77.6"],"由于数组本质是特殊的对象":["77.6"],"因此可以对数组进行对象属性的解构":["77.6"],"length":["77.6","77.15","96.12"],"generator":["77.12"],"函数":["77.12"],"最为自己的this的值":["77.13"],"innerhtml":["77.14"],"bangbang":["77.15"],"rest参数之后不能再有其他参数":["77.15"],"只能是最后一个参数":["77.15"],"否则会报错":["77.15"],"函数的":["77.15"],"属性":["77.15","99.3"],"不包括rest参数":["77.15"],"myobject":["77.21"],"valuea":["77.21"],"valueb":["77.21"],"object类型":["77.21"],"返回":["77.21","87.4","93.3"],"由于被当作函数调用":["78.1"],"所以返回传入的第一个值":["78.1"],"fpaoxy":["78.1"],"通过":["78.1","121.2"],"操作符被用作构造函数调用":["78.1"],"返回一个对象":["78.1"],"对象的key为value":["78.1"],"值为第二个传入的值":["78.1"],"访问fproxy上的属性":["78.1"],"proxy拦截后判断属性名等于":["78.1"],"修改为返回":["78.1"],"所以为":["78.1"],"foo":["78.1"],"proxy拦截后修改为返回":["78.1"],"call":["78.2","78.7"],"construct":["78.2"],"实例作为构造函数调用的操作":["78.2"],"比如new":["78.2"],"n":["78.4"],"pow":["78.4"],"reversetint":["78.4"],"tostring":["78.4"],"split":["78.4"],"join":["78.4"],"reverseint":["78.4"],"代理应当返回一个":["78.5"],"布尔值":["78.5"],"严格模式下":["78.5"],"代理如果没有返回":["78.5"],"就会报错":["78.5"],"use":["78.5"],"strict":["78.5","79.0"],"无论有没有下面这一行":["78.5"],"都会报错":["78.5"],"on":["78.5","79.0"],"trap":["78.5"],"returned":["78.5"],"falsish":["78.5"],"for":["78.5","78.28","97.4"],"直接调用":["78.6"],"也会被拦截":["78.6"],"内部调用对应的":["78.7"],"保证原生行为能够正常执行":["78.7"],"添加的工作":["78.7"],"就是将每一个操作输出一行日志":["78.7"],"有了":["78.7"],"对象以后":["78.7"],"很多操作会更易读":["78.7"],"math":["78.7"],"floor":["78.7"],"attributes":["78.8"],"定义对象的属性":["78.8"],"jane":["78.9"],"返回长度":["78.13"],"size":["78.13","78.18"],"返回实例成员总数":["78.18"],"方法返回值的规格可以描述如下":["78.25"],"interface":["78.25"],"symbol":["78.25"],"iterationresult":["78.25"],"boolean":["78.25"],"map":["78.28","112.6"],"weakmap":["78.28"],"weakset":["78.28"],"比如":["78.28"],"all":["78.28","119.2"],"race":["78.28"],"函数内部的每一个状态":["78.30"],"大括号内是否允许不必要的空格":["79.0"],"shorthand":["79.0"],"强制对象字面量缩写语法":["79.0"],"one":["79.0"],"连续声明":["79.0"],"operator":["79.0"],"assignment":["79.0"],"赋值运算符":["79.0"],"什么的":["79.0"],"换行时运算符在行尾还是行首":["79.0"],"padded":["79.0"],"块语句内行首行尾是否要空行":["79.0"],"prefer":["79.0"],"首选const":["79.0"],"首选展开运算":["79.0"],"reflect":["79.0"],"首选reflect的方法":["79.0"],"quotes":["79.0"],"single":["79.0"],"引号类型":["79.0"],"quote":["79.0"],"props":["79.0"],"对象字面量中的属性名是否强制双引号":["79.0"],"radix":["79.0"],"parseint必须指定第二个参数":["79.0"],"match":["79.0","84.0"],"命名检测":["79.0"],"yield":["79.0"],"生成器函数必须有yield":["79.0"],"语句强制分号结尾":["79.0"],"分号前后空格":["79.0"],"sort":["79.0"],"变量声明时排序":["79.0"],"space":["79.0"],"keywords":["79.0"],"关键字后面是否要空一格":["79.0"],"不以新行开始的块":["79.0"],"前面要不要有空格":["79.0"],"paren":["79.0"],"函数定义时括号前面要不要有空格":["79.0"],"小括号里面要不要有空格":["79.0"],"infix":["79.0"],"ops":["79.0"],"中缀操作符周围要不要有空格":["79.0"],"case后面要不要加空格":["79.0"],"unary":["79.0"],"words":["79.0"],"nonwords":["79.0"],"一元运算符的前":["79.0"],"后要不要加空格":["79.0"],"注释风格不要有空格什么的":["79.0"],"使用严格模式":["79.0"],"isnan":["79.0"],"禁止比较时使用nan":["79.0"],"只能用isnan":["79.0"],"valid":["79.0"],"jsdoc":["79.0"],"jsdoc规则":["79.0"],"typeof":["79.0"],"必须使用合法的typeof的值":["79.0"],"top":["79.0"],"var必须放在作用域顶部":["79.0"],"wrap":["79.0"],"iife":["79.0"],"inside":["79.0"],"立即执行函数表达式的小括号风格":["79.0"],"正则表达式字面量用小括号包起来":["79.0"],"yoda":["79.0"],"禁止尤达条件":["79.0"],"num":["81.0"],"lastindexof":["81.0"],"substring":["81.0"],"把参数和文件名分割开":["81.0"],"decodeuri":["81.0"],"屏幕分辨率的高":["82.0"],"screen":["82.0"],"屏幕分辨率的宽":["82.0"],"屏幕可用工作区高度":["82.0"],"availheight":["82.0"],"屏幕可用工作区宽度":["82.0"],"availwidth":["82.0"],"image":["82.0"],"导入模块的":["83.0"],"因此得名":["83.0"],"一开始被提议的时候":["83.0"],"amd是为前端而做的":["83.0"],"而cjs是后端":["83.0"],"amd语法不如cjs直观":["83.0"],"universal":["83.0"],"definition":["83.0"],"通用模块定义":["83.0"],"在前端和后端都适用":["83.0"],"通用":["83.0"],"因此而得名":["83.0"],"与cjs或amd不同":["83.0"],"umd更像是一种配置多个模块系统的模式":["83.0"],"当使用rollup":["83.0"],"webpack之类的打包器时":["83.0"],"umd通常用作备用模块":["83.0"],"search":["84.0"],"匹配目标参数":["84.0"],"decodeuricomponent":["84.0"],"返回参数值":["84.0"],"是返回一个新的数组":["85.1"],"不会返回值":["85.1"],"实际上返回了":["85.1"],"区别主要在于处理函数返回值的方式不同":["85.2"],"忽略函数的返回值":["85.2"],"则将函数的返回值收集到一个新数组中":["85.2"],"方便以后查阅":["86.0"],"from":["86.2"],"seconds":["86.6"],"获取当前的年月日时分秒":["86.6"],"toarray":["86.6","112.4"],"years":["86.6"],"months":["86.6"],"milliseconds":["86.6"],"toobject":["86.6"],"xxxx":["86.6"],"xx":["86.6"],"格式化时间戳":["86.8"],"以毫秒为单位":["86.8"],"返回值为字符串类型":["86.8"],"24t19":["86.11"],"08":["86.11"],"00":["86.11"],"2019年6月3日":["86.13"],"valueof":["86.15"],"时间戳":["86.15"],"转":["86.15"],"string":["86.15","92.4"],"即索引为1的位置而不是索引0的位置开始":["87.1"],"否则为":["87.3"],"调用了reduce方法的原数组本身":["87.3"],"则会抛出错误":["87.4"],"输出为6":["87.7"],"输出为":["87.13"],"相似":["87.14"],"但并不完全相同":["87.14"],"方法主要侧重于多个":["87.14"],"并行执行":["87.14"],"并在所有":["87.14"],"都成功时才返回结果":["87.14"],"这个方法则侧重于按顺序执行":["87.14"],"操作":["87.14"],"并允许处理程序之间的传递结果":["87.14"],"输出为nan":["87.15"],"输出结果为9":["87.16"],"上述示例中":["88.1"],"函数将在延迟一秒后执行":["88.1"],"这是一个常用于执行一次性延迟操作的函数":["88.1"],"适用于需要重复执行的定时任务":["88.2"],"直到被清除或者页面被卸载":["88.2"],"特别是在长时间运行的定时器中":["88.3"],"累计实际误差可能导致定时器执行时间的不确定性":["88.3"],"simulation":["88.5"],"stopped":["88.5"],"anmiate":["88.6"],"启动动画":["88.6"],"并在每一帧中执行":["88.7"],"客户端进入established状态":["89.1"],"并对服务端发送的syn包进行确认":["89.1"],"发送确认包ack":["89.1"],"服务端接收到客户端的ack包之后":["89.1"],"也进入established状态":["89.1"],"至此tcp连接成功":["89.1"],"为什么客户端没有立刻关闭呢":["89.2"],"为了确保第四次挥手的确认消息到达服务端":["89.2"],"如果服务端在规定时间内未收到最后的确认消息":["89.2"],"会冲洗内进行第三次挥手请求断开连接":["89.2"],"客户端重新发送确认消息":["89.2"],"是报文的最长生存时间":["89.2"],"两个":["89.2"],"是在网络中来回两个报文所需要的最长时间":["89.2"],"如果超过了这个时间":["89.2"],"客户端没有重新收到断开连接的请求":["89.2"],"说明四次挥手顺利完成":["89.2"],"可以断开连接了":["89.2"],"网络原理而设计的":["90.0"],"而在实际应用中还是":["90.0"],"osi七层与tcp":["90.0"],"ip四层":["90.0"],"五层的区别":["90.0"],"进而危害数据安全":["91.1"],"的css表达式代码":["91.2"],"属于前端javascript自身的安全漏洞":["91.3"],"其他两种xss都属于服务端的安全漏洞":["91.3"],"x2f":["91.4"],"白名单过滤":["91.4"],"对于现实富文本来说":["91.4"],"不能通过上面的办法来转义所有字符":["91.4"],"因为这样也会把需要的格式也转义掉":["91.4"],"这种情况推荐使用白名单过滤的方法":["91.4"],"达到冒充用户对被攻击网站执行":["91.5"],"某种操作的目的":["91.5"],"token也是空谈":["91.6"],"token验证可以避免":["91.7"],"上访问属性时":["92.0"],"会抛出":["92.0"],"typeerror":["92.0"],"异常":["92.0"],"这需要采用可选链运算符":["92.0"],"atom":["92.1"],"的目的是去创建一个唯一属性键":["92.1"],"保证不会与其他代码中的键产生冲突":["92.1"],"aaa":["92.4"],"就会返回":["92.4"],"isarray":["92.4"],"该方法会返回一个布尔值表示该值是否为数组":["92.4"],"它现在是一个构造函数":["93.1"],"因为通过":["93.1"],"关键字调用了它":["93.1"],"创建了一个parent构造函数的实例":["93.1"],"这就提到了":["93.2"],"proto":["93.2"],"就在":["93.3"],"中寻找":["93.3"],"但是":["93.3"],"obnject":["93.3"],"为null":["93.3"],"所以返回了":["93.3"],"这也就是为什么当访问对象中一个不存在的属性的时候":["93.3"],"undefined了":["93.3"],"然后又验证了":["93.4"],"就是根构造函数":["93.4"],"是因为在函数体内":["94.0"],"赋值给了变量":["94.0"],"由于变量":["94.0"],"在全局中已经声明了":["94.0"],"所以不会报错":["94.0"],"并且打印结果为":["94.0"],"至于第三个打印项":["94.0"],"就是简单的变量的提升了":["94.0"],"由于全局中":["94.0"],"最终的值为":["94.0"],"所以打印结果也为":["94.0"],"总之":["94.0"],"无论作用域中的声明出现在什么地方":["94.0"],"都将在代码本身被执行前首先进行处理":["94.0"],"可以将这个过程形象地想象成所有的声明":["94.0"],"变量和函数":["94.0"],"都会被":["94.0"],"移动":["94.0"],"到各自作用域的最顶端":["94.0"],"这个过程被称为":["94.0"],"的节点":["95.2"],"一旦":["95.2"],"构建完毕后":["95.2"],"浏览器就可以根据":["95.2"],"来绘制页面了":["95.2"],"rander流程":["95.2"],"属性决定该节点创建怎样的渲染器":["95.3"],"引起回流和重绘的原因是页面布局和几何属性发生了改变":["95.3"],"currentstyle":["95.4"],"浏览器为了返回最新值":["95.4"],"降低回流成本":["95.5"],"从下标为3的元素开始查询":["96.1","96.20"],"没有找到返回":["96.1","96.20"],"返回新数组":["96.2"],"数组改变":["96.3"],"注意和map区分":["96.3"],"满足条件的元素返回为一个新的数组":["96.4"],"满足条件的第一个元素":["96.5"],"相当于累加的效果":["96.8"],"可以被直接调用":["96.16"],"会根据规则隐式调用原始值的":["96.16"],"表示从下标为1的元素开始替换":["96.18"],"替换一个元素":["96.18"],"值将是":["96.21"],"i":["96.21"],"q":["96.22"],"r":["96.22"],"s":["96.22"],"t":["96.22"],"u":["96.22"],"w":["96.22"],"y":["96.22"],"aarr1":["97.3"],"hasownproperty":["97.4"],"进行递归判定":["97.4"],"这意味着它们可以在不需要向网络发送请求的情况下而被检索":["98.0"],"跳过强缓存和协商缓存":["98.2"],"普通刷新":["98.2"],"跳过强缓存":["98.2"],"但还是会检查协商缓存":["98.2"],"一般脚本":["98.4"],"字体":["98.4"],"图片会存在内存中":["98.4"],"内存缓存具有":["98.4"],"快速读取":["98.4"],"时效性":["98.4"],"内存缓存会讲编译解析后的文件":["98.4"],"直接存入该进程的内存中":["98.4"],"占据该进程一定的内存资源":["98.4"],"以方便下次运行使用时的快速读取":["98.4"],"一旦进程关闭":["98.4"],"则该进程的内存则会清空":["98.4"],"资源大小数值":["98.4"],"从服务器下载最新资源":["98.4"],"浏览器读取缓存的顺序是":["98.4"],"优先级高于":["98.6"],"同时存在则只有":["98.6"],"生效":["98.6"],"生效则返回304":["98.7"],"继续使用缓存":["98.7"],"blcak":["99.1"],"覆盖继承自父类别上的颜色":["99.1"],"也跟着变化了":["99.3"],"这是因为这两个实例使用的是同一个原型对象":["99.3"],"内存空间是共享的":["99.3"],"相比于第一种原型链继承的方法一":["99.4"],"父类的引用属性不会被共享":["99.4"],"优化了第一种继承方式的弊端":["99.4"],"但是只能继承父类的实例属性和方法":["99.4"],"不能继承原型属性或者方法":["99.4"],"这种方式看起来没什么问题":["99.5"],"也解决了原型链继承和构造函数继承各自存在的问题":["99.5"],"但是从上面的代码可以看到":["99.5"],"执行了两次":["99.5"],"造成了多构造一次的性能开销":["99.5"],"这种继承方式的缺点也很明显":["99.6"],"方法实现的是浅拷贝":["99.6"],"多个实例的引用类型属性指向相同的内存":["99.6","99.7"],"存在篡改的可能":["99.6","99.7"],"其优缺点也很明显":["99.7"],"跟原型式继承一样":["99.7"],"const":["99.8"],"asuna":["99.8"],"成功访问到父类的方法":["99.8"],"babel":["99.8"],"工具进行转换":["99.8"],"我们会发现":["99.8"],"实际采用的方式也是寄生组合式方式进行继承的":["99.8"],"证明这种方式是比较好的解决继承的方式":["99.8"],"indexof":["100.0"],"querystring":["100.0"],"pairs":["100.0"],"pair":["100.0"],"的方式来减少调用频率":["101.0"],"而函数节流一段时间内只执行一次":["101.5"],"搜索框的搜索联想功能":["101.6"],"解析器其实是一个运行环境":["103.0"],"解析器提供了操作":["103.0"],"bom":["103.0"],"的接口":["103.0"],"而在":["103.0"],"中解析器提供了操作磁盘和文件的接口":["103.0"],"是服务端的":["103.1"],"基于chrome的v8引擎":["103.1"],"是":["103.1"],"的运行环境":["103.1"],"因此没有运行的限制":["103.1"],"与浏览器没有任何关系":["103.1"],"并不会因为ie而产生兼容问题等":["103.1"],"若常数枚举表达式求值后为":["106.3"],"nan":["106.3"],"infinity":["106.3"],"则会在编译阶段报错":["106.3"],"所有其它情况的枚举成员被当作是需要计算得出的值":["106.3"],"比普通":["106.4"],"有着更高的性能和更少的内存占用":["106.4"],"但由于其特性限制":["106.4"],"适用于一些特定的场景":["106.4"],"如在需要大量枚举且不需要在运行时访问枚举对象的情况下使用":["106.4"],"普通枚举":["106.4"],"则更灵活":["106.4"],"可以包含计算成员和常量成员":["106.4"],"适用于其他更加灵活的场景":["106.4"],"而是在使用的时候再指定具体类型":["107.1"],"text":["107.2"],"不会出现":["107.3"],"不存在的字段":["107.3"],"ts泛型以及泛型约束":["107.3"],"getdata":["107.3"],"k":["107.3"],"keyof":["107.3"],"obj":["107.3"],"defaultobj":["107.3"],"的函数":["107.3"],"他的功能是返回目标对象的目标key的值":["107.3"],"关于类型":["107.3"],"我们约定了k的取值范围只能来自终于t的key值":["107.3"],"使用其他的类型会报错":["107.3"],"️注意":["107.4"],"此时定义接口类型时候":["107.4"],"需要传入泛型的类型":["107.4"],"使用泛型混入":["108.1"],"方便之后复用":["108.1"],"mixinuserinfo":["108.1"],"类型的含义是通过调用混合类型":["108.1"],"先将共同的部分iuserbaseinfo类型先混入进去":["108.1"],"整合成新类型":["108.1"],"方便给具体的":["108.1"],"来调用":["108.1"],"irecordconfig":["108.1"],"是把":["108.1"],"整合成一个类型":["108.1"],"减少不必要的类型定义":["108.1"],"最终使用的时候的类型":["108.1"],"recordconfiglist":["108.1"],"pet":["108.2"],"正常运行":["108.2"],"报错":["108.2"],"类型中没有这个属性":["108.2"],"tofixed":["108.4"],"这个类型":["108.5"],"之后调用bark方法":["108.5"],"类型":["108.6","108.12"],"fly":["108.7"],"被定义为类型":["108.9"],"的别名":["108.9"],"因此变量":["108.9"],"可以互相赋值":["108.9"],"因为它们实际上都是指向相同的类型":["108.9"],"尽管在代码中看起来好像创建了两个不同的类型":["108.9"],"但在":["108.9"],"视角下":["108.9"],"它们实际上是完全相同的类型":["108.9"],"opens":["108.10"],"new":["108.10"],"window":["108.10"],"你应该尽量去使用接口代替类型别名":["108.10"],"如果无法通过接口来描述一个类型并且需要使用联合类型或元祖类型":["108.10"],"这个时候通常会使用类型别名":["108.10"],"可以更好地约束数组的结构":["108.11"],"提高代码的类型安全性":["108.11"],"当访问超出已知索引的元素时":["108.11"],"会返回元组包含的类型的所有联合类型":["108.11"],"我们通过数组解构的语法":["108.12"],"将除去首位字符的元素推断成一个新类型":["108.12"],"如果这个":["108.12"],"存在":["108.12"],"那么就返回这个新类型":["108.12"],"否则就返回":["108.12"],"var":["110.0"],"认证结果":["110.0"],"调用接口":["110.0"],"人脸核验的交互方式":["110.0"],"默认0":["110.0"],"err":["110.0"],"请保持光线充足":["110.0"],"面部正对手机":["110.0"],"且无遮挡":["110.0"],"链表结构":["112.1"],"遍历链表并将节点值以数字形式返回":["112.4"],"result":["112.4"],"push":["112.4"],"假定你在一个列表中有一个对象并且希望所有其他对象迭代在一个非特殊的排列下":["112.5"],"指向整个列表的指针可以被称作":["112.5"],"访问指针":["112.5"],"values":["112.6"],"需要转换为链表的值的数组":["112.6"],"从数组创建链表":["112.6"],"formarray":["112.6"],"将链表转换为字符串":["112.6"],"node":["112.6"],"反转链表":["112.6"],"currnode":["112.6"],"prevnode":["112.6"],"nexnode":["112.6"],"存储下一个节点":["112.6"],"改变当前节点的下一个节点":["112.6"],"是其链接到上一个节点":["112.6"],"将prevnode和currnode节点向前移动一步":["112.6"],"重置头部和尾部节点":["112.6"],"这样的条件跳转语句":["114.1"],"可以使用带有三个分支的节点来表示":["114.1"],"literal":["114.2"],"raw":["114.2"],"sourcetype":["114.2"],"module":["114.2"],"数据":["114.4"],"根据语法规则转为":["114.4"],"ast":["114.4"],"同时也会去验证语法":["114.4"],"语法有错的话会抛出语法错误":["114.4"],"其他文件编译成javassript":["115.1"],"包含loader的sourcemap":["115.4"],"比如jsx":["115.4"],"babel的sourcemap":["115.4"],"map经过base64编码作为datauri嵌入":["115.4"],"这个配置项比较少见":["115.4"],"处理后的结果":["115.5"],"会保留loader处理前后文件信息的映射":["115.5"],"解决了通过":["115.5"],"关键字导致的无法确定loader处理前源代码的问题":["115.5"],"则会定位到精准代码":["115.7"],"非常快速":["115.8"],"比较快":["115.8"],"快速":["115.8"],"慢":["115.8"],"中等":["115.8"],"比较慢":["115.8"],"hidden":["115.9"],"unocss中文官网":["117.1"],"如果你想clone别人的github项目到本地":["118.1"],"那么需要通过github先fork别人的项目到自己的github仓库中":["118.1"],"fork完之后":["118.1"],"进入自己的本地的git项目仓库":["118.1"],"firspro":["118.1"],"clone":["118.1"],"githubrepository":["118.1"],"githubrepository输入的是github上fork完项目之后":["118.1"],"点击":["118.1"],"or":["118.1"],"download":["118.1"],"复制的那个ssh的项目地址":["118.1"],"这样就初始化完成":["118.1"],"并且可以自由fork项目了":["118.1"],"的用法":["119.1"],"force的快捷键":["119.2"],"force":["119.2"],"强制":["119.2"],"move":["119.2"],"移动或重命名":["119.2"],"remote":["119.2"],"远程":["119.2"],"所有":["119.2"],"删除":["119.3"],"和绿色":["119.3"],"新增":["119.3"],"我们可以通过这些信息来判断是否产生冲突":["119.3"],"以确定是否将更新merge到当前分支":["119.3"],"next":["119.4"],"再次查看提交历史":["120.2"],"lg":["120.2"],"现在远端master":["120.2"],"远端head":["120.2"],"本地master全部统一":["120.2"],"问题解决":["120.2","120.3"],"方式二":["120.2"],"直接执行":["120.2"],"效果与上面是一致的":["120.2"],"也是最近才发现":["120.2"],"推荐使用":["120.2"],"updating":["120.3"],"fast":["120.3"],"changed":["120.3"],"insertion":["120.3"],"再次查看一下提交历史":["120.3"],"master上也是一条直线了":["120.3"],"最后收个尾":["120.3"],"删除掉feature分支":["120.3"],"d":["120.3"],"deleted":["120.3"],"was":["120.3"],"于是我们可以将feature分支的提交合并后然后再merge到主干这样看起来就清爽多了":["121.0"],"我们需要进入编辑状态":["121.2"],"删掉或者注释掉第二次提交和第三次提交的信息":["121.2"],"这样最终只留下了第一次提交":["121.2"],"输入wq命令保存":["121.2"],"查看一下最终的提交信息":["121.2"],"log提交信息":["121.2"],"现在只留下第一次提交的信息了":["121.2"],"之后就可以正常合并到主分支上了":["121.2"],"但查找时不方便识别":["122.3"],"checked":["122.4"],"就可以了":["122.10"],"如下":["122.10"],"1684753035449":["122.10"]}]'},t={"0.0":{t:"# 一些整理的算法\r",p:`!Algorithm
`,l:"algorithm/index.html",a:"一些整理的算法"},"1.0":{t:"# N数之和\r",p:`
请用算法实现，从给定的无需、不重复的数组A中，取出N个数，使其相加和为M。并给出算法的时间、空间复杂度，如：
var ar ...`,l:"algorithm/N数字之和.html",a:"n数之和"},"2.0":{t:"# 三数之和\r",p:`
给你一个包含n个整数的数组nums，判断nums中是否存在三个元素a,b,c ，使得 a + b + c = 0 ？请你找 ...`,l:"algorithm/三数之和.html",a:"三数之和"},"3.0":{t:"# 两数之和\r",p:`
给定一个整数数组nums和一个目标值 target ，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。 ...`,l:"algorithm/两数之和.html",a:"两数之和"},"4.0":{t:"# 删除有序数组中的重复项\r",p:`
给你一个 非严格递增排列 的数组 nums ，请你 原地 删除重复出现的元素，使每个元素 只出现一次 ，返回删除后数组的新 ...`,l:"algorithm/删除有序数组中的重复项.html",a:"删除有序数组中的重复项"},"5.0":{t:"# 合并两个有序数组\r",p:`
给你两个有序整数数组nums1和nums2，请你将nums2合并到nums1中，使num1成为一个有序数组。

说明:
初 ...`,l:"algorithm/合并两个有序数组.html",a:"合并两个有序数组"},"6.0":{t:"# 寻找数组中最长驼峰\r",p:`给定一个纯数字数组，原地生成一个最长驼峰子数组（元素大小从中间向两侧递减）

示例

// 原数组
const arr =  ...`,l:"algorithm/寻找数组中最长驼峰.html",a:"寻找数组中最长驼峰"},"7.0":{t:"# 搜索插入位置\r",p:`
给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引
如果目标值不存在于数组中，返回它将会被按顺序插入的位置

 ...`,l:"algorithm/搜索插入位置.html",a:"搜索插入位置"},"8.0":{t:"# 移除元素\r",p:`
给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于val的元素，并返回移除后数组的新长度。
不要使用 ...`,l:"algorithm/移除元素.html",a:"移除元素"},"9.0":{t:"# 计数器\r",p:`
给定一个整型参数n，请你编写并返回一个counter函数。这个counter函数最初返回n，每次调用它时会返回前一个值加1 ...`,l:"algorithm/计数器.html",a:"计数器"},"10.0":{t:"# 数组中心下标索引\r",p:`
给你一个整数数组nums，请计算数组的中心下标
数组中心下标是数组的一个下标，其左侧所有元素相加的和等于右侧所有元素相加的 ...`,l:"algorithm/计算中心下标索引.html",a:"数组中心下标索引"},"11.0":{t:"# 首位不重复字符索引\r",p:`
给定一个字符串，找到它的第一个不重复的字符，并返回它的索引。如果不存在，则返回 -1。

示例

  let str1 = ...`,l:"algorithm/首位不重复字符索引.html",a:"首位不重复字符索引"},"12.0":{t:"环境的准备\r",p:`======
开发Web网站，使用合适的工具和环境会极大的提升开发的效率。本章将讲述如何准备用于AngularJS项目开发的 ...`,l:"frame/angular/chapter01.html",a:"环境的准备"},"12.1":{t:"WebStorm\r",p:"在过去的开发中，WebStorm一直是我对编辑器的首选。WebStorm是商业化的产品，如果长期使用，需要花钱购买（目前已经 ...",l:"frame/angular/chapter01.html#webstorm",a:"webstorm"},"12.2":{t:"Chrome\r",p:"Chrome浏览器的开发者工具可以极大的方便开发时的调试工作，目前国内大量浏览器也是基于Chrome的开源内核开发，在通用性 ...",l:"frame/angular/chapter01.html#chrome",a:"chrome"},"12.3":{t:"Node.js\r",p:"Node.js在本书中主要的使用用途是运行bower工具，用以安装AngularJS极其相关的库文件。通过官网可以直接下载N ...",l:"frame/angular/chapter01.html#node-js",a:"node-js"},"12.4":{t:"其他工具\r",p:"在安装好Node.js后，可以通过Node.js的npm命令安装最新版本的npm/cnpm/bower(如果已经存在，自动安 ...",l:"frame/angular/chapter01.html#其他工具",a:"其他工具"},"12.5":{t:"其他工具和库\r",p:`其他的工具和库，我们将不再需要从网站上下载安装，直接通过bower在项目内进行下载使用。
`,l:"frame/angular/chapter01.html#其他工具和库",a:"其他工具和库"},"13.0":{t:"# 项目的创建和配置\r",p:"使用WebStorm可以直接创建AngularJS项目，且会自动帮助你配置好项目并自动下载AngularJS等库。但是我们这 ...",l:"frame/angular/chapter02.html",a:"项目的创建和配置"},"13.1":{t:"创建基本的文件结构\r",p:`首先建立一个public目录，并在public目录中建立js、css、img三个目录。如下图所示：
!图2-2 创建目录
大 ...`,l:"frame/angular/chapter02.html#创建基本的文件结构",a:"创建基本的文件结构"},"13.2":{t:"`public`目录设置的意义\r",p:"从字面意思即可理解，public目录是用来存放供外部用户访问的内容的根目录。非public目录下的内容，既是我们不期望用户通 ...",l:"frame/angular/chapter02.html#public-目录设置的意义",a:"public-目录设置的意义"},"13.3":{t:"配置并初始化bower\r",p:"bower的配置可以通过手动创建文件或者命令行的方法来进行。我推荐使用命令行的方式来进行创建，这样可以更好的理解配置生成的文 ...",l:"frame/angular/chapter02.html#配置并初始化bower",a:"配置并初始化bower"},"13.4":{t:"打开命令行工具\r",p:`WebStorm内置了命令行工具（调用系统的命令行功能），在左下角点击Terminal即可启用。
!图2-3 命令行工具
`,l:"frame/angular/chapter02.html#打开命令行工具",a:"打开命令行工具"},"13.5":{t:"初始化bower\r",p:`在命令行下运行bower init，你将会看到如下的若干选项，并会自动的在项目的根目录生成一个bower.json。
注：以 ...`,l:"frame/angular/chapter02.html#初始化bower",a:"初始化bower"},"13.6":{t:"`.bowerrc`配置文件\r",p:"由于我们建立了public目录，并且项目的根目录与网站根目录不同，因此，我们需要新建一个额外的.bowerrc文件，告诉bo ...",l:"frame/angular/chapter02.html#bowerrc-配置文件",a:"bowerrc-配置文件"},"13.7":{t:"配置完成\r",p:`至此，我们对bower的配置已经全部结束！现在项目看起来应该长这个样子：
!图2-4 Bower配置完成后
`,l:"frame/angular/chapter02.html#配置完成",a:"配置完成"},"14.0":{t:"# AngularJS的第一步\r",p:"在前面的章节，我们已经创建好了项目，并配置好了bower工具。本章开始，我们将进入正式的学习使用AngularJS的过程。首 ...",l:"frame/angular/chapter03.html",a:"angularjs的第一步"},"14.1":{t:"在项目中安装AngularJS的基本库\r",p:`AngularJS官网提供了通过Bower安装的命令行，我们需要做的，就是在WebStorm的命令行工具中，运行如下命令：
 ...`,l:"frame/angular/chapter03.html#在项目中安装angularjs的基本库",a:"在项目中安装angularjs的基本库"},"14.2":{t:"建立`index.html`文件\r",p:"在./public目录下建立index.html文件（右键public目录，New &gt; HTML File，然后输入i ...",l:"frame/angular/chapter03.html#建立-index-html-文件",a:"建立-index-html-文件"},"14.3":{t:"引入AngularJS的库文件\r",p:`引入AngularJS库文件很简单，一行HTML语言加入HTML的head部分即可：


注：这里引入的angular.js ...`,l:"frame/angular/chapter03.html#引入angularjs的库文件",a:"引入angularjs的库文件"},"14.4":{t:"第一个程序Hello World\r",p:"是时候来测试下我们是否成功的引入了AngularJS了。我们在&lt;body/&gt;元素中加入一个ng-app=&quo ...",l:"frame/angular/chapter03.html#第一个程序hello-world",a:"第一个程序hello-world"},"14.5":{t:"运行Hello World\r",p:"右键选择index.html，然后选择 run &quot;index.html&quot;，然后你就可以在新打开的浏览器中 ...",l:"frame/angular/chapter03.html#运行hello-world",a:"运行hello-world"},"15.0":{t:"# 学习AngularJS的规划\r",p:`我们已经完成了基本的准备工作，从本章开始，我们将专注于学习和应用AngularJS。
作为一个功能完整的框架，Angular ...`,l:"frame/angular/chapter04.html",a:"学习angularjs的规划"},"16.0":{t:"# 基本表达式\r",p:`在第三章的结尾，我们制作了一个基本的Hello World应用。在其中，我们使用了如下的语法：
&lt;h1&gt;{{&q ...`,l:"frame/angular/chapter04_1.html",a:"基本表达式"},"17.0":{t:"# 引入`ng-include`和模板`ng-template`\r",p:"引入ng-include和模板ng-template是定义和使用HTML代码碎片的功能。用于将HTML切碎分别存储，并根据需 ...",l:"frame/angular/chapter04_10.html",a:"引入-ng-include-和模板-ng-template"},"17.1":{t:"引入`ng-include`\r",p:"当HTML代码过于复杂，或者期望建立单页应用(Single-page Application - SPA)时，需要将部分HT ...",l:"frame/angular/chapter04_10.html#引入-ng-include",a:"引入-ng-include"},"17.2":{t:"其他属性\r",p:`ng-include还有onload和autoscroll的属性。
但是我目前不清楚具体的使用方法和效果，如果有读者清楚，可 ...`,l:"frame/angular/chapter04_10.html#其他属性",a:"其他属性"},"17.3":{t:"模板`ng-template`\r",p:`ng-template用于将多个HTML片段存放于一个HTML文件中。并且可以根据需求分别调用其中的某一个片段。
ng-te ...`,l:"frame/angular/chapter04_10.html#模板-ng-template",a:"模板-ng-template"},"18.0":{t:"# AngularJS初始化`ng-app`\r",p:`本节我们将学习基本的ng-app初始化。
ng-app可以将网页自动初始化为一个AngularJS应用，这样你才能在网页中使 ...`,l:"frame/angular/chapter04_2.html",a:"angularjs初始化-ng-app"},"18.1":{t:"创建一个独立的JavaScript文件，并在HTML中引用\r",p:`在./public/js目录中新建一个app.js文件，并填入如下代码：
var App = angular.module( ...`,l:"frame/angular/chapter04_2.html#创建一个独立的javascript文件-并在html中引用",a:"创建一个独立的javascript文件-并在html中引用"},"18.2":{t:"AngularJS的作用域\r",p:"ng-app标签可以放置在&lt;html&gt;标签或者&lt;body&gt;标签上，也可以放置在HTML页面的任何一个 ...",l:"frame/angular/chapter04_2.html#angularjs的作用域",a:"angularjs的作用域"},"18.3":{t:"引入文件的顺序\r",p:"引入JavaScript文件的顺序是有差异的，如果我们将上面代码的angular.js和app.js文件呼唤，那么网页将不能 ...",l:"frame/angular/chapter04_2.html#引入文件的顺序",a:"引入文件的顺序"},"19.0":{t:"# 控制器`ng-controller`\r",p:"控制器ng-controller是使用AngularJS的核心功能之一。在前一节我们已经了解了作用域的概念，ng-contr ...",l:"frame/angular/chapter04_3.html",a:"控制器-ng-controller"},"19.1":{t:"`ng-controller`详解\r",p:"\r",l:"frame/angular/chapter04_3.html#ng-controller-详解",a:"ng-controller-详解"},"19.2":{t:"JavaScript部分\r",p:`我们先分析ng-controller的JavaScript编码部分
//原有的ng-app声明部分
var App = an ...`,l:"frame/angular/chapter04_3.html#javascript部分",a:"javascript部分"},"19.3":{t:"`function($scope)`详解\r",p:"funtion(){}封装的函数，会被绑定到FirstCtrl上。这个概念相对容易理解，我们需要注意的，是我们在functi ...",l:"frame/angular/chapter04_3.html#",a:""},"19.4":{t:"HTML中调用`ng-controller`中的数据\r",p:`&lt;h1&gt;{{data.message + &quot; World!&quot;}}&lt;/h1&gt;

在 ...`,l:"frame/angular/chapter04_3.html#html中调用-ng-controller-中的数据",a:"html中调用-ng-controller-中的数据"},"19.5":{t:"为什么要额外封装一层\r",p:`在AngularJS中，最简单传入数据的方法其实可以更简单，但是不推荐这样做。
最简单的做法
//JavaScript
$s ...`,l:"frame/angular/chapter04_3.html#为什么要额外封装一层",a:"为什么要额外封装一层"},"20.0":{t:"# 数据绑定data-binding\r",p:"上一节我们介绍了如何将ng-controller的数据显示在HTML当中，但是我们如何在页面中修改这些数据呢？这一步操作也很 ...",l:"frame/angular/chapter04_4.html",a:"数据绑定data-binding"},"20.1":{t:"功能的绑定\r",p:`界面操作里面还有一个重要的功能，就是界面上按钮的与控制器中的函数进行绑定。这个也很容易实现：
App.controller( ...`,l:"frame/angular/chapter04_4.html#功能的绑定",a:"功能的绑定"},"20.2":{t:"更多地方的绑定\r",p:`除了用于显示信息外，数据绑定还可用于其他地方。比如，下面的例子用于根据输入来调整样式：
&lt;!DOCTYPE html& ...`,l:"frame/angular/chapter04_4.html#更多地方的绑定",a:"更多地方的绑定"},"21.0":{t:"# 条件判断 `ng-if` / `ng-show` / `ng-hide`\r",p:`本节我们将学习的是如何通过变量来控制HTML是否显示。
这三个语句具体的用法如下：
在$scope.data中添加flag变 ...`,l:"frame/angular/chapter04_5.html",a:"条件判断-ng-if-ng-show-ng-hide"},"21.1":{t:"`ng-if`与`ng-show`/`ng-hide`的区别\r",p:`虽然效果看起来类似，但ng-if的工作模式与ng-show/ng-hide不一样。
如果使用ng-if来控制元素是否显示，则 ...`,l:"frame/angular/chapter04_5.html#ng-if-与-ng-show-ng-hide-的区别",a:"ng-if-与-ng-show-ng-hide-的区别"},"21.2":{t:"冒号中的表达式\r",p:`例子中使用了data.flag直接作为判断依据，但是以上三个标签都支持传入表达式。
比如以下的表达式都可以作为冒号中的表达方 ...`,l:"frame/angular/chapter04_5.html#冒号中的表达式",a:"冒号中的表达式"},"22.0":{t:"# 重复语句 `ng-repeat`\r",p:`本节将讲述如何使用ng-repeat对一个列表的数据进行遍历并显示出来。
首先，我们准备如下的数据。这是一个包括三个obje ...`,l:"frame/angular/chapter04_6.html",a:"重复语句-ng-repeat"},"22.1":{t:"$index\r",p:"在实际的使用场景中，如果我们使用一个表格来管理信息，那么可能表格的每一行都会有一些对应的操作功能（如编辑、删除）等。那么，我 ...",l:"frame/angular/chapter04_6.html#index",a:"index"},"23.0":{t:"# 过滤器 `filter`\r",p:`过滤器是AngularJS的另一项强大的功能，如果能使用好它，能够帮助我们极大的节省工作量。
以下是几个应用filter的例 ...`,l:"frame/angular/chapter04_7.html",a:"过滤器-filter"},"23.1":{t:"多个filter同时应用\r",p:`AngularJS支持多个filter同时应用，比如以下的例子：
{{ list | orderBy:'name' | js ...`,l:"frame/angular/chapter04_7.html#多个filter同时应用",a:"多个filter同时应用"},"23.2":{t:"创建自己的过滤器\r",p:`自己创建自定义的过滤器也很简单，我们下面尝试自己制作一个将文字全部翻转过来的过滤器。
在app.js中增加如下代码：
//a ...`,l:"frame/angular/chapter04_7.html#创建自己的过滤器",a:"创建自己的过滤器"},"23.3":{t:"通过`filter`进行搜索\r",p:"AngularJS提供了通过filter的搜索功能。当然，这个搜索功能并不是非常常用，因为搜索工作现在一般在服务端完成。如果 ...",l:"frame/angular/chapter04_7.html#通过-filter-进行搜索",a:"通过-filter-进行搜索"},"23.4":{t:"一些值得注意的用法\r",p:`


用法
效果




searchText = &quot;T&quot;
搜索所有字段


searchText =  ...`,l:"frame/angular/chapter04_7.html#一些值得注意的用法",a:"一些值得注意的用法"},"24.0":{t:"# 样式选择器 `ng-class`/`ng-style`\r",p:"",l:"frame/angular/chapter04_8.html",a:"样式选择器-ng-class-ng-style"},"24.1":{t:"`ng-class`\r",p:`通过ng-class，我们可以对界面元素的css样式进行控制。下面，让我们通过示例来看看功能如何实现：

此示例来源于官网的 ...`,l:"frame/angular/chapter04_8.html#ng-class",a:"ng-class"},"24.2":{t:"动态化的样式输入\r",p:"在上方的示例中，我们是针对提前设定好的样式进行是否生效的判断。除了这种使用方式，ng-class还支持直接传入字符串的方式进 ...",l:"frame/angular/chapter04_8.html#动态化的样式输入",a:"动态化的样式输入"},"24.3":{t:"结合两种模式的应用示例\r",p:`这两种模式也可以结合使用，示例如下：
&lt;p ng-class=&quot;[data.style, {orange:  ...`,l:"frame/angular/chapter04_8.html#结合两种模式的应用示例",a:"结合两种模式的应用示例"},"24.4":{t:"CSS动画效果应用\r",p:`我们先在_style.css_中加入css的动画效果代码：
.base-class {
    transition:all ...`,l:"frame/angular/chapter04_8.html#css动画效果应用",a:"css动画效果应用"},"24.5":{t:"`ng-style`\r",p:`ng-style提供的功能比ng-class要少一些，只支持样式的传入。我们可以使用以下两种模式：
&lt;span ng- ...`,l:"frame/angular/chapter04_8.html#ng-style",a:"ng-style"},"25.0":{t:"# 下拉列表选项 `ng-options`\r",p:"在学习了ng-repeat过后，我们其实已经可以用循环的方式实现下拉列表的选项。但是，AngularJS提供了ng-opti ...",l:"frame/angular/chapter04_9.html",a:"下拉列表选项-ng-options"},"25.1":{t:"增加未选中的选项\r",p:`在很多时候，我们期望能有一个没选中的选项。我们可以通过手动的方式添加这个选项：
&lt;select ng-model=&q ...`,l:"frame/angular/chapter04_9.html#增加未选中的选项",a:"增加未选中的选项"},"25.2":{t:"按组排列`group by`\r",p:`ng-options也支持按组排列数据，使用group by语法，下面我们看看例子：
首先，我们在列表中增加类型字段：
$s ...`,l:"frame/angular/chapter04_9.html#按组排列-group-by",a:"按组排列-group-by"},"25.3":{t:"禁用某些选项`disable when`\r",p:`ng-options还可以通过disable when语法来设置选项是否可选，同样的，我们需要在列表中先新增字段：
注意，以 ...`,l:"frame/angular/chapter04_9.html#禁用某些选项-disable-when",a:"禁用某些选项-disable-when"},"25.4":{t:"将对象作为参数传入\r",p:`在上面的例子中，我们传入的是一个列表array。ng-options也支持以对象object的方式传入数据：
使用objec ...`,l:"frame/angular/chapter04_9.html#将对象作为参数传入",a:"将对象作为参数传入"},"26.0":{t:"# 本章总结\r",p:`在本章中，我们学习了AngularJS的基本用法。掌握了这些用法，相信大家对于AngularJS已经有了基本的了解。
我建议 ...`,l:"frame/angular/chapter04_summary.html",a:"本章总结"},"27.0":{t:"# 深入学习AngularJS - Directive\r",p:`在前一章中，我们学习了AngularJS的基本用法。从本章开始，我们将学习&quot;深入&quot;一些的部分。
本章将介 ...`,l:"frame/angular/chapter05.html",a:"深入学习angularjs-directive"},"27.1":{t:"Directive在系统中的使用\r",p:`其实，Directive作为AngularJS的基本特性，我们已经在前面大量的学习和使用了它。
在第四章中我们学习的ng-a ...`,l:"frame/angular/chapter05.html#directive在系统中的使用",a:"directive在系统中的使用"},"27.2":{t:"学习Directive的路程\r",p:"本章我们将从最基本的自定义Directive开始，逐渐深入的学习Directive的特性和高级使用方法。由于Directiv ...",l:"frame/angular/chapter05.html#学习directive的路程",a:"学习directive的路程"},"28.0":{t:"# 制作一个自定义的Directive\r",p:`下面我们将制作我们的第一个自定义Directive。让我们对app.js和index.html进行一些修改：
//app.j ...`,l:"frame/angular/chapter05_1.html",a:"制作一个自定义的directive"},"28.1":{t:"代码分析\r",p:`以下这段代码用于声明一个Directive：
App.directive(&quot;people&quot;, funct ...`,l:"frame/angular/chapter05_1.html#代码分析",a:"代码分析"},"28.2":{t:"`template`\r",p:"template相对比较容易理解，在运行网页时，HTML对应的标签，将被替换成对应的内容。我们这里看看替换后实际的HTML代 ...",l:"frame/angular/chapter05_1.html#template",a:"template"},"28.3":{t:"用替换而不是插入的方式应用Directive\r",p:"如果在配置Directive时，加入replace : true（与restrict和template同级别），则可以让An ...",l:"frame/angular/chapter05_1.html#用替换而不是插入的方式应用directive",a:"用替换而不是插入的方式应用directive"},"28.4":{t:"`restrict`\r",p:`restrict是告诉AngularJS，这个Directive应该如何使用。
下面这个表格，总结了restrict可能有的 ...`,l:"frame/angular/chapter05_1.html#restrict",a:"restrict"},"29.0":{t:"# Directive的命名和使用规则\r",p:"在前一节中，我们创建了一个名为&quot;people&quot;的Directive。并且通过 &lt;people&gt ...",l:"frame/angular/chapter05_2.html",a:"directive的命名和使用规则"},"29.1":{t:"命名规则\r",p:"AngularJS要求Directive的命名使用驼峰式语法，也就是从第二个单词开始，每个单词的首字母大写，并且不使用连接符 ...",l:"frame/angular/chapter05_2.html#命名规则",a:"命名规则"},"29.2":{t:"使用规则\r",p:`在HTML代码中，使用的是连接符的形式，下面我们对比看看命名和使用的对应字符串：



命名
使用




people
p ...`,l:"frame/angular/chapter05_2.html#使用规则",a:"使用规则"},"29.3":{t:"为什么会有这种差异\r",p:`命名和用法不同的核心原因，是因为HTML对大小写不敏感，而JavaScript对大小写敏感。
为了保证HTML和JavaSc ...`,l:"frame/angular/chapter05_2.html#为什么会有这种差异",a:"为什么会有这种差异"},"29.4":{t:"怎么实现的？\r",p:`AngularJS在解析HTML时，会将名称取出（如people-list-array)，并进行一下两个方面的处理：

去除 ...`,l:"frame/angular/chapter05_2.html#怎么实现的",a:"怎么实现的"},"29.5":{t:"连接符\r",p:`在前面的讲解中，我们讲解示例时，使用的连接符全部都为减号。但实际上，AngularJS支持的连接符有:



符号
示例

 ...`,l:"frame/angular/chapter05_2.html#连接符",a:"连接符"},"29.6":{t:"为什么要先去除`data-/x-`部分\r",p:"data-/x- 存在的原因是需要符合HTML5标准。如果你使用HTML5验证器来验证我们之前的代码，你可能会看到如下结果( ...",l:"frame/angular/chapter05_2.html#为什么要先去除-data-x-部分",a:"为什么要先去除-data-x-部分"},"30.0":{t:"# 让Directive支持传入数据\r",p:"在第一节中，我们使用的Directive，可以直接获取并显示控制器中的数据（人的名称和性别）。但是，如果我们有多个人的信息需 ...",l:"frame/angular/chapter05_3.html",a:"让directive支持传入数据"},"30.1":{t:"Directive的`scope`\r",p:"在之前学习控制器ng-controller的使用过程中，我们使用了$scope功能。$scope用于提供对接HTML和Jav ...",l:"frame/angular/chapter05_3.html#directive的-scope",a:"directive的-scope"},"30.2":{t:"`scope`中的配置\r",p:`可以看到，在上方的JavaSciprt文件中，我们对scope的定义使用了如下结构：
scope:{
    info: & ...`,l:"frame/angular/chapter05_3.html#scope-中的配置",a:"scope-中的配置"},"30.3":{t:"在一个`ng-ontroller`中放入多个相同的Directive\r",p:`下面，我们在FirstCtrl中增加几个人的数据，并将它们通过Directive显示出来：
//在FirstCtrl中加入如 ...`,l:"frame/angular/chapter05_3.html#在一个-ng-ontroller-中放入多个相同的directive",a:"在一个-ng-ontroller-中放入多个相同的directive"},"30.4":{t:"通过`ng-repeat`和directive一起显示数据\r",p:`知道了如何传入数据，那么我们就可以将Directive的使用和ng-repeat结合起来，实现列表显示数据的效果。
我们先将 ...`,l:"frame/angular/chapter05_3.html#通过-ng-repeat-和directive一起显示数据",a:"通过-ng-repeat-和directive一起显示数据"},"30.5":{t:"在Directive中修改控制器中的数据\r",p:`以上我们看到的示例只是将数据显示了出来，如果我们期望在Directive中修改这些数据如何处理呢？
其实很简单，将templ ...`,l:"frame/angular/chapter05_3.html#在directive中修改控制器中的数据",a:"在directive中修改控制器中的数据"},"30.6":{t:"以只读的方式传入数据\r",p:`除了以等号=直接传入对象之外，Directive也支持直接传入文本，使用@符号。
App.directive(&quot;p ...`,l:"frame/angular/chapter05_3.html#以只读的方式传入数据",a:"以只读的方式传入数据"},"30.7":{t:"在Directive中进行函数回调\r",p:"上面我们介绍了等号=和@符号的使用方法，它们分别对应传入对象和文本。但是，如果我们期望传入一个回调函数呢？这样我们就可以实现 ...",l:"frame/angular/chapter05_3.html#在directive中进行函数回调",a:"在directive中进行函数回调"},"31.0":{t:"# 使用`templateUrl`获取模板\r",p:"有些时候，Directive中的模板template会变得很大，如果仍然放置在定义中，那么可能会造成阅读和修改不方便的情况。 ...",l:"frame/angular/chapter05_4.html",a:"使用-templateurl-获取模板"},"31.1":{t:"`ng-template`\r",p:"除了直接将HTML部件存储为独立的文件，我们也可以直接使用AngularJS提供的ng-template功能。这点在第四章中 ...",l:"frame/angular/chapter05_4.html#ng-template",a:"ng-template"},"31.2":{t:"使用函数获取templateUrl\r",p:`templateUrl的特性与我们在第四章学习的ng-include类似，也支持通过函数来获取最终的url地址。例如：
Ap ...`,l:"frame/angular/chapter05_4.html#使用函数获取templateurl",a:"使用函数获取templateurl"},"32.0":{t:"# 让Directive动起来`link()`\r",p:"在前面几节中，我们都是在学习如何配置Directive。下面，我们将开始学习Directive最灵活的部分，link()函数 ...",l:"frame/angular/chapter05_5.html",a:"让directive动起来-link"},"32.1":{t:"`element`\r",p:`从element被转义成json的文本中很难获取任何实质的信息，但是，这里才是整个Directive中的核心部分。
`,l:"frame/angular/chapter05_5.html#element",a:"element"},"32.2":{t:"`element`与jQuery的关系\r",p:"在Directive中，我们不免需要对页面元素进行操作。为了提供这项功能，AngularJS几乎原版搬运了jQuery操作元 ...",l:"frame/angular/chapter05_5.html#element-与jquery的关系",a:"element-与jquery的关系"},"32.3":{t:"在AngularJS中使用jQuery\r",p:`安装和使用jQuery共有两步：

通过bower安装jQuery

bower install jquery --save ...`,l:"frame/angular/chapter05_5.html#在angularjs中使用jquery",a:"在angularjs中使用jquery"},"32.4":{t:"实际体验`element`的功能\r",p:`我们在引入jQuery后，可以通过如下代码查看效果：

这里需要注意的是，使用jqLite的方法和以下代码中使用的方法是不一 ...`,l:"frame/angular/chapter05_5.html#实际体验-element-的功能",a:"实际体验-element-的功能"},"32.5":{t:"在`element`上绑定鼠标移入移出时的变化效果\r",p:`App.directive(&quot;formDirective&quot;, function () {
    ret ...`,l:"frame/angular/chapter05_5.html#在-element-上绑定鼠标移入移出时的变化效果",a:"在-element-上绑定鼠标移入移出时的变化效果"},"33.0":{t:"# 把Directive变为一个容器`transclude`\r",p:"在前面我们使用到的Directive，都会将包含有Directive的元素整体替换为template中的内容。这样，就让Di ...",l:"frame/angular/chapter05_6.html",a:"把directive变为一个容器-transclude"},"34.0":{t:"# Directive之间互相通讯\r",p:"本节是Directive的高级使用方法之一，通过赋予Directive之间互相通讯的功能，我们可以将部件的抽象化提升到一个更 ...",l:"frame/angular/chapter05_7.html",a:"directive之间互相通讯"},"35.0":{t:"# 本章总结\r",p:"本章讲述的内容是AngularJS的核心内容之一，并且对于之前前端开发经验不足的读者可能会造成一些学习上的困难。但是我建议各 ...",l:"frame/angular/chapter05_summary.html",a:"本章总结"},"36.0":{t:"# Angular1.x 相关知识点\r",p:`Angular1.x相关的文档来自于 learning_angular仓库
learning_angular仓库
`,l:"frame/angular/index.html",a:"angular1-x-相关知识点"},"37.0":{t:"# 学习AngularJS 1.x\r",p:"",l:"frame/angular/Introduction.html",a:"学习angularjs-1-x"},"37.1":{t:"Learning AngularJS 1.x\r",p:`本书是我在学习和应用AngularJS 1.x 的过程中的资料梳理。希望能对大家学习AngularJS有一定帮助。
如果您在 ...`,l:"frame/angular/Introduction.html#learning-angularjs-1-x",a:"learning-angularjs-1-x"},"37.2":{t:"本书地址\r",p:`本书使用GitBook和GitHub托管。
GitBook地址：hairui219/learning_angular
Git ...`,l:"frame/angular/Introduction.html#本书地址",a:"本书地址"},"37.3":{t:"章节目录\r",p:`

简介


环境的准备


项目的创建和配置


AngularJS的第一步


学习和使用AngularJS

基本表达 ...`,l:"frame/angular/Introduction.html#章节目录",a:"章节目录"},"37.4":{t:"本书的读者\r",p:"本书会介绍如何应用AngularJS，但是本书不会涉及到JavaScript语法以及HTML和CSS的布局模式。因此，本书对 ...",l:"frame/angular/Introduction.html#本书的读者",a:"本书的读者"},"37.5":{t:"我应用AngularJS的方法\r",p:"在进行前端开发的工作之前，我担任过几年的移动互联网产品经理，设计了几款应用（参与了一小部分的开发工作）。之后我改做应用和手机 ...",l:"frame/angular/Introduction.html#我应用angularjs的方法",a:"我应用angularjs的方法"},"37.6":{t:"这样做的好处\r",p:`这样实现后，我认为主要有以下几个方面的好处：

数据通过API(https)获取，过程并不向用户开放，起到了隐蔽后端服务器的 ...`,l:"frame/angular/Introduction.html#这样做的好处",a:"这样做的好处"},"37.7":{t:"为什么选择AngularJS 1.x\r",p:`对于选择AngularJS，业(zhi)界(hu)其实有一个调侃的说法：

写Java的写不来JavaScript的用Ang ...`,l:"frame/angular/Introduction.html#为什么选择angularjs-1-x",a:"为什么选择angularjs-1-x"},"37.8":{t:"我选择AngularJS的历程\r",p:`
以下内容部分读者可能会感到有些偏激，但是这是对我（一个拥有一些其他编程经验的前端入门者）的心路记录。

2015年初，在准 ...`,l:"frame/angular/Introduction.html#我选择angularjs的历程",a:"我选择angularjs的历程"},"37.9":{t:"为什么写这本书\r",p:"由于业务需要，我准备重新制作网站的v2版本。在这个版本中，会有很多新的功能需求（功能扩大非常多）。因此，完全重构整个网站是可 ...",l:"frame/angular/Introduction.html#为什么写这本书",a:"为什么写这本书"},"37.10":{t:"另：为什么没有选择Angular 2\r",p:"其实在重构时，我优先的选择是Angular 2 &amp; TypeScript。因为它引入了很多新的特性，比如应用了最新的 ...",l:"frame/angular/Introduction.html#另-为什么没有选择angular-2",a:"另-为什么没有选择angular-2"},"38.0":{t:"# Summary\r",p:`

简介


环境的准备


项目的创建和配置


AngularJS的第一步


学习和使用AngularJS

基本表达 ...`,l:"frame/angular/SUMMARY.html",a:"summary"},"39.0":{t:"# 框架相关",p:"",l:"frame/index.html",a:"框架相关"},"40.0":{t:"# React 相关\r",p:`!React
`,l:"frame/react/index.html",a:"react-相关"},"41.0":{t:"# React一些相关\r",p:"\r",l:"frame/react/react常用特性.html",a:"react一些相关"},"41.1":{t:"React 和 Vue的区别\r",p:`
vue是双向绑定， react是单向数据流
在vue中我们组合不同功能的方式是通过Composition API、mixi ...`,l:"frame/react/react常用特性.html#react-和-vue的区别",a:"react-和-vue的区别"},"41.2":{t:"React 设计思想\r",p:`
组件化

每个组件都符合开放 - 封闭原则， 封闭是针对渲染工作流来说，指的是组件内部的状态都由自身维护，只处理内部渲染逻 ...`,l:"frame/react/react常用特性.html#react-设计思想",a:"react-设计思想"},"41.3":{t:"React生命周期\r",p:`在16.8 hooks版本之前， React的生命周期分为组件挂载阶段、组件更新阶段、组件卸载阶段

挂载

constru ...`,l:"frame/react/react常用特性.html#react生命周期",a:"react生命周期"},"41.4":{t:"React Hooks与 React Class的区别\r",p:`
Hooks更加简洁，并且更贴合原生js写法
业务代码更加聚合
逻辑代码方便复用

`,l:"frame/react/react常用特性.html#react-hooks与-react-class的区别",a:"react-hooks与-react-class的区别"},"41.5":{t:"React的严格模式\r",p:`React的严格模式是在组件外层设置React.scrictMode标签，可以设置到根节点组件外层， 这样可以全局生效。

 ...`,l:"frame/react/react常用特性.html#react的严格模式",a:"react的严格模式"},"41.6":{t:"严格模式优点\r",p:`
识别不安全的生命周期
关于使用过时字符串 ref API 的警告
关于使用废弃的 findDOMNode 方法的警告
检测 ...`,l:"frame/react/react常用特性.html#严格模式优点",a:"严格模式优点"},"41.7":{t:"React 中页面重新加载怎么保留数据\r",p:`这个问题就涉及到了数据持久化， 主要有以下几种实现方式：


Redux
将页面数据储存在Redux中， 在页面重新加载时去 ...`,l:"frame/react/react常用特性.html#react-中页面重新加载怎么保留数据",a:"react-中页面重新加载怎么保留数据"},"41.8":{t:"JSX与JS的区别\r",p:"JSX 是React的语法糖，他允许在html中写js并且不能被浏览器识别， 需要通过webpack、babel之类的变异工 ...",l:"frame/react/react常用特性.html#jsx与js的区别",a:"jsx与js的区别"},"41.9":{t:"React中必须要使用 JSX吗？\r",p:`React中不强制使用JSX。 当不想在构建环境中配置有关JSX编译时候， 不在React中使用JSX会更加方便，
每个JS ...`,l:"frame/react/react常用特性.html#react中必须要使用-jsx吗",a:"react中必须要使用-jsx吗"},"41.10":{t:"React 处理错误边界(Error Boundaries)\r",p:"错误边界是一种React组件， 它能够不过并处理子组件中任何位置出现Javascript的错误，并渲染备用UI， 而不是使整 ...",l:"frame/react/react常用特性.html#react-处理错误边界-error-boundaries",a:"react-处理错误边界-error-boundaries"},"41.11":{t:"React 组件为什么要大写\r",p:"因为JSX语法无法被浏览器所识别， 需要使用Babel去转换为浏览器识别的js， 此时就会有个依据去判断是原生DOM标签还是 ...",l:"frame/react/react常用特性.html#react-组件为什么要大写",a:"react-组件为什么要大写"},"41.12":{t:"React.Fragment\r",p:`React中组件是不允许返回多个节点的， 要想解决这个问题就需要套一层div标签， 但是这样会多增加一个节点，
所以在16. ...`,l:"frame/react/react常用特性.html#react-fragment",a:"react-fragment"},"41.13":{t:"受控组件、非受控组件\r",p:`

受控组件就是组组件的改变受控于数据的变化， 数据变了页面也就变了。 受控组件更合适，数据驱动是React的核心。
当需要 ...`,l:"frame/react/react常用特性.html#受控组件、非受控组件",a:"受控组件、非受控组件"},"42.0":{t:"# SSR相关\r",p:"\r",l:"frame/react/SSR相关.html",a:"ssr相关"},"42.1":{t:"对于SSR的理解\r",p:`

对SEO友好
爬虫获取到的是已经异步执行完成后得到的有数据的HTML


所有模板、图片资源都存储在服务器端


一个H ...`,l:"frame/react/SSR相关.html#对于ssr的理解",a:"对于ssr的理解"},"42.2":{t:"SSR的局限\r",p:`
服务端压力大: 正常是通过客户端去渲染、现在统一到服务端Node去做。 尤其是遇到高并发访问的情况， 会大量占用服务端CP ...`,l:"frame/react/SSR相关.html#ssr的局限",a:"ssr的局限"},"43.0":{t:"# React 组件间的通信\r",p:"\r",l:"frame/react/组件通信.html",a:"react-组件间的通信"},"43.1":{t:"父组件调用子组件\r",p:`⽗组件调⽤⼦组件⽅法
使⽤useImperativeHandle调⽤⼦组件⽅法。
import { useImperativ ...`,l:"frame/react/组件通信.html#父组件调用子组件",a:"父组件调用子组件"},"44.0":{t:"# 虚拟DOM与Diff算法\r",p:"虚拟DOM相当于是在JS和 真实的DOM之间加了一个缓存， 利用DOM Diff算法避免了没有必要的DOM操作， 从而提高性 ...",l:"frame/react/虚拟DOM.html",a:"虚拟dom与diff算法"},"44.1":{t:"结构对比\r",p:`React.createElement和 document.createElement
虚拟DOM是一个对象， 而真实的DO ...`,l:"frame/react/虚拟DOM.html#结构对比",a:"结构对比"},"44.2":{t:"流程对比\r",p:`传统Web应用， 数据的变化会实时地更新到用户界面中， 于是每次数据微小的变化都会引起DOM的重新渲染
在虚拟DOM中， 是 ...`,l:"frame/react/虚拟DOM.html#流程对比",a:"流程对比"},"44.3":{t:"什么是虚拟DOM\r",p:`虚拟DOM是一个对象， 这个对象是由真实的DOM转化而来:
&lt;div className=&quot;Index&qu ...`,l:"frame/react/虚拟DOM.html#什么是虚拟dom",a:"什么是虚拟dom"},"44.4":{t:"虚拟DOM的优势\r",p:"\r",l:"frame/react/虚拟DOM.html#虚拟dom的优势",a:"虚拟dom的优势"},"44.5":{t:"虚拟DOM可以提高效率，开发时不必关注DOM， 只关注业务逻辑\r",p:"性能提升(牢记浏览器在处理DOM时很慢， 处理JS时很快)， 并且虚拟DOM感受到变化的时候是通过局部更新而非整体，从而减少 ...",l:"frame/react/虚拟DOM.html#虚拟dom可以提高效率-开发时不必关注dom-只关注业务逻辑",a:"虚拟dom可以提高效率-开发时不必关注dom-只关注业务逻辑"},"44.6":{t:"超强的兼容性\r",p:`具有浏览器的兼容和跨平台的兼容


React基于虚拟DOM实现了一套自己的事件机制，并且模拟了事件冒泡和捕获的过程， 采取 ...`,l:"frame/react/虚拟DOM.html#超强的兼容性",a:"超强的兼容性"},"45.0":{t:"# 高阶函数HOC(High Order Component)\r",p:`在React中， 高阶组件(HOC) 是一个接收组件作为参数并返回一个新组建的函数。 换句话说， 它是一种组件的
转换器。高 ...`,l:"frame/react/高阶函数.html",a:"高阶函数hoc-high-order-component"},"45.1":{t:"React Hook中常见的高阶函数\r",p:`

useState 高阶函数
useState 是React中最基础的Hook， 用于在函数组件中添加状态。它返回一个数组 ...`,l:"frame/react/高阶函数.html#react-hook中常见的高阶函数",a:"react-hook中常见的高阶函数"},"45.2":{t:"useState 和 useRef的区别\r",p:`两者最大的区别是 useState 用于管理状态，useRef用于操作DOM元素。另外， useState返回的是当前状态
 ...`,l:"frame/react/高阶函数.html#usestate-和-useref的区别",a:"usestate-和-useref的区别"},"46.0":{t:"# Vue 相关\r",p:`!Vue
`,l:"frame/vue/index.html",a:"vue-相关"},"47.0":{t:"# Keep-Alive\r",p:`定义
keepAlive是一个内置组件，它的功能是在多个组件间动态切换时缓存被移除的组件实例，即使被包含的组件保留状态，或者 ...`,l:"frame/vue/keepAlive.html",a:"keep-alive"},"47.1":{t:"引用\r",p:`vue3中keepalive源码
`,l:"frame/vue/keepAlive.html#引用",a:"引用"},"48.0":{t:"# NextTick\r",p:"NextTick 是一个用于在下次 DOM 更新循环结束之后执行回调函数的方法。其内部原理涉及到 Vue.js 的异步更新队 ...",l:"frame/vue/nextTick.html",a:"nexttick"},"48.1":{t:"异步任务队列\r",p:"浏览器中，每个宏任务结束后都会检查微任务队列， 如果有任务则依次执行，当所有微任务执行完成后，才会执行下一个宏任务。 因此可 ...",l:"frame/vue/nextTick.html#异步任务队列",a:"异步任务队列"},"48.2":{t:"Vue2\r",p:`看下面一个例子，比如当DOM内容改变后， 我们需要获取的最新高度
&lt;template&gt;
  &lt;div&gt ...`,l:"frame/vue/nextTick.html#vue2",a:"vue2"},"48.3":{t:"nextTick源码\r",p:`

vue2中nextTick源码 路径： src/core/util/next-tick.js

这段源码分为两个部分，  ...`,l:"frame/vue/nextTick.html#nexttick源码",a:"nexttick源码"},"48.4":{t:"Vue3\r",p:`vue3的例子如下：
&lt;template&gt;
  &lt;div ref=&quot;test&quot;&gt; ...`,l:"frame/vue/nextTick.html#vue3",a:"vue3"},"48.5":{t:"Vue3 nextTick源码\r",p:`
源码地址： packages/runtime-core/src/sheduler.ts

const resolvedPr ...`,l:"frame/vue/nextTick.html#vue3-nexttick源码",a:"vue3-nexttick源码"},"48.6":{t:"引用\r",p:`一次弄懂 Vue2 和 Vue3 的 nextTick 实现原理
vue2源码nextTick
vue3源码nextTick ...`,l:"frame/vue/nextTick.html#引用",a:"引用"},"49.0":{t:"# Vue 指令\r",p:"\r",l:"frame/vue/vue指令.html",a:"vue-指令"},"49.1":{t:"定义\r",p:"vue指令（Directives）是一种特殊的标记，用于在模板中以声明式的方式将某些行为应用到DOM上。指令以 v- 开头， ...",l:"frame/vue/vue指令.html#定义",a:"定义"},"49.2":{t:"常见的vue指令\r",p:`!常见vue指令
`,l:"frame/vue/vue指令.html#常见的vue指令",a:"常见的vue指令"},"49.3":{t:"**`v-show`/`v-if`**\r",p:`v-show与 v-if的区别


v-if
v-if是‘真实’的条件渲染， 因为他确保了在切换时， 条件区块内的事件监听和 ...`,l:"frame/vue/vue指令.html#v-show-v-if",a:"v-show-v-if"},"49.4":{t:"**`v-for`**\r",p:`基于原始数据多次渲染元素或模板块。

期望绑定值类型: Array | Object | Number | String | ...`,l:"frame/vue/vue指令.html#v-for",a:"v-for"},"49.5":{t:"**`v-bind`**\r",p:`动态地绑定一个或多个attribute， 也可以是组件的prop参数。


修饰符

.camel 将短横线命名的attri ...`,l:"frame/vue/vue指令.html#v-bind",a:"v-bind"},"49.6":{t:"**`v-model`**\r",p:`用于在表单控件或者组件上创建双向数据绑定.


修饰符

.lazy 监听change事件而不是input
.number将 ...`,l:"frame/vue/vue指令.html#v-model",a:"v-model"},"49.7":{t:"**`v-on`**\r",p:`指令用于监听 DOM 事件。


修饰符

.stop 调用 event.stopPropagation()
.preven ...`,l:"frame/vue/vue指令.html#v-on",a:"v-on"},"50.0":{t:"# Vue生命周期\r",p:`vue2 的生命周期与 vue3 的声明是有所区别的，
vue2 的生命周期主要是：

beforeCreate
creat ...`,l:"frame/vue/vue生命周期.html",a:"vue生命周期"},"50.1":{t:"Vue2\r",p:`


生命周期钩子
描述




beforeCreate
组件实例被创建之初


createed
组件实例已被完全创建
 ...`,l:"frame/vue/vue生命周期.html#vue2",a:"vue2"},"50.2":{t:"具体分析\r",p:`

beforeCreate -&gt; created
初始化 vue 实例，进行数据观测


created
完成数据观 ...`,l:"frame/vue/vue生命周期.html#具体分析",a:"具体分析"},"50.3":{t:"题外话：数据请求在created和mouted的区别\r",p:`created是在组件实例一旦创建完成的时候立刻调用，这时候页面dom节点并未生成；
mounted是在页面dom节点渲染完 ...`,l:"frame/vue/vue生命周期.html#题外话-数据请求在created和mouted的区别",a:"题外话-数据请求在created和mouted的区别"},"50.4":{t:"Vue3\r",p:`在 Vue3 中， 除了 setup()替代了 created 和 beforeCreate 之外，
beforeMount ...`,l:"frame/vue/vue生命周期.html#vue3",a:"vue3"},"50.5":{t:"具体功能\r",p:`

setup
setup 函数是一个全新的组件选项，它是 Composition API 的核心，用于初始化组件实例
se ...`,l:"frame/vue/vue生命周期.html#具体功能",a:"具体功能"},"51.0":{t:"# Vue 双向绑定原理\r",p:"\r",l:"frame/vue/双向绑定.html",a:"vue-双向绑定原理"},"51.1":{t:"单向绑定\r",p:"单向绑定非常简单， 就是把 Model绑定到View, 当我们用JavaScript 代码更新Model时， View就会自 ...",l:"frame/vue/双向绑定.html#单向绑定",a:"单向绑定"},"51.2":{t:"双向绑定\r",p:"双向绑定就是在单向绑定的基础上， 通过修改视图View, Model也会更新, 例如在用户填写表单时， View的状态被更新 ...",l:"frame/vue/双向绑定.html#双向绑定",a:"双向绑定"},"51.3":{t:"双向绑定原理\r",p:`双向数据绑定由三部分组成

数据层(Model): 应用的数据以及业务逻辑
视图层(View): 应用的展示效果，各类UI组 ...`,l:"frame/vue/双向绑定.html#双向绑定原理",a:"双向绑定原理"},"51.4":{t:"ViewModel\r",p:`ViewModel的主要职责：

数据变化后更新视图
视图变化后更新数据

还有两个主要部分组成

监听器(Observer ...`,l:"frame/vue/双向绑定.html#viewmodel",a:"viewmodel"},"51.5":{t:"实现\r",p:`以 Vue 为例，先看看双向绑定的流程：

new Vue() 首先执行初始化，对data执行响应化处理，这个过程发生在监听 ...`,l:"frame/vue/双向绑定.html#实现",a:"实现"},"51.6":{t:"代码实现\r",p:`先来一个构造函数，执行初始化，对 data 执行响应化处理
class Vue {
  constructor(option ...`,l:"frame/vue/双向绑定.html#代码实现",a:"代码实现"},"51.7":{t:"编译 Compile\r",p:`对每个元素节点的指令进行扫描跟解析，根据指令模版替换数据，以及绑定相应的更新函数
!COmpile结构
class Comp ...`,l:"frame/vue/双向绑定.html#编译-compile",a:"编译-compile"},"51.8":{t:"依赖收集\r",p:"视图中会用到 data 中某 key 这称为依赖，同一个 key 可能会出现多次，每次都需要收集出来用一个 Watcher来 ...",l:"frame/vue/双向绑定.html#依赖收集",a:"依赖收集"},"51.9":{t:"来源\r",p:`vue双向绑定
`,l:"frame/vue/双向绑定.html#来源",a:"来源"},"52.0":{t:"# Vue 首页白屏问题以及解决方案\r",p:"\r",l:"frame/vue/首页白屏.html",a:"vue-首页白屏问题以及解决方案"},"52.1":{t:"首页加载白屏的原因\r",p:`在谈论首页白屏问题之前，先了解一下SPA
`,l:"frame/vue/首页白屏.html#首页加载白屏的原因",a:"首页加载白屏的原因"},"52.2":{t:"SPA\r",p:"SPA(single-page application), 翻译过劳就是单页面应用。 SPA是一种网络应用程序或者网站的模型 ...",l:"frame/vue/首页白屏.html#spa",a:"spa"},"52.3":{t:"SPA 加载过程\r",p:`

首先是 HTML 也就是 FP阶段

FP(全称 First Paint， 翻译为 首次绘制) 是时间线上的第一个时间点 ...`,l:"frame/vue/首页白屏.html#spa-加载过程",a:"spa-加载过程"},"52.4":{t:"解决方案\r",p:`
预渲染

预渲染就是webpack打包的时候渲染,通过无头浏览器

无头浏览器: 打包的时候，可以把index.html的 ...`,l:"frame/vue/首页白屏.html#解决方案",a:"解决方案"},"53.0":{t:"主要记录了工作中遇到的问题、积累的知识点\r",p:`工程师应该怎样学习
`,l:"guide/home.html",a:"主要记录了工作中遇到的问题、积累的知识点"},"54.0":{t:"# 231204 ~ 231208\r",p:"\r",l:"guide/weekly/231204-231208.html",a:"_231204-231208"},"54.1":{t:"23-12-06\r",p:`设计一个函数让两个数字相加，但不得使用+或者其他运算符
输入 a = 1 b = 2
输出 3

const getSum  ...`,l:"guide/weekly/231204-231208.html#_23-12-06",a:"_23-12-06"},"54.2":{t:"23-12-08\r",p:"\r",l:"guide/weekly/231204-231208.html#_23-12-08",a:"_23-12-08"},"54.3":{t:"`import` 和 `require` 区别\r",p:`

来源不同
import/export 来源于ECM(ES6)
require/exports 来源于CommonJS

 ...`,l:"guide/weekly/231204-231208.html#import-和-require-区别",a:"import-和-require-区别"},"55.0":{t:"# 231211-231215\r",p:"\r",l:"guide/weekly/231211-231215.html",a:"_231211-231215"},"55.1":{t:"23-12-13 ❄️\r",p:"\r",l:"guide/weekly/231211-231215.html#_23-12-13-❄️",a:"_23-12-13-❄️"},"55.2":{t:"Typescript中`any`与`unknown`\r",p:`

any
any类型表示没有任何限制，该类型的变量可以赋予任意类型的值。
一旦设置为any类型， TypeScript 实 ...`,l:"guide/weekly/231211-231215.html#typescript中-any-与-unknown",a:"typescript中-any-与-unknown"},"55.3":{t:"Typescript中的`never`类型\r",p:"为了保持与集合论的对应关系，以及类型运算的完整性，TypeScript 还引入了“空类型”的概念，即该类型为空，不包含任何值 ...",l:"guide/weekly/231211-231215.html#typescript中的-never-类型",a:"typescript中的-never-类型"},"56.0":{t:"# 231218-231222\r",p:"\r",l:"guide/weekly/231218-231222.html",a:"_231218-231222"},"56.1":{t:"23-12-18 ☀️\r",p:`更新了面试相关的 HTML CSS 浏览器相关
天气不错， 适合骑车🚴
`,l:"guide/weekly/231218-231222.html#_23-12-18-☀️",a:"_23-12-18-☀️"},"56.2":{t:"23-12-19 🌬\r",p:`更新了面试相关的Javascript相关 40%
更新了ES6新特性(1)  更新了一部分， 后续持续更新
`,l:"guide/weekly/231218-231222.html#_23-12-19-🌬",a:"_23-12-19-🌬"},"56.3":{t:"23-12-20 🌬\r",p:`更新了面试相关的Javascript相关 100%
更新了面试相关的Vue相关 30%
`,l:"guide/weekly/231218-231222.html#_23-12-20-🌬",a:"_23-12-20-🌬"},"56.4":{t:"23-12-21 🌞\r",p:`更新了 原型与原型链相关
`,l:"guide/weekly/231218-231222.html#_23-12-21-🌞",a:"_23-12-21-🌞"},"58.0":{t:"# 小程序相关\r",p:"\r",l:"interview/applet.html",a:"小程序相关"},"58.1":{t:"小程序的优势\r",p:"\r",l:"interview/applet.html#小程序的优势",a:"小程序的优势"},"58.2":{t:"小程序的页面构成（4 个文件）\r",p:"\r",l:"interview/applet.html#小程序的页面构成-4-个文件",a:"小程序的页面构成-4-个文件"},"58.3":{t:"小程序的生命周期\r",p:"\r",l:"interview/applet.html#小程序的生命周期",a:"小程序的生命周期"},"58.4":{t:"小程序如何请求数据\r",p:"\r",l:"interview/applet.html#小程序如何请求数据",a:"小程序如何请求数据"},"58.5":{t:"如何提高小程序的首屏加载时间\r",p:"\r",l:"interview/applet.html#如何提高小程序的首屏加载时间",a:"如何提高小程序的首屏加载时间"},"58.6":{t:"请简述你经常使用的小程序的组件\r",p:"\r",l:"interview/applet.html#请简述你经常使用的小程序的组件",a:"请简述你经常使用的小程序的组件"},"58.7":{t:"Wxss 与 css 的区别请简述\r",p:"\r",l:"interview/applet.html#wxss-与-css-的区别请简述",a:"wxss-与-css-的区别请简述"},"58.8":{t:"小程序如何实现响应式\r",p:"\r",l:"interview/applet.html#小程序如何实现响应式",a:"小程序如何实现响应式"},"58.9":{t:"怎么优化小程序\r",p:"\r",l:"interview/applet.html#怎么优化小程序",a:"怎么优化小程序"},"58.10":{t:"小程序如何显示用户头像与用户名\r",p:"\r",l:"interview/applet.html#小程序如何显示用户头像与用户名",a:"小程序如何显示用户头像与用户名"},"58.11":{t:"请谈谈小程序的双向绑定和 vue 的异同\r",p:"\r",l:"interview/applet.html#请谈谈小程序的双向绑定和-vue-的异同",a:"请谈谈小程序的双向绑定和-vue-的异同"},"58.12":{t:"小程序中传参是怎么传的\r",p:"\r",l:"interview/applet.html#小程序中传参是怎么传的",a:"小程序中传参是怎么传的"},"58.13":{t:"和 vue 类比介绍\r",p:"\r",l:"interview/applet.html#和-vue-类比介绍",a:"和-vue-类比介绍"},"58.14":{t:"说一下微信小程序的适配问题\r",p:"\r",l:"interview/applet.html#说一下微信小程序的适配问题",a:"说一下微信小程序的适配问题"},"58.15":{t:"小程序页面间有哪些传递数据的方法？\r",p:"\r",l:"interview/applet.html#小程序页面间有哪些传递数据的方法",a:"小程序页面间有哪些传递数据的方法"},"58.16":{t:"你是怎么封装微信小程序的数据请求的\r",p:"\r",l:"interview/applet.html#你是怎么封装微信小程序的数据请求的",a:"你是怎么封装微信小程序的数据请求的"},"58.17":{t:"小程序跳转页面的方式\r",p:"\r",l:"interview/applet.html#小程序跳转页面的方式",a:"小程序跳转页面的方式"},"58.18":{t:"微信小程序如何跳转到其他小程序\r",p:"\r",l:"interview/applet.html#微信小程序如何跳转到其他小程序",a:"微信小程序如何跳转到其他小程序"},"58.19":{t:"小程序加载过慢的解决方式",p:"",l:"interview/applet.html#小程序加载过慢的解决方式",a:"小程序加载过慢的解决方式"},"59.0":{t:"# 前端基础 （HTML/JS/CSS/浏览器）",p:"",l:"interview/base/index.html",a:"前端基础-html-js-css-浏览器"},"60.0":{t:"# JavaScript 相关\r",p:"\r",l:"interview/base/javascript.html",a:"javascript-相关"},"60.1":{t:"JavaScript的语言特性\r",p:`
运行在客户端浏览器上
不用预编译，直接解析执行代码
弱类型语言，比较灵活
与操作系统无关，跨平台的语言
脚本语言
解释性语 ...`,l:"interview/base/javascript.html#javascript的语言特性",a:"javascript的语言特性"},"60.2":{t:"JavaScript 中的基本数据类型\r",p:`
前端数据类型

`,l:"interview/base/javascript.html#javascript-中的基本数据类型",a:"javascript-中的基本数据类型"},"60.3":{t:"Ajax使用\r",p:"Ajax（Asynchronous JavaScript and XML）是一种使用 JavaScript 和 XML 进行 ...",l:"interview/base/javascript.html#ajax使用",a:"ajax使用"},"60.4":{t:"Ajax请求返回的状态码(常用)\r",p:`


状态码
含义




100
表示客户端应该继续发送请求，是临时响应，用于通知客户端，部分的请求服务器已经接受，但是客 ...`,l:"interview/base/javascript.html#ajax请求返回的状态码-常用",a:"ajax请求返回的状态码-常用"},"60.5":{t:"闭包\r",p:"\r",l:"interview/base/javascript.html#闭包",a:"闭包"},"60.6":{t:"闭包的定义\r",p:`闭包可以简单理解成：定义在一个函数内部的函数， 其中一个内部函数在包含他们的外部函数之外被调用时，就会形成闭包
闭包就是函数 ...`,l:"interview/base/javascript.html#闭包的定义",a:"闭包的定义"},"60.7":{t:"为什么要用\r",p:"匿名自执行函数： 我们知道所有的变量，如果不架上 var 关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局 ...",l:"interview/base/javascript.html#为什么要用",a:"为什么要用"},"60.8":{t:"闭包的特性\r",p:`

闭包的写法一般是函数嵌套函数


可以访问函数外部的变量：闭包可以访问定义它的函数的参数和局部变量，甚至可以访问全局变量 ...`,l:"interview/base/javascript.html#闭包的特性",a:"闭包的特性"},"60.9":{t:"事件委托\r",p:`事件委托就是利用时间冒泡，只制定一个时间处理程序，就可以管理某一些类型的所有事件。 —— 《JS高级程序设计》
事件委托，称 ...`,l:"interview/base/javascript.html#事件委托",a:"事件委托"},"60.10":{t:"事件委托优点\r",p:`

提高整体运行性能
假如现在有有00个li标签，那个li事件都有相同的点击事件，如果使用循环遍历去触发每个li元素上的事件 ...`,l:"interview/base/javascript.html#事件委托优点",a:"事件委托优点"},"60.11":{t:"事件源\r",p:`Event 对象提供了一个属性叫 target， 可以返回事件的目标节点，我们称为事件源。
但这个有兼容性：

标准浏览器使 ...`,l:"interview/base/javascript.html#事件源",a:"事件源"},"60.12":{t:"事件冒泡\r",p:`当一个元素接收到事件的时候，会把接收到事件传递给自己的父级。这种传递分为三个阶段

捕获阶段：从window对象传导到目标节 ...`,l:"interview/base/javascript.html#事件冒泡",a:"事件冒泡"},"60.13":{t:"本地存储与cookie的区别\r",p:`本地存储(Local Storage)和Cookie都是用于在浏览器端存储数据的两种不同的机制，主要有以下区别


存储容量 ...`,l:"interview/base/javascript.html#本地存储与cookie的区别",a:"本地存储与cookie的区别"},"60.14":{t:"ES6新特性(常用)\r",p:`
ES6新特性

`,l:"interview/base/javascript.html#es6新特性-常用",a:"es6新特性-常用"},"60.15":{t:"数组的方法(常用)\r",p:`
常用的数组的方法

`,l:"interview/base/javascript.html#数组的方法-常用",a:"数组的方法-常用"},"60.16":{t:"JSON 新增/删除键值对\r",p:`
新增键值对

let jsonStr = {}
jsonStr.newKey = &quot;newValue&quot; ...`,l:"interview/base/javascript.html#json-新增-删除键值对",a:"json-新增-删除键值对"},"60.17":{t:"面向对象\r",p:"面向对象是一种思想，是基于面向过程而言的，就是说面向对象是将功能等通过对象来实现，将功能封装到对象之中，让对象去实现具体的细 ...",l:"interview/base/javascript.html#面向对象",a:"面向对象"},"60.18":{t:"普通函数与构造函数区别\r",p:`
构造函数也是一个普通函数，创建方式和普通函数一样，但是构造函数习惯首字母大写
调用方式不一样，普通函数直接调用，构造函数要 ...`,l:"interview/base/javascript.html#普通函数与构造函数区别",a:"普通函数与构造函数区别"},"60.19":{t:"原型与原型链\r",p:`
原型与原型链

`,l:"interview/base/javascript.html#原型与原型链",a:"原型与原型链"},"60.20":{t:"Promise\r",p:`

链接（ES6新特性二）// 待开发


解决问题
回调地狱， 代码难以维护， 常常第一个的函数的输出是第二个函数的输入这 ...`,l:"interview/base/javascript.html#promise",a:"promise"},"60.21":{t:"async函数\r",p:"Async函数其实是 generatior函数和promise的语法糖， async就是将generator函数的 *换为  ...",l:"interview/base/javascript.html#async函数",a:"async函数"},"60.22":{t:"GET 请求传参长度误区\r",p:`误区
我们经常说 get 请求参数的大小存在限制， 而post请求的参数大小是无限制的。 实际上HTTP协议从未规定 GET ...`,l:"interview/base/javascript.html#get-请求传参长度误区",a:"get-请求传参长度误区"},"60.23":{t:"GET 请求和 POST 请求在缓存方面的区别\r",p:`GET 请求 一般是做查询操作， 是一个查找的过程， 可以不用每次都与数据库连接， 因此 GET 请求更适合请求缓存；
PO ...`,l:"interview/base/javascript.html#get-请求和-post-请求在缓存方面的区别",a:"get-请求和-post-请求在缓存方面的区别"},"60.24":{t:"事件流\r",p:"HTML 和 Javascript 的交互是通过事件驱动来实现的， 例如鼠标点击事件 onclick, 页面滚动事件 ons ...",l:"interview/base/javascript.html#事件流",a:"事件流"},"60.25":{t:"事件流定义\r",p:`事件流描述的是从页面中接收事件的顺序， DOM二级事件流包括几个阶段： 事件捕获阶段、处于目标阶段、 事件冒泡阶段


ad ...`,l:"interview/base/javascript.html#事件流定义",a:"事件流定义"},"60.26":{t:"改变this指针的指向函数(`call`、`apply`,`bind`)区别\r",p:`
call、bind、apply函数的恶区别

`,l:"interview/base/javascript.html#改变this指针的指向函数-call-、-apply-bind-区别",a:"改变this指针的指向函数-call-、-apply-bind-区别"},"60.27":{t:"JavaScript 中 clientHeight、scrollHeight、offsetHeight区别\r",p:`
具体可见 JS中的元素尺寸与布局信息

`,l:"interview/base/javascript.html#javascript-中-clientheight、scrollheight、offsetheight区别",a:"javascript-中-clientheight、scrollheight、offsetheight区别"},"60.28":{t:"拖拽功能的实现\r",p:"首先是三个事件: mousedown、 mousemove、 mouseup, 当鼠标点击按下的时候， 需要一个tag来标记 ...",l:"interview/base/javascript.html#拖拽功能的实现",a:"拖拽功能的实现"},"60.29":{t:"JavaScript的垃圾回收机制\r",p:"\r",l:"interview/base/javascript.html#javascript的垃圾回收机制",a:"javascript的垃圾回收机制"},"60.30":{t:"必要性\r",p:"由于字符串、对象和数组没有固定大小， 所以当他们大小已知时，才能够对它们进行动态的存储分配。JavaScript程序每次创建 ...",l:"interview/base/javascript.html#必要性",a:"必要性"},"60.31":{t:"常见的垃圾回收方式\r",p:`

标记清除
这是最常见的垃圾回收的方式，当变量进入环境时，就标记这个变量为进入环境， 从逻辑上来讲， 永远不能释放进入环境 ...`,l:"interview/base/javascript.html#常见的垃圾回收方式",a:"常见的垃圾回收方式"},"60.32":{t:"JavaScript监听对象属性的改变\r",p:`在ES5中， 我们可以通过Object.defineProperty来实现已有属性的监听：
Object.definepro ...`,l:"interview/base/javascript.html#javascript监听对象属性的改变",a:"javascript监听对象属性的改变"},"60.33":{t:"手动实现一个 `bind` 函数\r",p:`
原理： 通过 apply 或者 call 方法来实现。

Function.prototype.bind = functi ...`,l:"interview/base/javascript.html#手动实现一个-bind-函数",a:"手动实现一个-bind-函数"},"60.34":{t:"怎么控制一次加载一张图片，加载完后再加载下一张\r",p:"\r",l:"interview/base/javascript.html#怎么控制一次加载一张图片-加载完后再加载下一张",a:"怎么控制一次加载一张图片-加载完后再加载下一张"},"60.35":{t:"方法1\r",p:`var obj = new Image();
obj.src = 'http://www.phpernote.com/upl ...`,l:"interview/base/javascript.html#方法1",a:"方法1"},"60.36":{t:"方法2\r",p:`var obj=new Image();
obj.src='http://www.phpernote.com/uploadf ...`,l:"interview/base/javascript.html#方法2",a:"方法2"},"60.37":{t:"JavaScript 对象的深度克隆\r",p:"通过递归可以简单实现对象的深度克隆，但是这种方法不管是 ES6 还是 ES5 实现, 都有同样的缺陷， 就是只能实现特定的  ...",l:"interview/base/javascript.html#javascript-对象的深度克隆",a:"javascript-对象的深度克隆"},"60.38":{t:"JavaScript 全排列\r",p:`全排列是一种对给定字符串中的字符进行重新排列的操作，生成所有可能的排列组合。
function permutate(str) ...`,l:"interview/base/javascript.html#javascript-全排列",a:"javascript-全排列"},"60.39":{t:"跨域问题\r",p:"\r",l:"interview/base/javascript.html#跨域问题",a:"跨域问题"},"60.40":{t:"为什么会出现跨域\r",p:"在前后端分离的模式下，前后端的域名是不一致的， 此时就会发生跨域访问问题。在请求过程中我们想要发送/接收数据一般都是 POS ...",l:"interview/base/javascript.html#为什么会出现跨域",a:"为什么会出现跨域"},"60.41":{t:"同源策略\r",p:"是由 NetScape 提出的一个著名的安全策略。所谓的同源，指的是协议、域名、端口相同，浏览器处于安全方面考虑，只允许本域 ...",l:"interview/base/javascript.html#同源策略",a:"同源策略"},"60.42":{t:"减少页面加载时间\r",p:`
优化压缩图片
图片格式的选择(GIF:提供颜色较少，可以用在一些对颜色要求不高的地方)
优化CSS(压缩合并 CSS， 如 ...`,l:"interview/base/javascript.html#减少页面加载时间",a:"减少页面加载时间"},"60.43":{t:"this 指向\r",p:`在JavaScript中， this通常指向的是我们正在执行的函数本身，或者是指向该函数所属的对象
全局this -&gt; ...`,l:"interview/base/javascript.html#this-指向",a:"this-指向"},"60.44":{t:"数组去重\r",p:`
使用indexOf()/lastIndexOf() 方法
ES6的 Set结构 Array.form(new Set(ar ...`,l:"interview/base/javascript.html#数组去重",a:"数组去重"},"60.45":{t:"深拷贝与浅拷贝\r",p:`
手写深拷贝

深拷贝：指针赋值，并且内容拷贝 JSON.parse(JSON.stringify())不仅适用于数组还适用 ...`,l:"interview/base/javascript.html#深拷贝与浅拷贝",a:"深拷贝与浅拷贝"},"60.46":{t:"For循环与Map循环有什么区别\r",p:`
For循环 遍历对象自身和继承可枚举的属性，也就是说会包括那些在原型链上的属性
Map循环方法不会对空数组进行检测， ma ...`,l:"interview/base/javascript.html#for循环与map循环有什么区别",a:"for循环与map循环有什么区别"},"60.47":{t:"类的继承\r",p:`创建类有三种方法：

使用 function 和 this 关键字
原型方法 使用 prototype 和 this 关键字 ...`,l:"interview/base/javascript.html#类的继承",a:"类的继承"},"60.48":{t:"同步与异步的区别/阻塞与非阻塞区别\r",p:`同步(阻塞的)
异步(非阻塞)
比如：
同步，咱两在一起上班，到吃饭时间了，我去喊你一起吃饭，你很忙，我就坐着等你忙完再一起 ...`,l:"interview/base/javascript.html#同步与异步的区别-阻塞与非阻塞区别",a:"同步与异步的区别-阻塞与非阻塞区别"},"60.49":{t:"重绘和回流\r",p:`
重绘与回流

`,l:"interview/base/javascript.html#重绘和回流",a:"重绘和回流"},"60.50":{t:"HTTP HTTPS\r",p:`

HTTP
HTTP叫做超文本传输协议， 是互联网应用最广泛的一种网络协议
信息是明文传输
HTTP 基于 请求-响应 的 ...`,l:"interview/base/javascript.html#http-https",a:"http-https"},"60.51":{t:"如何对网站的文件和资源进行优化\r",p:`
文件合并(目的是减少 http 请求)
文件压缩(目的是减少文件下载体积)
使用 CDN 托管资源
使用缓存
gizp 压 ...`,l:"interview/base/javascript.html#如何对网站的文件和资源进行优化",a:"如何对网站的文件和资源进行优化"},"60.52":{t:"预加载与懒加载的区别\r",p:`预加载是指在页面加载完成之前，提前讲所需资源下载，之后使用的时候从缓存中调用；
懒加载是延迟加载，按照一定的条件活着需求，等 ...`,l:"interview/base/javascript.html#预加载与懒加载的区别",a:"预加载与懒加载的区别"},"60.53":{t:"防抖与节流\r",p:`
防抖与节流

`,l:"interview/base/javascript.html#防抖与节流",a:"防抖与节流"},"60.54":{t:"XSS 与 CSRF\r",p:`
XSS攻击与CSRF攻击

`,l:"interview/base/javascript.html#xss-与-csrf",a:"xss-与-csrf"},"61.0":{t:"# HTML CSS 浏览器\r",p:"\r",l:"interview/base/native.html",a:"html-css-浏览器"},"61.1":{t:"常用的图片的格式有哪些\r",p:`常用的图片格式有jpeg、png、gif, 比较流行的是jpeg格式, 可以把文件压缩到最小
`,l:"interview/base/native.html#常用的图片的格式有哪些",a:"常用的图片的格式有哪些"},"61.2":{t:"`jpeg`\r",p:`JPEG 是一种有损压缩格式,适合存储照片和复杂的图像,可以在文件大小和图像质量之间取得平衡
优点:文件大小相对较小,支持高 ...`,l:"interview/base/native.html#jpeg",a:"jpeg"},"61.3":{t:"`png`\r",p:`PNG 是一种无损压缩格式,适合存储图标、简单图形和带有透明度的图像。
优点:支持透明度、无损压缩；适合存储简单图形和带有透 ...`,l:"interview/base/native.html#png",a:"png"},"61.4":{t:"`gif`\r",p:`GIF 是一种支持动画和简单图形的格式,同时也支持透明度。
优点:支持动画、透明度；适合存储简单的动画图像。
缺点:色彩表现 ...`,l:"interview/base/native.html#gif",a:"gif"},"61.5":{t:"CSS的盒模型\r",p:"盒模型是一个盛放内容的容器, 它由四部分组成 元素的具体内容content、 内边距padding、边框border、外边距 ...",l:"interview/base/native.html#css的盒模型",a:"css的盒模型"},"61.6":{t:" 标准盒模型\r",p:`!标准盒模型
`,l:"interview/base/native.html#标准盒模型",a:"标准盒模型"},"61.7":{t:"IE盒模型\r",p:`!标准盒模型

css3中引入了box-sizing属性,box-sizing:content-box 表示标准盒子模型,b ...`,l:"interview/base/native.html#ie盒模型",a:"ie盒模型"},"61.8":{t:"视频/音频标签的使用\r",p:"\r",l:"interview/base/native.html#视频-音频标签的使用",a:"视频-音频标签的使用"},"61.9":{t:'视频标签 `<video src=""></video>`\r',p:`属性:



属性名称
功能




src
需要播放的视频地址


width
视频区域的宽度


height
视频区域 ...`,l:"interview/base/native.html#视频标签-video-src-video",a:"视频标签-video-src-video"},"61.10":{t:'音频标签`<audio> <source src="" type=""></source> </audio>`\r',p:`属性



属性名称
功能




src
需要播放的视频地址


type
视频类型, 支持ogg、mp3 wav


a ...`,l:"interview/base/native.html#音频标签-audio-source-src-type-source-audio",a:"音频标签-audio-source-src-type-source-audio"},"61.11":{t:"HTML5新增的内容\r",p:`
语义化标签
表单类型
表单元素
表单属性
表单事件
多媒体标签

`,l:"interview/base/native.html#html5新增的内容",a:"html5新增的内容"},"61.12":{t:"新增的语义化标签\r",p:`优点

提升可访问性
利于seo优化
结构清晰,利于维护

种类



标签名
标签作用




header
页面头部

 ...`,l:"interview/base/native.html#新增的语义化标签",a:"新增的语义化标签"},"61.13":{t:"CSS3新增特性\r",p:"\r",l:"interview/base/native.html#css3新增特性",a:"css3新增特性"},"61.14":{t:"`border`边框\r",p:`


属性名称
功能




border-radios
添加圆角


border-shadow
边框添加阴影 (水平位移 ...`,l:"interview/base/native.html#border-边框",a:"border-边框"},"61.15":{t:"`background`背景\r",p:`


属性名称
功能




background-size
背景图片尺寸


background-origin
规定ba ...`,l:"interview/base/native.html#background-背景",a:"background-背景"},"61.16":{t:"`gradient`渐变\r",p:`


属性名称
功能




linear-gradient
线性渐变


radial-gradient
径向渐变



`,l:"interview/base/native.html#gradient-渐变",a:"gradient-渐变"},"61.17":{t:"`word`文本效果\r",p:`


属性名称
功能




word-break
定义如何换行


word-wrap
允许长的内容可以自动换行


te ...`,l:"interview/base/native.html#word-文本效果",a:"word-文本效果"},"61.18":{t:"`transform`转换\r",p:`


属性名称
功能




transform
应用于 2D3D 转换,可以将元素旋转,缩放,移动,倾斜


transf ...`,l:"interview/base/native.html#transform-转换",a:"transform-转换"},"61.19":{t:"`transition`过渡\r",p:`


属性名称
功能




transition-proprety
过渡属性名


transition-duration ...`,l:"interview/base/native.html#transition-过渡",a:"transition-过渡"},"61.20":{t:"`animation`动画\r",p:`


属性名称
功能




animation-name
为@keyframes 动画名称


animation-dur ...`,l:"interview/base/native.html#animation-动画",a:"animation-动画"},"61.21":{t:"清除浮动(`float`)\r",p:`
当设置浮动属性时,并且父元素没有设置高度时, 父元素会出现高度塌陷问题



给父元素单独定义高度
这个方法简单快速, 代 ...`,l:"interview/base/native.html#清除浮动-float",a:"清除浮动-float"},"61.22":{t:"定位属性`position`\r",p:`
reactive: 相对定位,不脱离文档流,相对于自身定位
absolute: 绝对定位,脱离文档流,相对于父级定位
fi ...`,l:"interview/base/native.html#定位属性-position",a:"定位属性-position"},"61.23":{t:"元素居中\r",p:"\r",l:"interview/base/native.html#元素居中",a:"元素居中"},"61.24":{t:"水平居中\r",p:`
子父元素宽度固定,子元素设置margin: auto 并且子元素不能设置浮动(float)。否则居中失效
子父元素款素固定 ...`,l:"interview/base/native.html#水平居中",a:"水平居中"},"61.25":{t:"垂直居中\r",p:`
设置子元素和父元素的行高一样
子元素设置为行内块,再加 vertical-align:middle
已知父元素高度,子元素 ...`,l:"interview/base/native.html#垂直居中",a:"垂直居中"},"61.26":{t:"水平垂直居中\r",p:`

子元素相对于父元素绝对定位,子元素top、left设置 50%,子元素的margin-left和margin-top减去 ...`,l:"interview/base/native.html#水平垂直居中",a:"水平垂直居中"},"61.27":{t:"三栏布局方式两边固定, 中间自适应\r",p:`
margin 负值法：左右两栏均左浮动, 左右两栏采用负的margin值。中间栏被宽度为100%的浮动元素包起来
自身浮动 ...`,l:"interview/base/native.html#三栏布局方式两边固定-中间自适应",a:"三栏布局方式两边固定-中间自适应"},"61.28":{t:"浏览器显示小于12px的文字\r",p:`
可以添加谷歌私有属性webkit-text-size-adjust:none
使用 -webkit-transform:s ...`,l:"interview/base/native.html#浏览器显示小于12px的文字",a:"浏览器显示小于12px的文字"},"61.29":{t:"CSS选择器\r",p:"\r",l:"interview/base/native.html#css选择器",a:"css选择器"},"61.30":{t:"种类\r",p:`


选择器
功能





后代选择器



元素选择器


.
类名选择器


#
id选择器


*
通配符选择器

 ...`,l:"interview/base/native.html#种类",a:"种类"},"61.31":{t:"优先级(权重)\r",p:`


选择器
权重




元素选择器
1


伪元素选择器
1


class选择器
10


伪类选择器
10


属性 ...`,l:"interview/base/native.html#优先级-权重",a:"优先级-权重"},"61.32":{t:"可继承属性\r",p:`


类型
属性




所有元素
visibility和cursor


块级元素
text-indent和text-al ...`,l:"interview/base/native.html#可继承属性",a:"可继承属性"},"61.33":{t:"图片加载缓慢问题\r",p:`
图片懒加载, 在图片未可视区域加一个滚动条事件, 判断图片位置与浏览器顶端和页面的距离, 如果前者小于后者, 优先加载
使 ...`,l:"interview/base/native.html#图片加载缓慢问题",a:"图片加载缓慢问题"},"61.34":{t:"行内元素/块级元素\r",p:"行内元素: 相邻的行内元素会排列在同一行, 不会独占一行 设置宽高无效 span、a、br I em img input s ...",l:"interview/base/native.html#行内元素-块级元素",a:"行内元素-块级元素"},"61.35":{t:"margin与padding使用场景\r",p:`margin: 外边距 自身边框到另一个边框之间的距离
padding: 内边距 自身边距到自身内容之间的距离
当需要在 b ...`,l:"interview/base/native.html#margin与padding使用场景",a:"margin与padding使用场景"},"61.36":{t:"`flex`属性\r",p:`原理： 通过给父盒子添加 flex 属性, 来控制子盒子的位置和排列方式



属性名
功能




flex-direct ...`,l:"interview/base/native.html#flex-属性",a:"flex-属性"},"61.37":{t:"标签的禁用\r",p:`添加disable属性
`,l:"interview/base/native.html#标签的禁用",a:"标签的禁用"},"61.38":{t:"`px`、`rem`、`em`区别\r",p:`

px
绝对长度单位, 像素 px 是相对于显示器屏幕分辨率来说的


em
相对长度单位, 相对于当前对象内文本的字体尺 ...`,l:"interview/base/native.html#px-、-rem-、-em-区别",a:"px-、-rem-、-em-区别"},"61.39":{t:"媒体查询\r",p:`媒体查询扩展了 media 属性, 就是根据不同的媒体类型设置不同的css样式, 达到自适应的目的。
`,l:"interview/base/native.html#媒体查询",a:"媒体查询"},"61.40":{t:"网页的三层结构\r",p:`结构(html 或 xhtm 标记语言) 表现(css 样式表) 行为(js)
`,l:"interview/base/native.html#网页的三层结构",a:"网页的三层结构"},"61.41":{t:"DOCTYPE 作用\r",p:"DOCTYPE 是 HTML5 中的文档声明, 通过它可以告诉浏览器, 使用哪一个 HTML 的版本标准来解析文档, 如果没 ...",l:"interview/base/native.html#doctype-作用",a:"doctype-作用"},"61.42":{t:"HTML5 `drag`API\r",p:`


属性
功能




dragstart
事件主体是被拖放元素, 在开始拖放被拖放元素时触发


darg
事件主体是被 ...`,l:"interview/base/native.html#html5-drag-api",a:"html5-drag-api"},"61.43":{t:"浏览器性能优化 🌍\r",p:`如何让页面能够更快地显示和响应， 这里分为三个阶段

加载阶段：发出请求到网页渲染完成的这段过程，这里影响和优化的主要是网络 ...`,l:"interview/base/native.html#浏览器性能优化-🌍",a:"浏览器性能优化-🌍"},"61.44":{t:"加载阶段的优化\r",p:`加载阶段能做的主要优化：


减少关键资源个数

例如把css和js改为内联形式，关键资源比如原来有3个就减少到1个了
变成 ...`,l:"interview/base/native.html#加载阶段的优化",a:"加载阶段的优化"},"61.45":{t:"交互阶段的优化\r",p:`交互阶段的优化，其实就是说 优化渲染进程中渲染帧的速度，帧的速度决定了交互的流畅性

大部分情况下，生成一个新的帧，是由 J ...`,l:"interview/base/native.html#交互阶段的优化",a:"交互阶段的优化"},"61.46":{t:"回流和重绘\r",p:`
回流和重绘

`,l:"interview/base/native.html#回流和重绘",a:"回流和重绘"},"61.47":{t:"浏览器缓存机制\r",p:`
浏览器缓存

`,l:"interview/base/native.html#浏览器缓存机制",a:"浏览器缓存机制"},"61.48":{t:"浏览器输入网址到页面渲染的全过程\r",p:`

用户输入URL
用户在输入URL时候，浏览器会根据URL的协议， 在这段内容上加伤协议合成合法的URL， 按下回车后，导 ...`,l:"interview/base/native.html#浏览器输入网址到页面渲染的全过程",a:"浏览器输入网址到页面渲染的全过程"},"61.49":{t:"如何画一条0.5px的线\r",p:`
采用 meta viewport的方式

&lt;meta name=&quot;viewport&quot; conte ...`,l:"interview/base/native.html#如何画一条0-5px的线",a:"如何画一条0-5px的线"},"61.50":{t:"关于 JS动画和CSS3动画的差异\r",p:"渲染县城分为main thread 和 compositor thread, 如果css动画只改变 transfoem 和  ...",l:"interview/base/native.html#关于-js动画和css3动画的差异",a:"关于-js动画和css3动画的差异"},"61.51":{t:"双边距重叠(外边距折叠)\r",p:`多个相邻(兄弟或者父子关系)普通流的块级元素垂直方向的 margin 会重叠， 重叠结果为：

两者相邻的外边距皆为正数时： ...`,l:"interview/base/native.html#双边距重叠-外边距折叠",a:"双边距重叠-外边距折叠"},"62.0":{t:"# 框架相关",p:"",l:"interview/frame/index.html",a:"框架相关"},"63.0":{t:"# React相关\r",p:"\r",l:"interview/frame/react.html",a:"react相关"},"63.1":{t:"fetch VS ajax VS axios\r",p:"\r",l:"interview/frame/react.html#fetch-vs-ajax-vs-axios",a:"fetch-vs-ajax-vs-axios"},"63.2":{t:"React 事件处理---修改 this 指向\r",p:"\r",l:"interview/frame/react.html#react-事件处理-修改-this-指向",a:"react-事件处理-修改-this-指向"},"63.3":{t:"请简述你对 react 的理解\r",p:"\r",l:"interview/frame/react.html#请简述你对-react-的理解",a:"请简述你对-react-的理解"},"63.4":{t:"react 组件之间的数据传递\r",p:"\r",l:"interview/frame/react.html#react-组件之间的数据传递",a:"react-组件之间的数据传递"},"63.5":{t:"Vue 与 react 区别\r",p:`相同点：
都支持服务器渲染
都有虚拟 dom，组件化开发，通过 props 参数进行父子组件数据的传递，都实现 webcom ...`,l:"interview/frame/react.html#vue-与-react-区别",a:"vue-与-react-区别"},"63.6":{t:"请简述虚拟 dom 与 diff 算法\r",p:"\r",l:"interview/frame/react.html#请简述虚拟-dom-与-diff-算法",a:"请简述虚拟-dom-与-diff-算法"},"63.7":{t:"对 React 组件的理解\r",p:"\r",l:"interview/frame/react.html#对-react-组件的理解",a:"对-react-组件的理解"},"63.8":{t:"调用 setState 之后发生了什么\r",p:"\r",l:"interview/frame/react.html#调用-setstate-之后发生了什么",a:"调用-setstate-之后发生了什么"},"63.9":{t:"react 生命周期函数\r",p:"\r",l:"interview/frame/react.html#react-生命周期函数",a:"react-生命周期函数"},"63.10":{t:"为什么虚拟 dom 会提高性能\r",p:"\r",l:"interview/frame/react.html#为什么虚拟-dom-会提高性能",a:"为什么虚拟-dom-会提高性能"},"63.11":{t:"(组件的)状态(state)和属性(props)之间有何不同\r",p:"\r",l:"interview/frame/react.html#组件的-状态-state-和属性-props-之间有何不同",a:"组件的-状态-state-和属性-props-之间有何不同"},"63.12":{t:"shouldComponentUpdate 是做什么的\r",p:"\r",l:"interview/frame/react.html#shouldcomponentupdate-是做什么的",a:"shouldcomponentupdate-是做什么的"},"63.13":{t:"react diff 原理\r",p:"\r",l:"interview/frame/react.html#react-diff-原理",a:"react-diff-原理"},"63.14":{t:"何为受控组件\r",p:"\r",l:"interview/frame/react.html#何为受控组件",a:"何为受控组件"},"63.15":{t:"React 中构建组件的方式\r",p:"\r",l:"interview/frame/react.html#react-中构建组件的方式",a:"react-中构建组件的方式"},"63.16":{t:"简述 flux 思想\r",p:"\r",l:"interview/frame/react.html#简述-flux-思想",a:"简述-flux-思想"},"63.17":{t:"React 脚手架\r",p:"\r",l:"interview/frame/react.html#react-脚手架",a:"react-脚手架"},"63.18":{t:"应该在 React 组件的何处发起 Ajax 请求\r",p:"\r",l:"interview/frame/react.html#应该在-react-组件的何处发起-ajax-请求",a:"应该在-react-组件的何处发起-ajax-请求"},"63.19":{t:"何为高阶组件(higher order component)？\r",p:"\r",l:"interview/frame/react.html#何为高阶组件-higher-order-component",a:"何为高阶组件-higher-order-component"},"63.20":{t:"其他\r",p:"\r",l:"interview/frame/react.html#其他",a:"其他"},"63.21":{t:"Typescript 是什么\r",p:"\r",l:"interview/frame/react.html#typescript-是什么",a:"typescript-是什么"},"63.22":{t:"Typescript 与 javascript 的优势\r",p:"\r",l:"interview/frame/react.html#typescript-与-javascript-的优势",a:"typescript-与-javascript-的优势"},"63.23":{t:"Webpack 与 gulp 区别\r",p:"\r",l:"interview/frame/react.html#webpack-与-gulp-区别",a:"webpack-与-gulp-区别"},"63.24":{t:"请简述 webpack 中的 loaders 与 plugin 的区别\r",p:"\r",l:"interview/frame/react.html#请简述-webpack-中的-loaders-与-plugin-的区别",a:"请简述-webpack-中的-loaders-与-plugin-的区别"},"63.25":{t:"怎么提升页面性能？性能优化有哪些\r",p:"\r",l:"interview/frame/react.html#怎么提升页面性能-性能优化有哪些",a:"怎么提升页面性能-性能优化有哪些"},"63.26":{t:"Node 使用来做什么的\r",p:"\r",l:"interview/frame/react.html#node-使用来做什么的",a:"node-使用来做什么的"},"63.27":{t:"说一下 webpack 的打包原理\r",p:"\r",l:"interview/frame/react.html#说一下-webpack-的打包原理",a:"说一下-webpack-的打包原理"},"63.28":{t:"Commonjs ES6 模块区别\r",p:"\r",l:"interview/frame/react.html#commonjs-es6-模块区别",a:"commonjs-es6-模块区别"},"63.29":{t:"Git 如何使用/常用指令有哪些\r",p:"\r",l:"interview/frame/react.html#git-如何使用-常用指令有哪些",a:"git-如何使用-常用指令有哪些"},"63.30":{t:"你的项目比较小为什么还是用 vue 全家桶\r",p:"\r",l:"interview/frame/react.html#你的项目比较小为什么还是用-vue-全家桶",a:"你的项目比较小为什么还是用-vue-全家桶"},"63.31":{t:"什么是 cors\r",p:"\r",l:"interview/frame/react.html#什么是-cors",a:"什么是-cors"},"63.32":{t:"说一下对 websocked 的理解\r",p:"\r",l:"interview/frame/react.html#说一下对-websocked-的理解",a:"说一下对-websocked-的理解"},"63.33":{t:"后台传递过来的数据是那些\r",p:"\r",l:"interview/frame/react.html#后台传递过来的数据是那些",a:"后台传递过来的数据是那些"},"63.34":{t:"谈谈 Ajax，fetch，axios 的区别",p:"",l:"interview/frame/react.html#谈谈-ajax-fetch-axios-的区别",a:"谈谈-ajax-fetch-axios-的区别"},"64.0":{t:"# Vue\r",p:"\r",l:"interview/frame/vue.html",a:"vue"},"64.1":{t:"vue的核心\r",p:`Vue是一套构建用户界面的渐进式、自底向上增量开发的 MVVM 模型的框架， vue的核心只关注视图层
`,l:"interview/frame/vue.html#vue的核心",a:"vue的核心"},"64.2":{t:"核心思想\r",p:`
数据驱动(视图内容随着数据的改变而改变)
组件话(可以增加代码复用性、可维护性、可测试性，提高了开发效率， 方便重复使用， ...`,l:"interview/frame/vue.html#核心思想",a:"核心思想"},"64.3":{t:"Vue中的单项数据流\r",p:`父级 prop 的更新都会向下流动到子组件中，每次父组件发生更新，子组件所有的 prop 都会刷新为最新的值
数据从父组件传 ...`,l:"interview/frame/vue.html#vue中的单项数据流",a:"vue中的单项数据流"},"64.4":{t:"Vue中常用的修饰符\r",p:`


修饰符
功能




修饰符



.lazy
改变后触发，光标离开 input 输入框的时候值才会改变


.num ...`,l:"interview/frame/vue.html#vue中常用的修饰符",a:"vue中常用的修饰符"},"64.5":{t:"`v-text`、`}`、`v-html`区别\r",p:`
`,l:"interview/frame/vue.html#",a:""},"64.6":{t:"` }`\r",p:`模版插值{ { } } 将数据解析成纯文本，并不能显示输出 html
`,l:"interview/frame/vue.html#",a:""},"64.7":{t:"`v-text`\r",p:"v-text 指令操作网页元素的恶纯文本内容，与 {{}}等价， 只是 v-text叫指令， {{}}叫模版插值 {{}}是 ...",l:"interview/frame/vue.html#v-text",a:"v-text"},"64.8":{t:"`v-html`\r",p:`v-html可以渲染输出 html
`,l:"interview/frame/vue.html#v-html",a:"v-html"},"64.9":{t:"`v-on`是否可以绑定多个方法\r",p:`可以的， 如果绑定多个事件，可以使用键值对形式：事件类型: 事件名；
如果绑定的是多个相同事件， 直接使用逗号分隔就可以
`,l:"interview/frame/vue.html#v-on-是否可以绑定多个方法",a:"v-on-是否可以绑定多个方法"},"64.10":{t:"Vue `v-for`循环中 `key`的作用\r",p:"设置的 key 是保证唯一性， Vue在执行时，会对节点进行检查，如果没有key值，那么vue检查到这里有 DOM 节点，就 ...",l:"interview/frame/vue.html#vue-v-for-循环中-key-的作用",a:"vue-v-for-循环中-key-的作用"},"64.11":{t:"计算属性(`computed`)\r",p:`计算属性是用来声明式地描述一个值依赖了其他的值，当它依赖的这个值发生改变时，就更新 DOM
当在模版中把数据绑定到一个计算属 ...`,l:"interview/frame/vue.html#计算属性-computed",a:"计算属性-computed"},"64.12":{t:"Vue中跳转路由的方式\r",p:`Vue中路由跳转的方式有两种，分别是 声明式 和 编程式
用 js 方式进行跳转的叫做编程式导航 this.$router. ...`,l:"interview/frame/vue.html#vue中跳转路由的方式",a:"vue中跳转路由的方式"},"64.13":{t:"Vue 跨域解决方案\r",p:`
后台更改header
使用 http-proxy-middleware (配置代理服务器的中间件)

`,l:"interview/frame/vue.html#vue-跨域解决方案",a:"vue-跨域解决方案"},"64.14":{t:"Vue 生命周期\r",p:`
vue生命周期

`,l:"interview/frame/vue.html#vue-生命周期",a:"vue-生命周期"},"64.15":{t:"Vue 路由的实现\r",p:`vue路由有三种模式，分别是 hash、history、abstract

hash:  使用 URL的 hash值来做路由 ...`,l:"interview/frame/vue.html#vue-路由的实现",a:"vue-路由的实现"},"64.16":{t:"基本原理\r",p:"useRouter() 中的 push 和 replace 是手动调用内部路径切换方法 transitionTo，go、ba ...",l:"interview/frame/vue.html#基本原理",a:"基本原理"},"64.17":{t:"Vue 路由模式 hash 和 history\r",p:"\r",l:"interview/frame/vue.html#vue-路由模式-hash-和-history",a:"vue-路由模式-hash-和-history"},"64.18":{t:"hash\r",p:`hash 模式是用 createWebHashHistory() 创建的
import { createRouter, cr ...`,l:"interview/frame/vue.html#hash",a:"hash"},"64.19":{t:"history\r",p:`history就是 HTML5模式， 使用createWebHistory()创建 HTML5 模式，推荐使用这个模式
im ...`,l:"interview/frame/vue.html#history",a:"history"},"64.20":{t:"两者区别\r",p:`

History模式优势
pushState() 设置的新URL可以与当前URL同源的URL，而 Hash只能修改#的部分 ...`,l:"interview/frame/vue.html#两者区别",a:"两者区别"},"64.21":{t:"Vue 路由传参的两种方式，params 和 query方式与区别\r",p:"\r",l:"interview/frame/vue.html#vue-路由传参的两种方式-params-和-query方式与区别",a:"vue-路由传参的两种方式-params-和-query方式与区别"},"64.22":{t:"路由参数(params)\r",p:"路由参数通常用于标识性的信息，如资源ID、用户ID等，他们直接包含在路由的路径中，这些参数作为路径的一部分，提供了对特定资源 ...",l:"interview/frame/vue.html#路由参数-params",a:"路由参数-params"},"64.23":{t:"查询参数(query)\r",p:"查询参数适合用于传递非标识性信息，如筛选条件、搜索关键字、分页信息等，他们不包含在路由的路径中，而是作为键值对附加到URL后 ...",l:"interview/frame/vue.html#查询参数-query",a:"查询参数-query"},"64.24":{t:"何时使用\r",p:`

params
标识性信息：当需要传递标识性信息，如用户ID，帖子ID等，使用路由参数更合适
确保信息直接可见：如果希望用 ...`,l:"interview/frame/vue.html#何时使用",a:"何时使用"},"64.25":{t:"Vue 数据绑定的几种方式\r",p:"\r",l:"interview/frame/vue.html#vue-数据绑定的几种方式",a:"vue-数据绑定的几种方式"},"64.26":{t:"插值(interpolation)\r",p:`插值是最基本的数据绑定方式之一，使用双大括号{{}}将变量插入到模版中


&lt;template&gt;
  &lt;p ...`,l:"interview/frame/vue.html#插值-interpolation",a:"插值-interpolation"},"64.27":{t:"绑定属性(Binding Attributes)\r",p:`使用 v-bind 指令可以将一个变量的值绑定到HTML元素属性上


&lt;template&gt;
  &lt;div ...`,l:"interview/frame/vue.html#绑定属性-binding-attributes",a:"绑定属性-binding-attributes"},"64.28":{t:"动态类绑定(Dynamic Class Binding)\r",p:`使用v-bind:class可以根据条件动态绑定类名


&lt;template&gt;
  &lt;div v-bind ...`,l:"interview/frame/vue.html#动态类绑定-dynamic-class-binding",a:"动态类绑定-dynamic-class-binding"},"64.29":{t:"动态样式绑定(Dynamic Style Binding)\r",p:`使用 v-bind:style 可以根据条件动态绑定样式


&lt;template&gt;
  &lt;div&gt;
 ...`,l:"interview/frame/vue.html#动态样式绑定-dynamic-style-binding",a:"动态样式绑定-dynamic-style-binding"},"64.30":{t:"表单输入绑定(Form input Binding)\r",p:`使用v-model 可以实现表单输入和数据的双向绑定


&lt;template&gt;
&lt;form&gt;
  & ...`,l:"interview/frame/vue.html#表单输入绑定-form-input-binding",a:"表单输入绑定-form-input-binding"},"64.31":{t:"事件绑定(Event Binding)\r",p:`使用 v-on 可以将 DOM 事件绑定到 Vue 实例中的方法。


&lt;template&gt;
  &lt;but ...`,l:"interview/frame/vue.html#事件绑定-event-binding",a:"事件绑定-event-binding"},"64.32":{t:"Vue 的路由钩子函数/路由守卫有哪些\r",p:"\r",l:"interview/frame/vue.html#vue-的路由钩子函数-路由守卫有哪些",a:"vue-的路由钩子函数-路由守卫有哪些"},"64.33":{t:"全局路由钩子(Global Before Guards)\r",p:`beforeEach(to. from, next) 在路由改变前触发，常用于全局的身份验证检查等
const router ...`,l:"interview/frame/vue.html#全局路由钩子-global-before-guards",a:"全局路由钩子-global-before-guards"},"64.34":{t:"路由独享守卫(Per-Route Guards)\r",p:`beforeEnter(to, from, next)：在某个路由独享的守卫。
`,l:"interview/frame/vue.html#路由独享守卫-per-route-guards",a:"路由独享守卫-per-route-guards"},"64.35":{t:"组件内守卫(In-Component Guards)\r",p:`beforeRouteEnter(to, from, next)：在路由进入的时候，但是在组件渲染之前被调用。
before ...`,l:"interview/frame/vue.html#组件内守卫-in-component-guards",a:"组件内守卫-in-component-guards"},"64.36":{t:"Vue 中如何自定义指令\r",p:"vue中， 除了内置的一些列指令(如v-model和 v-show)之外， 还可以注册自定义的指令(Custom Direc ...",l:"interview/frame/vue.html#vue-中如何自定义指令",a:"vue-中如何自定义指令"},"64.37":{t:"组成\r",p:`一个自定义指令是由一个包含类似组件生命周期钩子的对象来定义，钩子函数会接收到指令所绑定元素作为其参数


&lt;templ ...`,l:"interview/frame/vue.html#组成",a:"组成"},"64.38":{t:"setup标签版本\r",p:`setup标签版本传递数据的方法还是跟函数版本一致，只是写法上有所不同：
父组件


&lt;template&gt;
   ...`,l:"interview/frame/vue.html#setup标签版本",a:"setup标签版本"},"64.39":{t:"子组件传递给父组件参数\r",p:"\r",l:"interview/frame/vue.html#子组件传递给父组件参数",a:"子组件传递给父组件参数"},"64.40":{t:"setup函数 子组件传参版本\r",p:`子组件传值

setup函数中 context 的 emit 用于传递事件给父组件
第一个参数要为传递的参数名，第二个参数为 ...`,l:"interview/frame/vue.html#setup函数-子组件传参版本",a:"setup函数-子组件传参版本"},"64.41":{t:"setup标签 子组件传参版本\r",p:`子组件


&lt;template&gt;
  &lt;div class=&quot;box&quot;&gt;
    ...`,l:"interview/frame/vue.html#setup标签-子组件传参版本",a:"setup标签-子组件传参版本"},"64.42":{t:"Vue 插槽(slot)\r",p:"简单来说就是子组件中的提供给父组件使用的一个坑位，用&lt;slot&gt;&lt;/slot&gt;表示， 父组件可以在这 ...",l:"interview/frame/vue.html#vue-插槽-slot",a:"vue-插槽-slot"},"64.43":{t:"默认内容\r",p:`在父组件中没有提供任何插槽内容的时候， 我们是可以为子组件的插槽指定默认内容的， 比如:
子组件
&lt;template& ...`,l:"interview/frame/vue.html#默认内容",a:"默认内容"},"64.44":{t:"具名插槽\r",p:"很多时候一个插槽满足不了需求， 需要多个插槽，于是就有了具名插槽， 比如带有name属性的插槽&lt;slot name=& ...",l:"interview/frame/vue.html#具名插槽",a:"具名插槽"},"64.45":{t:"动态插槽\r",p:"动态插槽就是插槽名变成了变量的形式，我们可以随时修改这个变量从而展示不同的效果。它的写法是v-slot:[变量名] 或者缩写 ...",l:"interview/frame/vue.html#动态插槽",a:"动态插槽"},"64.46":{t:"作用域插槽\r",p:`插槽也可以像组件传递 props 那样， 在slot标签绑定属性从而传递给父组件中的插槽内容
子组件
&lt;templat ...`,l:"interview/frame/vue.html#作用域插槽",a:"作用域插槽"},"64.47":{t:"具名作用域插槽\r",p:`具名作用域插槽接收参数的方式是通过template的标签的指令v-slot的值获取的
&lt;!-- 父组件 --&gt;
 ...`,l:"interview/frame/vue.html#具名作用域插槽",a:"具名作用域插槽"},"64.48":{t:"Vue watch\r",p:`vue watch 用于侦听一个或者多个响应式数据源，并在数据源变化时调用所给的回调函数
`,l:"interview/frame/vue.html#vue-watch",a:"vue-watch"},"64.49":{t:"类型\r",p:`// 侦听单个来源
function watch&lt;T&gt;(
  source: WatchSource&lt;T& ...`,l:"interview/frame/vue.html#类型",a:"类型"},"64.50":{t:"详细信息\r",p:`watch() 默认是懒侦听的， 即仅在侦听起源发生变化时才执行回调函数
第一个参数是侦听器的源，这个源来自以下几种

一个 ...`,l:"interview/frame/vue.html#详细信息",a:"详细信息"},"64.51":{t:"示例\r",p:`
侦听一个 getter 函数

const state = reactive({ count: 0 })
watch(
  ...`,l:"interview/frame/vue.html#示例",a:"示例"},"64.52":{t:"计算属性与watch的区别\r",p:`watch 和 computed 都是 vue2/vue3中用于监听数据变化的属性


功能: computed 是计算属性 ...`,l:"interview/frame/vue.html#计算属性与watch的区别",a:"计算属性与watch的区别"},"64.53":{t:"Vue 首屏加载慢的原因，怎么解决的，白屏时间怎么检测，怎么解决白屏问题\r",p:`
首页白屏

`,l:"interview/frame/vue.html#vue-首屏加载慢的原因-怎么解决的-白屏时间怎么检测-怎么解决白屏问题",a:"vue-首屏加载慢的原因-怎么解决的-白屏时间怎么检测-怎么解决白屏问题"},"64.54":{t:"Vue中 Route 与 router 区别\r",p:`Vue中 Route 与 Router 依然表示路由相关的概念，但它们功能不尽相同


Route(路由)
Route 表示 ...`,l:"interview/frame/vue.html#vue中-route-与-router-区别",a:"vue中-route-与-router-区别"},"64.55":{t:"Vue 路由懒加载（按需加载路由）\r",p:"我们可以使用 defineAsyncComponent 函数来定义异步组件，该函数接收一个返回值为Promise的函数，用于 ...",l:"interview/frame/vue.html#vue-路由懒加载-按需加载路由",a:"vue-路由懒加载-按需加载路由"},"64.56":{t:"Vue3.0 是如何变得更快的？（底层，源码）\r",p:`Vue3在性能上进行了一系列的优化和改进，主要通过以下几个方面实现了更好的性能


Proxy 取代了 Object.def ...`,l:"interview/frame/vue.html#vue3-0-是如何变得更快的-底层-源码",a:"vue3-0-是如何变得更快的-底层-源码"},"64.57":{t:"Vuex\r",p:`!Vuex
Vuex 是一个专门为vue.js应用程序开发的状态管理模式，通过创建一个集中的数据存储，方便程序中的所有组件进 ...`,l:"interview/frame/vue.html#vuex",a:"vuex"},"65.0":{t:"# 面试相关问题\r",p:`!面试相关
`,l:"interview/index.html",a:"面试相关问题"},"66.0":{t:"# css 拉斯维加斯场馆3D数字动画\r",p:`
实际效果

&lt;TextAnimation/&gt;
&lt;!-- &lt;TextAnimation3D/&gt; ...`,l:"native/css/3D数字动画.html",a:"css-拉斯维加斯场馆3d数字动画"},"67.0":{t:"# CSS box-shdow 示例\r",p:`
实际效果

&lt;BoxShadow/&gt;

原文链接: box-shadow属性高级用法

`,l:"native/css/css-box-shdow.html",a:"css-box-shdow-示例"},"68.0":{t:"# CSS一些加载样式\r",p:`\r
\r
\r`,l:"native/css/css一些加载样式.html",a:"css一些加载样式"},"68.1":{t:"动画效果一\r",p:`&lt;Spinner/&gt;

HTML

&lt;div class=&quot;spinner&quot;&gt;
 ...`,l:"native/css/css一些加载样式.html#动画效果一",a:"动画效果一"},"68.2":{t:"动画效果二\r",p:`&lt;TurnOverCSS/&gt;

HTML

  &lt;div class=&quot;turn-over&qu ...`,l:"native/css/css一些加载样式.html#动画效果二",a:"动画效果二"},"68.3":{t:"动画效果三\r",p:`&lt;ScaleCSS/&gt;

HTML

  &lt;div class=&quot;scale-style&quo ...`,l:"native/css/css一些加载样式.html#动画效果三",a:"动画效果三"},"68.4":{t:"动画效果四\r",p:`&lt;CubeRotation/&gt;

HTML

  &lt;div class=&quot;cube-roate& ...`,l:"native/css/css一些加载样式.html#动画效果四",a:"动画效果四"},"68.5":{t:"动画效果五\r",p:`&lt;DotRoate/&gt;

HTML

  &lt;div class=&quot;dot-rotate&quot ...`,l:"native/css/css一些加载样式.html#动画效果五",a:"动画效果五"},"68.6":{t:"动画效果六\r",p:`&lt;ScaleLoading/&gt;

HTML

  &lt;div class=&quot;scale-loadi ...`,l:"native/css/css一些加载样式.html#动画效果六",a:"动画效果六"},"68.7":{t:"动画效果七\r",p:`&lt;GradientRotate/&gt;

HTML

  &lt;div class=&quot;gradient- ...`,l:"native/css/css一些加载样式.html#动画效果七",a:"动画效果七"},"68.8":{t:"动画效果八\r",p:`&lt;CircleLoading/&gt;

HTML

&lt;div class=&quot;circle&quot; ...`,l:"native/css/css一些加载样式.html#动画效果八",a:"动画效果八"},"68.9":{t:"动画样式九\r",p:`&lt;Diverge/&gt;

HTML

&lt;template&gt;
  &lt;div class=&quot ...`,l:"native/css/css一些加载样式.html#动画样式九",a:"动画样式九"},"68.10":{t:"动画效果十\r",p:`&lt;RotationContraction/&gt;

HTML

&lt;template&gt;
  &lt;div ...`,l:"native/css/css一些加载样式.html#动画效果十",a:"动画效果十"},"68.11":{t:"动画效果11 旋转收缩\r",p:`&lt;Contraction/&gt;

HTML

&lt;template&gt;
  &lt;div class=& ...`,l:"native/css/css一些加载样式.html#动画效果11-旋转收缩",a:"动画效果11-旋转收缩"},"68.12":{t:"动画效果12 动态位置\r",p:`&lt;Moving/&gt;

HTML

&lt;template&gt;
  &lt;div class=&quot; ...`,l:"native/css/css一些加载样式.html#动画效果12-动态位置",a:"动画效果12-动态位置"},"68.13":{t:"动画效果13\r",p:`&lt;RiceRotate/&gt;

HTML

&lt;template&gt;
  &lt;div class=&q ...`,l:"native/css/css一些加载样式.html#动画效果13",a:"动画效果13"},"68.14":{t:"动画效果14\r",p:`&lt;MusicDance/&gt;

HTML

&lt;template&gt;
  &lt;div class=&q ...`,l:"native/css/css一些加载样式.html#动画效果14",a:"动画效果14"},"68.15":{t:"动画效果15\r",p:`&lt;TriangleBloom/&gt;

HTML

&lt;template&gt;
  &lt;div class ...`,l:"native/css/css一些加载样式.html#动画效果15",a:"动画效果15"},"69.0":{t:"# CSS权重规则\r",p:`

优先级
浏览器通过优先级来判断哪些属性值与一个元素最为相关，从而在该元素上应用这些属性值。优先级是基于不同种类选择器组成 ...`,l:"native/css/css权重规则.html",a:"css权重规则"},"70.0":{t:"# CSS背景动画\r",p:`
实际效果

&lt;BackgroundDemo/&gt;

代码块



&lt;template&gt;
  &lt; ...`,l:"native/css/css背景动画.html",a:"css背景动画"},"71.0":{t:"# 方块跳动动画\r",p:`
实际效果

&lt;BlockBounce/&gt;

原文链接：CSS 实现跳动的方块动画

`,l:"native/css/css跳动方块.html",a:"方块跳动动画"},"72.0":{t:"# 一些原生CSS样式与概念\r",p:`!CSS
`,l:"native/css/index.html",a:"一些原生css样式与概念"},"73.0":{t:"# 炫目动画\r",p:`&lt;DazzlingCss/&gt;
`,l:"native/css/炫目动画.html",a:"炫目动画"},"73.1":{t:"代码实现\r",p:`  &lt;template&gt;
    &lt;div class=&quot;partial-container&q ...`,l:"native/css/炫目动画.html#代码实现",a:"代码实现"},"74.0":{t:"# JS中call apply bind 的区分\r",p:`在原生js中会有三个很常见的函数，call,apply,bind
他们的作用就是改变当前函数的this指针，
但是细微来说他 ...`,l:"native/javascript/call-apply-bind的区别.html",a:"js中call-apply-bind-的区分"},"74.1":{t:"总结\r",p:"call和apply都是改变上下文中的this并立即执行这个函数，bind方法可以让对应的函数想什么时候调就什么时候调用，并 ...",l:"native/javascript/call-apply-bind的区别.html#总结",a:"总结"},"75.0":{t:"# Cookie (document.cookie)\r",p:`cookie是直接存储在浏览器的一小串数据， 它们是HTTP协议的一部分，由 [RFC 6265][1] 规范定义。
Coo ...`,l:"native/javascript/cookie参数.html",a:"cookie-document-cookie"},"75.1":{t:"从document.cookie中读取\r",p:`你的浏览器是否存储了本网站的任何cookie？ 让我们来看看：
// 在javascript.info 我们使用谷歌分析来统 ...`,l:"native/javascript/cookie参数.html#从document-cookie中读取",a:"从document-cookie中读取"},"75.2":{t:"写入document.cookie\r",p:`我们可以写入document.cookie。但这不是一个数据属性， 他是一个[访问器][2]。对其的赋值操作会被特殊处理。
 ...`,l:"native/javascript/cookie参数.html#写入document-cookie",a:"写入document-cookie"},"75.3":{t:"path\r",p:`
path=/mypath

url路径前缀必须是绝对路径。他使得该路径下的页面可以访问该cookie。默认为当前路径。
如 ...`,l:"native/javascript/cookie参数.html#path",a:"path"},"75.4":{t:"domain\r",p:`
domain=site.com
domain控制了可访问cookie的域。但是在实际中，有一些限制。 我们无法设置任何域。 ...`,l:"native/javascript/cookie参数.html#domain",a:"domain"},"75.5":{t:"expires  max-age\r",p:"默认情况下， 如果一个cookie没有设置这两个参数中的任何一个， 那么在关闭浏览器后，他就会消失。此类cookie被称为“ ...",l:"native/javascript/cookie参数.html#expires-max-age",a:"expires-max-age"},"75.6":{t:"secure\r",p:`
secure
cookiey应该只能被通过https传输。

`,l:"native/javascript/cookie参数.html#secure",a:"secure"},"76.0":{t:"# ES6 数据类型的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html",a:"es6-数据类型的扩展"},"76.1":{t:"字符串类型的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html#字符串类型的扩展",a:"字符串类型的扩展"},"76.2":{t:"模版字符串\r",p:`使用反引号(\`)包裹的字符串, 支持多行文本和嵌入表达式
const name = 'world'
const str =  ...`,l:"native/javascript/ES6数据类型的扩展.html#模版字符串",a:"模版字符串"},"76.3":{t:"模版标签函数\r",p:`允许定义自定义的字符串处理函数,以处理模版字符串
const customTag = (strings, ...values ...`,l:"native/javascript/ES6数据类型的扩展.html#模版标签函数",a:"模版标签函数"},"76.4":{t:"`String.prototype.includes()`\r",p:`判断字符串是否包含指定字符, 返回布尔值
const str = 'hello world'

console.log(st ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-includes",a:"string-prototype-includes"},"76.5":{t:"`String.prototype.startWith()`/`String.prototype.endWith()`\r",p:`判断字符串是否以指定的字符开始/结束, 返回布尔值
const str = 'hello world'

// 开始
con ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-startwith-string-prototype-endwith",a:"string-prototype-startwith-string-prototype-endwith"},"76.6":{t:"`String.propotype.repeat()`\r",p:`将字符串指定次数，返回新的字符串
const str = 'hello world'

console.log(str.re ...`,l:"native/javascript/ES6数据类型的扩展.html#string-propotype-repeat",a:"string-propotype-repeat"},"76.7":{t:"`String.prototype.fromCodePoint()`\r",p:`根据给定的码点创建一个字符串，它可以将一个或者多个码点转换为相应的字符
console.log(String.formCod ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-fromcodepoint",a:"string-prototype-fromcodepoint"},"76.8":{t:"`String.prototype.raw()`\r",p:`用于获取一个模版字符串的原始字符串形式，忽略其中的转义字符
const path = 'C:\\\\Users\\\\hhh\\\\Do ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-raw",a:"string-prototype-raw"},"76.9":{t:"`String.prototype.codePointAt()`\r",p:`用于返回指定位置的字符的码点
const str = 'abc'

console.log(str.codePointAt( ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-codepointat",a:"string-prototype-codepointat"},"76.10":{t:"`String.prototype.normalize()`\r",p:`用于将字符串的Unicode 标准化形式，它主要用于处理 Unicode 字符串的表达形式
const str = 'c\\u ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-normalize",a:"string-prototype-normalize"},"76.11":{t:"数组类型的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html#数组类型的扩展",a:"数组类型的扩展"},"76.12":{t:"扩展运算符(`...`)\r",p:`扩展运算符类似 rest 参数的逆运算， 将一个数组转为用逗号分隔的参数序列
console.log(...[1, 2, 3 ...`,l:"native/javascript/ES6数据类型的扩展.html#扩展运算符",a:"扩展运算符"},"76.13":{t:"`Array.prototype.from`\r",p:"该方法用于将两类对象转为真正的数组：类似数组的对象（array-like object）和可遍历（iterable）的对象（ ...",l:"native/javascript/ES6数据类型的扩展.html#array-prototype-from",a:"array-prototype-from"},"76.14":{t:"`Array.prototype.of`\r",p:`根据传入的参数创建一个新数组
const arr = Array.of(1, 2, 3)
console.log(arr)  ...`,l:"native/javascript/ES6数据类型的扩展.html#array-prototype-of",a:"array-prototype-of"},"76.15":{t:"`Array.prototype.find()`、`Array.prototype.findIndex()`\r",p:`find() 方法 返回数组中满足条件的第一个元素
findIndex()方法 返回数组中满足条件的第一个元素的索引
//  ...`,l:"native/javascript/ES6数据类型的扩展.html#array-prototype-find-、-array-prototype-findindex",a:"array-prototype-find-、-array-prototype-findindex"},"76.16":{t:"`Array.prototype.fill()`\r",p:`使用固定值填充一个数组中从起始索引（默认为 0）到终止索引（默认为 array.length）内的全部元素
const ar ...`,l:"native/javascript/ES6数据类型的扩展.html#array-prototype-fill",a:"array-prototype-fill"},"76.17":{t:"`Array.prototype.copyWithin()`\r",p:`用于将数组中的一部分元素复制到指定位置，覆盖原有的元素
const arr = [1, 2, 3, 4, 5]
arr.co ...`,l:"native/javascript/ES6数据类型的扩展.html#array-prototype-copywithin",a:"array-prototype-copywithin"},"76.18":{t:"`Array.prototype.keys()`、`Array.prototype.values()`、`Array.prototype.entries()`\r",p:"ES6 提供三个新的方法——entries()，keys()和values()——用于遍历数组。它们都返回一个遍历器对象,  ...",l:"native/javascript/ES6数据类型的扩展.html#array-prototype-keys-、-array-prototype-values-、-array-prototype-entries",a:"array-prototype-keys-、-array-prototype-values-、-array-prototype-entries"},"76.19":{t:"对象类型的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html#对象类型的扩展",a:"对象类型的扩展"},"76.20":{t:"属性的简洁表示法\r",p:`ES6 允许在大括号里面，直接写入变量和函数，作为对象的属性和方法，这样的书写更加简洁
const foo = 'bar'
 ...`,l:"native/javascript/ES6数据类型的扩展.html#属性的简洁表示法",a:"属性的简洁表示法"},"76.21":{t:"属性名表达式\r",p:`Javascript 定义对象的属性， 有两种方法
// 方法一
obj.foo = true

// 方法二
obj['a ...`,l:"native/javascript/ES6数据类型的扩展.html#属性名表达式",a:"属性名表达式"},"76.22":{t:"`Object.is(value1, value2)`\r",p:`用于比较两个值是否相同
与&quot;===&quot;操作符的行为类似，但有两个区别：一是Object.is(NaN, N ...`,l:"native/javascript/ES6数据类型的扩展.html#object-is-value1-value2",a:"object-is-value1-value2"},"76.23":{t:"`Object.assign(target, ...sources)`\r",p:"将一个或多个源对象的属性复制到目标对象中。它返回目标对象。如果多个源对象具有相同的属性，则后面的对象的属性将覆盖前面的对象的 ...",l:"native/javascript/ES6数据类型的扩展.html#object-assign-target-sources",a:"object-assign-target-sources"},"76.24":{t:"`Object.getPrototypeOf(obj)`\r",p:`用于获取对象的原型。它返回指定对象的原型。
const obj = {};
const prototype = Object ...`,l:"native/javascript/ES6数据类型的扩展.html#object-getprototypeof-obj",a:"object-getprototypeof-obj"},"76.25":{t:"`Object.setPrototypeOf(obj, prototype)`\r",p:`用于设置对象的原型。它将指定对象的原型设置为另一个对象或null。
const obj = {};
const protot ...`,l:"native/javascript/ES6数据类型的扩展.html#object-setprototypeof-obj-prototype",a:"object-setprototypeof-obj-prototype"},"76.26":{t:"正则的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html#正则的扩展",a:"正则的扩展"},"76.27":{t:"`RegExp构造函数的扩展`\r",p:"在ES6之前，RegExp构造函数不允许使用第二个参数添加修饰符。在ES6中，如果RegExp构造函数第一个参数是一个正则对 ...",l:"native/javascript/ES6数据类型的扩展.html#regexp构造函数的扩展",a:"regexp构造函数的扩展"},"76.28":{t:"`Flags属性`\r",p:`用于返回正则表达式的修饰符
const regex = /abc/gi;
console.log(regex.flags); ...`,l:"native/javascript/ES6数据类型的扩展.html#flags属性",a:"flags属性"},"76.29":{t:"`u修饰符`\r",p:`用于处理大于\\uFFFF的Unicode字符。
console.log(/^\\S$/.test('𠮷'));// fals ...`,l:"native/javascript/ES6数据类型的扩展.html#u修饰符",a:"u修饰符"},"76.30":{t:"`y修饰符`\r",p:`也称为“粘连”修饰符，用于指定只从目标字符串的当前位置开始匹配
const regex = /abc/y;
console. ...`,l:"native/javascript/ES6数据类型的扩展.html#y修饰符",a:"y修饰符"},"76.31":{t:"`RegExp.prototype.sticky`/`RegExp.prototype.unicode`\r",p:`表示是否有y修饰符/表示是否有u修饰符
console.log(/hello\\d/y.sticky);//true
cons ...`,l:"native/javascript/ES6数据类型的扩展.html#regexp-prototype-sticky-regexp-prototype-unicode",a:"regexp-prototype-sticky-regexp-prototype-unicode"},"76.32":{t:"正则方法调用变更\r",p:"字符串对象的match()、replace()、search()、split()内部调用转为调用RegExp实例对应的Reg ...",l:"native/javascript/ES6数据类型的扩展.html#正则方法调用变更",a:"正则方法调用变更"},"76.33":{t:"函数类型的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html#函数类型的扩展",a:"函数类型的扩展"},"76.34":{t:"基本用法\r",p:`ES6 之前，不能直接为函数的参数指定默认值，只能采用变通的方法。
function func(x, y) {
  y =  ...`,l:"native/javascript/ES6数据类型的扩展.html#基本用法",a:"基本用法"},"76.35":{t:"运算符的扩展\r",p:"\r",l:"native/javascript/ES6数据类型的扩展.html#运算符的扩展",a:"运算符的扩展"},"76.36":{t:"ES6 新增了一个指数运算符(`**`)\r",p:`2 2 // 4
2 3 // 8

这个运算符的一个特点是右结合，而不是常见的左结合。多个指数运算符连用时，是从最右边开始 ...`,l:"native/javascript/ES6数据类型的扩展.html#es6-新增了一个指数运算符",a:"es6-新增了一个指数运算符"},"77.0":{t:"# ES6新特性(一)(常用)\r",p:"ES是ECMAScript的缩写， 也就是JavaScript的标准化规范，ECMAScript是一种由 Ecma 国际组织 ...",l:"native/javascript/ES6新特性一.html",a:"es6新特性-一-常用"},"77.1":{t:"声明方式 `let`、`const`\r",p:"\r",l:"native/javascript/ES6新特性一.html#声明方式-let-、-const",a:"声明方式-let-、-const"},"77.2":{t:"let\r",p:"let 关键字用于声明一个块级作用域的变量。与 var 关键字的区别在于 let 声明的变量只在其所在的块级作用域中有效，而 ...",l:"native/javascript/ES6新特性一.html#let",a:"let"},"77.3":{t:"const\r",p:"const 关键字是用于声明一个常量，其值在声明后不能再被改变。 const 声明的变量也是块级作用域的，与 let 类似， ...",l:"native/javascript/ES6新特性一.html#const",a:"const"},"77.4":{t:"变量的解构赋值\r",p:"\r",l:"native/javascript/ES6新特性一.html#变量的解构赋值",a:"变量的解构赋值"},"77.5":{t:"数组的解构\r",p:`ES6 允许按照一定的模式，从数组和对象中提取值，对变量进行赋值， 这个过程被称为解构(Destructuring)
基本用 ...`,l:"native/javascript/ES6新特性一.html#数组的解构",a:"数组的解构"},"77.6":{t:"对象的解构\r",p:`
对象的解构与数组有一个重要的不同，数组的元素是按次序排列的，变量的取值由他们的位置决定； 而对象的属性没有次序，变量必须与 ...`,l:"native/javascript/ES6新特性一.html#对象的解构",a:"对象的解构"},"77.7":{t:"字符串的解构\r",p:`字符串也可以解构赋值， 这是因为在解构字符串的时候， 字符串被转化成了一个类数组对象
const [a, b, c, d,  ...`,l:"native/javascript/ES6新特性一.html#字符串的解构",a:"字符串的解构"},"77.8":{t:"数值与布尔值的解构\r",p:`解构赋值时候， 如果等号右边是数值和布尔值， 则先会转换为对象
let { toString: s } = 123
s == ...`,l:"native/javascript/ES6新特性一.html#数值与布尔值的解构",a:"数值与布尔值的解构"},"77.9":{t:"函数的参数的解构\r",p:`function add ([x, y]) {
  return x + y
}
add([1, 2]) // 3

上述示 ...`,l:"native/javascript/ES6新特性一.html#函数的参数的解构",a:"函数的参数的解构"},"77.10":{t:"函数参数默认值\r",p:"ES6 中， 我们可以在函数参数中设置默认值，这意味着如果调用函数的时候没有为参数提供有效值，它们将会使用默认值， 这对简化 ...",l:"native/javascript/ES6新特性一.html#函数参数默认值",a:"函数参数默认值"},"77.11":{t:"箭头函数\r",p:`
箭头函数具有简洁的语法，清晰的上下文，继承外部作用域的arguments等特点， 适合简化代码，避免this指向问题和明确 ...`,l:"native/javascript/ES6新特性一.html#箭头函数",a:"箭头函数"},"77.12":{t:"使用注意点\r",p:`
箭头函数没有自己的this对象
不可以当作构造函数，也就是说， 不可以对箭头函数使用new指令， 否则会抛出错误
不可以使 ...`,l:"native/javascript/ES6新特性一.html#使用注意点",a:"使用注意点"},"77.13":{t:"箭头函数与普通函数的区别\r",p:`
箭头函数是匿名函数，不能作为构造函数， 不能使用new
箭头函数不能绑定 arguments，要用 rest 参数 解决
 ...`,l:"native/javascript/ES6新特性一.html#箭头函数与普通函数的区别",a:"箭头函数与普通函数的区别"},"77.14":{t:"模版字符串\r",p:"模版字符串是ES6中引入的一种新的字符串语法，它允许字符串中插入变量或者表达式，而不需要使用字符串拼接符号。模版字符串使用反 ...",l:"native/javascript/ES6新特性一.html#模版字符串",a:"模版字符串"},"77.15":{t:"扩展操作符\r",p:"扩展操作符用于展开可迭代对象(数组、字符串等)，好比 rest 参数的逆运算，将其元素逐个展开，以便于在函数调用、数组字面量 ...",l:"native/javascript/ES6新特性一.html#扩展操作符",a:"扩展操作符"},"77.16":{t:"展开数组\r",p:`const arr1 = [1, 2, 3]
const arr2 = [...arr1, 4, 5] // [1, 2,  ...`,l:"native/javascript/ES6新特性一.html#展开数组",a:"展开数组"},"77.17":{t:"传递参数给函数\r",p:`
function sum(a, b, c) {
  return a + b + c
}
const numbers =  ...`,l:"native/javascript/ES6新特性一.html#传递参数给函数",a:"传递参数给函数"},"77.18":{t:"浅拷贝数组或对象\r",p:`const arr1 = [1, 2, 3]
const arr2 = [...arr1] // [1, 2, 3]

co ...`,l:"native/javascript/ES6新特性一.html#浅拷贝数组或对象",a:"浅拷贝数组或对象"},"77.19":{t:"对象字面量简化\r",p:"ES6引入了一种更简洁的方式来定义对象字面量，即ES6对象字面量语法。它提供了一种更方便的方法来定义和初始化对象属性。它是E ...",l:"native/javascript/ES6新特性一.html#对象字面量简化",a:"对象字面量简化"},"77.20":{t:"属性的简介表示法\r",p:`ES6中， 可以使用更简洁的语法来定义对象字面量， 还可以直接在对象字面量中定义方法，而不需要使用function关键字
c ...`,l:"native/javascript/ES6新特性一.html#属性的简介表示法",a:"属性的简介表示法"},"77.21":{t:"属性名表达式\r",p:`Javascript中 定义对象的属性， 有两种方法
// 方法一
obj.foo = true

// 方法二(ES6)
 ...`,l:"native/javascript/ES6新特性一.html#属性名表达式",a:"属性名表达式"},"77.22":{t:"类\r",p:"ES6引入了类（class）的概念，使得面向对象的编程变得更加直观和易于理解。类是一种蓝图或模板，用于创建具有相同属性和方法 ...",l:"native/javascript/ES6新特性一.html#类",a:"类"},"77.23":{t:"模块化\r",p:`

模块化是一种组织和管理JavaScript代码的方法，它将代码拆分为独立的模块，每个模块都有自己的作用域和功能。这种方法 ...`,l:"native/javascript/ES6新特性一.html#模块化",a:"模块化"},"78.0":{t:"# ES6新特性(二)(常用)\r",p:"\r",l:"native/javascript/ES6新特性二.html",a:"es6新特性-二-常用"},"78.1":{t:"proxy\r",p:"proxy 用于修改某些操作的默认行为，等同于在语言层面做出修改，所以属于一种 元编程(meta programming), ...",l:"native/javascript/ES6新特性二.html#proxy",a:"proxy"},"78.2":{t:"Proxy handler 支持的拦截操作\r",p:`


操作
功能
返回值




get(target, propKey, receiver)
拦截对象属性的读取，比如 p ...`,l:"native/javascript/ES6新特性二.html#proxy-handler-支持的拦截操作",a:"proxy-handler-支持的拦截操作"},"78.3":{t:"Proxy 实例的方法(常用)\r",p:"\r",l:"native/javascript/ES6新特性二.html#proxy-实例的方法-常用",a:"proxy-实例的方法-常用"},"78.4":{t:"get()\r",p:"get 方法用于拦截某个属性的读取操作，可以接收三个函数，依次为目标对象、属性名和proxy实例本身(严格地说，是操作行为所 ...",l:"native/javascript/ES6新特性二.html#get",a:"get"},"78.5":{t:"set()\r",p:"set 方法用来拦截某个属性的赋值操作, 可以接受四个参数，依次为目标对象、属性名、属性值和 Proxy 实例本身，其中最后 ...",l:"native/javascript/ES6新特性二.html#set",a:"set"},"78.6":{t:"apply()\r",p:`apply 方法拦截函数的调用、call 、apply 操作
apply 方法可以接受三个参数， 分别是目标对象、目标对象的 ...`,l:"native/javascript/ES6新特性二.html#apply",a:"apply"},"78.7":{t:"Reflect\r",p:"Reflect 是ES6 中操作对象而提供的新API, 是为了解决在ES6之前使用对象的操作存在一些不一致和不直观的地方，有 ...",l:"native/javascript/ES6新特性二.html#reflect",a:"reflect"},"78.8":{t:"常用方法\r",p:`

Reflect.apply(target, thisArg, args) 调用一个函数，并传入指定的参数


Refle ...`,l:"native/javascript/ES6新特性二.html#常用方法",a:"常用方法"},"78.9":{t:"利用 `Reflect` 和 `Proxy` 实现一个观察者模式\r",p:`// 创建一个观察者对象

class Observer {
  constructor () {
    this.lis ...`,l:"native/javascript/ES6新特性二.html#利用-reflect-和-proxy-实现一个观察者模式",a:"利用-reflect-和-proxy-实现一个观察者模式"},"78.10":{t:"Symbol\r",p:"在 ES6 之前对象属性名都是字符串，这容易造成属性名的冲突。 ES6 引入了一种新的原始数据类型 Symbol, 表示独一 ...",l:"native/javascript/ES6新特性二.html#symbol",a:"symbol"},"78.11":{t:"Map/WeakMap、Set/WeakSet 数据结构\r",p:"\r",l:"native/javascript/ES6新特性二.html#map-weakmap、set-weakset-数据结构",a:"map-weakmap、set-weakset-数据结构"},"78.12":{t:"Map\r",p:"Map是一种键值对的集合(Hash结构)， 它类似于对象， 但有一些不同之处。 Map的键可以是任意类型的值，包括对象和函数 ...",l:"native/javascript/ES6新特性二.html#map",a:"map"},"78.13":{t:"方法\r",p:`


方法
功能




\`\`get()\`
返回键值对


set()
添加键值对， 返回实例


delete()
删除键 ...`,l:"native/javascript/ES6新特性二.html#方法",a:"方法"},"78.14":{t:"WeekMap\r",p:`WeakMap 也是一种键值对的集合，但是只接受对象作为键，不接受其他类型的数据
WeakMap中的键是弱引用的，这意味着如 ...`,l:"native/javascript/ES6新特性二.html#weekmap",a:"weekmap"},"78.15":{t:"应用\r",p:`

存储 DOM 节点： DOM节点被移除时自动释放此成员键，不用担心这些节点从文档移除时会引发内存泄漏


部署私有属性: ...`,l:"native/javascript/ES6新特性二.html#应用",a:"应用"},"78.16":{t:"WeakMap 方法\r",p:`


方法
功能




get()
返回键值对


set()
添加键值对，返回实例


delete()
删除键值对，  ...`,l:"native/javascript/ES6新特性二.html#weakmap-方法",a:"weakmap-方法"},"78.17":{t:"Set\r",p:"Set 是一种不重复值的集合， 类似于数组，但是他的值是唯一的， 不会重复。 Set可以存储任意类型的值，报苦熬原始类型和对 ...",l:"native/javascript/ES6新特性二.html#set",a:"set"},"78.18":{t:"Set 方法\r",p:`|方法|功能|
|add()|添加值， 返回实例|
|delete()| 删除值， 返回布尔值|
|has()|检查值，返回 ...`,l:"native/javascript/ES6新特性二.html#set-方法",a:"set-方法"},"78.19":{t:"WeakSet\r",p:"WeakSet 是一种弱引用集合，它只能存储对象类型的值，并且这些对象是弱引用的，这意味着如果一个对象在 WeakSet 中 ...",l:"native/javascript/ES6新特性二.html#weakset",a:"weakset"},"78.20":{t:"WeakSet应用\r",p:`

储存DOM节点：DOM节点被移除时自动释放此成员键，不用担心这些节点从文档移除时会引发内存泄漏


临时存放一组对象或存 ...`,l:"native/javascript/ES6新特性二.html#weakset应用",a:"weakset应用"},"78.21":{t:"WeakSet  方法\r",p:`|方法|功能|
|add()|添加值， 返回实例|
|delete()| 删除值， 返回布尔值|
|has()|检查值，返回 ...`,l:"native/javascript/ES6新特性二.html#weakset-方法",a:"weakset-方法"},"78.22":{t:"迭代器(Iterator) 和 for...of循环\r",p:"\r",l:"native/javascript/ES6新特性二.html#迭代器-iterator-和-for-of循环",a:"迭代器-iterator-和-for-of循环"},"78.23":{t:"迭代器(Iterator)\r",p:"迭代器(Iterator) 是一种迭代机制，为各种不同的数据结构提供统一的访问机制，任何数据结构只要内部有 Iterator ...",l:"native/javascript/ES6新特性二.html#迭代器-iterator",a:"迭代器-iterator"},"78.24":{t:"迭代器功能\r",p:`
为各种数据结构提供一个统一的、简便的访问接口
使得数据结构成员能够按照某种次序排列
为ES6 创造了一种新的遍历命令 fo ...`,l:"native/javascript/ES6新特性二.html#迭代器功能",a:"迭代器功能"},"78.25":{t:"遍历过程\r",p:`
创建一个指针对象， 指向当前数据结构的起始位置。也就是说，遍历器对象本质上 就是一个指针对象
第一次调用指针对象的 nex ...`,l:"native/javascript/ES6新特性二.html#遍历过程",a:"遍历过程"},"78.26":{t:"原生具备 Iterator 接口的数据结构\r",p:`
Array
Map
Set
String
TypedArray
函数的 arguments 对象
NodeList对象

`,l:"native/javascript/ES6新特性二.html#原生具备-iterator-接口的数据结构",a:"原生具备-iterator-接口的数据结构"},"78.27":{t:"迭代器对象方法\r",p:`|next()| 下一步操作， 返回 { value, done }(必须部署)|
|return()|for-of提前退出 ...`,l:"native/javascript/ES6新特性二.html#迭代器对象方法",a:"迭代器对象方法"},"78.28":{t:"使用场合\r",p:`
解构赋值

对数组和 Set 结构进行解构赋值时， 会默认使用 Symbol.iterator 方法
let set =  ...`,l:"native/javascript/ES6新特性二.html#使用场合",a:"使用场合"},"78.29":{t:"for...of 循环\r",p:"for...of 循环用于遍历可迭代对象(例如数组、字符串、Set、Map 等)， 它会迭代对象的每个元素并执行指定的代码块 ...",l:"native/javascript/ES6新特性二.html#for-of-循环",a:"for-of-循环"},"78.30":{t:"生成器(Generator)\r",p:`Gererator 函数在语法上， 可以把它理解成一个状态及， 内部封装了多个状态
执行 Generator 函数会返回一个 ...`,l:"native/javascript/ES6新特性二.html#生成器-generator",a:"生成器-generator"},"78.31":{t:"特征\r",p:`
function 关键字与函数名之间有一个星号
函数体内部使用 yield 表达式， 定义不同的内部状态

functio ...`,l:"native/javascript/ES6新特性二.html#特征",a:"特征"},"79.0":{t:"# Eslint 的一些配置命令\r",p:`{  
  &quot;env&quot;: {  
    &quot;browser&quot;: true,  
   ...`,l:"native/javascript/eslint常见配置.html",a:"eslint-的一些配置命令"},"80.0":{t:"# 一些Javascript基础知识与方法\r",p:`!JavaScript
`,l:"native/javascript/index.html",a:"一些javascript基础知识与方法"},"81.0":{t:"# JS下载文件\r",p:`
a标签直接下载

data = data.replace(/\\\\/g, '/');
var aLink = documen ...`,l:"native/javascript/JS下载文件.html",a:"js下载文件"},"82.0":{t:"# JS中的元素尺寸与布局信息\r",p:`

Attributes
offsetWidth：代表了元素的宽度，包括边框和填充，但不是边距；
offsetHeight： ...`,l:"native/javascript/JS中的元素尺寸与布局信息.html",a:"js中的元素尺寸与布局信息"},"83.0":{t:"# JS模块化\r",p:`JavaScript的 ESM AMD UMD CJS

ESM


​ESM代表ES模块，是Javascript提出的实现 ...`,l:"native/javascript/js模块化.html",a:"js模块化"},"84.0":{t:"# JS解析URL参数\r",p:`
方法一

let url = &quot;https: //zhidao.baidu.com/question/17684 ...`,l:"native/javascript/JS解析URL参数.html",a:"js解析url参数"},"85.0":{t:"# Array.map与Array.forEach的区别\r",p:"\r",l:"native/javascript/map与forEach的区别.html",a:"array-map与array-foreach的区别"},"85.1":{t:"定义\r",p:`

Array.map: map() 方法创建一个新数组，这个新数组由原数组中的每个元素都调用一次提供的函数后的返回值组成。 ...`,l:"native/javascript/map与forEach的区别.html#定义",a:"定义"},"85.2":{t:"简单实现\r",p:`

map
function myMap(array, callback) {
  const result  = [];
 ...`,l:"native/javascript/map与forEach的区别.html#简单实现",a:"简单实现"},"86.0":{t:"# MomentJS\r",p:`MomentJS
moment.js是一个轻量级的JavaScript时间库，它方便了日常开发中对时间的操作，提高了开发效率 ...`,l:"native/javascript/moment使用.html",a:"momentjs"},"86.1":{t:"一、引入moment.js\r",p:"\r",l:"native/javascript/moment使用.html#一、引入moment-js",a:"一、引入moment-js"},"86.2":{t:"1.Node.js方式引入\r",p:`（1）安装

npm install moment  
//或者
yarn add moment


（2）引入
// re ...`,l:"native/javascript/moment使用.html#_1-node-js方式引入",a:"_1-node-js方式引入"},"86.3":{t:"2.浏览器方式引入\r",p:`

`,l:"native/javascript/moment使用.html#_2-浏览器方式引入",a:"_2-浏览器方式引入"},"86.4":{t:"二、设定moment区域为中国\r",p:`// require 方式
require('moment/locale/zh-cn')
moment.locale('zh ...`,l:"native/javascript/moment使用.html#二、设定moment区域为中国",a:"二、设定moment区域为中国"},"86.5":{t:"三、使用\r",p:"\r",l:"native/javascript/moment使用.html#三、使用",a:"三、使用"},"86.6":{t:"1.获取时间\r",p:`（1）获取当前时间
//获取当前时间
moment()

（2）获取今天0时0分0秒
//获取今天0时0分0秒
moment ...`,l:"native/javascript/moment使用.html#_1-获取时间",a:"_1-获取时间"},"86.7":{t:"2.设置时间\r",p:`（1）设置年份
//设置年份
moment().year(2019)
moment().set('year', 2019)
 ...`,l:"native/javascript/moment使用.html#_2-设置时间",a:"_2-设置时间"},"86.8":{t:"3.格式化时间\r",p:`


格式代码
说明
返回值例子




M
数字表示的月份，没有前导零
1到12


MM
数字表示的月份，有前导零
01 ...`,l:"native/javascript/moment使用.html#_3-格式化时间",a:"_3-格式化时间"},"86.9":{t:"4.比较时间\r",p:`（1）获取两个日期之间的时间
//获取两个日期之间的时间
let start_date = moment().subtrac ...`,l:"native/javascript/moment使用.html#_4-比较时间",a:"_4-比较时间"},"86.10":{t:"5.转化为JavaScript原生Date对象\r",p:`//转化为JavaScript原生Date对象
moment().toDate()
new Date(moment())

`,l:"native/javascript/moment使用.html#_5-转化为javascript原生date对象",a:"_5-转化为javascript原生date对象"},"86.11":{t:"6.日期格式化输出实例\r",p:`//日期格式化输出实例
moment().format('MMMM Do YYYY, h:mm:ss a'); // 五月  ...`,l:"native/javascript/moment使用.html#_6-日期格式化输出实例",a:"_6-日期格式化输出实例"},"86.12":{t:"7.相对时间 输出实例\r",p:"moment(&quot;20111031&quot;, &quot;YYYYMMDD&quot;).fromNow();  ...",l:"native/javascript/moment使用.html#_7-相对时间-输出实例",a:"_7-相对时间-输出实例"},"86.13":{t:"8.日历时间输出实例\r",p:`moment().subtract(10, 'days').calendar(); // 2019年5月14日

momen ...`,l:"native/javascript/moment使用.html#_8-日历时间输出实例",a:"_8-日历时间输出实例"},"86.14":{t:"9.多语言支持输出实例\r",p:`moment().format('L');    // 2019-05-24

moment().format('l');  ...`,l:"native/javascript/moment使用.html#_9-多语言支持输出实例",a:"_9-多语言支持输出实例"},"86.15":{t:"10.其它输出实例\r",p:`moment().format(&quot;YYYY-MM-DD&quot;) //格式化显示当前时间
//上一个月的1号
 ...`,l:"native/javascript/moment使用.html#_10-其它输出实例",a:"_10-其它输出实例"},"87.0":{t:"# Array.reduce 方法的使用场景\r",p:"\r",l:"native/javascript/reduce方法的使用场景.html",a:"array-reduce-方法的使用场景"},"87.1":{t:"功能\r",p:`Array.prototype.reduce 方法泛用性很强, 这个方法功能主要是对数组中每个元素执
行一个提供的reduc ...`,l:"native/javascript/reduce方法的使用场景.html#功能",a:"功能"},"87.2":{t:"参数值\r",p:`reduce方法主要接收两个参数， 一个是执行操作的回调函数， 一个初始值(可选)。
`,l:"native/javascript/reduce方法的使用场景.html#参数值",a:"参数值"},"87.3":{t:"回调函数\r",p:"回调函数是数组中每个元素执行的函数， 其返回值将作为下一次调用回调函数时的 accumulator 参数。对于最后一次调用， ...",l:"native/javascript/reduce方法的使用场景.html#回调函数",a:"回调函数"},"87.4":{t:"initialValue\r",p:"第一次调用回调函数初始化 accumulator的值。 如果指定了 initialValue， 则回调函数从数组中第一个元素 ...",l:"native/javascript/reduce方法的使用场景.html#initialvalue",a:"initialvalue"},"87.5":{t:"使用场景\r",p:"\r",l:"native/javascript/reduce方法的使用场景.html#使用场景",a:"使用场景"},"87.6":{t:"一维数组求和\r",p:`const arr: number[] = [0, 1, 2, 3];
// acc: 表示的是累加器 accumulato ...`,l:"native/javascript/reduce方法的使用场景.html#一维数组求和",a:"一维数组求和"},"87.7":{t:"累加对象数组里的值\r",p:`reduce方法不仅可以求纯数字数组的和， 针对对象数组里的值也可以求和
type Item = {x : number } ...`,l:"native/javascript/reduce方法的使用场景.html#累加对象数组里的值",a:"累加对象数组里的值"},"87.8":{t:"展平嵌套数组\r",p:`const arr: [number, number] = [[0, 1], [2, 3], [4, 5]]
const s ...`,l:"native/javascript/reduce方法的使用场景.html#展平嵌套数组",a:"展平嵌套数组"},"87.9":{t:"统计对象中值出现的次数\r",p:`const names: string[] = ['陈大', '李二', '张三', '朱四', '王五', '张三']
c ...`,l:"native/javascript/reduce方法的使用场景.html#统计对象中值出现的次数",a:"统计对象中值出现的次数"},"87.10":{t:"按属性对对象进行分组\r",p:`type Item = { name: string, age: number }
const objArr: Item[] ...`,l:"native/javascript/reduce方法的使用场景.html#按属性对对象进行分组",a:"按属性对对象进行分组"},"87.11":{t:"使用扩展运算符和 `initialValue` 连接包含在对象数组中的数组\r",p:`type Item = {
  name: string;
  books: string[];
  age: number ...`,l:"native/javascript/reduce方法的使用场景.html#使用扩展运算符和-initialvalue-连接包含在对象数组中的数组",a:"使用扩展运算符和-initialvalue-连接包含在对象数组中的数组"},"87.12":{t:"数组去重\r",p:`:::info 备注
可以使用 Set 和 Array.from()来实现同样的效果， 如const arr = Array ...`,l:"native/javascript/reduce方法的使用场景.html#数组去重",a:"数组去重"},"87.13":{t:"使用 reduce() 来替代 .filer().map()\r",p:`
使用.filter() 和 .map()会遍历数组两次，但是可以使用reduce()只遍历一次并实现相同的效果， 从而更高 ...`,l:"native/javascript/reduce方法的使用场景.html#使用-reduce-来替代-filer-map",a:"使用-reduce-来替代-filer-map"},"87.14":{t:"按顺序运行promise\r",p:`/**
 * 链接一系列 Promise 处理程序。
 *
 * @param {array} arr——一个 Promis ...`,l:"native/javascript/reduce方法的使用场景.html#按顺序运行promise",a:"按顺序运行promise"},"87.15":{t:"在稀疏数组中使用reduce\r",p:`
reduce()会跳过稀疏数组中缺失的元素， 但不会跳过undefined 值

console.log([1, 2, , ...`,l:"native/javascript/reduce方法的使用场景.html#在稀疏数组中使用reduce",a:"在稀疏数组中使用reduce"},"87.16":{t:"非数组对象上调用reduce\r",p:`
reduce()方法读取this的length 属性， 然后访问每个整数索引

const arrLike = {
  l ...`,l:"native/javascript/reduce方法的使用场景.html#非数组对象上调用reduce",a:"非数组对象上调用reduce"},"88.0":{t:"# setTimeout与setInterval区别\r",p:`定义：在JavaScript中，setTimeout和setInterval是两个用于执行延迟操作或定期执行代码的函数
`,l:"native/javascript/setTimeout与setInterval.html",a:"settimeout与setinterval区别"},"88.1":{t:"setTimeout\r",p:`全局的 setTimeout() 方法设置一个定时器，一旦定时器到期，就会执行一个函数或指定的代码片段。


语法：setT ...`,l:"native/javascript/setTimeout与setInterval.html#settimeout",a:"settimeout"},"88.2":{t:"setInterval\r",p:`setInterval() 方法重复调用一个函数或执行一个代码片段，在每次调用之间具有固定的时间间隔。


语法：setIn ...`,l:"native/javascript/setTimeout与setInterval.html#setinterval",a:"setinterval"},"88.3":{t:"精度问题\r",p:"尽管setTimeout与setInterval是Javascript中常用的定时器函数，但他们在执行上存在一些精度方面的问 ...",l:"native/javascript/setTimeout与setInterval.html#精度问题",a:"精度问题"},"88.4":{t:"取消调度\r",p:"setTimeout 和 setInterval 都可以通过 clearTimeout 和 clearInterval 方法 ...",l:"native/javascript/setTimeout与setInterval.html#取消调度",a:"取消调度"},"88.5":{t:"利用setTimeout实现一个setInterval\r",p:"  const setIntervalFunctional = (callback: () =&gt; void, dela ...",l:"native/javascript/setTimeout与setInterval.html#利用settimeout实现一个setinterval",a:"利用settimeout实现一个setinterval"},"88.6":{t:"requestAnimationFrame\r",p:"window.requestAnimationFrame() 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前 ...",l:"native/javascript/setTimeout与setInterval.html#requestanimationframe",a:"requestanimationframe"},"88.7":{t:"对比\r",p:`
requestAnimationFrame通常比setTimeout和setinterval更精准， 因为它与浏览器的重绘 ...`,l:"native/javascript/setTimeout与setInterval.html#对比",a:"对比"},"89.0":{t:"# TCP的三次握手与四次挥手\r",p:"\r",l:"native/javascript/TCP三次握手与四次挥手.html",a:"tcp的三次握手与四次挥手"},"89.1":{t:"TCP三次握手\r",p:`这里我们将发出方成为客户端， 接收方成为服务端。 TCP建立连接主要分为三部分， 可简单描述为

客户端向服务端发起TCP请 ...`,l:"native/javascript/TCP三次握手与四次挥手.html#tcp三次握手",a:"tcp三次握手"},"89.2":{t:"TCP四次挥手\r",p:"在数据传输完毕之后会进行TCP四次握手即是TCP连接关闭，TCP需要进行四次挥手的原因在于TCP连接是双全工，即双方通信，每 ...",l:"native/javascript/TCP三次握手与四次挥手.html#tcp四次挥手",a:"tcp四次挥手"},"89.3":{t:"引用\r",p:`Internet通信
`,l:"native/javascript/TCP三次握手与四次挥手.html#引用",a:"引用"},"90.0":{t:"# TCP/IP 四、五层，OSI七层模型区别\r",p:"网络层次可划分为 四层因特网协议栈 和 七层因特网协议栈, 起初网络分层是标准的七层，也就是我们说的 OSI七层模型,参考模 ...",l:"native/javascript/TCP四层五层与OSI七层模型区别.html",a:"tcp-ip-四、五层-osi七层模型区别"},"91.0":{t:"# XSS攻击与 CSRF攻击\r",p:"\r",l:"native/javascript/XSS攻击与CSRF攻击.html",a:"xss攻击与-csrf攻击"},"91.1":{t:"XSS攻击\r",p:"Cross-site Scripting(跨站脚本攻击)简称 XSS，是一种代码注入攻击。攻击者通过在目标网站上注入恶意脚本 ...",l:"native/javascript/XSS攻击与CSRF攻击.html#xss攻击",a:"xss攻击"},"91.2":{t:"常见注入方法\r",p:`
在 HTML 中内嵌的文本中，恶意内容以 Script 标签形成注入
在内联的 JavaScript 中， 拼接的数据突破 ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#常见注入方法",a:"常见注入方法"},"91.3":{t:"XSS 攻击分类\r",p:`根据攻击的来源， XSS攻击可以分为存储行，反射型和DOM型三种

存储型: 即攻击被存储到服务到，常见的是在评论区插入攻击 ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#xss-攻击分类",a:"xss-攻击分类"},"91.4":{t:"防范方法\r",p:`
HttpOnly: 在cookie中设置httponly属性之后，js脚本将无法获取到cookie信息
输入过滤: 一般是 ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#防范方法",a:"防范方法"},"91.5":{t:"CSRF攻击\r",p:"Cross-site request forgery (跨站请求伪造),也被称为one-click attack 或者 se ...",l:"native/javascript/XSS攻击与CSRF攻击.html#csrf攻击",a:"csrf攻击"},"91.6":{t:"防御方法\r",p:`
验证码: 强制用户必须与应用进行交互，才能最终完成请求。此种方式能很好的遏制CSRF，但用户体验较差
Refer Chec ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#防御方法",a:"防御方法"},"91.7":{t:"XSS 和 CSRF 的区别\r",p:`
通常来讲CSRF是由XSS实现的，CSRF时常也被成为XSRF(CSRF实现的方式还可以是直接通过命令行发起请求等)
本质 ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#xss-和-csrf-的区别",a:"xss-和-csrf-的区别"},"91.8":{t:"来源\r",p:`XSS攻击和CSRF攻击
`,l:"native/javascript/XSS攻击与CSRF攻击.html#来源",a:"来源"},"92.0":{t:"# 前端数据类型\r",p:"JavaScript 是一种有着动态类型的动态语言。JavaScript 中的变量与任何特定值类型没有任何关联，任何变量都可 ...",l:"native/javascript/前端数据类型.html",a:"前端数据类型"},"92.1":{t:"基本数据类型\r",p:`


类型
typeof返回值
对象包装器




Null
object
不适用


Undefined
undefine ...`,l:"native/javascript/前端数据类型.html#基本数据类型",a:"基本数据类型"},"92.2":{t:"复杂数据类型\r",p:"\r",l:"native/javascript/前端数据类型.html#复杂数据类型",a:"复杂数据类型"},"92.3":{t:"Object\r",p:"在计算机科学中，对象（object）是指内存中的可以被标识符引用的一块区域。在 JavaScript 中，对象是唯一可变的值 ...",l:"native/javascript/前端数据类型.html#object",a:"object"},"92.4":{t:"判断数据类型的方式\r",p:`
typeof 操作符
typeof运算符返回一个字符串，表示操作数的类型

除了 null，所有原始类型都可以使用type ...`,l:"native/javascript/前端数据类型.html#判断数据类型的方式",a:"判断数据类型的方式"},"93.0":{t:"# 原型与原型链\r",p:`!原型与原型链
注：上图中 P1是构造函数 Parent()的一个实例
`,l:"native/javascript/原型与原型链.html",a:"原型与原型链"},"93.1":{t:"前置知识\r",p:`
Javascript中对象分为 函数对象和 普通对象, 每个对象都有 __proto__ 属性, 但是只有函数才会有 pr ...`,l:"native/javascript/原型与原型链.html#前置知识",a:"前置知识"},"93.2":{t:"`prototype`属性\r",p:"prototype是函数独有的属性，从图中可以看到它从一个对象指向另一个对象，代表这个对象是这个函数的原型对象，这个对象也是 ...",l:"native/javascript/原型与原型链.html#prototype-属性",a:"prototype-属性"},"93.3":{t:"`__proto__`属性\r",p:"__proto__属性是对象独有的(包括函数), 从图中我们可以看到__proto__属性是从一个对象指向另一个对象，即从一 ...",l:"native/javascript/原型与原型链.html#proto-属性",a:"proto-属性"},"93.4":{t:"`constructor`属性\r",p:"constructor是对象才有的属性，从图中看到它是从一个对象指向一个函数的。指向的函数就是该对象的构造函数，每个对象都有 ...",l:"native/javascript/原型与原型链.html#constructor-属性",a:"constructor-属性"},"93.5":{t:"引用\r",p:`JavaScript原型&amp;原型链
`,l:"native/javascript/原型与原型链.html#引用",a:"引用"},"94.0":{t:"# 变量的提升\r",p:`关于变量的提升，先看下面一个例子
var x = 5 ;
console.log(x) // 此时打印出来的是5;

var ...`,l:"native/javascript/变量的提升.html",a:"变量的提升"},"95.0":{t:"# 回流与重绘\r",p:"\r",l:"native/javascript/回流与重绘.html",a:"回流与重绘"},"95.1":{t:"`回流（reflow）`\r",p:`回流（reflow）: 当render树（渲染树）中的一部分或者全部因为大小边距等引起结构变化 而需要重建的过程叫做回流
`,l:"native/javascript/回流与重绘.html#回流-reflow",a:"回流-reflow"},"95.2":{t:"`重绘（repaint）`\r",p:"重绘（repaint）:当render 树中的一些元素需要更新属性，而这些属性只是影响元素的外观，风格，而不会影响布局的，比 ...",l:"native/javascript/回流与重绘.html#重绘-repaint",a:"重绘-repaint"},"95.3":{t:"render树\r",p:`render树的节点叫做渲染器； 渲染器在文档解析和dom树创建之后创建，会计算dom节点的样式信息；
如果说元素设置成了d ...`,l:"native/javascript/回流与重绘.html#render树",a:"render树"},"95.4":{t:"何时触发回流和重绘\r",p:`

repaint重绘：

回流(reflow)必定引起重绘(repaint)，重绘可以单独触发
背景色、颜色、字体改变（注 ...`,l:"native/javascript/回流与重绘.html#何时触发回流和重绘",a:"何时触发回流和重绘"},"95.5":{t:"性能优化\r",p:`
尽量避免改变布局属性。如width, height, left, top。
除了transforms或者opacity属性 ...`,l:"native/javascript/回流与重绘.html#性能优化",a:"性能优化"},"95.6":{t:"css\r",p:`
减少选择器的复杂性。
避免逐个修改节点样式，尽量一次性修改，减少style修改所影响元素的数量,使用cssText来替代要 ...`,l:"native/javascript/回流与重绘.html#css",a:"css"},"95.7":{t:"js\r",p:"我们也知道回流的花销也不小，如果每句JS操作都去回流重绘的话，浏览器可能就会受不了。所以很多浏览器都会优化这些操作，浏览器会 ...",l:"native/javascript/回流与重绘.html#js",a:"js"},"96.0":{t:"# 数组常用的方法\r",p:"\r",l:"native/javascript/常用的数组的方法.html",a:"数组常用的方法"},"96.1":{t:"`Array.prototype.indexOf()`\r",p:`该方法返回数组中第一次出现给定元素的下标，如果不存在则返回 -1。
可以传两个参数 第一个参数为需要查找的元素， 第二个是可 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-indexof",a:"array-prototype-indexof"},"96.2":{t:"`Array.prototype.map()`\r",p:`该方法是将数组中的每个元素调用一个提供的函数，结果作为一个新的数组返回，并没有改变原来的数组
  const arr = [ ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-map",a:"array-prototype-map"},"96.3":{t:"`Array.prototype.forEach()`\r",p:`该方法是将数组中的每个元素执行传进提供的函数，没有返回值，直接改变原数组，注意和map方法区分
  const arr =  ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-foreach",a:"array-prototype-foreach"},"96.4":{t:"`Array.prototype.filter()`\r",p:`该方法是将所有元素进行判断，将满足条件的元素生成一个新数组返回
  const arr = [1, 2, 3, 4, 5]
 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-filter",a:"array-prototype-filter"},"96.5":{t:"`Array.prototype.find()`\r",p:`该方法是将所有元素进行判断，并且返回符合条件的第一个元素的值， 否则返回undefined
  const arr = [1 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-find",a:"array-prototype-find"},"96.6":{t:"`Array.prototype.every()`\r",p:`该方法是将所有元素进行判断，如果所有的元素都符合判断条件，则返回true 否则返回false
  const arr = [ ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-every",a:"array-prototype-every"},"96.7":{t:"`Array.prototype.some()`\r",p:`该方法将所有元素进行判断， 如果存在至少一个元素符合判断条件，则返回true, 否则返回false
  const arr  ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-some",a:"array-prototype-some"},"96.8":{t:"`Array.prototype.reduce()`与 `Array.prototype.reduceRight()`\r",p:`该方法是所有元素调用返回函数， 返回值为最后结果， 传入的类型必须为函数类型
两者区别是Array.prototype.re ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-reduce-与-array-prototype-reduceright",a:"array-prototype-reduce-与-array-prototype-reduceright"},"96.9":{t:"`Array.prototype.pop()`\r",p:`该方法是在数组后面删除最后一个元素，并返回删除的元素，该方法改变了数组的长度
const arr = [1,2,3,4,5] ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-pop",a:"array-prototype-pop"},"96.10":{t:"`Array.prototype.push()`\r",p:`该方法是在数组最后一个元素后面添加一个或多个元素， 返回变化后数组长度，并且更改原数组
const arr = [1,2,3 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-push",a:"array-prototype-push"},"96.11":{t:"`Array.prototype.shift()`\r",p:`该方法是会删除掉数组的第一项， 返回数组删除的元素， 并且改变原数组
const arr = [1,2,3,4,5]
arr ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-shift",a:"array-prototype-shift"},"96.12":{t:"`Array.prototype.unshift()`\r",p:`该方法是将一个或者多个元素添加到数组的开头， 返回新数组的长度， 改变原来的数组
  const arr = [1, 2,  ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-unshift",a:"array-prototype-unshift"},"96.13":{t:"`Array.isArray()`\r",p:`该方法是判断目标元素是否为数组，返回布尔值， 这是属于数组原型的方法
  const arr = [1, 2, 3, 4,  ...`,l:"native/javascript/常用的数组的方法.html#array-isarray",a:"array-isarray"},"96.14":{t:"`Array.prototype.concat()`\r",p:`该方法可以讲多个数组拼接成一个数组
const arr = [1,2,3,4]
const arr2 = [5,6,7]
c ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-concat",a:"array-prototype-concat"},"96.15":{t:"`Array.prototype.join()`\r",p:`该方法是将数组中的元素拼接成字符串，拼接格式为join函数传入的参数, 不改变原数组， 并且没有参数时默认为逗号,连接
co ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-join",a:"array-prototype-join"},"96.16":{t:"`Array.prototype.toString()`\r",p:`该方法也是将数组转化为字符串，与join方法不同的是， 拼接格式与函数参数无关，都是以逗号,拼接
const arr = [ ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-tostring",a:"array-prototype-tostring"},"96.17":{t:"`Array.prototype.slice()`\r",p:"该方法传入一个数字， 表示从传入的数字为要处理的元素的下标， 并把小于这个下标对应的元素的元素都删除掉，如果传入负数，则以最 ...",l:"native/javascript/常用的数组的方法.html#array-prototype-slice",a:"array-prototype-slice"},"96.18":{t:"`Array.prototype.splice()`\r",p:`该方法通过移除或者替换已存在的元素和/或添加新元素，并且就地改变一个数组的内容。
最多只支持三个参数


只传入一个参数
这 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-splice",a:"array-prototype-splice"},"96.19":{t:"`Array.prototype.includes()`\r",p:`该方法用来判断一个数组是否包含一个指定的值，如果有则返回true， 否则返回false
  const arr = [1,2 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-includes",a:"array-prototype-includes"},"96.20":{t:"`Array.prototype.flat()`\r",p:`方法创建一个新的数组，并根据指定深度递归地将所有子数组元素拼接到新的数组中。
可以传一个可选参数  指定要提取嵌套数组的结构 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-flat",a:"array-prototype-flat"},"96.21":{t:"`Array.prototype.from()`\r",p:`该方法从可迭代对象或类数组对象创建一个新的浅拷贝的数组实例。


可迭代对象: 例如 Map和 Set 对象， 或者对象是不 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-from",a:"array-prototype-from"},"96.22":{t:"序列生成器(range)\r",p:`// 序列生成器函数（通常称为“range”，例如 Clojure、PHP 等）
const range = (start, ...`,l:"native/javascript/常用的数组的方法.html#序列生成器-range",a:"序列生成器-range"},"96.23":{t:"`Array.prototype.flatMap()`\r",p:"该方法对数组中的每个元素应用给定的回调函数，然后将结果展开一级，返回一个新数组。它等价于在调用 map() 方法后再调用深度 ...",l:"native/javascript/常用的数组的方法.html#array-prototype-flatmap",a:"array-prototype-flatmap"},"97.0":{t:"# 浅拷贝与深拷贝\r",p:"\r",l:"native/javascript/浅拷贝与深拷贝.html",a:"浅拷贝与深拷贝"},"97.1":{t:"数据类型存储\r",p:`Javascript是有两大数据类型：

基本数据类型
引用数据类型

基本数据类型保存在栈内存中；
引用数据类型保存在堆内 ...`,l:"native/javascript/浅拷贝与深拷贝.html#数据类型存储",a:"数据类型存储"},"97.2":{t:"浅拷贝\r",p:`浅拷贝 指的是创建新的数据，这个数据有着原始数据属性值的一份精确复制。
如果属性是基本类型，拷贝的就是基本类型的值，如果属性 ...`,l:"native/javascript/浅拷贝与深拷贝.html#浅拷贝",a:"浅拷贝"},"97.3":{t:"手动实现\r",p:`const shallowClone = (obj) =&gt; {
  const newObj = {};
  for  ...`,l:"native/javascript/浅拷贝与深拷贝.html#手动实现",a:"手动实现"},"97.4":{t:"深拷贝\r",p:`深拷贝开辟一个新的栈，两个对象属性完全相同，但是对应两个不同的地址，修改一个对象的属性， 不会改变另一个对象的属性
!深拷贝 ...`,l:"native/javascript/浅拷贝与深拷贝.html#深拷贝",a:"深拷贝"},"97.5":{t:"区别\r",p:`浅拷贝和深拷贝都创建出一个新的对象，但在复制对象属性的时候，行为就不一样

浅拷贝只复制属性指向某个对象的指针，而不复制对象 ...`,l:"native/javascript/浅拷贝与深拷贝.html#区别",a:"区别"},"97.6":{t:"小结\r",p:`前提为拷贝类型为引用类型的情况下：


浅拷贝是拷贝一层，属性为对象时，浅拷贝是复制，两个对象指向同一个地址


深拷贝是递 ...`,l:"native/javascript/浅拷贝与深拷贝.html#小结",a:"小结"},"97.7":{t:"文章来源\r",p:`面试官：深拷贝浅拷贝的区别？如何实现一个深拷贝？
`,l:"native/javascript/浅拷贝与深拷贝.html#文章来源",a:"文章来源"},"98.0":{t:"# 浏览器缓存\r",p:"当用户打开网站并进行交互时，网站所需的所有资源，包括 HTML、JavaScript、CSS、图片、字体以及应用程序明确请求 ...",l:"native/javascript/浏览器缓存.html",a:"浏览器缓存"},"98.1":{t:"优点\r",p:`
离线操作： 缓存使PWA能够在设备没有网络连接时进行工作
响应速度 即使设备子啊线，如果其用户界面是从缓存中获取的， PW ...`,l:"native/javascript/浏览器缓存.html#优点",a:"优点"},"98.2":{t:"浏览器缓存过程\r",p:`!缓存流程
缓存命中机制流程

发送请求，根据请求头的 Expires和 cache-control(强缓存)判断是否命中( ...`,l:"native/javascript/浏览器缓存.html#浏览器缓存过程",a:"浏览器缓存过程"},"98.3":{t:"强缓存\r",p:`强制缓存就是向浏览器缓存查找该请求结果，并根据该结果的缓存规则来决定是否使用该缓存结果的过程，强制缓存的情况主要有三种


 ...`,l:"native/javascript/浏览器缓存.html#强缓存",a:"强缓存"},"98.4":{t:"强缓存规则\r",p:"当浏览器向服务器发送请求时，服务器会将缓存规则放入HTTP响应报文的HTTP头中和请求结果一起返回给浏览器，控制强制缓存的字 ...",l:"native/javascript/浏览器缓存.html#强缓存规则",a:"强缓存规则"},"98.5":{t:"协商缓存\r",p:`协商缓存是缓存失效后，浏览器携带混存表示向服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程，主要分为两种情况


 ...`,l:"native/javascript/浏览器缓存.html#协商缓存",a:"协商缓存"},"98.6":{t:"协商缓存规则\r",p:"协商缓存的标识也是在响应报文的HTTP头中和请求结果一起返回给浏览器的，控制协商缓存的分别有Last-Modified/If ...",l:"native/javascript/浏览器缓存.html#协商缓存规则",a:"协商缓存规则"},"98.7":{t:"总结\r",p:"强制缓存优先于协商缓存进行， 若强制缓存(Expires和Cache-COntrol)生效则直接使用缓存，若不生效则进行协商 ...",l:"native/javascript/浏览器缓存.html#总结",a:"总结"},"98.8":{t:"引用\r",p:`彻底理解浏览器的缓存机制
浏览器缓存相关
`,l:"native/javascript/浏览器缓存.html#引用",a:"引用"},"99.0":{t:"# 类的继承\r",p:`继承(inheritance)是面向对象软件技术中的一个概念
如果一个类别B '继承自' 另一个类别A，就把这个B称为'A的 ...`,l:"native/javascript/类的继承.html",a:"类的继承"},"99.1":{t:"优点\r",p:`继承可以使得子类有父类别的各种属性和方法，而不需要再次编写相同的代码
在子类别继承父类别的同时，可以重新定义某些属性，并重写 ...`,l:"native/javascript/类的继承.html#优点",a:"优点"},"99.2":{t:"实现方式\r",p:`
原型链继承
构造函数继承(借助call)
组合继承
原型式继承
寄生式继承
寄生组合式继承

`,l:"native/javascript/类的继承.html#实现方式",a:"实现方式"},"99.3":{t:"原型链继承\r",p:"原型链继承是比较常见的继承方式之一， 其中涉及构造函数、原型和实例。三者之间存在着一定的关系，即每一个构造函数都有一个原型对 ...",l:"native/javascript/类的继承.html#原型链继承",a:"原型链继承"},"99.4":{t:"构造函数继承\r",p:`借助call调用 Parent函数
function Parent() {
  this.name = 'parent1'
 ...`,l:"native/javascript/类的继承.html#构造函数继承",a:"构造函数继承"},"99.5":{t:"组合继承\r",p:`前面两种继承方式，各有优缺点，组合继承则是将前面两种继承方式结合继承起来
function Parent () {
  th ...`,l:"native/javascript/类的继承.html#组合继承",a:"组合继承"},"99.6":{t:"原型式继承\r",p:`这里主要借助 Object.create 方法实现普通对象的继承
let parent = {
  name: 'paren ...`,l:"native/javascript/类的继承.html#原型式继承",a:"原型式继承"},"99.7":{t:"寄生式继承\r",p:`寄生式继承在上面的继承基础上进行了优化，利用这个浅拷贝的能力再进行增强，添加一些方法
let parent = {
  na ...`,l:"native/javascript/类的继承.html#寄生式继承",a:"寄生式继承"},"99.8":{t:"寄生组合式继承\r",p:"寄生组合式继承，借助解决普通对象的继承问题的Object.create方法，在前面几种继承方式的优缺点基础上进行改造，这也是 ...",l:"native/javascript/类的继承.html#寄生组合式继承",a:"寄生组合式继承"},"99.9":{t:"总结\r",p:`!类的继承
通过 Object.create 来划分不同的继承方式，最后的寄生组合式继承方式是通过组合继承改造之后的最优的继 ...`,l:"native/javascript/类的继承.html#总结",a:"总结"},"99.10":{t:"文章来源\r",p:`JavaScript如何实现继承
`,l:"native/javascript/类的继承.html#文章来源",a:"文章来源"},"100.0":{t:"# 获取当前页面URL信息\r",p:"假设当前页完整地址是：https://www.example.com:8080/path/to/page.html?id=2 ...",l:"native/javascript/获取当前页面URL信息.html",a:"获取当前页面url信息"},"101.0":{t:"# 防抖与节流\r",p:"防抖与节流本质上是优化高频率代码的一种手段， 如浏览器的 resize、scroll、keypress、 mousemove ...",l:"native/javascript/防抖与节流.html",a:"防抖与节流"},"101.1":{t:"节流(throttle)\r",p:`定义
节流是指程序在n秒内只运行一次，若在这个时间段内重复触发，则只生效一次
`,l:"native/javascript/防抖与节流.html#节流-throttle",a:"节流-throttle"},"101.2":{t:"节流实现方式\r",p:"声明一个变量当标志位，记录当前代码是否在执行，如果正在执行，取消这次方法的执行，直接 retun， 如果有空闲，正常触发方法 ...",l:"native/javascript/防抖与节流.html#节流实现方式",a:"节流实现方式"},"101.3":{t:"防抖(debounce)\r",p:`防抖是指要在n秒后开始执行程序, 若在这个时间段内被重复触发，则重新开始计时
`,l:"native/javascript/防抖与节流.html#防抖-debounce",a:"防抖-debounce"},"101.4":{t:"防抖实现方式\r",p:"需要一个延时定时器来辅助实现，延迟执行需要执行的代码，如果方法多次触发，把上次记录的延迟执行代码用 clearTimeout ...",l:"native/javascript/防抖与节流.html#防抖实现方式",a:"防抖实现方式"},"101.5":{t:"区别\r",p:`相同点

都可以通过 setTimeout 实现
目的都是，降低回调执行频率，节省计算资源

差异

防抖是在一段连续操作结 ...`,l:"native/javascript/防抖与节流.html#区别",a:"区别"},"101.6":{t:"应用场景\r",p:`

防抖

搜索框搜索输入，只需要用户最后一次输入完，再发送请求
手机号、邮箱验证输入检测
窗口大小resize， 只需要在 ...`,l:"native/javascript/防抖与节流.html#应用场景",a:"应用场景"},"101.7":{t:"来源\r",p:`防抖与节流
`,l:"native/javascript/防抖与节流.html#来源",a:"来源"},"102.0":{t:"# Node基础与拓展\r",p:`!Node
`,l:"native/node/index.html",a:"node基础与拓展"},"103.0":{t:"# Node 简介\r",p:`Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。
Node 是一个让 JavaScr ...`,l:"native/node/node简介.html",a:"node-简介"},"103.1":{t:"Node特点\r",p:`

1.非阻塞I/O
在单线程当中,当一段代码运行需要很长时间的时候,, 比如 一个没有终止的递归或者一个没有结束条件的循环 ...`,l:"native/node/node简介.html#node特点",a:"node特点"},"104.0":{t:"# TypeScript 基础文档与类型体操\r",p:`!Typescript
`,l:"native/typescript/index.html",a:"typescript-基础文档与类型体操"},"105.0":{t:"# 推荐文档\r",p:`

TypeScript入门教程
TypeScript入门教程


现代TypeScript高级教程
现代TypeScrip ...`,l:"native/typescript/推荐文档.html",a:"推荐文档"},"106.0":{t:"# 枚举(Enums)\r",p:`枚举是 TypeScript 中一种特殊的数据类型，允许我们为一组数值设定友好的名字。枚举的定义使用 enum 关键字

枚 ...`,l:"native/typescript/枚举.html",a:"枚举-enums"},"106.1":{t:"基本用法\r",p:`  enum Direction {Up = 1, Down, Left, Right,}

在这个例子中，我们定义了一个名 ...`,l:"native/typescript/枚举.html#基本用法",a:"基本用法"},"106.2":{t:"手动赋值\r",p:`枚举是可以手动赋值的，  并且未手动赋值的枚举值会随着上一项的赋值递增
  enum Direction { Up  = 3 ...`,l:"native/typescript/枚举.html#手动赋值",a:"手动赋值"},"106.3":{t:"常数项和计算所得项\r",p:"枚举的项有两种类型常数项和计算所得项， 上述示例都是为常数项的枚举值， 我们也可以向枚举中添加计算的方式来设置计算所得项的枚 ...",l:"native/typescript/枚举.html#常数项和计算所得项",a:"常数项和计算所得项"},"106.4":{t:"常数枚举\r",p:`常数枚举是使用 const enum 定义的枚举类型
  const enum Directions {
      Up, ...`,l:"native/typescript/枚举.html#常数枚举",a:"常数枚举"},"106.5":{t:"外部枚举\r",p:`外部枚举是使用 declare enum 定义的枚举类型：
declare enum Directions {
    Up ...`,l:"native/typescript/枚举.html#外部枚举",a:"外部枚举"},"107.0":{t:"# TS 泛型\r",p:"\r",l:"native/typescript/泛型.html",a:"ts-泛型"},"107.1":{t:"定义\r",p:"在 TypeScript 中，泛型（Generics）是一种强大的类型工具，它允许我们编写可重用、灵活和类型安全的代码。泛型 ...",l:"native/typescript/泛型.html#定义",a:"定义"},"107.2":{t:"1. 数组泛型(Array Generic)\r",p:"我们在指定一个数组的类型时，可以使用 类型 + 中括号 表示法来定义，例如： number[]来作为数字数组类型，字符串数组 ...",l:"native/typescript/泛型.html#_1-数组泛型-array-generic",a:"_1-数组泛型-array-generic"},"107.3":{t:"2. 函数泛型\r",p:`
函数泛型允许我们编写可以适用多种类型的函数， 提高代码的灵活性和可复用性。

简单的例子
我们可以实现一个函数create ...`,l:"native/typescript/泛型.html#_2-函数泛型",a:"_2-函数泛型"},"107.4":{t:"3. 接口泛型\r",p:`接口泛型允许我们创建可适用于不同类型的接口定义。例如：

基本用法

interface IResponse&lt;T, U ...`,l:"native/typescript/泛型.html#_3-接口泛型",a:"_3-接口泛型"},"107.5":{t:"4. 类泛型\r",p:`与接口类型相似， 泛型也可以用于类的类型定义中
  class GenericNumber&lt;T&gt; {
    z ...`,l:"native/typescript/泛型.html#_4-类泛型",a:"_4-类泛型"},"108.0":{t:"# Typescript中的高级类型\r",p:`!Typescript高级类型
`,l:"native/typescript/高级类型.html",a:"typescript中的高级类型"},"108.1":{t:"交叉类型(Intersection Types): `&`\r",p:`交叉类型是将多个类型合并为同一个类型，这让我们可以把现有的类型叠加到一起成为一种类型， 它包含了所需的所有类型的特性。
:w ...`,l:"native/typescript/高级类型.html#交叉类型-intersection-types",a:"交叉类型-intersection-types"},"108.2":{t:"联合类型(Union Types): `|`\r",p:"联合类型与交叉类型很有关联，但是使用上完全不同。 联合类型会产生一个包含所有类型的选择集的类型，表示一个值的类型是定义的联合 ...",l:"native/typescript/高级类型.html#联合类型-union-types",a:"联合类型-union-types"},"108.3":{t:"类型守卫(Type Guards)\r",p:`类型守卫是一种用于收窄或者断言变量的技术， 通常与联合类型与交叉类型一起使用。
类型守卫可以通过一些条件检查来确定变量的确切 ...`,l:"native/typescript/高级类型.html#类型守卫-type-guards",a:"类型守卫-type-guards"},"108.4":{t:"`typeof`类型守卫\r",p:`使用typeof操作符检查变量类型
const printValue = (value: string | number)  ...`,l:"native/typescript/高级类型.html#typeof-类型守卫",a:"typeof-类型守卫"},"108.5":{t:"`instanceof`类型守卫\r",p:`使用instanceof操作符检查对象是否属于某个类
class Cat {
  meow() {
    console. ...`,l:"native/typescript/高级类型.html#instanceof-类型守卫",a:"instanceof-类型守卫"},"108.6":{t:"自定义类型守卫\r",p:`通过定义一个返回类型谓词的函数， 来自定义一个类型守卫
🫸 类型谓词 的形式是 paramterName is Type这 ...`,l:"native/typescript/高级类型.html#自定义类型守卫",a:"自定义类型守卫"},"108.7":{t:"`in`操作符\r",p:`in操作符可以作为类型细化表达式来使用
对于n in x表达式， 其中n是字符串字面量或字符串字面量类型， 并且x是个联合类 ...`,l:"native/typescript/高级类型.html#in-操作符",a:"in-操作符"},"108.8":{t:"类型别名\r",p:`类型别名， 顾名思义， 就是给一个类型起一个新名字， 但是不会新创建一个类型。
类型别名有时候和接口很相似， 但是可以作用于 ...`,l:"native/typescript/高级类型.html#类型别名",a:"类型别名"},"108.9":{t:"泛型式类型别名\r",p:`同接口一样， 类型别名可以是泛型 - 我们可以添加参数类型并且在别名声明的右侧传入：
type Container&lt;T ...`,l:"native/typescript/高级类型.html#泛型式类型别名",a:"泛型式类型别名"},"108.10":{t:"接口与类型别名\r",p:`类型别名虽然可以和接口一样声明， 但是他们并不同。


接口创建了一个新的名字，可以在其他任何地方使用，但类型别名并不创建新 ...`,l:"native/typescript/高级类型.html#接口与类型别名",a:"接口与类型别名"},"108.11":{t:"元组类型(Tuple)\r",p:`用于表示固定长度和固定类型排列的数组。在元组中，每个位置上的元素都有一个确定的类型
let x: [string, numb ...`,l:"native/typescript/高级类型.html#元组类型-tuple",a:"元组类型-tuple"},"108.12":{t:"infer 关键字\r",p:`表示在extends条件语句中待推断的类型变量，它是从泛型里面进行推断
type ParamType&lt;T&gt; =  ...`,l:"native/typescript/高级类型.html#infer-关键字",a:"infer-关键字"},"108.13":{t:"引用\r",p:`深入理解Typescript
TypeScript手册
这才是真正让你入门Typescript类型体操的文章
`,l:"native/typescript/高级类型.html#引用",a:"引用"},"109.0":{t:"# 一些微信小程序相关问题",p:"",l:"native/weapp/index.html",a:"一些微信小程序相关问题"},"110.0":{t:"# 微信小程序 ---人脸识别\r",p:`微信小程序 ---人脸识别（wx.startFacialRecognitionVerify）


由于人脸核验功能涉及到用户 ...`,l:"native/weapp/微信小程序人脸识别问题.html",a:"微信小程序-人脸识别"},"111.0":{t:"# 数据结构",p:"",l:"structure/index.html",a:"数据结构"},"112.0":{t:"# 链表\r",p:"\r",l:"structure/链表.html",a:"链表"},"112.1":{t:"定义\r",p:"计算机科学中，链表是一种数据结构，是一组由节点组成的集合， 每个节点都有一个指针和指向它的下一个节点, 最后一个指针指向nu ...",l:"structure/链表.html#定义",a:"定义"},"112.2":{t:"特点\r",p:`
链表在添加或移除元素的时候不需要移动其他元素,  这样添加,移除的时间复杂度就为O(1), 而数组在添加或移除元素时，因为 ...`,l:"structure/链表.html#特点",a:"特点"},"112.3":{t:"链表节点\r",p:`链表节点表示链表中的一个元素，它包含一个值和一个指向下一个节点的引用。它的实现可以参考下面代码：
  class Node  ...`,l:"structure/链表.html#链表节点",a:"链表节点"},"112.4":{t:"链表实现\r",p:"链表提供了一系列方法来操作链表， 如开头插入节点(preappend)、末尾插入节点(append)、在指定位置插入节点(i ...",l:"structure/链表.html#链表实现",a:"链表实现"},"112.5":{t:"分类\r",p:`链表分为三种链表: 单向链表, 双向链表, 循环链表


单向链表
一个单向链表包含两个值： 当前节点的值和指向下一个节点的 ...`,l:"structure/链表.html#分类",a:"分类"},"112.6":{t:"双向链表实现\r",p:`
Comparator 比较器

  export default class Comparator {
    /**
  ...`,l:"structure/链表.html#双向链表实现",a:"双向链表实现"},"112.7":{t:"参考资料\r",p:`编程时光
`,l:"structure/链表.html#参考资料",a:"参考资料"},"113.0":{t:"# 构建\r",p:`!Build
`,l:"tools/build/index.html",a:"构建"},"114.0":{t:"# AST（Abstract Syntax Tree）抽象语法树\r",p:"\r",l:"tools/build/什么是AST.html",a:"ast-abstract-syntax-tree-抽象语法树"},"114.1":{t:"定义\r",p:"在计算机科学中，抽象语法树（Abstract Syntax Tree，AST），或简称语法树（Syntax tree），是源 ...",l:"tools/build/什么是AST.html#定义",a:"定义"},"114.2":{t:"应用\r",p:"AST(抽象语法树)在代码语法的检查、代码风格的检查、代码的格式化、代码的高亮、代码错误提示、代码自动补全等等场景均有广泛的 ...",l:"tools/build/什么是AST.html#应用",a:"应用"},"114.3":{t:"整体流程\r",p:`

一个完整的编译过程可以分为三个步骤：

Parsing(解析过程): 这个过程要经词法分析、语法分析、构建AST（抽象语 ...`,l:"tools/build/什么是AST.html#整体流程",a:"整体流程"},"114.4":{t:"编译原理\r",p:`首先来看下浏览器的编译原理如下，可以看出来浏览器对js的编译和解释都需要源代码通过 词法分析和 语法分析转换成AST
!编译 ...`,l:"tools/build/什么是AST.html#编译原理",a:"编译原理"},"115.0":{t:"# SourceMap(源映射) 基本信息\r",p:"\r",l:"tools/build/什么是SourceMap.html",a:"sourcemap-源映射-基本信息"},"115.1":{t:"什么是Source Map\r",p:`
Source Map 是一个信息文件，里面储存着位置信息。也就是说，转换后代码的每一个位置所对应的转换前的位置。有了它，出 ...`,l:"tools/build/什么是SourceMap.html#什么是source-map",a:"什么是source-map"},"115.2":{t:"Source Map功能\r",p:"js脚本现在变得很复杂，大部份源码需要转换才能放在浏览器中运行， 随着持续开发所带来的代码量增多，实际运行的代码与开发环境的 ...",l:"tools/build/什么是SourceMap.html#source-map功能",a:"source-map功能"},"115.3":{t:"浏览器中如何使用Source Map\r",p:`
怎么在浏览器中使用sourceMap，chrome浏览器中默认是开启了soruce Map功能。如果被关闭可以手动开启，下 ...`,l:"tools/build/什么是SourceMap.html#浏览器中如何使用source-map",a:"浏览器中如何使用source-map"},"115.4":{t:"Source Map 关键字\r",p:"对于SourceMap而言，我们最常见的，莫过于在webpack的配置项devTools中进行使用, 差不多有二十来种, 但 ...",l:"tools/build/什么是SourceMap.html#source-map-关键字",a:"source-map-关键字"},"115.5":{t:"各个关键字处理示例\r",p:`let a = 1, b
b = a



处理结果

eval 处理后输出结果

eval(&quot;var a = 1 ...`,l:"tools/build/什么是SourceMap.html#各个关键字处理示例",a:"各个关键字处理示例"},"115.6":{t:" ",p:"",l:"tools/build/什么是SourceMap.html#",a:""},"115.7":{t:"`cheap`关键字示例\r",p:"```javascript\n// # sum页面\nconst sum = (a, b) =&gt; { return a + ...",l:"tools/build/什么是SourceMap.html#cheap-关键字示例",a:"cheap-关键字示例"},"115.8":{t:"常见配置项的对比\r",p:`


devtool
构建速度
重新构建速度
生产环境
品质(quality)




(none)
+++[^1]
+++ ...`,l:"tools/build/什么是SourceMap.html#常见配置项的对比",a:"常见配置项的对比"},"115.9":{t:"在项目中的使用\r",p:`

开发环境

我们在开发环境对SourceMap的要求是：快(eval), 信息全面(module)
并且由于代码未压缩， ...`,l:"tools/build/什么是SourceMap.html#在项目中的使用",a:"在项目中的使用"},"116.0":{t:"# 一些CSS相关的工具\r",p:`!CSS
`,l:"tools/css/index.html",a:"一些css相关的工具"},"117.0":{t:"# UnoCss\r",p:"\r",l:"tools/css/unocss.html",a:"unocss"},"117.1":{t:"定义\r",p:"unocss官方定义 是一个具有高性能且极具灵活性的即时原子化 CSS 引擎。它是一个引擎，而非一款框架，因为它并未提供核心 ...",l:"tools/css/unocss.html#定义",a:"定义"},"118.0":{t:"# git 初始化\r",p:`
背景

本地安装了git,同时github也已经申请了账号，想通过git把github上别人的代码clone到本地。
`,l:"tools/git/git-init.html",a:"git-初始化"},"118.1":{t:"操作步骤\r",p:`1.在自己电脑创建本地仓库
第一步， 打开git bash,找一个存放所有git项目的目录。假设git的目录叫gitRepo ...`,l:"tools/git/git-init.html#操作步骤",a:"操作步骤"},"119.0":{t:"# git pull 与 git fetch区别\r",p:"\r",l:"tools/git/git-pull与git-fetch区别.html",a:"git-pull-与-git-fetch区别"},"119.1":{t:"1、简单概括\r",p:`先用一张图来理一下git fetch和git pull的概念：
!image
可以简单的概括为：
git fetch是将远程 ...`,l:"tools/git/git-pull与git-fetch区别.html#_1、简单概括",a:"_1、简单概括"},"119.2":{t:"2、分支的概念\r",p:`在介绍两种方法之前，我们需要先了解一下分支的概念：
分支是用来标记特定代码的提交，每一个分支通过SHA1sum值来标识，所以 ...`,l:"tools/git/git-pull与git-fetch区别.html#_2、分支的概念",a:"_2、分支的概念"},"119.3":{t:"3、git fetch 用法\r",p:`git fetch 命令：
git fetch &lt;远程主机名&gt; //这个命令将某个远程主机的更新全部取回本地

 ...`,l:"tools/git/git-pull与git-fetch区别.html#_3、git-fetch-用法",a:"_3、git-fetch-用法"},"119.4":{t:"4、git pull 用法\r",p:`前面提到，git pull 的过程可以理解为：
git fetch origin master //从远程主机的master ...`,l:"tools/git/git-pull与git-fetch区别.html#_4、git-pull-用法",a:"_4、git-pull-用法"},"120.0":{t:"# git rebase\r",p:"\r",l:"tools/git/git-rebase.html",a:"git-rebase"},"120.1":{t:"git rebase能够将分叉的分支重新合并，下面主要介绍它的两个使用场景\r",p:"\r",l:"tools/git/git-rebase.html#git-rebase能够将分叉的分支重新合并-下面主要介绍它的两个使用场景",a:"git-rebase能够将分叉的分支重新合并-下面主要介绍它的两个使用场景"},"120.2":{t:"场景一：本地与远端同一分支提交历史不一致\r",p:`
方式一

多个人在同一个分支上协作时，出现冲突是很正常的，比如现在有一个项目由我和A一同开发。
我在修复了一个bug以后准 ...`,l:"tools/git/git-rebase.html#场景一-本地与远端同一分支提交历史不一致",a:"场景一-本地与远端同一分支提交历史不一致"},"120.3":{t:"场景二：不同分支之间的合并\r",p:`由于老板突发奇想，要求开发一个新的功能。
先创建一个分支用于开发新功能：
git checkout -b feature
H ...`,l:"tools/git/git-rebase.html#场景二-不同分支之间的合并",a:"场景二-不同分支之间的合并"},"121.0":{t:"# git rebase 合并commit\r",p:`
使用背景

一个repo通常是由一个team中的多个人共同维护，如果需要增加新feature，那么就是一个feature分 ...`,l:"tools/git/git-rebase合并commit.html",a:"git-rebase-合并commit"},"121.1":{t:"rebase 简介\r",p:"git rebase是Git中用于将一个分支的提交应用到另一个分支上的命令。它主要作用是将一个分支上的修改“衍合”(reba ...",l:"tools/git/git-rebase合并commit.html#rebase-简介",a:"rebase-简介"},"121.2":{t:"操作步骤\r",p:"假设我们做了一下三个commit，想把前两个提交也就是 commit 7131a52和 commit 0d11e74合并到c ...",l:"tools/git/git-rebase合并commit.html#操作步骤",a:"操作步骤"},"122.0":{t:"# git stash\r",p:`
git stash 命令的作用是将更改存储在一个临时区域中，使得该工作目录变成一个干净的工作状态， 从而可以去执行其他操作 ...`,l:"tools/git/git-stash的用法总结.html",a:"git-stash"},"122.1":{t:"`git stash` 常用使用场景\r",p:`
正在进行一些工作，但需要在不更改当前分支或提交任何更改的情况下切换到另一个分支或者进行其他操作。
想要推送某个分支但又不想 ...`,l:"tools/git/git-stash的用法总结.html#git-stash-常用使用场景",a:"git-stash-常用使用场景"},"122.2":{t:"常用的 `git stash`命令\r",p:"\r",l:"tools/git/git-stash的用法总结.html#常用的-git-stash-命令",a:"常用的-git-stash-命令"},"122.3":{t:"1. `git stash`\r",p:"直接保存其实是执行了命令 git stash save &quot;保存时的描述&quot;命令 只是要保存的描述为空。 执 ...",l:"tools/git/git-stash的用法总结.html#_1-git-stash",a:"_1-git-stash"},"122.4":{t:"2. `git stash list`\r",p:`git stash list 用于查看执行stash操作的存储列表, 列表格式类似于下面这种格式：
$ git stash  ...`,l:"tools/git/git-stash的用法总结.html#_2-git-stash-list",a:"_2-git-stash-list"},"122.5":{t:"3. `git stash show`\r",p:"显示做了哪些改动，默认show第一个存储,如果要显示其他存贮，后面加 stash@{$num}，比如查看第二个stash详情 ...",l:"tools/git/git-stash的用法总结.html#_3-git-stash-show",a:"_3-git-stash-show"},"122.6":{t:"4. `git stash show -p`\r",p:"显示第一个存储的改动，如果想显示其他存存储，命令：git stash show  stash@{$num}  -p ，比如第 ...",l:"tools/git/git-stash的用法总结.html#_4-git-stash-show-p",a:"_4-git-stash-show-p"},"122.7":{t:"5.`git stash apply`\r",p:"应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即 stash@{0}，如果要使用其他个，git stash ...",l:"tools/git/git-stash的用法总结.html#_5-git-stash-apply",a:"_5-git-stash-apply"},"122.8":{t:"6. `git stash pop`\r",p:"命令恢复之前缓存的工作目录，将缓存堆栈中的对应 stash删除，并将对应修改应用到当前的工作目录下,默认为第一个 stash ...",l:"tools/git/git-stash的用法总结.html#_6-git-stash-pop",a:"_6-git-stash-pop"},"122.9":{t:"7. `git stash drop  stash@`\r",p:`丢弃stash@{$num}存储，从列表中删除这个存储
`,l:"tools/git/git-stash的用法总结.html#num",a:"num"},"122.10":{t:"8. `git stash clear`\r",p:`删除所有缓存的stash

注意：说明:新增的文件，直接执行stash是不会被存储的
!git stash 不保存新建文件
 ...`,l:"tools/git/git-stash的用法总结.html#_8-git-stash-clear",a:"_8-git-stash-clear"},"123.0":{t:"# git 删除分支同步到git仓库\r",p:"\r",l:"tools/git/git删除分支同步到git仓库.html",a:"git-删除分支同步到git仓库"},"123.1":{t:"删除分支\r",p:`git branch -d &lt;branch name&gt;

`,l:"tools/git/git删除分支同步到git仓库.html#删除分支",a:"删除分支"},"123.2":{t:"同步到git仓库上\r",p:`git push origin :&lt;branch name&gt;

`,l:"tools/git/git删除分支同步到git仓库.html#同步到git仓库上",a:"同步到git仓库上"},"124.0":{t:"# git常用操作\r",p:"\r",l:"tools/git/git常用操作.html",a:"git常用操作"},"124.1":{t:"工作流程\r",p:`!git工作流程
`,l:"tools/git/git常用操作.html#工作流程",a:"工作流程"},"125.0":{t:"# 一些git常用操作与命令\r",p:`&lt;!-- !Git --&gt;
!Git
`,l:"tools/git/index.html",a:"一些git常用操作与命令"},"126.0":{t:"# 图片工具",p:"",l:"tools/image/index.html",a:"图片工具"},"127.0":{t:"# 本地图片压缩工具\r",p:`&lt;ImageCompression/&gt;
`,l:"tools/image/图片压缩工具.html",a:"本地图片压缩工具"}},a={previewLength:62,buttonLabel:"搜索",placeholder:"搜索关键词",allow:[],ignore:[]},r={INDEX_DATA:e,PREVIEW_LOOKUP:t,Options:a};export{r as default};
