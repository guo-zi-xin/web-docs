import{_ as s,o as n,c as a,a8 as l}from"./chunks/framework.Qf1t7Yq5.js";const A=JSON.parse('{"title":"合并两个有序数组","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/合并两个有序数组.md","filePath":"algorithm/合并两个有序数组.md","lastUpdated":1699530194000}'),o={name:"algorithm/合并两个有序数组.md"},p=l(`<h1 id="合并两个有序数组" tabindex="-1">合并两个有序数组 <a class="header-anchor" href="#合并两个有序数组" aria-label="Permalink to &quot;合并两个有序数组&quot;">​</a></h1><hr><p><strong>给你两个有序整数数组<code>nums1</code>和<code>nums2</code>，请你将<code>nums2</code>合并到<code>nums1</code>中，使<code>num1</code>成为一个有序数组。</strong></p><blockquote><p>说明: 初始化<code>nums1</code>和<code>nums2</code>需要合并的元素数量分别为 <code>m</code>和 <code>n</code> 。 你可以假设<code>nums1</code> 有足够的空间（空间大小大于或等于 <code>m + n</code> ）来保存 <code>nums2</code> 中的元素。</p></blockquote><ul><li>示例</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 输入:</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> nums1 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> m </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 3</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> nums2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">6</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">       n </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 3</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出: [1,2,2,3,5,6]</span></span></code></pre></div><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> getConcatArr </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">nums1</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> nums2</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> m</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> n</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;">):</span><span style="color:#FFCB6B;"> void</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    nums1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">m</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> ...</span><span style="color:#BABED8;">nums2</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">    nums1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sort</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;">b</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> a</span><span style="color:#89DDFF;"> -</span><span style="color:#BABED8;"> b</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#BABED8;"> nums1</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#82AAFF;">  getConcatArr</span><span style="color:#BABED8;">(nums1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> nums2)</span></span></code></pre></div><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;"> {</span><span style="color:#FFCB6B;font-style:italic;">number[]</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#BABED8;font-style:italic;"> nums1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;"> {</span><span style="color:#FFCB6B;font-style:italic;">number</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#BABED8;font-style:italic;"> m</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;"> {</span><span style="color:#FFCB6B;font-style:italic;">number[]</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#BABED8;font-style:italic;"> nums2</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#89DDFF;font-style:italic;"> {</span><span style="color:#FFCB6B;font-style:italic;">number</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#BABED8;font-style:italic;"> n</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">return</span><span style="color:#89DDFF;font-style:italic;"> {</span><span style="color:#FFCB6B;font-style:italic;">void</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> Do not return anything, modify nums1 in-place instead.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> getConcatArr </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">nums1</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">number</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> m</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> nums2</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">number</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> n</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> index1</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> m</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> index2</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> tail</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> m</span><span style="color:#89DDFF;"> +</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    while</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">index2</span><span style="color:#89DDFF;"> &gt;=</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">nums1</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">index1</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> nums2</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">index2</span><span style="color:#F07178;">]) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">            nums1</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">tail</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> nums1</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">index1</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#BABED8;">            index1</span><span style="color:#89DDFF;">--</span></span>
<span class="line"><span style="color:#BABED8;">            tail</span><span style="color:#89DDFF;">--</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">            nums1</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">tail</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> nums2</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">index2</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#BABED8;">            index2</span><span style="color:#89DDFF;">--</span></span>
<span class="line"><span style="color:#BABED8;">            tail</span><span style="color:#89DDFF;">--</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> nums1 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> nums2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 6</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">getConcatArr</span><span style="color:#BABED8;">(nums1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> nums2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(nums1)</span></span></code></pre></div><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> getConcatArr </span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;"> function</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">nums1</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">number</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> m</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> nums2</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> n</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;">):</span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    let</span><span style="color:#BABED8;"> len1</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> m</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">        len2</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">        len</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> number</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> m</span><span style="color:#89DDFF;"> +</span><span style="color:#BABED8;"> n</span><span style="color:#89DDFF;"> -</span><span style="color:#F78C6C;"> 1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    while</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">len2</span><span style="color:#89DDFF;"> &gt;=</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">len1</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">            nums1</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">len</span><span style="color:#89DDFF;">--</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> nums2</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">len2</span><span style="color:#89DDFF;">--</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">            continue</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#BABED8;">        nums1</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">len</span><span style="color:#89DDFF;">--</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> nums1</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">len1</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#BABED8;"> nums2</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">len2</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">?</span><span style="color:#BABED8;"> nums1</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">len1</span><span style="color:#89DDFF;">--</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> nums2</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">len2</span><span style="color:#89DDFF;">--</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div>`,9),t=[p];function e(c,r,y,F,D,i){return n(),a("div",null,t)}const E=s(o,[["render",e]]);export{A as __pageData,E as default};
